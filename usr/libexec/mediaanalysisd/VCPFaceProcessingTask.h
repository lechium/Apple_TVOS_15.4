//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, PHPhotoLibrary, VCPDatabaseWriter, VCPFaceAnalyzer, VCPFaceClusterer, VCPFaceCropManager, VCPPhotosFaceProcessingContext;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface VCPFaceProcessingTask : NSObject
{
    VCPPhotosFaceProcessingContext *_context;	// 8 = 0x8
    VCPFaceAnalyzer *_analyzer;	// 16 = 0x10
    VCPFaceCropManager *_faceCropManager;	// 24 = 0x18
    VCPFaceClusterer *;	// 32 = 0x20
    struct atomic<bool> _cancel;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_downloadGroup;	// 48 = 0x30
    NSObject<OS_dispatch_group> *_detectionGroup;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_detectionQueue;	// 64 = 0x40
    unsigned long long _detectionProcessingJobCount;	// 72 = 0x48
    unsigned long long _detectionProcessingQueuesAllowed;	// 80 = 0x50
    NSArray *_detectionProcessingQueues;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_postDetectionQueue;	// 96 = 0x60
    NSObject<OS_dispatch_group> *_publishDetectionAndProcessPersonGroup;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_publishDetectionAndProcessPersonQueue;	// 112 = 0x70
    int _publishDetectionAndProcessPersonStatus;	// 120 = 0x78
    CDUnknownBlockType _cancelBlock;	// 128 = 0x80
    _Bool _allowStreaming;	// 136 = 0x88
    PHPhotoLibrary *_photoLibrary;	// 144 = 0x90
    VCPDatabaseWriter *_database;	// 152 = 0x98
}

+ (_Bool)_concurrentFaceStagings;	// IMP=0x002000000005235a
+ (unsigned long long)_concurrentFaceProcessingThreadCount;	// IMP=0x001000000005234f
+ (_Bool)_concurrentFaceProcessing;	// IMP=0x00100000000522f2
+ (id)taskWithPhotoLibrary:(id)arg1 andContext:(id)arg2 andCancelBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000051ef7
- (void).cxx_destruct;	// IMP=0x00200000000579f9
@property(nonatomic) _Bool allowStreaming; // @synthesize allowStreaming=_allowStreaming;
@property(readonly, nonatomic) VCPDatabaseWriter *database; // @synthesize database=_database;
@property(readonly, nonatomic) PHPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
- (_Bool)autoCancellable;	// IMP=0x00100000000579bf
- (int)run;	// IMP=0x00100000000579b4
- (int)flush;	// IMP=0x0010000000057991
- (int)processFaceCrops;	// IMP=0x0010000000056a31
- (int)_publishClusterAndPersonProcessingWithBatchContext:(id)arg1;	// IMP=0x0010000000055b41
- (int)_decrementAttemptsForLocalIdentifiers:(id)arg1 withPreviousProcessingStatusMap:(id)arg2;	// IMP=0x001000000005581c
- (int)processAssets:(id)arg1;	// IMP=0x00100000000550ee
- (int)_dispatchAssets:(id)arg1 withBatchContext:(id)arg2;	// IMP=0x0010000000053e63
- (_Bool)_copyResourceFromURL:(id)arg1 toURL:(id *)arg2 forAsset:(id)arg3 error:(id *)arg4;	// IMP=0x001000000005397e
- (void)_asyncAnalyzeAsset:(id)arg1 andBatchContext:(id)arg2;	// IMP=0x0010000000053640
- (void)_processDetectionResults:(id)arg1 withDetectionStatus:(int)arg2 asset:(id)arg3 andBatchContext:(id)arg4;	// IMP=0x0010000000052d6f
- (int)_detectAsset:(id)arg1 withResults:(id *)arg2 andBatchContext:(id)arg3;	// IMP=0x0010000000052362
- (int)_removeTemporaryDownloadDirectory;	// IMP=0x001000000005207b
- (_Bool)isCancelled;	// IMP=0x0010000000052054
- (void)cancel;	// IMP=0x0010000000052049
- (float)resourceRequirement;	// IMP=0x001000000005203b
- (void)dealloc;	// IMP=0x0010000000051faf
- (id)initWithPhotoLibrary:(id)arg1 andContext:(id)arg2 andCancelBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000051a58
- (id)init;	// IMP=0x0010000000051a4a

@end

