//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSError, NSString, NSXPCConnection, RCPEventStreamRecorder, XCTCapabilities, XCTDSignpostListener, XCTDSplunkLogger, XCTScreenshotRequest;
@protocol OS_dispatch_queue, OS_os_transaction, XCAXManager, XCTDAutomationModeInterface, XCTDAutomationServicesProviding, XCTDDiagnosticsProviding, XCTDProcessManagementServicesProviding, XCTDScreenshotProviding, XCTDTargetBootstrapSessionProviding, XCTestSessionDelegate;

@interface XCTestSession : NSObject
{
    _Bool _valid;	// 8 = 0x8
    _Bool _hasTestingEntitlement;	// 9 = 0x9
    _Bool _hasInternalClientEntitlement;	// 10 = 0xa
    _Bool _recapIsRunning;	// 11 = 0xb
    NSXPCConnection *_connection;	// 16 = 0x10
    id <XCTDAutomationModeInterface> _automationModeInterface;	// 24 = 0x18
    id <XCTDScreenshotProviding> _screenshotProvider;	// 32 = 0x20
    id <XCTDDiagnosticsProviding> _diagnosticsProvider;	// 40 = 0x28
    id <XCTDProcessManagementServicesProviding> _processManagementServices;	// 48 = 0x30
    id <XCTDAutomationServicesProviding> _automationServices;	// 56 = 0x38
    id <XCTDTargetBootstrapSessionProviding> _targetBootstrapSessionProvider;	// 64 = 0x40
    id <XCTestSessionDelegate> _delegate;	// 72 = 0x48
    CDUnknownBlockType _disconnectionHandler;	// 80 = 0x50
    XCTCapabilities *_remoteInterfaceCapabilities;	// 88 = 0x58
    NSString *_clientBundleID;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_queue;	// 104 = 0x68
    NSObject<OS_os_transaction> *_osTransaction;	// 112 = 0x70
    XCTDSignpostListener *_signpostListener;	// 120 = 0x78
    CDUnknownBlockType _automationServicesFactory;	// 128 = 0x80
    NSError *_automationServicesError;	// 136 = 0x88
    XCTDSplunkLogger *_splunkLogger;	// 144 = 0x90
    RCPEventStreamRecorder *_recapEventRecorder;	// 152 = 0x98
}

+ (_Bool)supportsHIDEventRecording;	// IMP=0x00200000000101ad
+ (_Bool)supportsPostingTelemetryData;	// IMP=0x001000000000ffe4
+ (id)capabilitiesBuilder;	// IMP=0x001000000000b37a
- (void).cxx_destruct;	// IMP=0x0010000000010935
@property _Bool recapIsRunning; // @synthesize recapIsRunning=_recapIsRunning;
@property(retain) RCPEventStreamRecorder *recapEventRecorder; // @synthesize recapEventRecorder=_recapEventRecorder;
@property(readonly) XCTDSplunkLogger *splunkLogger; // @synthesize splunkLogger=_splunkLogger;
@property(retain) NSError *automationServicesError; // @synthesize automationServicesError=_automationServicesError;
@property(readonly) CDUnknownBlockType automationServicesFactory; // @synthesize automationServicesFactory=_automationServicesFactory;
@property(readonly) XCTDSignpostListener *signpostListener; // @synthesize signpostListener=_signpostListener;
@property(retain) NSObject<OS_os_transaction> *osTransaction; // @synthesize osTransaction=_osTransaction;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSString *clientBundleID; // @synthesize clientBundleID=_clientBundleID;
@property(retain) XCTCapabilities *remoteInterfaceCapabilities; // @synthesize remoteInterfaceCapabilities=_remoteInterfaceCapabilities;
@property(readonly) _Bool hasInternalClientEntitlement; // @synthesize hasInternalClientEntitlement=_hasInternalClientEntitlement;
@property(readonly) _Bool hasTestingEntitlement; // @synthesize hasTestingEntitlement=_hasTestingEntitlement;
@property(copy) CDUnknownBlockType disconnectionHandler; // @synthesize disconnectionHandler=_disconnectionHandler;
@property(getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property __weak id <XCTestSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) id <XCTDTargetBootstrapSessionProviding> targetBootstrapSessionProvider; // @synthesize targetBootstrapSessionProvider=_targetBootstrapSessionProvider;
@property(retain) id <XCTDAutomationServicesProviding> automationServices; // @synthesize automationServices=_automationServices;
@property(readonly) id <XCTDProcessManagementServicesProviding> processManagementServices; // @synthesize processManagementServices=_processManagementServices;
@property(readonly) id <XCTDDiagnosticsProviding> diagnosticsProvider; // @synthesize diagnosticsProvider=_diagnosticsProvider;
@property(readonly) id <XCTDScreenshotProviding> screenshotProvider; // @synthesize screenshotProvider=_screenshotProvider;
@property(readonly) id <XCTDAutomationModeInterface> automationModeInterface; // @synthesize automationModeInterface=_automationModeInterface;
@property(retain) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void)_XCT_playBackHIDEventRecordingFromData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000104fd
- (void)_XCT_stopHIDEventRecordingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000103d7
- (void)_XCT_startHIDEventRecordingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000101be
- (void)_XCT_postTelemetryData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000fff5
- (void)_XCT_resetAuthorizationStatusForBundleIdentifier:(id)arg1 resourceIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000fea5
- (void)_XCT_injectVoiceRecognitionAudioInputPaths:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000fd83
- (void)_XCT_injectAssistantRecognitionStrings:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000fc61
- (void)_XCT_startSiriUIRequestWithAudioFileURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000fb3f
- (void)_XCT_startSiriUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000fa1d
- (void)_XCT_requestSiriEnabledStatus:(CDUnknownBlockType)arg1;	// IMP=0x001000000000f93e
- (void)_XCT_sendString:(id)arg1 maximumFrequency:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000f7e5
- (void)_XCT_performDeviceEvent:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f692
- (void)_XCT_synthesizeEvent:(id)arg1 implicitConfirmationInterval:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000f523
- (void)_XCT_synthesizeEvent:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f3d0
- (void)_XCT_terminateApplicationWithBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f288
- (void)_XCT_launchApplicationWithBundleID:(id)arg1 arguments:(id)arg2 environment:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000000f10b
- (void)_XCT_requestPressureEventsSupported:(CDUnknownBlockType)arg1;	// IMP=0x001000000000f048
- (void)_XCT_requestBundleIDForPID:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000eec5
- (void)_XCT_startMonitoringApplicationWithBundleID:(id)arg1;	// IMP=0x001000000000ee35
- (void)applicationDidUpdateState:(id)arg1;	// IMP=0x001000000000ea48
- (void)_XCT_getDeviceOrientationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000e988
- (void)_XCT_updateDeviceOrientation:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000e8cc
- (void)_XCT_enableFauxCollectionViewCells:(CDUnknownBlockType)arg1;	// IMP=0x001000000000e810
- (void)_XCT_setLocalizableStringsDataGatheringEnabled:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000e748
- (void)_XCT_requestElementAtPoint:(struct CGPoint)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000e63a
- (void)_XCT_fetchParameterizedAttribute:(id)arg1 forElement:(id)arg2 parameter:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000e4ca
- (void)_XCT_fetchParameterizedAttributeForElement:(id)arg1 attributes:(id)arg2 parameter:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000e380
- (void)_XCT_setAttribute:(id)arg1 value:(id)arg2 element:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000e250
- (void)_XCT_fetchAttributes:(id)arg1 forElement:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000e0ff
- (void)_XCT_runAccessibilityAuditForElement:(id)arg1 withConfiguration:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000dfae
- (_Bool)ensureUITestingIsReadyWithTimeout:(double)arg1 error:(id *)arg2;	// IMP=0x001000000000dd31
- (_Bool)ensureUITestingIsReadyWithError:(id *)arg1;	// IMP=0x001000000000dd17
- (void)_XCT_fetchAttributesForElement:(id)arg1 attributes:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000dc97
- (void)_XCT_fetchSnapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000d8c1
- (void)_XCT_requestSnapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000d776
- (void)_XCT_snapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000d6f6
- (void)_XCT_unregisterForAccessibilityNotification:(int)arg1 withRegistrationToken:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000d605
- (void)_XCT_registerForAccessibilityNotification:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000d208
- (void)_XCT_performAccessibilityAction:(int)arg1 onElement:(id)arg2 withValue:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000d105
- (void)_XCT_setAXTimeout:(double)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000d044
- (void)_XCT_loadAccessibilityWithTimeout:(double)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000cf23
- (void)_XCT_unloadAccessibility:(CDUnknownBlockType)arg1;	// IMP=0x001000000000cea5
- (void)_XCT_getAppearanceModeWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000000cd6a
- (void)_XCT_updateAppearanceMode:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000cc0e
- (void)_XCT_requestBackgroundAssertionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000000cb51
- (void)_XCT_requestBackgroundAssertionForPID:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000cabb
- (void)_XCT_unregisterForSignpostsWithToken:(id)arg1;	// IMP=0x001000000000ca49
- (void)_XCT_registerForSignpostsFromSubsystem:(id)arg1 category:(id)arg2 intervalTimeout:(double)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000c83a
- (void)_XCT_requestTailspinWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c67e
- (void)_XCT_requestSpindumpWithSpecification:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c4c2
- (void)_XCT_requestScreenshot:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c4b0
- (void)_XCT_requestScreenshotOfScreenWithID:(unsigned int)arg1 withRect:(struct CGRect)arg2 uti:(id)arg3 compressionQuality:(double)arg4 withReply:(CDUnknownBlockType)arg5;	// IMP=0x001000000000c430
- (void)_XCT_requestScreenshotWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c3b0
- (void)_XCT_requestDTServiceHubConnectionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c25b
- (void)_XCT_requestUnsupportedBundleIdentifiersForAutomationSessions:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c049
- (void)_XCT_requestEndpointForTestTargetWithPID:(int)arg1 preferredBackendPath:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000bd91
- (void)_XCT_requestSerializedTransportWrapperForIDESessionWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000bbc0
- (void)_XCT_enableAutomationModeWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000000b9c7
- (void)_XCT_requestSocketForSessionIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000b81d
- (void)_XCT_exchangeCapabilities:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000b6e1
- (void)_XCT_exchangeProtocolVersion:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000000b2c6
@property(readonly, nonatomic) id <XCAXManager> axManager;
- (id)gesturePerformer;	// IMP=0x001000000000b226
- (id)systemConfiguration;	// IMP=0x001000000000b1d6
- (id)remoteObjectProxy;	// IMP=0x001000000000b02d
- (_Bool)isAuthorizedInternalClientWithProcessID:(int)arg1;	// IMP=0x001000000000afd9
@property(readonly, nonatomic) _Bool allowsUITestControl;
@property(readonly) int processIdentifier;
- (void)_takeAssertionForAndMonitorConnectionProcess;	// IMP=0x001000000000abf4
@property(readonly, copy) NSString *description;
- (id)initWithNSXPCConnection:(id)arg1 delegate:(id)arg2 automationModeInterface:(id)arg3 diagnosticsProvider:(id)arg4 screenshotProvider:(id)arg5 processManagementServices:(id)arg6 targetBootstrapSessionProvider:(id)arg7 automationServicesFactory:(CDUnknownBlockType)arg8;	// IMP=0x001000000000a507
- (id)initWithNSXPCConnection:(id)arg1 delegate:(id)arg2 diagnosticsProvider:(id)arg3 processManagementServices:(id)arg4 targetBootstrapSessionProvider:(id)arg5;	// IMP=0x001000000000a36c
- (id)initWithNSXPCConnection:(id)arg1 delegate:(id)arg2 diagnosticsProvider:(id)arg3 targetBootstrapSessionProvider:(id)arg4;	// IMP=0x001000000000a2a7
- (void)invalidate;	// IMP=0x0010000000009fd3
- (void)dealloc;	// IMP=0x0010000000009ea6
- (void)_XCT_requestScreenshot:(XCTScreenshotRequest *)arg1 completion:(void (^)(XCTImage *, NSError *))arg2;	// IMP=0x0010000000041230
- (void)_loadAccessibilityWithTimeout:(double)arg1 reply:(void (^)(_Bool, NSError *))arg2;	// IMP=0x001000000004186e
- (void)_XCT_resetAuthorizationStatusOfProtectedResourceWithIdentifier:(NSString *)arg1 bundleIdentifier:(NSString *)arg2 auditToken:(CDStruct_6ad76789)arg3 completion:(void (^)(NSError *))arg4;	// IMP=0x0010000000045037

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

