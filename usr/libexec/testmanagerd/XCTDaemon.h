//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSXPCListener, XCTestManagerIDEServer;
@protocol OS_dispatch_queue, OS_dispatch_source, XCTDDiagnosticsProviding;

@interface XCTDaemon : NSObject
{
    XCTestManagerIDEServer *_ideServer;	// 8 = 0x8
    NSXPCListener *_testBundleConnectionListener;	// 16 = 0x10
    NSXPCListener *_testTargetBootstrapConnectionListener;	// 24 = 0x18
    NSMutableDictionary *_sessionsByIdentifier;	// 32 = 0x20
    NSMutableArray *_unidentifiedSessions;	// 40 = 0x28
    NSMutableArray *_controlSessions;	// 48 = 0x30
    NSMutableArray *_testSessions;	// 56 = 0x38
    NSMutableSet *_remoteAutomationSessions;	// 64 = 0x40
    NSMutableDictionary *_pendingTestConnectionRequests;	// 72 = 0x48
    NSMutableDictionary *_pendingLegacyTestConnectionRequests;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_queue;	// 88 = 0x58
    NSMutableDictionary *_pendingTargetPIDs;	// 96 = 0x60
    NSMutableDictionary *_targetSessionRequestsByPID;	// 104 = 0x68
    NSMutableDictionary *_targetSessionsByPID;	// 112 = 0x70
    NSMutableDictionary *_observationBlocksForTransportHandoff;	// 120 = 0x78
    NSMutableDictionary *_connectionTransferResultsByPID;	// 128 = 0x80
    NSObject<OS_dispatch_source> *_userSignalSource;	// 136 = 0x88
    NSObject<OS_dispatch_source> *_sigtermSource;	// 144 = 0x90
    id <XCTDDiagnosticsProviding> _diagnosticsProvider;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x0020000000031195
@property(readonly) id <XCTDDiagnosticsProviding> diagnosticsProvider; // @synthesize diagnosticsProvider=_diagnosticsProvider;
@property(retain) NSObject<OS_dispatch_source> *sigtermSource; // @synthesize sigtermSource=_sigtermSource;
@property(retain) NSObject<OS_dispatch_source> *userSignalSource; // @synthesize userSignalSource=_userSignalSource;
@property(retain) NSMutableDictionary *connectionTransferResultsByPID; // @synthesize connectionTransferResultsByPID=_connectionTransferResultsByPID;
@property(retain) NSMutableDictionary *observationBlocksForTransportHandoff; // @synthesize observationBlocksForTransportHandoff=_observationBlocksForTransportHandoff;
@property(retain) NSMutableDictionary *targetSessionsByPID; // @synthesize targetSessionsByPID=_targetSessionsByPID;
@property(retain) NSMutableDictionary *targetSessionRequestsByPID; // @synthesize targetSessionRequestsByPID=_targetSessionRequestsByPID;
@property(retain) NSMutableDictionary *pendingTargetPIDs; // @synthesize pendingTargetPIDs=_pendingTargetPIDs;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSMutableDictionary *pendingLegacyTestConnectionRequests; // @synthesize pendingLegacyTestConnectionRequests=_pendingLegacyTestConnectionRequests;
@property(retain) NSMutableDictionary *pendingTestConnectionRequests; // @synthesize pendingTestConnectionRequests=_pendingTestConnectionRequests;
@property(retain) NSMutableSet *remoteAutomationSessions; // @synthesize remoteAutomationSessions=_remoteAutomationSessions;
@property(retain) NSMutableArray *testSessions; // @synthesize testSessions=_testSessions;
@property(retain) NSMutableArray *controlSessions; // @synthesize controlSessions=_controlSessions;
@property(retain) NSMutableArray *unidentifiedSessions; // @synthesize unidentifiedSessions=_unidentifiedSessions;
@property(retain) NSMutableDictionary *sessionsByIdentifier; // @synthesize sessionsByIdentifier=_sessionsByIdentifier;
@property(retain) NSXPCListener *testTargetBootstrapConnectionListener; // @synthesize testTargetBootstrapConnectionListener=_testTargetBootstrapConnectionListener;
@property(retain) NSXPCListener *testBundleConnectionListener; // @synthesize testBundleConnectionListener=_testBundleConnectionListener;
@property(retain) XCTestManagerIDEServer *ideServer; // @synthesize ideServer=_ideServer;
- (void)_queue_logStatus;	// IMP=0x00100000000309fc
- (void)_queue_closeTestSession:(id)arg1;	// IMP=0x0010000000030888
- (void)closeTestSession:(id)arg1;	// IMP=0x00100000000307b9
- (void)closeIDESession:(id)arg1;	// IMP=0x00100000000302da
- (void)closeTargetBootstrapSession:(id)arg1;	// IMP=0x001000000003007e
- (void)_queue_fulfillTestConnectionRequest:(CDUnknownBlockType)arg1 usingIDESession:(id)arg2;	// IMP=0x001000000002ff0c
- (void)_queue_fulfillLegacyTestConnectionRequest:(CDUnknownBlockType)arg1 usingIDESession:(id)arg2;	// IMP=0x001000000002fb39
- (void)_queue_handleRequestForSessionWithIdentifier:(id)arg1;	// IMP=0x001000000002f935
- (void)_queue_advertiseAvailabilityToTargetWithPID:(int)arg1;	// IMP=0x001000000002f68b
- (void)_queue_processTargetSessionRequests;	// IMP=0x001000000002f22d
- (void)_queue_requestTargetBootstrapSessionForPID:(int)arg1 timeout:(double)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002ee0b
- (void)requestTargetBootstrapSessionForPID:(int)arg1 timeout:(double)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002ed1f
- (void)_queue_processPendingTransferObservationBlocks;	// IMP=0x001000000002e969
- (void)setObserverForConnectionTransferToTargetWithPID:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e7a6
- (void)connectionTransferToTargetWithPID:(int)arg1 completedWithSuccess:(_Bool)arg2 error:(id)arg3;	// IMP=0x001000000002e586
- (void)requestSerializedTransportForSessionIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e394
- (void)requestLegacySocketForSessionIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e1a2
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000002de81
- (void)addTargetBootstrapSession:(id)arg1;	// IMP=0x001000000002db5e
- (void)setIDESession:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x001000000002d818
- (void)controlSession:(id)arg1 didAuthorizeProcessID:(int)arg2;	// IMP=0x001000000002d790
- (void)addControlSession:(id)arg1;	// IMP=0x001000000002d5aa
- (void)remoteAutomationSessionDidClose:(id)arg1;	// IMP=0x001000000002d498
- (void)serverDidHandleDisconnectForSocket:(int)arg1;	// IMP=0x001000000002d492
- (void)serverReceivedConnectionForServiceType:(unsigned long long)arg1 overSocket:(int)arg2 effectiveUserIdentifier:(unsigned int)arg3 disconnectionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000002d156
- (void)reportSelfDiagnosisIssue:(id)arg1 description:(id)arg2;	// IMP=0x001000000002d081
- (void)setupSignalHandlers;	// IMP=0x001000000002cd68
- (void)run;	// IMP=0x001000000002cb7a
- (void)startAcceptingTargetConnectionsFromListener:(id)arg1;	// IMP=0x001000000002ca56
- (void)startAcceptingTestConnectionsFromListener:(id)arg1;	// IMP=0x001000000002c932
- (id)init;	// IMP=0x001000000002c750

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

