//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSRegistration, IDSRegistrationPushHandler, IDSServiceProperties, MISSING_TYPE, NSArray, NSDate, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface IDSDAccount : NSObject
{
    NSMutableDictionary *_accountInfo;	// 8 = 0x8
    IDSRegistration *_registrationInfo;	// 16 = 0x10
    IDSServiceProperties *_service;	// 24 = 0x18
    NSString *_uniqueID;	// 32 = 0x20
    NSMutableArray *_setupHandlers;	// 40 = 0x28
    NSHashTable *_registrationListeners;	// 48 = 0x30
    IDSRegistrationPushHandler *_pushHandler;	// 56 = 0x38
    NSDate *_dateOfLastHandlesCheck;	// 64 = 0x40
    NSMutableSet *_localServices;	// 72 = 0x48
    unsigned int _disabledAutomatically:1;	// 80 = 0x50
    unsigned int _duringInit:1;	// 80 = 0x50
    unsigned int _shouldRequeryHandles:1;	// 80 = 0x50
    unsigned int _issuingDependentCheck:1;	// 80 = 0x50
    unsigned int _issuingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingDependentCheck:1;	// 80 = 0x50
    unsigned int _pendingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingReIdentify:1;	// 80 = 0x50
    unsigned int _pendingReRegister:1;	// 81 = 0x51
    unsigned int _isRegistrationActive:1;	// 81 = 0x51
    unsigned int _pendingAccountInfoBroadcast:1;	// 81 = 0x51
    unsigned int _isBeingRemoved:1;	// 81 = 0x51
    _Bool _isIssuingDependentCheck;	// 82 = 0x52
}

+ (_Bool)dependentRegistration:(id)arg1 hasDependentRegistrationWithURI:(id)arg2 token:(id)arg3;	// IMP=0x0020000000237e50
+ (void)dependentRegistration:(id)arg1 findDeviceUniqueID:(id *)arg2 btID:(id *)arg3 forURI:(id)arg4 token:(id)arg5 supportsLiveDelivery:(_Bool *)arg6;	// IMP=0x0010000000236f40
+ (void)sendMessageWithSendParameters:(id)arg1 service:(id)arg2 threadContext:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 progressBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000004a8030
+ (void)_sendLocallyWithSendParameters:(id)arg1 service:(id)arg2 uriToLocalDestination:(id)arg3 data:(id)arg4 protobuf:(id)arg5 threadContext:(id)arg6 progressBlock:(CDUnknownBlockType)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000004a2850
+ (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 threadContext:(id)arg4 sendParameters:(id)arg5;	// IMP=0x001000000049e010
- (void).cxx_destruct;	// IMP=0x0010000000246180
@property(nonatomic) _Bool isBeingRemoved; // @synthesize isBeingRemoved=_isBeingRemoved;
@property(readonly, nonatomic) _Bool isIssuingDependentCheck; // @synthesize isIssuingDependentCheck=_isIssuingDependentCheck;
@property(nonatomic) _Bool pendingDependentCheck; // @synthesize pendingDependentCheck=_pendingDependentCheck;
@property(nonatomic) _Bool wasDisabledAutomatically; // @synthesize wasDisabledAutomatically=_disabledAutomatically;
@property(readonly, nonatomic) NSDictionary *accountInfo; // @synthesize accountInfo=_accountInfo;
@property(readonly, nonatomic) IDSRegistration *registration; // @synthesize registration=_registrationInfo;
- (void)didUpdateProtocolForPairedDevice:(id)arg1;	// IMP=0x0010000000245bd0
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x0010000000245690
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x0010000000245140
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x0010000000245090
- (void)_notifyDelegatesAddedLocalDevice:(id)arg1;	// IMP=0x0010000000244ac0
- (void)_notifyClientDelegatesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000244950
@property(readonly, retain, nonatomic) NSDictionary *accountSetupInfo;
- (id)smallDescription;	// IMP=0x00100000002445d0
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSArray *linkedAccounts;
- (id)adHocAccounts;	// IMP=0x00100000002426b0
- (id)accountAndAdHocAccounts;	// IMP=0x00100000002425f0
- (void)_updateAccountWithAccountInfo:(id)arg1;	// IMP=0x0010000000241840
- (void)writeAccountDefaults:(id)arg1;	// IMP=0x00100000002417e0
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2;	// IMP=0x0010000000240660
- (void)_broadcastAccountInfoChanged;	// IMP=0x00100000002403c0
- (void)_notifyListenersWithChanges:(id)arg1;	// IMP=0x001000000023eab0
- (void)_broadcastAccountMessageBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000023e860
- (_Bool)isAdHocAccount;	// IMP=0x001000000023e7d0
- (id)primaryServiceName;	// IMP=0x001000000023e6f0
@property(readonly, nonatomic) IDSRegistration *primaryRegistration;
- (id)primaryAccountUniqueID;	// IMP=0x001000000023e550
- (id)primaryAccount;	// IMP=0x001000000023e490
@property(readonly, nonatomic) long long lastRegistrationFailureError;
@property(readonly, nonatomic) NSDate *lastRegistrationFailureDate;
@property(readonly, nonatomic) NSDate *lastRegistrationSuccessDate;
@property(readonly, nonatomic) NSDate *lastGDRDate;
- (id)dependentRegistrationMatchingUUID:(id)arg1;	// IMP=0x001000000023e2b0
- (id)dependentRegistrationMatchingUUID:(id)arg1 includingTinker:(_Bool)arg2;	// IMP=0x001000000023de90
@property(readonly, nonatomic) NSArray *registeredDevices;
@property(readonly, nonatomic) NSArray *dependentRegistrationsIncludingCurrentDevice;
- (id)dependentRegistrationsIncludingTinker:(_Bool)arg1;	// IMP=0x001000000023db30
@property(readonly, nonatomic) NSArray *dependentRegistrations;
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingCurrentDevice:(_Bool)arg2 includingTinker:(_Bool)arg3;	// IMP=0x001000000023b6c0
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingTinker:(_Bool)arg2;	// IMP=0x001000000023b640
@property(readonly, nonatomic) IDSDAccount *superAccount;
@property(readonly, nonatomic) NSDictionary *defaultPairedDependentRegistration;
- (id)defaultPairedDependentRegistrationIncludingTinker:(_Bool)arg1;	// IMP=0x001000000023aa70
- (id)_fromIDFromDevice:(id)arg1 withCBUUID:(id)arg2 uniqueID:(id)arg3;	// IMP=0x001000000023a2b0
- (id)fromIDForCBUUID:(id)arg1 deviceID:(id)arg2;	// IMP=0x0010000000238b30
- (_Bool)hasDependentRegistrationWithURI:(id)arg1 token:(id)arg2;	// IMP=0x00100000002388e0
- (void)findDeviceUniqueID:(id *)arg1 btID:(id *)arg2 forURI:(id)arg3 token:(id)arg4 supportsLiveDelivery:(_Bool *)arg5;	// IMP=0x00100000002378a0
@property(readonly, nonatomic) _Bool isUsableForSending;
@property(readonly, nonatomic) _Bool hasEverRegistered;
- (id)_certForFromURI:(id)arg1;	// IMP=0x0010000000236b90
- (_Bool)hasVettedAliasURI:(id)arg1;	// IMP=0x0010000000236ad0
- (_Bool)hasAliasURI:(id)arg1;	// IMP=0x00100000002369d0
@property(readonly, nonatomic) NSArray *uris;
@property(readonly, nonatomic) NSArray *aliasStrings;
- (void)setupAccountWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000235f20
@property(readonly, nonatomic) _Bool isEnabled;
@property(readonly, nonatomic) _Bool shouldRegisterUsingDSHandle;
@property(readonly, nonatomic) _Bool shouldAutoRegisterAllHandles;
@property(readonly, nonatomic) _Bool isRegistered;
- (void)authenticationChanged;	// IMP=0x0010000000235d40
@property(retain, nonatomic) NSDate *expirationDate;
@property(nonatomic) _Bool isTemporary;
@property(readonly, nonatomic) long long registrationError;
@property(readonly, nonatomic) int registrationErrorReason;
@property(readonly, nonatomic) int registrationStatus;
@property(retain, nonatomic) NSString *loginID;
@property(readonly, nonatomic) NSString *dsID;
@property(readonly, nonatomic) NSString *dsHandle;
@property(readonly, nonatomic) int accountType;
@property(nonatomic) _Bool isUserDisabled;
- (void)clearDisplayName;	// IMP=0x0010000000234b30
@property(retain, nonatomic) NSString *displayName;
@property(retain, nonatomic) NSString *userUniqueIdentifier;
@property(readonly, nonatomic) NSString *uniqueID;
@property(readonly, nonatomic) IDSServiceProperties *service;
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000234230
- (void)dealloc;	// IMP=0x0010000000233da0
- (void)cleanupAccount;	// IMP=0x0010000000233d60
- (id)initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5;	// IMP=0x0010000000233c20
- (id)initAdHocAccountWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6;	// IMP=0x0010000000233ac0
- (id)_initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6 isAdHocAccount:(_Bool)arg7;	// IMP=0x0010000000232ec0
- (id)initWithDictionary:(id)arg1 service:(id)arg2 uniqueID:(id)arg3;	// IMP=0x0010000000232390
- (void)_setupAccount;	// IMP=0x0010000000230ee0
- (void)_resetVariables;	// IMP=0x0010000000230e60
- (void)_cleanupAccount;	// IMP=0x001000000022e600
- (void)_notifyRegistrationListenersAccountDidUpdateRegisteredDevices;	// IMP=0x00100000003175b0
- (void)removeRegistrationListener:(id)arg1;	// IMP=0x0010000000317500
- (void)addRegistrationListener:(id)arg1;	// IMP=0x0010000000317440
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x0010000000316ef0
- (id)pushHandler;	// IMP=0x0010000000316ec0
- (id)serviceType;	// IMP=0x0010000000316e60
- (void)reportAction:(long long)arg1 ofTempURI:(id)arg2 fromURI:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000316d70
- (void)reportiMessageUnknownSender:(id)arg1 messageID:(id)arg2 isBlackholed:(_Bool)arg3 messageServerTimestamp:(id)arg4 toURI:(id)arg5;	// IMP=0x0010000000316c30
- (void)reportSpamWithMessages:(id)arg1 toURI:(id)arg2;	// IMP=0x0010000000316b70
- (long long)validationStatusForAlias:(id)arg1;	// IMP=0x0010000000316b10
- (id)aliases;	// IMP=0x0010000000316ae0
- (double)_maxSelectedButVettedGracePeriod;	// IMP=0x0010000000316780
- (id)_allUserIntentWithDefaultReason:(_Bool)arg1;	// IMP=0x0010000000315c00
- (void)_stopTrackingUserIntentOfAlias:(id)arg1;	// IMP=0x00100000003158a0
- (void)_setUserIntentState:(unsigned char)arg1 forAlias:(id)arg2 withReason:(unsigned char)arg3;	// IMP=0x0010000000315180
- (id)_userIntentDictForAlias:(id)arg1;	// IMP=0x0010000000314cd0
- (unsigned char)unselectReasonForAlias:(id)arg1;	// IMP=0x0010000000314b90
- (void)loadAliasUserIntentMetadataIfNeeded;	// IMP=0x0010000000314b50
- (unsigned char)currentAliasState:(id)arg1;	// IMP=0x0010000000314a90
- (_Bool)wasRecentlySelectedAlias:(id)arg1;	// IMP=0x0010000000314a20
- (void)markAsWasSelectedAlias:(id)arg1;	// IMP=0x00100000003149c0
- (void)markAsVettedAlias:(id)arg1;	// IMP=0x0010000000314910
- (void)markAsUnvettedAlias:(id)arg1;	// IMP=0x0010000000314860
- (void)markAsUnselectedAlias:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x00100000003147f0
- (void)markAsSelectedAlias:(id)arg1;	// IMP=0x0010000000314790
- (id)invisibleAliases;	// IMP=0x0010000000314710
- (id)vettedAliases;	// IMP=0x0010000000314690
- (void)reIdentify;	// IMP=0x0010000000314660
- (void)reregister;	// IMP=0x0010000000314630
- (void)_refreshRegistration;	// IMP=0x0010000000314250
- (void)validateProfile;	// IMP=0x0010000000313900
@property(readonly, nonatomic) NSDictionary *pseudonymURIMap;
@property(readonly, nonatomic) NSArray *pseudonyms;
- (id)pseudonymForPseudonymURIString:(id)arg1;	// IMP=0x00100000003125c0
- (void)_removePseudonyms:(id)arg1;	// IMP=0x0010000000311cf0
- (void)_removePseudonym:(id)arg1;	// IMP=0x0010000000311c20
- (void)_addPseudonym:(id)arg1;	// IMP=0x0010000000311440
- (void)_removeAllPseudonyms;	// IMP=0x0010000000311360
- (_Bool)revokePseudonym:(id)arg1 requestProperties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000310aa0
- (_Bool)renewPseudonym:(id)arg1 forUpdatedExpiryEpoch:(double)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000310410
- (_Bool)provisionPseudonymForURI:(id)arg1 properties:(id)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000030f9b0
- (void)_handlePseudonymProvisionError:(long long)arg1;	// IMP=0x001000000030f890
- (void)refreshVettedAliases;	// IMP=0x001000000030f6c0
- (void)validateCredentialsWithDeliveryCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000030f610
- (void)deactivateAndPurgeIdentify;	// IMP=0x001000000030ef50
- (void)unvalidateAliases:(id)arg1;	// IMP=0x001000000030e970
- (void)_unvalidateAliases:(id)arg1;	// IMP=0x001000000030dc50
- (void)validateAliases:(id)arg1;	// IMP=0x001000000030d670
- (void)_validateAliases:(id)arg1;	// IMP=0x001000000030d060
- (void)_validateAliases:(id)arg1 validateAlreadyValid:(_Bool)arg2;	// IMP=0x001000000030bac0
- (void)addAliases:(id)arg1;	// IMP=0x001000000030b940
- (void)_addAliases:(id)arg1;	// IMP=0x001000000030ab70
- (void)removeAliases:(id)arg1;	// IMP=0x001000000030aa40
- (void)_removeAliases:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x0010000000309a50
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6;	// IMP=0x0010000000309970
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6 aliasProperties:(id)arg7;	// IMP=0x0010000000309210
- (long long)_validationStatusForAlias:(id)arg1;	// IMP=0x0010000000308de0
- (id)_aliases;	// IMP=0x0010000000308c80
- (id)_aliasStrings;	// IMP=0x0010000000308970
- (void)_ignoreIncomingPushes;	// IMP=0x0010000000308930
- (void)_acceptIncomingPushes;	// IMP=0x00100000003088f0
- (void)center:(id)arg1 failedRegionValidation:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x0010000000307fa0
- (void)center:(id)arg1 succeededRegionValidation:(id)arg2 regionID:(id)arg3 phoneNumber:(id)arg4 extraContext:(id)arg5 verified:(_Bool)arg6;	// IMP=0x0010000000307410
- (void)center:(id)arg1 succeededCurrentEmailsRequest:(id)arg2 emailInfo:(id)arg3;	// IMP=0x0010000000306cd0
- (void)center:(id)arg1 failedAuthentication:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x0010000000306300
- (void)center:(id)arg1 succeededAuthentication:(id)arg2;	// IMP=0x0010000000305a70
- (void)center:(id)arg1 startedAuthenticating:(id)arg2;	// IMP=0x0010000000305490
- (void)registrationControllerNeedsNewRegistration:(id)arg1;	// IMP=0x0010000000305130
- (void)registrationController:(id)arg1 deregistrationSucceeded:(id)arg2;	// IMP=0x0010000000304ab0
- (void)registrationController:(id)arg1 deregistrationWillStart:(id)arg2;	// IMP=0x00100000003045b0
- (MISSING_TYPE *)registrationController:registrationFailed:error:info: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000301d10
- (void)registrationController:(id)arg1 registrationSucceeded:(id)arg2;	// IMP=0x0010000000300240
- (void)registrationController:(id)arg1 registrationUpdated:(id)arg2;	// IMP=0x00100000002ffc60
- (void)registrationController:(id)arg1 registrationWillStart:(id)arg2;	// IMP=0x00100000002ff640
- (void)centerNeedsNewIdentification:(id)arg1;	// IMP=0x00100000002ff600
- (void)center:(id)arg1 failedIdentification:(id)arg2 error:(long long)arg3;	// IMP=0x00100000002ff580
- (void)center:(id)arg1 succeededIdentification:(id)arg2 phoneNumber:(id)arg3 token:(id)arg4;	// IMP=0x00100000002ff180
- (unsigned long long)_unregistered130RetryInterval;	// IMP=0x00100000002ff150
- (void)_updateSessionsWithRegisteredURIs:(id)arg1 retryIfNotRegistered:(_Bool)arg2;	// IMP=0x00100000002fe530
- (void)_updateSessionsWithRegisteredURIs:(id)arg1;	// IMP=0x00100000002fe4d0
- (void)_updateSessionsForAllRegisteredURIs;	// IMP=0x00100000002fe450
- (void)_flushTokensForRegisteredURIs:(id)arg1;	// IMP=0x00100000002fdc70
- (void)_processReceivedDependentRegistration:(id)arg1 oldDependentRegistrations:(id)arg2;	// IMP=0x00100000002fc7a0
- (void)_issueDependentCheck;	// IMP=0x00100000002fae90
- (void)_issueCriticalDependentCheck;	// IMP=0x00100000002fae50
- (_Bool)_issueForcedDependentCheckIfPossible;	// IMP=0x00100000002fadc0
- (void)_saveAndNotifyGDRUpdate;	// IMP=0x00100000002fa570
- (void)_notifyListenersAndSetDependentRegistrations:(id)arg1 onRegistrationInfo:(id)arg2;	// IMP=0x00100000002fa1d0
- (void)gdrReAuthenticateIfNecessary;	// IMP=0x00100000002f9920
- (void)_clearGDRState;	// IMP=0x00100000002f97d0
- (void)handler:(id)arg1 flushCacheForURIs:(id)arg2;	// IMP=0x00100000002f9220
- (void)handler:(id)arg1 profileHandlesUpdated:(id)arg2 status:(id)arg3 allowGDR:(id)arg4;	// IMP=0x00100000002f7eb0
- (void)handler:(id)arg1 profile:(id)arg2 deviceUpdated:(id)arg3 service:(id)arg4;	// IMP=0x00100000002f6880
- (void)_updateHandles:(_Bool)arg1;	// IMP=0x00100000002f57f0
- (void)_parseHandlesInfo:(id)arg1 currentAliases:(id)arg2 currentVettedAliases:(id)arg3;	// IMP=0x00100000002f2510
- (void)handler:(id)arg1 reloadBag:(id)arg2;	// IMP=0x00100000002f1870
- (void)handler:(id)arg1 pushTokenChanged:(id)arg2;	// IMP=0x00100000002f0e70
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;	// IMP=0x00100000002f0550
- (void)passwordUpdated;	// IMP=0x00100000002efdb0
- (void)unregisterAccount;	// IMP=0x00100000002ef820
- (void)_unregisterAccount;	// IMP=0x00100000002eeea0
- (void)registerAccount;	// IMP=0x00100000002eea30
- (void)_registerAccount;	// IMP=0x00100000002ed370
- (_Bool)_migrateRegistrationIfNeeded;	// IMP=0x00100000002ec620
- (void)_retryRegister;	// IMP=0x00100000002ec3a0
- (void)authenticateAccount;	// IMP=0x00100000002ebe10
- (_Bool)_isPasswordPromptPermissibleDuringAuthentication;	// IMP=0x00100000002ebcd0
- (void)_authenticateAccount;	// IMP=0x00100000002eb2b0
- (void)deactivateRegistration;	// IMP=0x00100000002ea560
- (void)activateRegistration;	// IMP=0x00100000002e8a90
- (void)systemRestoreStateDidChange;	// IMP=0x00100000002e8830
- (void)systemDidStartBackup;	// IMP=0x00100000002e8740
- (void)systemDidFinishMigration;	// IMP=0x00100000002e8660
- (void)_reregister;	// IMP=0x00100000002e8630
- (void)_reregisterAndReidentify:(_Bool)arg1;	// IMP=0x00100000002e7c40
- (void)_removeAuthenticationCredentialsIncludingAuthToken:(_Bool)arg1;	// IMP=0x00100000002e74e0
- (void)_removeAuthenticationCredentials;	// IMP=0x00100000002e74b0
- (void)_reregisterAndReProvision;	// IMP=0x00100000002e6f00
- (void)_reAuthenticate;	// IMP=0x00100000002e6e70
- (_Bool)_stopRegistrationAgent;	// IMP=0x00100000002e6bb0
- (void)_updateRegistrationStatusWithError:(long long)arg1 info:(id)arg2;	// IMP=0x00100000002e49b0
- (void)setRegistrationStatus:(int)arg1 error:(long long)arg2 alertInfo:(id)arg3;	// IMP=0x00100000002e42c0
- (void)_checkRegistration;	// IMP=0x00100000002e2980
- (void)_updateVettedAliases:(id)arg1 emailInfo:(id)arg2 addToCurrentHandlesIfNeeded:(_Bool)arg3;	// IMP=0x00100000002e1b60
- (void)_updatePseudonymsFromEmailInfo:(id)arg1;	// IMP=0x00100000002e0eb0
- (void)_keychainMigrationComplete:(id)arg1;	// IMP=0x00100000002e0740
- (void)_needsEncryptionIdentityRoll:(id)arg1;	// IMP=0x00100000002e0620
- (void)_identityGenerated:(id)arg1;	// IMP=0x00100000002e0500
- (void)_identityRebuilt:(id)arg1;	// IMP=0x00100000002e03e0
- (void)_deregisterDeviceCenterNotifications;	// IMP=0x00100000002e0240
- (void)_registerForDeviceCenterNotifications;	// IMP=0x00100000002e0060
- (void)_registrationAbilityChanged:(id)arg1;	// IMP=0x00100000002dfda0
- (_Bool)isRegistrationActive;	// IMP=0x00100000002dfd70
- (_Bool)isDeviceAuthenticated;	// IMP=0x00100000002dfd10
- (_Bool)isDeviceRegistered;	// IMP=0x00100000002dfc10
- (void)refreshAdHocServiceNames;	// IMP=0x00100000002df3e0
- (_Bool)_rebuildRegistrationInfo:(_Bool)arg1;	// IMP=0x00100000002da600
- (int)_neededRegistrationType;	// IMP=0x00100000002da570
- (void)_updateCallerIDToTemporaryPhone;	// IMP=0x00100000002da160
- (void)_updatePhoneNumberCallerID;	// IMP=0x00100000002d9940
- (_Bool)_hasBudgetForForcedGDR;	// IMP=0x00100000002d9770
- (void)_updatePerformedForcedGDRDate;	// IMP=0x00100000002d95d0
- (id)_performedForcedGDRDatePeriod;	// IMP=0x00100000002d9440
- (void)_clearForcedGDRDate;	// IMP=0x00100000002d93e0
- (void)_clearForcedGDRCount;	// IMP=0x00100000002d9380
- (void)_incrementForcedGDRCount;	// IMP=0x00100000002d92d0
- (int)_currentForcedGDRCount;	// IMP=0x00100000002d9240
- (_Bool)_isBuddyShowing;	// IMP=0x00100000002d9210
- (id)userDefaults;	// IMP=0x00100000002d91e0
- (id)systemMonitor;	// IMP=0x00100000002d91b0
- (id)peerIDManager;	// IMP=0x00100000002d9180
- (id)serviceController;	// IMP=0x00100000002d9150
- (id)accountController;	// IMP=0x00100000002d9120
- (id)appleIDNotificationCenter;	// IMP=0x00100000002d90f0
- (id)registrationCenter;	// IMP=0x00100000002d90c0
- (_Bool)shouldIncludeDefaultDeviceAsDestinationForMessageForFromID:(id)arg1;	// IMP=0x00100000004ce5b0
- (id)pairingManager;	// IMP=0x00100000004ce580
- (void)decryptMessageData:(id)arg1 myURI:(id)arg2 fromURI:(id)arg3 token:(id)arg4 groupID:(id)arg5 encryptionType:(long long)arg6 isLiveRetry:(_Bool)arg7 replayKey:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x00100000004cd7e0
- (void)sendMessage:(id)arg1 params:(id)arg2 bulkedPayload:(id)arg3 fromID:(id)arg4 toDestinations:(id)arg5 useDictAsTopLevel:(_Bool)arg6 dataToEncrypt:(id)arg7 encryptPayload:(_Bool)arg8 wantsResponse:(_Bool)arg9 expirationDate:(id)arg10 command:(id)arg11 wantsDeliveryStatus:(_Bool)arg12 wantsCertifiedDelivery:(_Bool)arg13 deliveryStatusContext:(id)arg14 messageUUID:(id)arg15 priority:(long long)arg16 localDelivery:(_Bool)arg17 disallowRefresh:(_Bool)arg18 willSendBlock:(CDUnknownBlockType)arg19 completionBlock:(CDUnknownBlockType)arg20;	// IMP=0x00100000004ccf10
- (void)sendMessageWithSendParameters:(id)arg1 willSendBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000004c7120
- (void)_rapportSendWithSendParameters:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000004c6bd0
- (void)_sendRemotelyWithSendParameters:(id)arg1 data:(id)arg2 protobuf:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000004bdde0
- (void)_sendLocallyWithSendParameters:(id)arg1 uriToLocalDestination:(id)arg2 data:(id)arg3 protobuf:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000004b8f10
- (id)utunDeliveryController;	// IMP=0x00100000004b8ee0
- (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 rapportDestinations:(id *)arg4 sendParameters:(id)arg5;	// IMP=0x00100000004b3ff0
- (void)sendServerMessage:(id)arg1 command:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b3600
- (void)_sendMessageWithSendParametersOnMainThread:(id)arg1 filteredDestinations:(id)arg2 data:(id)arg3 compressedData:(id)arg4 protobufToSend:(id)arg5 willSendBlock:(CDUnknownBlockType)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00100000004b0ea0
- (id)newSendMessageContext;	// IMP=0x00100000004b05e0
- (long long)maxRemoteMessagingPayloadSize;	// IMP=0x00100000004b0540

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

