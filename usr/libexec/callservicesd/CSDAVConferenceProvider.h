//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVConference, NSString, TUVideoDeviceController;
@protocol CSDAVConferenceProviderDelegate;

@interface CSDAVConferenceProvider : NSObject
{
    id <CSDAVConferenceProviderDelegate> delegate;	// 8 = 0x8
    AVConference *_conference;	// 16 = 0x10
    long long _callID;	// 24 = 0x18
    TUVideoDeviceController *_videoDeviceController;	// 32 = 0x20
}

- (void).cxx_destruct;	// IMP=0x002000000018584a
@property(readonly, nonatomic) TUVideoDeviceController *videoDeviceController; // @synthesize videoDeviceController=_videoDeviceController;
@property(nonatomic) long long callID; // @synthesize callID=_callID;
@property(readonly, nonatomic) AVConference *conference; // @synthesize conference=_conference;
@property(nonatomic) __weak id <CSDAVConferenceProviderDelegate> delegate; // @synthesize delegate;
- (void)conference:(id)arg1 didReceiveData:(id)arg2 forCallID:(long long)arg3;	// IMP=0x00100000001856e5
- (void)conference:(id)arg1 withCallID:(long long)arg2 networkHint:(_Bool)arg3;	// IMP=0x0010000000185641
- (void)conference:(id)arg1 videoQualityNotificationForCallID:(long long)arg2 isDegraded:(_Bool)arg3 isRemote:(_Bool)arg4;	// IMP=0x0010000000185587
- (void)conference:(id)arg1 cancelRelayRequest:(long long)arg2 requestDict:(id)arg3;	// IMP=0x00100000001854d4
- (void)conference:(id)arg1 sendRelayUpdate:(long long)arg2 updateDict:(id)arg3;	// IMP=0x0010000000185421
- (void)conference:(id)arg1 inititiateRelayRequest:(long long)arg2 requestDict:(id)arg3;	// IMP=0x001000000018536e
- (void)serverDiedForConference:(id)arg1;	// IMP=0x00100000001852ea
- (void)conference:(id)arg1 withCallID:(long long)arg2 remoteMediaStalled:(_Bool)arg3;	// IMP=0x0010000000185203
- (void)conference:(id)arg1 withCallID:(long long)arg2 didPauseVideo:(_Bool)arg3 error:(id)arg4;	// IMP=0x00100000001850f2
- (void)conference:(id)arg1 remoteVideoPaused:(_Bool)arg2 callID:(long long)arg3;	// IMP=0x0010000000185007
- (void)conference:(id)arg1 remoteAudioPaused:(_Bool)arg2 callID:(long long)arg3;	// IMP=0x0010000000184f63
- (void)conference:(id)arg1 withCallID:(long long)arg2 didPauseAudio:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000184e52
- (void)conference:(id)arg1 remoteVideoAttributesChanged:(id)arg2 callID:(long long)arg3;	// IMP=0x0010000000184d9f
- (void)conference:(id)arg1 remoteScreenAttributesChanged:(id)arg2 callID:(long long)arg3;	// IMP=0x0010000000184cec
- (void)conference:(id)arg1 receivedFirstRemoteFrameForCallID:(long long)arg2;	// IMP=0x0010000000184c1a
- (void)conference:(id)arg1 updateOutputMeterLevel:(float)arg2;	// IMP=0x0010000000184bc4
- (void)conference:(id)arg1 updateInputMeterLevel:(float)arg2;	// IMP=0x0010000000184b6e
- (void)conference:(id)arg1 updateOutputFrequencyLevel:(id)arg2;	// IMP=0x0010000000184af9
- (void)conference:(id)arg1 updateInputFrequencyLevel:(id)arg2;	// IMP=0x0010000000184a84
- (void)conference:(id)arg1 closeConnectionForCallID:(long long)arg2;	// IMP=0x00100000001849b2
- (void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3 callMetadata:(id)arg4;	// IMP=0x0010000000184891
- (void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3;	// IMP=0x0010000000184798
- (void)conference:(id)arg1 didStartSession:(_Bool)arg2 withUserInfo:(id)arg3;	// IMP=0x0010000000184663
- (void)sendData:(id)arg1;	// IMP=0x00100000001845e8
- (void)updateCapabilities:(id)arg1;	// IMP=0x0010000000184570
- (void)cancel;	// IMP=0x0010000000184481
- (void)stop;	// IMP=0x0010000000184392
- (void)inviteDictionaryForCallID:(long long)arg1 remoteInviteDictionary:(id)arg2 nonCellularCandidateTimeout:(double)arg3 block:(CDUnknownBlockType)arg4 queue:(id)arg5;	// IMP=0x00100000001842e3
- (_Bool)startConnectionAsCaller:(_Bool)arg1 capabilities:(id)arg2 socket:(int)arg3 error:(id *)arg4;	// IMP=0x0010000000184183
- (_Bool)startConnectionAsCaller:(_Bool)arg1 remoteInviteDictionary:(id)arg2 capabilities:(id)arg3 destination:(id)arg4 error:(id *)arg5;	// IMP=0x0010000000183ff0
- (_Bool)initializeNewCallWithDeviceRole:(int)arg1 reportingHierarchyToken:(id)arg2;	// IMP=0x0010000000183ea1
- (void)setPeerReportingIdentifier:(id)arg1 sessionIdentifier:(id)arg2;	// IMP=0x0010000000183d4b
- (void)setLocalPortraitAspectRatio:(struct CGSize)arg1 localLandscapeAspectRatio:(struct CGSize)arg2;	// IMP=0x0010000000183bcc
- (void)setRemoteVideoPresentationState:(unsigned int)arg1;	// IMP=0x0010000000183a79
- (void)setRemoteVideoPresentationSize:(struct CGSize)arg1;	// IMP=0x00100000001838f3
@property(nonatomic, getter=isVideoPaused) _Bool videoPaused;
@property(nonatomic, getter=isAudioPaused) _Bool audioPaused;
@property(nonatomic, getter=isSendingAudio) _Bool sendingAudio;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted;
@property(readonly, nonatomic) long long outputAudioPowerSpectrumToken;
@property(readonly, nonatomic) long long inputAudioPowerSpectrumToken;
@property(nonatomic, getter=isOutputFrequencyMeteringEnabled) _Bool outputFrequencyMeteringEnabled;
@property(nonatomic, getter=isInputFrequencyMeteringEnabled) _Bool inputFrequencyMeteringEnabled;
- (void)dealloc;	// IMP=0x0010000000182eca
- (id)initWithClientUUID:(id)arg1 serialQueue:(id)arg2;	// IMP=0x0010000000182d28

// Remaining properties
// Error: Property attributes should begin with the type ('T') attribute, property name: debugDescription
// Property attributes: (null)

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

