//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MDM/MDMServerCore.h>

@class DMCTimerContext, NSArray, NSDate, NSDictionary, NSNumber, NSObject, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface MDMDServer : MDMServerCore
{
    int _keybagEventToken;	// 8 = 0x8
    int _buddyDoneEventToken;	// 12 = 0xc
    _Bool _isObservingReachability;	// 16 = 0x10
    _Bool _memberQueuePinningRevocationCheckRequired;	// 17 = 0x11
    _Bool _memberQueueSignMessage;	// 18 = 0x12
    _Bool _memberQueuePollRequested;	// 19 = 0x13
    _Bool _memberQueueUserSwitchAlreadyInitiated;	// 20 = 0x14
    _Bool _memberQueueUseEnrollmentID;	// 21 = 0x15
    _Bool _executionQueueIsCheckinInProgress;	// 22 = 0x16
    int _memberQueueAccessRights;	// 24 = 0x18
    int _memberQueuePowerAssertionAssertedNotificationToken;	// 28 = 0x1c
    int _memberQueuePowerAssertionDeassertedNotificationToken;	// 32 = 0x20
    int _eventQueueBusyCount;	// 36 = 0x24
    struct __SecIdentity *_memberQueueIdentity;	// 40 = 0x28
    NSArray *_memberQueueServerPinnedSecCertificateRefs;	// 48 = 0x30
    NSArray *_memberQueueCheckInPinnedSecCertificateRefs;	// 56 = 0x38
    NSNumber *_memberQueuePollingInterval;	// 64 = 0x40
    NSURL *_memberQueueServerURL;	// 72 = 0x48
    NSURL *_memberQueueCheckInURL;	// 80 = 0x50
    NSDictionary *_memberQueueOrganizationInfo;	// 88 = 0x58
    NSDictionary *_memberQueueMDMOptions;	// 96 = 0x60
    NSString *_memberQueuePushMagic;	// 104 = 0x68
    DMCTimerContext *_memberQueueTimerContext;	// 112 = 0x70
    NSString *_memberQueueCommandUUID;	// 120 = 0x78
    NSString *_memberQueueEnrollmentID;	// 128 = 0x80
    NSDate *_memberQueueLastPollingAttempt;	// 136 = 0x88
    NSDate *_memberQueueLastPollingSuccess;	// 144 = 0x90
    NSNumber *_memberQueueLastPollingAttemptMonotonicTime;	// 152 = 0x98
    NSNumber *_memberQueueLastPollingAttemptRTCResetCount;	// 160 = 0xa0
    NSNumber *_memberQueueLastPollingSuccessMonotonicTime;	// 168 = 0xa8
    NSNumber *_memberQueueLastPollingSuccessRTCResetCount;	// 176 = 0xb0
    CDUnknownBlockType _executionQueuePushTokenWaitContinuationBlock;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_appBlockQueue;	// 192 = 0xc0
    CDUnknownBlockType _appBlockCompletionBlock;	// 200 = 0xc8
}

+ (id)sharedServer;	// IMP=0x0020000000001b8e
- (void).cxx_destruct;	// IMP=0x0020000000010368
@property(copy, nonatomic) CDUnknownBlockType appBlockCompletionBlock; // @synthesize appBlockCompletionBlock=_appBlockCompletionBlock;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *appBlockQueue; // @synthesize appBlockQueue=_appBlockQueue;
@property(nonatomic) int eventQueueBusyCount; // @synthesize eventQueueBusyCount=_eventQueueBusyCount;
@property(nonatomic) _Bool executionQueueIsCheckinInProgress; // @synthesize executionQueueIsCheckinInProgress=_executionQueueIsCheckinInProgress;
@property(copy, nonatomic) CDUnknownBlockType executionQueuePushTokenWaitContinuationBlock; // @synthesize executionQueuePushTokenWaitContinuationBlock=_executionQueuePushTokenWaitContinuationBlock;
@property(retain, nonatomic) NSNumber *memberQueueLastPollingSuccessRTCResetCount; // @synthesize memberQueueLastPollingSuccessRTCResetCount=_memberQueueLastPollingSuccessRTCResetCount;
@property(retain, nonatomic) NSNumber *memberQueueLastPollingSuccessMonotonicTime; // @synthesize memberQueueLastPollingSuccessMonotonicTime=_memberQueueLastPollingSuccessMonotonicTime;
@property(retain, nonatomic) NSNumber *memberQueueLastPollingAttemptRTCResetCount; // @synthesize memberQueueLastPollingAttemptRTCResetCount=_memberQueueLastPollingAttemptRTCResetCount;
@property(retain, nonatomic) NSNumber *memberQueueLastPollingAttemptMonotonicTime; // @synthesize memberQueueLastPollingAttemptMonotonicTime=_memberQueueLastPollingAttemptMonotonicTime;
@property(retain, nonatomic) NSDate *memberQueueLastPollingSuccess; // @synthesize memberQueueLastPollingSuccess=_memberQueueLastPollingSuccess;
@property(retain, nonatomic) NSDate *memberQueueLastPollingAttempt; // @synthesize memberQueueLastPollingAttempt=_memberQueueLastPollingAttempt;
@property(retain, nonatomic) NSString *memberQueueEnrollmentID; // @synthesize memberQueueEnrollmentID=_memberQueueEnrollmentID;
@property(nonatomic) _Bool memberQueueUseEnrollmentID; // @synthesize memberQueueUseEnrollmentID=_memberQueueUseEnrollmentID;
@property(nonatomic) _Bool memberQueueUserSwitchAlreadyInitiated; // @synthesize memberQueueUserSwitchAlreadyInitiated=_memberQueueUserSwitchAlreadyInitiated;
@property(retain, nonatomic) NSString *memberQueueCommandUUID; // @synthesize memberQueueCommandUUID=_memberQueueCommandUUID;
@property(nonatomic) int memberQueuePowerAssertionDeassertedNotificationToken; // @synthesize memberQueuePowerAssertionDeassertedNotificationToken=_memberQueuePowerAssertionDeassertedNotificationToken;
@property(nonatomic) int memberQueuePowerAssertionAssertedNotificationToken; // @synthesize memberQueuePowerAssertionAssertedNotificationToken=_memberQueuePowerAssertionAssertedNotificationToken;
@property(retain, nonatomic) DMCTimerContext *memberQueueTimerContext; // @synthesize memberQueueTimerContext=_memberQueueTimerContext;
@property(nonatomic) _Bool memberQueuePollRequested; // @synthesize memberQueuePollRequested=_memberQueuePollRequested;
@property(nonatomic) _Bool memberQueueSignMessage; // @synthesize memberQueueSignMessage=_memberQueueSignMessage;
@property(retain, nonatomic) NSString *memberQueuePushMagic; // @synthesize memberQueuePushMagic=_memberQueuePushMagic;
@property(nonatomic) int memberQueueAccessRights; // @synthesize memberQueueAccessRights=_memberQueueAccessRights;
@property(retain, nonatomic) NSDictionary *memberQueueMDMOptions; // @synthesize memberQueueMDMOptions=_memberQueueMDMOptions;
@property(retain, nonatomic) NSDictionary *memberQueueOrganizationInfo; // @synthesize memberQueueOrganizationInfo=_memberQueueOrganizationInfo;
@property(retain, nonatomic) NSURL *memberQueueCheckInURL; // @synthesize memberQueueCheckInURL=_memberQueueCheckInURL;
@property(retain, nonatomic) NSURL *memberQueueServerURL; // @synthesize memberQueueServerURL=_memberQueueServerURL;
@property(retain, nonatomic) NSNumber *memberQueuePollingInterval; // @synthesize memberQueuePollingInterval=_memberQueuePollingInterval;
@property(nonatomic) _Bool memberQueuePinningRevocationCheckRequired; // @synthesize memberQueuePinningRevocationCheckRequired=_memberQueuePinningRevocationCheckRequired;
@property(retain, nonatomic) NSArray *memberQueueCheckInPinnedSecCertificateRefs; // @synthesize memberQueueCheckInPinnedSecCertificateRefs=_memberQueueCheckInPinnedSecCertificateRefs;
@property(retain, nonatomic) NSArray *memberQueueServerPinnedSecCertificateRefs; // @synthesize memberQueueServerPinnedSecCertificateRefs=_memberQueueServerPinnedSecCertificateRefs;
@property(nonatomic) struct __SecIdentity *memberQueueIdentity; // @synthesize memberQueueIdentity=_memberQueueIdentity;
- (_Bool)_memberQueueParseMDMConfigurationDict:(id)arg1;	// IMP=0x001000000000ee9f
- (id)_memberQueueReadConfigurationFromDisk;	// IMP=0x001000000000ee11
- (unsigned int)_cancelDispatchNotificationWithToken:(unsigned int)arg1;	// IMP=0x001000000000ee05
- (unsigned int)_registerForDispatchNotification:(const char *)arg1 outToken:(int *)arg2 targetQueue:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000000edef
- (void)_memberQueueStopListeningForInterestingEvents;	// IMP=0x001000000000ed39
- (void)_memberQueueStartListeningForInterestingEvents;	// IMP=0x001000000000ec36
- (void)writeDictToMDMConfigurationFile:(id)arg1;	// IMP=0x001000000000eba9
- (void)requestInstallOfAppsInRestoreWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000e26f
- (void)unblockAppInstallsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000e073
- (void)blockAppInstallsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000ddf4
- (_Bool)isAppInstallBlocked;	// IMP=0x001000000000dcea
- (void)getAssertionDescriptionsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dc7e
- (void)willSwitchUser;	// IMP=0x001000000000da77
- (void)processDeviceRequest:(id)arg1 encodeResponse:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000d6d4
- (_Bool)handleHTTPStatusGoneResponse;	// IMP=0x001000000000d6cc
- (void)clearCachedResponse;	// IMP=0x001000000000d6b8
- (void)setTokenUpdateRequestCountToZero;	// IMP=0x001000000000d62f
@property(readonly, copy, nonatomic) NSDictionary *softwareUpdatePathFromDisk;
- (id)daemonIdentifier;	// IMP=0x001000000000d592
- (id)serverName;	// IMP=0x001000000000d542
- (id)organizationName;	// IMP=0x001000000000d4e8
- (void)uprootMDMWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c960
- (void)reauthenticationCompleteWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c90e
- (void)migrateMDMWithContext:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c861
- (void)retryNotNowWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c4c7
- (void)simulatePushWithAssertion:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c1b0
- (void)simulatePushIfNetworkTetheredWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000bfd6
- (void)simulatePushWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000bf3f
- (void)performOutstandingActivities;	// IMP=0x001000000000bc65
- (void)scheduleTokenUpdateIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000ba45
- (void)scheduleTokenUpdateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000b720
- (void)notifyNewConfigurationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000b56d
- (void)buddyDidFinish;	// IMP=0x001000000000b38a
- (void)_keybagStateDidChange;	// IMP=0x001000000000b0f9
- (_Bool)deviceIsLocked;	// IMP=0x001000000000b0f1
- (void)_networkReachabilityDidChange;	// IMP=0x001000000000aec9
@property(nonatomic) _Bool userSwitchAlreadyInitiated;
- (void)setMemberQueueTokenUpdateRequestCount:(int)arg1;	// IMP=0x001000000000ac9d
- (void)memberQueueDecrementTokenUpdateRequestCount;	// IMP=0x001000000000ac62
- (void)memberQueueIncrementTokenUpdateRequestCount;	// IMP=0x001000000000ac26
- (int)memberQueueTokenUpdateCount;	// IMP=0x001000000000ab8b
- (int)tokenUpdateCount;	// IMP=0x001000000000aa96
@property(retain, nonatomic) NSDictionary *memberQueueCachedResponse;
- (void)setCachedResponse:(id)arg1;	// IMP=0x001000000000a996
- (id)cachedResponse;	// IMP=0x001000000000a7d8
- (_Bool)memberQueueHasOutstandingActivity;	// IMP=0x001000000000a768
- (_Bool)hasOutstandingActivity;	// IMP=0x001000000000a677
- (void)executionQueueHandleRequest:(id)arg1 withMDMParserOfClass:(Class)arg2 assertion:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000009e42
- (id)responseFromBasicResponse:(id)arg1;	// IMP=0x0010000000009933
- (void)executionQueuePollServerForCommandWithAssertion:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000008724
- (void)schedulePollingServerForCommandWithAssertion:(id)arg1;	// IMP=0x0010000000008557
- (id)sendResponseSynchronously:(id)arg1 outStatusCode:(long long *)arg2 outError:(id *)arg3;	// IMP=0x0010000000008223
- (void)sendResponse:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000007c3a
- (id)_idleResponse;	// IMP=0x0010000000007af7
- (void)executionQueueTellServerAboutDeviceTokenWithAssertion:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000670b
- (void)pushTokenCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000006679
- (void)connection:(id)arg1 didReceiveMessageForTopic:(id)arg2 userInfo:(id)arg3;	// IMP=0x001000000000591b
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;	// IMP=0x0010000000005037
- (void)executionQueueCheckForOutstandingActivityIsReachabilityEvent:(_Bool)arg1 assertion:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000004d11
- (void)_executionQueueCheckForOutstandingActivityIsReachabilityEvent:(_Bool)arg1 assertion:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000004aad
- (_Bool)startOutError:(id *)arg1;	// IMP=0x0010000000004781
- (_Bool)readConfigurationOutError:(id *)arg1 isUproot:(_Bool)arg2;	// IMP=0x0010000000004048
- (void)memberQueueForgetCurrentConfiguration;	// IMP=0x0010000000003dd7
@property(readonly, nonatomic, getter=isTokenUpdateScheduled) _Bool tokenUpdateScheduled;
- (void)memberQueueEnqueuePoll;	// IMP=0x0010000000003b72
- (void)memberQueueScheduleNextPoll;	// IMP=0x00100000000038ae
- (void)scheduleNextPoll;	// IMP=0x0010000000003827
@property(nonatomic) _Bool memberQueueLastResponseWasNotNow;
- (void)setLastResponseWasNotNow:(_Bool)arg1;	// IMP=0x0010000000003756
- (void)setMemberQueueLastPollingSuccess;	// IMP=0x00100000000035b4
- (void)setLastPollingSuccess;	// IMP=0x001000000000352d
- (void)pollingFailed;	// IMP=0x001000000000351b
- (void)pollingSucceeded;	// IMP=0x00100000000034ed
- (void)setMemberQueueLastPollingAttempt;	// IMP=0x001000000000334b
- (void)setLastPollingAttempt;	// IMP=0x00100000000032c4
- (void)memberQueueRemoveOutstandingActivityForKey:(id)arg1;	// IMP=0x00100000000031ae
- (void)memberQueueSetOutstandingActivity:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000000030b9
@property(readonly, nonatomic) _Bool lastResponseWasNotNow;
- (void)setMemberQueuePushMagicMismatchDateMarker:(id)arg1;	// IMP=0x0010000000002e82
- (id)memberQueuePushMagicMismatchDateMarker;	// IMP=0x0010000000002df9
- (void)setMemberQueueLastPushTokenHash:(id)arg1;	// IMP=0x0010000000002cde
- (id)memberQueueLastPushTokenHash;	// IMP=0x0010000000002c55
@property(copy, nonatomic) NSDictionary *MDMOptions;
- (void)_changeOrganizationNameForRMAccountIdentifier:(id)arg1 personaID:(id)arg2 organizationName:(id)arg3;	// IMP=0x0010000000002375
- (void)_updateMDMConfiguration:(id)arg1 organizationInfo:(id)arg2;	// IMP=0x0010000000002220
@property(copy, nonatomic) NSDictionary *organizationInfo;
- (void)setServerURL:(id)arg1;	// IMP=0x0010000000001e6a
- (id)serverURL;	// IMP=0x0010000000001cb9
- (void)dealloc;	// IMP=0x0010000000001c5b
- (id)init;	// IMP=0x0010000000001be3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

