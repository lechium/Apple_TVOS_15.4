//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKKSKeychainBackedKey, MISSING_TYPE, NSData, NSString;
@protocol SecCKKSKeyClass, SecCKKSProcessedState;

__attribute__((visibility("hidden")))
@interface CKKSKey
{
    _Bool _currentkey;	// 8 = 0x8
    NSString *_uuid;	// 16 = 0x10
    NSString *_parentKeyUUID;	// 24 = 0x18
    NSString<SecCKKSKeyClass> *_keyclass;	// 32 = 0x20
    NSString<SecCKKSProcessedState> *_state;	// 40 = 0x28
    CKKSKeychainBackedKey *_keycore;	// 48 = 0x30
    NSData *_wrappedKeyDataBackingStore;	// 56 = 0x38
}

+ (_Bool)intransactionRecordDeleted:(id)arg1 error:(id *)arg2;	// IMP=0x00400000000faf86
+ (_Bool)intransactionRecordChanged:(id)arg1 resync:(_Bool)arg2 flagHandler:(id)arg3 error:(id *)arg4;	// IMP=0x00100000000fa521
+ (id)loadFromProtobuf:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fa233
+ (id)countsByClass:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fa06c
+ (id)counts:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f9e35
+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x00100000000f9b7b
+ (id)sqlColumns;	// IMP=0x00100000000f9b6e
+ (id)sqlTable;	// IMP=0x00100000000f9b61
+ (id)localKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f9a67
+ (id)remoteKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f996d
+ (id)allKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f9893
+ (id)currentKeysForClass:(id)arg1 state:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x00100000000f9729
+ (id)currentKeyForClass:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f965f
+ (id)selfWrappedKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f9508
+ (id)tryFromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f93fb
+ (id)tryFromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f92da
+ (id)fromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f91cd
+ (id)fromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f90ac
+ (id)isItemKeyForKeychainView:(struct SecDbItem *)arg1;	// IMP=0x00100000000f8d7d
+ (id)randomKeyWrappedBySelf:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f8d0c
+ (id)randomKeyWrappedByParent:(id)arg1 keyclass:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f8c36
+ (id)randomKeyWrappedByParent:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f8baa
+ (id)loadKeyWithUUID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f8b25
- (void).cxx_destruct;	// IMP=0x00200000000f8ab0
@property(retain) NSData *wrappedKeyDataBackingStore; // @synthesize wrappedKeyDataBackingStore=_wrappedKeyDataBackingStore;
@property(retain) CKKSKeychainBackedKey *keycore; // @synthesize keycore=_keycore;
@property _Bool currentkey; // @synthesize currentkey=_currentkey;
@property(copy) NSString<SecCKKSProcessedState> *state; // @synthesize state=_state;
@property(retain) NSString<SecCKKSKeyClass> *keyclass; // @synthesize keyclass=_keyclass;
@property(retain) NSString *parentKeyUUID; // @synthesize parentKeyUUID=_parentKeyUUID;
@property(retain) NSString *uuid; // @synthesize uuid=_uuid;
- (id)serializeAsProtobuf:(id *)arg1;	// IMP=0x00100000000f8796
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000000f8703
- (id)sqlValues;	// IMP=0x00100000000f8308
- (id)whereClauseToFindSelf;	// IMP=0x00100000000f81d6
- (id)description;	// IMP=0x00100000000f8094
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x00100000000f7bf5
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x00100000000f78f8
- (void)setFromCKRecord:(id)arg1;	// IMP=0x00100000000f75b5
- (id)CKRecordName;	// IMP=0x00100000000f75a3
- (_Bool)saveToDatabaseAsOnlyCurrentKeyForClassAndState:(id *)arg1;	// IMP=0x00100000000f7331
- (MISSING_TYPE *)deleteKeyMaterialFromKeychain: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000f72af
- (_Bool)loadKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00100000000f722d
- (_Bool)saveKeyMaterialToKeychain:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00100000000f7198
- (_Bool)saveKeyMaterialToKeychain:(id *)arg1;	// IMP=0x00100000000f7111
- (id)decryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f703e
- (id)encryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f6f6b
- (id)unwrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f6eb5
- (id)wrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f6dff
- (_Bool)trySelfWrappedKeyCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f6d55
- (_Bool)tlkMaterialPresentOrRecoverableViaTLKShare:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f67b3
- (_Bool)validTLK:(id *)arg1;	// IMP=0x00100000000f660b
- (_Bool)unwrapViaTLKSharesTrustedBy:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f6063
- (id)unwrapViaKeyHierarchy:(id *)arg1;	// IMP=0x00100000000f5c68
- (id)ensureKeyLoaded:(id *)arg1;	// IMP=0x00100000000f59c1
- (id)topKeyInAnyState:(id *)arg1;	// IMP=0x00100000000f568a
- (_Bool)wrapUnder:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f54d5
- (_Bool)wrapsSelf;	// IMP=0x00100000000f5461
@property(readonly) NSString *zoneName;
@property(readonly) NSData *wrappedKeyData;
- (id)getKeychainBackedKey:(id *)arg1;	// IMP=0x00100000000f4f55
- (_Bool)isEqual:(id)arg1;	// IMP=0x00100000000f4ca4
- (void)dealloc;	// IMP=0x00100000000f4c75
- (id)initWithKeyCore:(id)arg1 state:(id)arg2 currentkey:(_Bool)arg3;	// IMP=0x00100000000f4abd
- (id)initWithWrappedKeyData:(id)arg1 uuid:(id)arg2 parentKeyUUID:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00100000000f4981
- (id)initSelfWrappedWithAESKey:(id)arg1 uuid:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7;	// IMP=0x00100000000f477f
- (id)init;	// IMP=0x00100000000f4750

@end

