//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MIBundleContainer, MIClientConnection, MIDataContainer, MIStashedBundleContainer, NSArray, NSDictionary, NSMutableArray, NSString;

@interface MIReverter : NSObject
{
    _Bool _isLocked;	// 8 = 0x8
    NSDictionary *_receipt;	// 16 = 0x10
    MIClientConnection *_client;	// 24 = 0x18
    NSDictionary *_options;	// 32 = 0x20
    NSString *_bundleID;	// 40 = 0x28
    MIBundleContainer *_existingBundleContainer;	// 48 = 0x30
    MIStashedBundleContainer *_stashedContainer;	// 56 = 0x38
    MIBundleContainer *_bundleContainer;	// 64 = 0x40
    NSArray *_pluginBundles;	// 72 = 0x48
    MIDataContainer *_dataContainer;	// 80 = 0x50
    NSMutableArray *_pluginDataContainers;	// 88 = 0x58
}

+ (id)reverterForBundleIdentifier:(id)arg1 withOptions:(id)arg2 forClient:(id)arg3;	// IMP=0x0040000000018798
- (void).cxx_destruct;	// IMP=0x002000000001b85e
@property(retain, nonatomic) NSMutableArray *pluginDataContainers; // @synthesize pluginDataContainers=_pluginDataContainers;
@property(retain, nonatomic) MIDataContainer *dataContainer; // @synthesize dataContainer=_dataContainer;
@property(retain, nonatomic) NSArray *pluginBundles; // @synthesize pluginBundles=_pluginBundles;
@property(retain, nonatomic) MIBundleContainer *bundleContainer; // @synthesize bundleContainer=_bundleContainer;
@property(retain, nonatomic) MIStashedBundleContainer *stashedContainer; // @synthesize stashedContainer=_stashedContainer;
@property(retain, nonatomic) MIBundleContainer *existingBundleContainer; // @synthesize existingBundleContainer=_existingBundleContainer;
@property(nonatomic) _Bool isLocked; // @synthesize isLocked=_isLocked;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(copy, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(nonatomic) __weak MIClientConnection *client; // @synthesize client=_client;
// Error: Property attributes should begin with the type ('T') attribute, property name: receipt
// Property attributes: (null)

- (_Bool)performRevertWithError:(id *)arg1;	// IMP=0x001000000001b417
- (id)_launchServicesDictionariesWithError:(id *)arg1;	// IMP=0x001000000001afab
- (_Bool)_finalizeInstallationWithError:(id *)arg1;	// IMP=0x001000000001a075
- (_Bool)_refreshUUIDForContainer:(id)arg1 withError:(id *)arg2;	// IMP=0x0010000000019efc
- (_Bool)_postFlightInstallationWithError:(id *)arg1;	// IMP=0x0010000000019d38
- (_Bool)_postFlightPluginsWithError:(id *)arg1;	// IMP=0x0010000000019894
- (_Bool)_performInstallationWithError:(id *)arg1;	// IMP=0x00100000000196a1
- (_Bool)_validateAndEstablishLinkToParentContainer:(id *)arg1;	// IMP=0x00100000000193e7
- (_Bool)_performVerificationWithError:(id *)arg1;	// IMP=0x0010000000019134
- (id)_validateBundle:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000018fb5
- (_Bool)_performPreflightWithError:(id *)arg1;	// IMP=0x0010000000018cf9
- (void)_fireCallbackWithStatus:(id)arg1;	// IMP=0x0010000000018c87
- (void)_fireCallbackWithStatus:(id)arg1 percentComplete:(unsigned int)arg2;	// IMP=0x0010000000018c0f
- (void)dealloc;	// IMP=0x00100000000188e3
- (id)initForBundleIdentifier:(id)arg1 options:(id)arg2 forClient:(id)arg3;	// IMP=0x001000000001882b

@end

