//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSData, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface SDAutoUnlockAKSManager : NSObject
{
    _Bool _wristDetectDisabled;	// 8 = 0x8
    _Bool _autoUnlockDisabledDueToManagement;	// 9 = 0x9
    _Bool _waitingForUnlock;	// 10 = 0xa
    _Bool _t208Machine;	// 11 = 0xb
    struct os_unfair_lock_s _cachedSessionKeysLock;	// 12 = 0xc
    NSString *_localDeviceID;	// 16 = 0x10
    NSString *_state;	// 24 = 0x18
    NSData *_localAttestedLTK;	// 32 = 0x20
    NSData *_localLTK;	// 40 = 0x28
    NSString *_altDSID;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_keybagAssertionTimer;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_waitingForUnlockTimer;	// 64 = 0x40
    NSMutableDictionary *_remoteLTKs;	// 72 = 0x48
    NSMutableDictionary *_cachedSessions;	// 80 = 0x50
    NSMutableDictionary *_cachedSessionKeys;	// 88 = 0x58
    NSMutableDictionary *_watchIDsToPairingRecords;	// 96 = 0x60
    NSMutableDictionary *_preferredRemoteLTKForDeviceID;	// 104 = 0x68
    NSMutableArray *_watchIDsMissingSessionKey;	// 112 = 0x70
    NSString *_remoteLTKStorageFilePath;	// 120 = 0x78
    NSString *_watchIDsToPairingRecordsStorageFilePath;	// 128 = 0x80
    NSString *_companionIDStorageFilePath;	// 136 = 0x88
    NSString *_watchIDToCompanionIDStorageFilePath;	// 144 = 0x90
}

+ (_Bool)useKeychainForLTKSyncing;	// IMP=0x00200000000c2c15
+ (id)sharedManager;	// IMP=0x00100000000b69f1
- (void).cxx_destruct;	// IMP=0x00200000000c5951
@property(readonly, nonatomic) struct os_unfair_lock_s cachedSessionKeysLock; // @synthesize cachedSessionKeysLock=_cachedSessionKeysLock;
@property(copy, nonatomic) NSString *watchIDToCompanionIDStorageFilePath; // @synthesize watchIDToCompanionIDStorageFilePath=_watchIDToCompanionIDStorageFilePath;
@property(copy, nonatomic) NSString *companionIDStorageFilePath; // @synthesize companionIDStorageFilePath=_companionIDStorageFilePath;
@property(copy, nonatomic) NSString *watchIDsToPairingRecordsStorageFilePath; // @synthesize watchIDsToPairingRecordsStorageFilePath=_watchIDsToPairingRecordsStorageFilePath;
- (void);	// IMP=0x00100000000c590c
@property(retain, nonatomic) NSMutableArray *watchIDsMissingSessionKey; // @synthesize watchIDsMissingSessionKey=_watchIDsMissingSessionKey;
@property(retain, nonatomic) NSMutableDictionary *preferredRemoteLTKForDeviceID; // @synthesize preferredRemoteLTKForDeviceID=_preferredRemoteLTKForDeviceID;
@property(retain, nonatomic) NSMutableDictionary *watchIDsToPairingRecords; // @synthesize watchIDsToPairingRecords=_watchIDsToPairingRecords;
@property(retain, nonatomic) NSMutableDictionary *cachedSessionKeys; // @synthesize cachedSessionKeys=_cachedSessionKeys;
@property(retain, nonatomic) NSMutableDictionary *cachedSessions; // @synthesize cachedSessions=_cachedSessions;
@property(retain, nonatomic) NSMutableDictionary *remoteLTKs; // @synthesize remoteLTKs=_remoteLTKs;
@property(retain) NSObject<OS_dispatch_source> *waitingForUnlockTimer; // @synthesize waitingForUnlockTimer=_waitingForUnlockTimer;
@property(retain) NSObject<OS_dispatch_source> *keybagAssertionTimer; // @synthesize keybagAssertionTimer=_keybagAssertionTimer;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSData *localLTK; // @synthesize localLTK=_localLTK;
@property(nonatomic) _Bool t208Machine; // @synthesize t208Machine=_t208Machine;
@property(nonatomic) _Bool waitingForUnlock; // @synthesize waitingForUnlock=_waitingForUnlock;
@property(nonatomic) _Bool autoUnlockDisabledDueToManagement; // @synthesize autoUnlockDisabledDueToManagement=_autoUnlockDisabledDueToManagement;
@property(copy, nonatomic) NSData *localAttestedLTK; // @synthesize localAttestedLTK=_localAttestedLTK;
@property(nonatomic) _Bool wristDetectDisabled; // @synthesize wristDetectDisabled=_wristDetectDisabled;
@property(copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *localDeviceID; // @synthesize localDeviceID=_localDeviceID;
- (void)updateDynamicStoreEnabled;	// IMP=0x00100000000c575d
- (id)baseDictionary;	// IMP=0x00100000000c56ed
- (id)baseLocalKeysDictionary;	// IMP=0x00100000000c56a0
- (id)baseLocalKeysDictionaryForDevice:(id)arg1 type:(id)arg2;	// IMP=0x00100000000c55ee
- (id)baseModernSyncedDictionary;	// IMP=0x00100000000c557b
- (id)attestedDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c54d5
- (id)modernSyncedDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c5427
- (id)baseSyncedDictionary;	// IMP=0x00100000000c53b1
- (id)syncedDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c5303
- (id)baseRangingDictionary;	// IMP=0x00100000000c5290
- (id)baseRangingDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c5218
- (id)keychainDataForQuery:(id)arg1;	// IMP=0x00100000000c50ee
- (void)deleteAllRangingKeys;	// IMP=0x00100000000c4f26
- (void)deleteRangingKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c4d8c
- (_Bool)storeRangingKey:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x00100000000c4b24
- (id)rangingKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c4ac5
- (id)sessionKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c4960
- (_Bool)sessionKeyExistsForDeviceID:(id)arg1;	// IMP=0x00100000000c492d
- (id)deriveKeyFromSharedSecret:(id)arg1;	// IMP=0x00100000000c4831
- (void)updateSessionKeys;	// IMP=0x00100000000c44c9
- (void)updateRangingKeysIfNeccesary;	// IMP=0x00100000000c4138
- (void)deleteLocalAttestedLTK;	// IMP=0x00100000000c4044
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2 attested:(_Bool)arg3;	// IMP=0x00100000000c3f6a
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000c3f55
- (id)ltkInfoForDeviceID:(id)arg1;	// IMP=0x00100000000c3f41
- (id)longTermKeyIDForDeviceID:(id)arg1;	// IMP=0x00100000000c3e99
- (id)longTermKeyForDevice:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000c3e49
- (id)anyLongTermKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c3dcf
- (void)deleteRemoteLongTermKeyForDeviceID:(id)arg1 modern:(_Bool)arg2 tombstone:(_Bool)arg3;	// IMP=0x00100000000c3cf4
- (_Bool)storeAttestedLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x00100000000c3a6c
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3 modern:(_Bool)arg4;	// IMP=0x00100000000c37c2
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x00100000000c371c
- (void)deleteAllEscrowSecrets;	// IMP=0x00100000000c3653
- (void)deleteEscrowSecretForDeviceID:(id)arg1;	// IMP=0x00100000000c353c
- (id)escrowSecretCreationDateForDeviceID:(id)arg1;	// IMP=0x00100000000c3407
- (_Bool)escrowSecretExistsForDevice:(id)arg1;	// IMP=0x00100000000c3352
- (_Bool)storeEscrowSecret:(id)arg1 pairingID:(id)arg2 deviceID:(id)arg3;	// IMP=0x00100000000c31de
- (id)keyPairingIDForDeviceID:(id)arg1;	// IMP=0x00100000000c3126
- (id)escrowSecretForDevice:(id)arg1;	// IMP=0x00100000000c2d93
- (_Bool)storeKeychainItemWithAttributeDictionary:(id)arg1 updateDictionary:(id)arg2 addDictionary:(id)arg3;	// IMP=0x00100000000c2c1d
- (id)autoUnlockFolderPath;	// IMP=0x00100000000c2b11
- (id)loadCompanionIDs;	// IMP=0x00100000000c2723
- (void)deleteLegacyCompanionIDs;	// IMP=0x00100000000c2607
- (id)migrateLegacyCompanionIDs:(id)arg1;	// IMP=0x00100000000c2510
- (id)loadLegacyWatchIDToCompanionIDMapping;	// IMP=0x00100000000c221b
- (void)deleteLegacyWatchToCompanionIDs;	// IMP=0x00100000000c20ff
- (void)migrateLegacyWatchIDToCompanionIDs;	// IMP=0x00100000000c1faa
- (void)loadWatchIDsToPairingRecords;	// IMP=0x00100000000c1f1c
- (void)saveWatchIDsToPairingRecords;	// IMP=0x00100000000c1d64
- (void)removePairingRecordForWatchID:(id)arg1;	// IMP=0x00100000000c1ce5
- (void)removePairingIDForWatchID:(id)arg1;	// IMP=0x00100000000c1b7e
- (id)pairingIDForWatchID:(id)arg1;	// IMP=0x00100000000c1ad3
- (void)setPairingID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x00100000000c1944
- (void)removeCompanionIDForWatchID:(id)arg1;	// IMP=0x00100000000c17dd
- (id)companionIDForWatchID:(id)arg1;	// IMP=0x00100000000c1732
- (void)setCompanionID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x00100000000c15a3
- (id)allPairedWatchDeviceIDs;	// IMP=0x00100000000c1553
- (void)reloadPairingRecordsIfNeeded;	// IMP=0x00100000000c14b6
@property(copy, nonatomic) NSString *remoteLTKStorageFilePath; // @synthesize remoteLTKStorageFilePath=_remoteLTKStorageFilePath;
- (void)loadRemoteLTKs;	// IMP=0x00100000000c0fa7
- (void)loadRemoteLTKsIfNeeded;	// IMP=0x00100000000c0f5e
- (void)saveRemoteLTKs;	// IMP=0x00100000000c0da6
- (void)clearRemoteLTKs;	// IMP=0x00100000000c0cd0
- (void)removeRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000c0bcf
- (void)addRemoteLTK:(id)arg1 ltkHash:(id)arg2 ltkModDate:(id)arg3 modernLTK:(id)arg4 modernLTKHash:(id)arg5 modernLTKModeDate:(id)arg6 deviceID:(id)arg7;	// IMP=0x00100000000c090e
- (_Bool)disablePairingWithKeyDevice:(id)arg1;	// IMP=0x00100000000c0837
- (_Bool)ltkExistsForKeyDevice:(id)arg1 updateLTKs:(_Bool)arg2;	// IMP=0x00100000000c06cf
- (_Bool)ltkExistsForKeyDevice:(id)arg1;	// IMP=0x00100000000c06bb
- (void)removeAllRemoteLTKsOnSignOut;	// IMP=0x00100000000c03e5
- (void)disablePairingForAllKeyDevices;	// IMP=0x00100000000c00fb
- (void)deleteEscrowSecretForPhones;	// IMP=0x00100000000bfd7d
- (void)deleteEscrowSecretForAllDevices;	// IMP=0x00100000000bf99c
- (void)handleRequiredStateDisabled;	// IMP=0x00100000000bf996
- (_Bool)deviceEnabledAsKey:(id)arg1;	// IMP=0x00100000000bf8c9
- (_Bool)deviceEnabledAsKeyForAnyMac;	// IMP=0x00100000000bf61b
- (_Bool)deviceEnabledAsKeyForAnyDevice;	// IMP=0x00100000000bf309
- (_Bool)deviceEnabledAsKeyForAnyIDSMac;	// IMP=0x00100000000bf05b
- (_Bool)deviceEnabledAsKeyForAnyIDSDevice;	// IMP=0x00100000000bed49
- (_Bool)localDeviceEnabledAsKeyForMac;	// IMP=0x00100000000becd7
- (_Bool)localDeviceEnabledAsKey;	// IMP=0x00100000000bec65
- (void)transport:(id)arg1 didReceivePayload:(id)arg2 type:(unsigned short)arg3 deviceID:(id)arg4;	// IMP=0x00100000000beb90
- (void)handleLTKResponse:(id)arg1;	// IMP=0x00100000000beb8a
- (void)invalidateWaitingForUnlockTimer;	// IMP=0x00100000000beab4
- (void)restartWaitingForUnlockTimer;	// IMP=0x00100000000be8be
- (void)restartKeybagAssertionTimer;	// IMP=0x00100000000be6ca
- (void)releaseKeybagAssertion;	// IMP=0x00100000000be66e
- (void)takeMobileKeybagAssertion;	// IMP=0x00100000000be612
- (_Bool)pendingReceiveForPeer:(id)arg1;	// IMP=0x00100000000be60a
- (_Bool)pendingSendForPeer:(id)arg1;	// IMP=0x00100000000be602
- (_Bool)keychainNeedsSyncingForRequest:(id)arg1;	// IMP=0x00100000000be139
- (id)ltksForRequest:(id)arg1;	// IMP=0x00100000000bdb4a
- (void)handleLTKRequest:(id)arg1;	// IMP=0x00100000000bdb44
- (void)sendLTKResponseWithPayload:(id)arg1 viewState:(id)arg2 needsUnlock:(id)arg3 currentlySyncing:(id)arg4;	// IMP=0x00100000000bdb3e
- (void)fetchLTKsFromCompanionForDeviceID:(id)arg1 needsLTK:(_Bool)arg2 remoteNeedsLTK:(_Bool)arg3 checkViewState:(_Bool)arg4;	// IMP=0x00100000000bdb38
- (void)fetchLTKsFromCompanion:(_Bool)arg1;	// IMP=0x00100000000bdb1c
- (void)updatePreferredRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bd6fa
- (id)remoteLTKList;	// IMP=0x00100000000bd4ec
- (id)remoteLTKEntryForDeviceID:(id)arg1;	// IMP=0x00100000000bd469
- (id)remoteLTKHashForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000bd3f8
- (_Bool)hashMatchesAnyRemoteLTKForDeviceID:(id)arg1 ltkHash:(id)arg2 isPreferred:(_Bool *)arg3;	// IMP=0x00100000000bd092
- (id)remoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bcfb5
- (id)allRemoteLTKData;	// IMP=0x00100000000bce8c
- (void)signAndStoreRemoteLTK:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x00100000000bca4a
- (id)signedDevices;	// IMP=0x00100000000bc8f9
- (id)modernSignedDevices;	// IMP=0x00100000000bc7a8
- (id)modificationDataForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000bc61b
- (id)keychainDevices:(_Bool)arg1;	// IMP=0x00100000000bc365
- (id)allKeychainDevices;	// IMP=0x00100000000bc351
- (_Bool)signLTK:(id)arg1 ltkModDate:(id)arg2 modernLTK:(id)arg3 modernLTKModDate:(id)arg4 deviceID:(id)arg5;	// IMP=0x00100000000bbf5a
- (_Bool)signLTK:(id)arg1 modernLTK:(id)arg2 forDeviceID:(id)arg3;	// IMP=0x00100000000bbf30
- (_Bool)signLTKsForDeviceID:(id)arg1;	// IMP=0x00100000000bbe8c
- (void)resignRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bbe7a
- (void)checkRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bbc55
- (void)checkRemoteLTKs;	// IMP=0x00100000000bbc4f
- (void)updateRemoteLTKs;	// IMP=0x00100000000bbc39
- (void)updateLTKsForDeviceID:(id)arg1 staleRemoteLTK:(_Bool)arg2;	// IMP=0x00100000000bb3b5
- (void)generateLocalAttestedLTKIfNeccessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000bb31a
- (int)ltkSyncStatusForDeviceID:(id)arg1 hash:(id)arg2 modern:(_Bool)arg3;	// IMP=0x00100000000bb19f
- (_Bool)deviceIsLocalDevice:(id)arg1;	// IMP=0x00100000000bb128
- (long long)keyClassForDeviceID:(id)arg1;	// IMP=0x00100000000bb046
- (long long)ltkKeyClass;	// IMP=0x00100000000bb03b
- (void)updateLocalLTKForSignout;	// IMP=0x00100000000baeeb
- (id)ltkHashForLocalLTK;	// IMP=0x00100000000bae6b
- (void)checkLocalAttestedLTK;	// IMP=0x00100000000bae65
- (void)checkLocalLTK;	// IMP=0x00100000000ba6b3
- (void)generateLocalLTKWithAttestation:(_Bool)arg1 forceDCRTRetrievalWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ba0b2
- (void)generateLocalLTKWithAttestation:(_Bool)arg1;	// IMP=0x00100000000ba09e
- (_Bool)loadLocalAttestedLTKIfNecessary;	// IMP=0x00100000000ba096
- (_Bool)loadLocalLTK;	// IMP=0x00100000000b9afd
- (id)deviceIDsMissingSessionKey;	// IMP=0x00100000000b99d4
- (void)clearAllDeviceIDsMissingSessionKeys;	// IMP=0x00100000000b98ae
- (void)removeDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x00100000000b9768
- (void)addDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x00100000000b95e4
- (id)decryptMessage:(id)arg1 authTag:(id)arg2 nonce:(id)arg3 bluetoothID:(id)arg4 cachedDevices:(_Bool)arg5 errorCode:(long long *)arg6;	// IMP=0x00100000000b8b30
- (MISSING_TYPE *)encryptMessageData:deviceID:encryptedMessage:authTag:nonce: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000b881e
- (_Bool)canCreateTokenSessionForDeviceID:(id)arg1;	// IMP=0x00100000000b87d4
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 externalACMContext:(id)arg3;	// IMP=0x00100000000b8553
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000b853e
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 usingEscrow:(_Bool)arg3 attestation:(_Bool)arg4;	// IMP=0x00100000000b8180
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000b8168
- (id)aksRegistrationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000b7fcc
- (id)aksPairingSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 errorCode:(long long *)arg3 wantsAttestation:(_Bool)arg4;	// IMP=0x00100000000b7d45
- (void)consoleUserChanged:(id)arg1;	// IMP=0x00100000000b7c26
- (void)handleKeyBagLockStateChanged;	// IMP=0x00100000000b7c20
- (void)screenLockUnlocked:(id)arg1;	// IMP=0x00100000000b7b64
- (void)appleAccountSignedOut:(id)arg1;	// IMP=0x00100000000b7aaf
- (void)appleAccountSignedIn:(id)arg1;	// IMP=0x00100000000b7a53
- (void)deviceFirstUnlocked:(id)arg1;	// IMP=0x00100000000b7a41
- (void)handleManagementChanged:(id)arg1;	// IMP=0x00100000000b7a07
- (void)addObservers;	// IMP=0x00100000000b78d4
- (void)loadLocalUniqueIDIfNeeded;	// IMP=0x00100000000b77cd
@property(readonly, nonatomic) _Bool viewSyncing;
- (void)updateLocalLTK;	// IMP=0x00100000000b6e9a
- (void)updateLTKs;	// IMP=0x00100000000b6de5
- (void)start;	// IMP=0x00100000000b6c18
- (id)init;	// IMP=0x00100000000b6a46

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

