//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AXAccessQueue, AXAccessQueueTimer, AXDialectMap, AXIndexMap, AXMOutputManager, NSArray, NSDate, NSHashTable, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, SCRCThreadKey, VOTOutputRequest, VOTOutputRequestRunner;
@protocol OS_dispatch_queue;

@interface VOTOutputManager : NSObject
{
    NSMutableArray *_queuedOutputRequests;	// 8 = 0x8
    NSMutableArray *_requestRunners;	// 16 = 0x10
    AXIndexMap *_components;	// 24 = 0x18
    VOTOutputRequest *_currentlyRunningUninterruptableRequest;	// 32 = 0x20
    NSMutableArray *_currentlyRunningRequests;	// 40 = 0x28
    unsigned int _numberOfRequestSinceLastUninterruptable;	// 48 = 0x30
    double _cachedRate;	// 56 = 0x38
    _Bool _shutdown;	// 64 = 0x40
    VOTOutputRequestRunner *_onHoldRunner;	// 72 = 0x48
    AXDialectMap *_supportedLanguageMap;	// 80 = 0x50
    struct VOTExternalRoutingInfo _currentExternalRoutingInfo;	// 88 = 0x58
    _Bool _externalRoutesAvailable;	// 104 = 0x68
    _Bool _externalRoutesContainHDMIRoute;	// 105 = 0x69
    _Bool _externalAudioRouteIsHearingAid;	// 106 = 0x6a
    _Bool _selectedRouteIsHDMI;	// 107 = 0x6b
    AXAccessQueueTimer *_inactivateAudioTimer;	// 112 = 0x70
    AXAccessQueue *_audioSessionQueue;	// 120 = 0x78
    NSMutableSet *_audioSessionUsers;	// 128 = 0x80
    SCRCThreadKey *_threadKey;	// 136 = 0x88
    NSHashTable *_outputManagerObservers;	// 144 = 0x90
    NSLock *_outputManagerObserversLock;	// 152 = 0x98
    AXMOutputManager *_axmOutputManager;	// 160 = 0xa0
    NSMutableDictionary *_vosEventHandlers;	// 168 = 0xa8
    NSMutableDictionary *_vosEventStartedHandlers;	// 176 = 0xb0
    struct os_unfair_lock_s _queueLock;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_avAccessQueue;	// 192 = 0xc0
    _Bool _audioSessionActive;	// 200 = 0xc8
    CDUnknownBlockType _airTunesRouteIsAirPlayingTestingBlock;	// 208 = 0xd0
    NSDate *_dateToResumeRequests;	// 216 = 0xd8
    NSDate *_dateToResumeSounds;	// 224 = 0xe0
    NSString *_currentRouteName;	// 232 = 0xe8
}

+ (void)logSoundPlayed:(id)arg1;	// IMP=0x0020000000010ce3
+ (void)clearPreviousSoundsPlayed;	// IMP=0x001000000001092b
+ (id)previousSoundsPlayed;	// IMP=0x00100000000108db
+ (id)outputManager;	// IMP=0x001000000000c4a1
+ (id)outputManagerIfExists;	// IMP=0x001000000000c490
+ (void)initialize;	// IMP=0x001000000000bd26
- (void).cxx_destruct;	// IMP=0x0020000000011962
@property(readonly, nonatomic) _Bool audioSessionActive; // @synthesize audioSessionActive=_audioSessionActive;
@property(retain) NSString *currentRouteName; // @synthesize currentRouteName=_currentRouteName;
@property(retain, nonatomic) NSDate *dateToResumeSounds; // @synthesize dateToResumeSounds=_dateToResumeSounds;
@property(retain, nonatomic) NSDate *dateToResumeRequests; // @synthesize dateToResumeRequests=_dateToResumeRequests;
@property(copy, nonatomic) CDUnknownBlockType airTunesRouteIsAirPlayingTestingBlock; // @synthesize airTunesRouteIsAirPlayingTestingBlock=_airTunesRouteIsAirPlayingTestingBlock;
@property(readonly, nonatomic) AXAccessQueue *audioSessionQueue; // @synthesize audioSessionQueue=_audioSessionQueue;
- (void)_notifyObserversOutputManagerWillProcessNextRequest:(id)arg1;	// IMP=0x0010000000011725
- (void)_notifyObserversOutputManagerDidFinishProcessingQueuedRequests;	// IMP=0x00100000000115a9
- (void)removeAllOutputManagerObservers;	// IMP=0x001000000001155f
- (void)removeOutputManagerObserver:(id)arg1;	// IMP=0x00100000000114e0
- (void)addOutputManagerObserver:(id)arg1;	// IMP=0x0010000000011461
- (void)dispatcher:(id)arg1 handleEvent:(id)arg2 soundPack:(id)arg3 hapticPack:(id)arg4;	// IMP=0x001000000001102e
- (void)removeVOSEventStartedHandler:(id)arg1;	// IMP=0x0010000000011015
- (void)removeVOSEventFinishedHandler:(id)arg1;	// IMP=0x0010000000010ffc
- (void)addVOSEventStartedHandler:(CDUnknownBlockType)arg1 forIdentifier:(id)arg2;	// IMP=0x0010000000010f4e
- (void)addVOSEventFinishedHandler:(CDUnknownBlockType)arg1 forIdentifier:(id)arg2;	// IMP=0x0010000000010ea0
- (void)sendEvent:(id)arg1;	// IMP=0x0010000000010dec
- (_Bool)replacesCharacterAsPunctuation:(unsigned short)arg1;	// IMP=0x0010000000010d99
- (void)playSoundFast:(id)arg1;	// IMP=0x0010000000010d85
- (void)playSoundFast:(id)arg1 startedBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000010988
- (void)playSoundFast:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000010971
- (void)speakSimpleString:(id)arg1 braille:(_Bool)arg2 language:(id)arg3;	// IMP=0x0010000000010812
- (void)speakSimpleString:(id)arg1;	// IMP=0x00100000000107f8
- (void)disableAudioSession:(id)arg1 userDelay:(double)arg2;	// IMP=0x00100000000100b3
- (void)disableAudioSession:(id)arg1;	// IMP=0x0010000000010099
- (void)removeAllAudioSessionEnablers;	// IMP=0x001000000000fe69
- (void)enableAudioSession:(id)arg1;	// IMP=0x001000000000fc53
- (void)toggleAudioSessionActive:(_Bool)arg1;	// IMP=0x001000000000faca
- (void)silenceOutputForTimeInterval:(double)arg1;	// IMP=0x001000000000f9eb
- (void)_silenceRequestsForTimeInterval:(id)arg1;	// IMP=0x001000000000f93d
- (void)_resumeCurrentRequest;	// IMP=0x001000000000f8ea
- (void)resumeCurrentRequest;	// IMP=0x001000000000f86b
- (void)_holdCurrentRequest;	// IMP=0x001000000000f7b9
- (void)holdCurrentRequest;	// IMP=0x001000000000f778
- (_Bool)isSpeaking;	// IMP=0x001000000000f734
- (_Bool)isPaused;	// IMP=0x001000000000f6f0
- (void)stopSpeakingAtBoundary:(int)arg1 allRequests:(_Bool)arg2 sessionDeactivationDelay:(id)arg3;	// IMP=0x001000000000f673
- (void)stopSpeakingAtBoundary:(int)arg1;	// IMP=0x001000000000f65c
- (void)continueSpeaking;	// IMP=0x001000000000f61f
- (void)pauseSpeakingAtBoundary:(int)arg1;	// IMP=0x001000000000f5d3
- (void)setRate:(float)arg1;	// IMP=0x001000000000f584
- (float)speechRate;	// IMP=0x001000000000f579
- (void)resetSpeechRate;	// IMP=0x001000000000f53d
- (float)defaultSpeechRate;	// IMP=0x001000000000f475
- (float)speechRateForLanguage:(id)arg1;	// IMP=0x001000000000f1fa
- (void)setSpeechRate:(float)arg1 forLanguage:(id)arg2;	// IMP=0x001000000000f0ed
- (void)setVolume:(float)arg1;	// IMP=0x001000000000f0c4
- (void)_setVolume:(float)arg1;	// IMP=0x001000000000ee26
- (void)updateAudioSessionProperties;	// IMP=0x001000000000ede7
- (void)updateWithCurrentRoute;	// IMP=0x001000000000ed67
- (void)selectAudioRoute:(_Bool)arg1;	// IMP=0x001000000000e75e
- (void)selectLocalAudioRoute;	// IMP=0x001000000000e747
- (void)selectExternalAudioRoute;	// IMP=0x001000000000e733
- (_Bool)externalAudioRouteSelected;	// IMP=0x001000000000e2dc
- (_Bool)isRouteAirplayMirroring;	// IMP=0x001000000000e2b8
- (_Bool)selectedRouteIsHDMI;	// IMP=0x001000000000e2af
- (_Bool)externalAudioRouteIsHearingAid;	// IMP=0x001000000000e2a6
- (_Bool)externalAudioRoutesContainHDMIRoute;	// IMP=0x001000000000e29d
- (_Bool)externalAudioRoutesAvailable;	// IMP=0x001000000000e294
- (void)_updateExternalRoutesAvailable;	// IMP=0x001000000000df41
- (void)_updateActiveRoutes;	// IMP=0x001000000000db58
- (void)_activeRouteChanged:(id)arg1;	// IMP=0x001000000000daf4
- (void)callStatusChanged;	// IMP=0x001000000000da59
- (_Bool)isWirelessRoutePicked:(id)arg1;	// IMP=0x001000000000da00
- (_Bool)isRouteWireless:(id)arg1;	// IMP=0x001000000000d9a5
- (_Bool)isRoutePicked:(id)arg1;	// IMP=0x001000000000d8ef
- (_Bool)_isHeadsetRoute:(id)arg1;	// IMP=0x001000000000d897
- (_Bool)_isHeadphoneRoute:(id)arg1;	// IMP=0x001000000000d83f
- (_Bool)isCurrentRouteConsideredExternal:(id)arg1;	// IMP=0x001000000000d837
- (_Bool)_isRouteExternalHDMIRoute:(id)arg1;	// IMP=0x001000000000d7df
- (_Bool)airTunesRouteIsAirPlaying;	// IMP=0x001000000000d708
- (id)speechComponent;	// IMP=0x001000000000d6f4
- (double)volume;	// IMP=0x001000000000d6a0
- (_Bool)isSystemMuted;	// IMP=0x001000000000d621
- (void)toggleSystemMute;	// IMP=0x001000000000d58a
- (void)synchVolumeWithSystem;	// IMP=0x001000000000d578
- (void)_systemVolumeDidChange:(id)arg1;	// IMP=0x001000000000d572
- (float)systemVolume;	// IMP=0x001000000000d500
- (void)setSystemVolume:(float)arg1;	// IMP=0x001000000000d478
- (id)componentForType:(int)arg1;	// IMP=0x001000000000d460
- (void)finishedOutputRequest:(id)arg1;	// IMP=0x001000000000d382
- (void)_dispatchNextQueuedRequest;	// IMP=0x001000000000d052
- (void)_handleProcessRequest:(id)arg1;	// IMP=0x001000000000cabe
- (void)shutdown;	// IMP=0x001000000000ca59
- (void)_handleRequestFinished:(id)arg1;	// IMP=0x001000000000c7cf
- (void)clearQueue;	// IMP=0x001000000000c74f
- (id)currentLanguageMap;	// IMP=0x001000000000c741
- (void)updateSupportedLanguageMap;	// IMP=0x001000000000c682
- (void)handleEvent:(id)arg1;	// IMP=0x001000000000c548
@property(readonly, nonatomic) NSArray *queuedRequests;
- (void)_voiceOverVolumeChanged:(id)arg1;	// IMP=0x001000000000c506
- (void)dealloc;	// IMP=0x001000000000c3e1
- (id)init;	// IMP=0x001000000000bd98

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

