//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreBluetooth/CBActivatable-Protocol.h>
#import <CoreBluetooth/CBErrorReporting-Protocol.h>
#import <CoreBluetooth/CBInterruptable-Protocol.h>
#import <CoreBluetooth/CBLabelable-Protocol.h>
#import <CoreBluetooth/CBStateReporting-Protocol.h>
#import <CoreBluetooth/CBXPCReceivable-Protocol.h>
#import <CoreBluetooth/CUXPCCodable-Protocol.h>

@class NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface CBController : NSObject <CBXPCReceivable, CUXPCCodable, CBActivatable, CBErrorReporting, CBInterruptable, CBLabelable, CBStateReporting>
{
    _Bool _activateAssertionCalled;	// 8 = 0x8
    _Bool _activateCalled;	// 9 = 0x9
    CDUnknownBlockType _activateCompletion;	// 16 = 0x10
    _Bool _changesPending;	// 24 = 0x18
    _Bool _direct;	// 25 = 0x19
    _Bool _invalidateCalled;	// 26 = 0x1a
    _Bool _invalidateDone;	// 27 = 0x1b
    struct LogCategory *_ucat;	// 32 = 0x20
    NSObject<OS_xpc_object> *_xpcCnx;	// 40 = 0x28
    int _discoverableState;	// 48 = 0x30
    int _inquiryState;	// 52 = 0x34
    unsigned int _assertionFlags;	// 56 = 0x38
    unsigned int _clientID;	// 60 = 0x3c
    unsigned int _internalFlags;	// 64 = 0x40
    long long _bluetoothState;	// 72 = 0x48
    CDUnknownBlockType _bluetoothStateChangedHandler;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 88 = 0x58
    CDUnknownBlockType _errorHandler;	// 96 = 0x60
    CDUnknownBlockType _interruptionHandler;	// 104 = 0x68
    CDUnknownBlockType _invalidationHandler;	// 112 = 0x70
    NSString *_label;	// 120 = 0x78
    CDUnknownBlockType _discoverableStateChangedHandler;	// 128 = 0x80
    CDUnknownBlockType _inquiryStateChangedHandler;	// 136 = 0x88
    CDUnknownBlockType _relayMessageHandler;	// 144 = 0x90
    NSObject<OS_xpc_object> *_testListenerEndpoint;	// 152 = 0x98
}

+ (_Bool)writePrefKey:(id)arg1 value:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000253c0
+ (id)readPrefKeys:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000025100
+ (void)setOfflineAdvertisingParams:(id)arg1;	// IMP=0x0000000000024c10
+ (id)performDeviceRequest:(id)arg1 device:(id)arg2 xpcEndpoint:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000022e60
+ (id)performDeviceRequest:(id)arg1 device:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000022e40
+ (id)controllerInfoWithEndpoint:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000022170
+ (id)controllerInfoAndReturnError:(id *)arg1;	// IMP=0x0000000000022150
+ (_Bool)systemHasOnlyBluetoothPointingDevices;	// IMP=0x000000000001fb30
+ (_Bool)safeToPowerOffBluetooth;	// IMP=0x000000000001fb20
+ (unsigned int)featureFlags;	// IMP=0x000000000001fad0
+ (_Bool)setBluetoothModificationAllowed:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000000001fa90
+ (_Bool)bluetoothModificationAllowed;	// IMP=0x000000000001fa80
- (void).cxx_destruct;	// IMP=0x0000000000025f30
@property(retain, nonatomic) NSObject<OS_xpc_object> *testListenerEndpoint; // @synthesize testListenerEndpoint=_testListenerEndpoint;
@property(nonatomic) unsigned int internalFlags; // @synthesize internalFlags=_internalFlags;
@property(nonatomic) unsigned int clientID; // @synthesize clientID=_clientID;
@property(nonatomic) unsigned int assertionFlags; // @synthesize assertionFlags=_assertionFlags;
@property(copy, nonatomic) CDUnknownBlockType relayMessageHandler; // @synthesize relayMessageHandler=_relayMessageHandler;
@property(copy, nonatomic) CDUnknownBlockType inquiryStateChangedHandler; // @synthesize inquiryStateChangedHandler=_inquiryStateChangedHandler;
@property(readonly, nonatomic) int inquiryState; // @synthesize inquiryState=_inquiryState;
@property(copy, nonatomic) CDUnknownBlockType discoverableStateChangedHandler; // @synthesize discoverableStateChangedHandler=_discoverableStateChangedHandler;
@property(readonly, nonatomic) int discoverableState; // @synthesize discoverableState=_discoverableState;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(copy, nonatomic) CDUnknownBlockType bluetoothStateChangedHandler; // @synthesize bluetoothStateChangedHandler=_bluetoothStateChangedHandler;
@property(readonly, nonatomic) long long bluetoothState; // @synthesize bluetoothState=_bluetoothState;
- (void)updateIdentities:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000259c0
- (void)sendRelayMessageType:(unsigned char)arg1 messageData:(id)arg2 conduitDevice:(id)arg3 destinationDevice:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000025630
- (void)setPowerState:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000024f30
- (void)getPowerStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000024cd0
- (_Bool)setLowPowerModeWithReason:(int)arg1 error:(id *)arg2;	// IMP=0x0000000000024af0
- (void)setLowPowerModeWithReason:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000024930
- (void)diagnosticShow:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000024620
- (void)diagnosticLog:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000024310
- (void)diagnosticControl:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000024000
- (void)modifyDevice:(id)arg1 settings:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000023dd0
- (void)modifyDevice:(id)arg1 peerSourceDevice:(id)arg2 peerSourceState:(BOOL)arg3 requestFlags:(unsigned int)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000023b60
- (void)modifyDevice:(id)arg1 peerSourceDevice:(id)arg2 peerSourceState:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000023b30
- (void)modifyDevice:(id)arg1 connectionPriorityDevices:(id)arg2 timeoutSeconds:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000238d0
- (void)modifyDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000236d0
- (void)deleteDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000234d0
- (void)performDeviceRequest:(id)arg1 device:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000023110
- (void)getDevicesWithFlags:(unsigned int)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000022b90
- (void)modifyControllerSettings:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000022990
- (void)getControllerSettingsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000022710
- (void)getControllerInfoWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000022440
- (void)_activateAssertionWithFlagsXPC:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021fb0
- (void)_activateAssertionWithFlagsDirect:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021dc0
- (void)activateAssertionWithFlags:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021cd0
- (void)_xpcReceivedRelayMessage:(id)arg1;	// IMP=0x0000000000021710
- (void)_xpcReceivedPowerStateChanged:(id)arg1;	// IMP=0x0000000000021630
- (void)_xpcReceivedInquiryStateChanged:(id)arg1;	// IMP=0x0000000000021550
- (void)_xpcReceivedDiscoverableStateChanged:(id)arg1;	// IMP=0x0000000000021470
- (void)_xpcReceivedMessage:(id)arg1;	// IMP=0x0000000000021310
- (void)xpcReceivedMessage:(id)arg1;	// IMP=0x0000000000021080
- (void)_update;	// IMP=0x0000000000020fb0
- (void)_updateIfNeededWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020ed0
- (void)_invalidated;	// IMP=0x0000000000020d80
- (void)_invalidateDirect;	// IMP=0x0000000000020cb0
- (void)invalidate;	// IMP=0x0000000000020b50
- (void)_interrupted;	// IMP=0x0000000000020a90
- (id)_ensureXPCStarted;	// IMP=0x0000000000020920
- (void)_activateXPCCompleted:(id)arg1;	// IMP=0x0000000000020620
- (void)_activateXPCStart:(_Bool)arg1;	// IMP=0x00000000000204b0
- (void)_activateDirectStart;	// IMP=0x0000000000020200
- (void)_activate;	// IMP=0x0000000000020050
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000001ff60
- (id)descriptionWithLevel:(int)arg1;	// IMP=0x000000000001fe30
- (id)description;	// IMP=0x000000000001fe10
- (void)encodeWithXPCObject:(id)arg1;	// IMP=0x000000000001fda0
- (id)initWithXPCObject:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001fc20
- (void)dealloc;	// IMP=0x000000000001fbd0
- (id)init;	// IMP=0x000000000001fb40

@end

