//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreBluetooth/CBActivatable-Protocol.h>
#import <CoreBluetooth/CBDeviceReporting-Protocol.h>
#import <CoreBluetooth/CBErrorReporting-Protocol.h>
#import <CoreBluetooth/CBInterruptable-Protocol.h>
#import <CoreBluetooth/CBLabelable-Protocol.h>
#import <CoreBluetooth/CBStateReporting-Protocol.h>
#import <CoreBluetooth/CBSystemOverridable-Protocol.h>
#import <CoreBluetooth/CBUseCaseable-Protocol.h>
#import <CoreBluetooth/CBXPCReceivable-Protocol.h>
#import <CoreBluetooth/CUXPCCodable-Protocol.h>

@class NSArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface CBDiscovery : NSObject <CBXPCReceivable, CUXPCCodable, CBActivatable, CBDeviceReporting, CBErrorReporting, CBInterruptable, CBLabelable, CBStateReporting, CBSystemOverridable, CBUseCaseable>
{
    _Bool _activateCalled;	// 8 = 0x8
    CDUnknownBlockType _activateCompletion;	// 16 = 0x10
    _Bool _changesPending;	// 24 = 0x18
    NSMutableDictionary *_deviceMap;	// 32 = 0x20
    _Bool _direct;	// 40 = 0x28
    _Bool _invalidateCalled;	// 41 = 0x29
    _Bool _invalidateDone;	// 42 = 0x2a
    struct LogCategory *_ucat;	// 48 = 0x30
    NSObject<OS_xpc_object> *_xpcCnx;	// 56 = 0x38
    BOOL _bleRSSIThresholdHint;	// 64 = 0x40
    _Bool _disabledActive;	// 65 = 0x41
    _Bool _disabledPending;	// 66 = 0x42
    _Bool _keepAlive;	// 67 = 0x43
    unsigned int _systemOverrideFlags;	// 68 = 0x44
    int _useCase;	// 72 = 0x48
    int _bleScanRate;	// 76 = 0x4c
    int _bleScanRateOverride;	// 80 = 0x50
    int _bleScanRateScreenOff;	// 84 = 0x54
    unsigned int _clientID;	// 88 = 0x58
    unsigned int _internalFlags;	// 92 = 0x5c
    unsigned int _memoryPressureFlags;	// 96 = 0x60
    long long _bluetoothState;	// 104 = 0x68
    CDUnknownBlockType _bluetoothStateChangedHandler;	// 112 = 0x70
    CDUnknownBlockType _deviceFoundHandler;	// 120 = 0x78
    CDUnknownBlockType _deviceLostHandler;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 136 = 0x88
    CDUnknownBlockType _errorHandler;	// 144 = 0x90
    CDUnknownBlockType _interruptionHandler;	// 152 = 0x98
    CDUnknownBlockType _invalidationHandler;	// 160 = 0xa0
    NSString *_label;	// 168 = 0xa8
    CDUnknownBlockType _systemOverrideHandler;	// 176 = 0xb0
    NSArray *_useCaseClientIDs;	// 184 = 0xb8
    unsigned long long _changeFlags;	// 192 = 0xc0
    NSArray *_deviceFilter;	// 200 = 0xc8
    unsigned long long _discoveryFlags;	// 208 = 0xd0
    CDUnknownBlockType _finishHandler;	// 216 = 0xd8
    NSString *_appID;	// 224 = 0xe0
    unsigned long long _extraDiscoveryFlags;	// 232 = 0xe8
    NSObject<OS_xpc_object> *_testListenerEndpoint;	// 240 = 0xf0
}

+ (id)devicesWithDiscoveryFlags:(unsigned long long)arg1 endpoint:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000048fb0
+ (id)devicesWithDiscoveryFlags:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000000048f90
- (void).cxx_destruct;	// IMP=0x00000000000497e0
@property(retain, nonatomic) NSObject<OS_xpc_object> *testListenerEndpoint; // @synthesize testListenerEndpoint=_testListenerEndpoint;
@property(nonatomic) unsigned int memoryPressureFlags; // @synthesize memoryPressureFlags=_memoryPressureFlags;
@property(nonatomic) _Bool keepAlive; // @synthesize keepAlive=_keepAlive;
@property(nonatomic) unsigned int internalFlags; // @synthesize internalFlags=_internalFlags;
@property(nonatomic) unsigned long long extraDiscoveryFlags; // @synthesize extraDiscoveryFlags=_extraDiscoveryFlags;
@property(nonatomic) _Bool disabledPending; // @synthesize disabledPending=_disabledPending;
@property(nonatomic) _Bool disabledActive; // @synthesize disabledActive=_disabledActive;
@property(nonatomic) unsigned int clientID; // @synthesize clientID=_clientID;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(copy, nonatomic) CDUnknownBlockType finishHandler; // @synthesize finishHandler=_finishHandler;
@property(nonatomic) unsigned long long discoveryFlags; // @synthesize discoveryFlags=_discoveryFlags;
@property(copy, nonatomic) NSArray *deviceFilter; // @synthesize deviceFilter=_deviceFilter;
@property(nonatomic) unsigned long long changeFlags; // @synthesize changeFlags=_changeFlags;
@property(nonatomic) int bleScanRateScreenOff; // @synthesize bleScanRateScreenOff=_bleScanRateScreenOff;
@property(nonatomic) int bleScanRateOverride; // @synthesize bleScanRateOverride=_bleScanRateOverride;
@property(nonatomic) int bleScanRate; // @synthesize bleScanRate=_bleScanRate;
@property(nonatomic) BOOL bleRSSIThresholdHint; // @synthesize bleRSSIThresholdHint=_bleRSSIThresholdHint;
@property(copy, nonatomic) NSArray *useCaseClientIDs; // @synthesize useCaseClientIDs=_useCaseClientIDs;
@property(nonatomic) int useCase; // @synthesize useCase=_useCase;
@property(copy, nonatomic) CDUnknownBlockType systemOverrideHandler; // @synthesize systemOverrideHandler=_systemOverrideHandler;
@property(nonatomic) unsigned int systemOverrideFlags; // @synthesize systemOverrideFlags=_systemOverrideFlags;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(copy, nonatomic) CDUnknownBlockType deviceLostHandler; // @synthesize deviceLostHandler=_deviceLostHandler;
@property(copy, nonatomic) CDUnknownBlockType deviceFoundHandler; // @synthesize deviceFoundHandler=_deviceFoundHandler;
@property(copy, nonatomic) CDUnknownBlockType bluetoothStateChangedHandler; // @synthesize bluetoothStateChangedHandler=_bluetoothStateChangedHandler;
@property(readonly, nonatomic) long long bluetoothState; // @synthesize bluetoothState=_bluetoothState;
- (void)_xpcReceivedSystemOverrideChanged:(id)arg1;	// IMP=0x0000000000048ed0
- (void)_xpcReceivedPowerStateChanged:(id)arg1;	// IMP=0x0000000000048e20
- (void)_xpcReceivedDeviceLost:(id)arg1;	// IMP=0x0000000000048b80
- (void)_xpcReceivedDeviceFound:(id)arg1;	// IMP=0x0000000000048930
- (void)_xpcReceivedMessage:(id)arg1;	// IMP=0x00000000000487d0
- (void)xpcReceivedMessage:(id)arg1;	// IMP=0x0000000000048540
- (void)_update;	// IMP=0x00000000000483e0
- (void)_updateIfNeededWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000482f0
- (void)_lostAllDevices;	// IMP=0x0000000000048090
- (void)_invalidated;	// IMP=0x0000000000047f20
- (void)_invalidateDirect;	// IMP=0x0000000000047e50
- (void)_invalidate;	// IMP=0x0000000000047d50
- (void)invalidate;	// IMP=0x0000000000047ce0
- (void)_interrupted;	// IMP=0x0000000000047c30
- (void)finish;	// IMP=0x00000000000478e0
- (id)_ensureXPCStarted;	// IMP=0x0000000000047770
@property(readonly, copy) NSArray *discoveredDevices;
- (void)_activateXPCCompleted:(id)arg1;	// IMP=0x0000000000046eb0
- (void)_activateXPCStart:(_Bool)arg1;	// IMP=0x0000000000046d40
- (void)_activateDirectStart;	// IMP=0x0000000000046a90
- (void)_activate;	// IMP=0x00000000000468d0
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000467e0
- (unsigned long long)updateWithXPCSubscriberInfo:(id)arg1;	// IMP=0x0000000000045fe0
- (_Bool)updateWithCBDiscovery:(id)arg1;	// IMP=0x0000000000045390
- (id)descriptionWithLevel:(int)arg1;	// IMP=0x0000000000044860
- (id)description;	// IMP=0x0000000000044840
- (void)encodeWithXPCObject:(id)arg1;	// IMP=0x0000000000044740
- (id)initWithXPCObject:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000044470
- (void)dealloc;	// IMP=0x0000000000044420
- (id)init;	// IMP=0x0000000000044390

@end

