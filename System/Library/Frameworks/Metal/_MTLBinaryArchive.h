//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Metal/MTLBinaryArchiveSPI-Protocol.h>

@class MTLLoadedFile, NSArray, NSData, NSMutableDictionary, NSObject, NSString;
@protocol MTLDevice, OS_dispatch_queue;

@interface _MTLBinaryArchive <MTLBinaryArchiveSPI>
{
    id <MTLDevice> _device;	// 24 = 0x18
    unsigned long long _options;	// 32 = 0x20
    MTLLoadedFile *_fileMapping;	// 40 = 0x28
    NSData *_fileData;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_queue;	// 56 = 0x38
    _Bool _fileHasAIRNTFormat;	// 64 = 0x40
    struct unordered_map<MTLFunctionId, std::pair<unsigned long long, unsigned long long>, CompareFunctionIdHash, CompareFunctionIdHash, std::allocator<std::pair<const MTLFunctionId, std::pair<unsigned long long, unsigned long long>>>> _executableFileIndex;	// 72 = 0x48
    struct map<MTLUINT256_t, std::pair<unsigned int, unsigned long long>, CompareHash, std::allocator<std::pair<const MTLUINT256_t, std::pair<unsigned int, unsigned long long>>>> _pipelineFileIndex;	// 112 = 0x70
    NSMutableDictionary *_entries;	// 136 = 0x88
    struct unique_ptr<MTLPipelineCollection, std::default_delete<MTLPipelineCollection>> _pipelineCollection;	// 144 = 0x90
    _Bool _collectArchives;	// 152 = 0x98
    struct unordered_map<MTLUINT256_t, NSObject<OS_dispatch_data>*, UnorderedContainerHash, UnorderedContainerHash, std::allocator<std::pair<const MTLUINT256_t, NSObject<OS_dispatch_data>*>>> _specializedFunctions;	// 160 = 0xa0
    struct map<MTLUINT256_t, std::pair<unsigned int, unsigned long long>, CompareHash, std::allocator<std::pair<const MTLUINT256_t, std::pair<unsigned int, unsigned long long>>>> _specializedFunctionArchiveFileIndex;	// 200 = 0xc8
    unsigned long long _specializedFunctionArchiveOffset;	// 224 = 0xe0
    unsigned long long _specializedFunctionArchiveBytes;	// 232 = 0xe8
    struct map<MTLUINT256_t, std::pair<unsigned int, unsigned long long>, CompareHash, std::allocator<std::pair<const MTLUINT256_t, std::pair<unsigned int, unsigned long long>>>> _recompilationArchiveFileIndex;	// 240 = 0xf0
    unsigned long long _recompilationArchiveOffset;	// 264 = 0x108
    unsigned long long _recompilationArchiveBytes;	// 272 = 0x110
    struct unordered_map<MTLUINT256_t, MTLProgramObject *, UnorderedContainerHash, UnorderedContainerHash, std::allocator<std::pair<const MTLUINT256_t, MTLProgramObject *>>> _variantMap;	// 280 = 0x118
}

+ (id)descriptorDataForArchive:(id)arg1;	// IMP=0x000000000001c7bf
+ (struct MTLLoaderSliceIdentifier)sliceIDForSpecializedFunctions;	// IMP=0x000000000001d0c2
+ (_Bool)deserializeBinaryArchiveDescriptorMachO:(CDStruct_0d7d3062 *)arg1 fileData:(id)arg2;	// IMP=0x000000000001ce00
+ (_Bool)deserializeBinaryArchiveHeader:(CDStruct_0d7d3062 *)arg1 fileData:(id)arg2 device:(id)arg3;	// IMP=0x000000000001cbdc
- (id).cxx_construct;	// IMP=0x000000000001c9bf
- (void).cxx_destruct;	// IMP=0x000000000001c933
@property(readonly) unsigned long long options; // @synthesize options=_options;
@property(readonly) id <MTLDevice> device; // @synthesize device=_device;
@property(readonly) NSArray *keys;
- (id)getBinaryDataForKey:(id)arg1;	// IMP=0x000000000001c34d
- (id)materializeAIRNTBlockForKey:(id)arg1;	// IMP=0x000000000001c259
- (id)materializeEntryForKey:(const CDStruct_41a22ec7 *)arg1 fileIndex:(void *)arg2 containsEntry:(CDUnknownBlockType)arg3 addEntry:(CDUnknownBlockType)arg4;	// IMP=0x000000000001c16a
- (id)getArchiveDataForKey:(const CDStruct_41a22ec7 *)arg1;	// IMP=0x000000000001bee9
- (void)addArchiveEntry:(id)arg1 forKey:(const CDStruct_41a22ec7 *)arg2;	// IMP=0x000000000001bdaa
- (void)addBinaryEntry:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000001bd14
- (_Bool)enumerateArchivesFromPipelineCollection:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bc96
- (_Bool)enumerateArchivesFromBackingFile:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bc36
- (_Bool)enumerateSpecializedFunctionArchivesFromBackingFile:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bbd0
- (_Bool)enumerateArchivesFromBackingFileFromSlice:(const struct MTLLoaderSliceIdentifier *)arg1 version:(unsigned long long)arg2 verifyKey:(const CDStruct_41a22ec7 *)arg3 offset:(unsigned long long)arg4 bytes:(unsigned long long)arg5 enumerator:(CDUnknownBlockType)arg6;	// IMP=0x000000000001b8c8
- (_Bool)loadFileIndex:(void *)arg1 expectedSliceId:(const struct MTLLoaderSliceIdentifier *)arg2 expectedVersion:(unsigned long long)arg3 sliceOffset:(unsigned long long)arg4;	// IMP=0x000000000001b738
- (_Bool)loadAirntBlocksForSlice:(const struct MTLLoaderSliceIdentifier *)arg1 sliceOffset:(unsigned long long)arg2;	// IMP=0x000000000001b561
- (void *)pipelineCollection;	// IMP=0x000000000001b550
- (_Bool)serializeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000019f92
- (_Bool)getSpecializedFunctionArchivesToSerialize:(void *)arg1;	// IMP=0x0000000000019e10
- (_Bool)serializeToURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000019df6
- (_Bool)removeComputePipelineFunctionsWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000019dee
- (_Bool)addLibraryWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000019da3
- (_Bool)addFunctionWithDescriptor:(id)arg1 library:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000019c1d
- (_Bool)addTileRenderPipelineFunctionsWithDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000019b93
- (_Bool)addTileRenderPipelineFunctionsWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000019b4b
- (_Bool)addRenderPipelineFunctionsWithDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000019ac1
- (_Bool)addRenderPipelineFunctionsWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000019a79
- (_Bool)addComputePipelineFunctionsWithDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000199ef
- (_Bool)addComputePipelineFunctionsWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000199a7
- (_Bool)storeTileRenderPipelineDescriptor:(id)arg1;	// IMP=0x00000000000197b2
- (_Bool)storeRenderPipelineDescriptor:(id)arg1;	// IMP=0x0000000000019450
- (_Bool)storeComputePipelineDescriptor:(id)arg1;	// IMP=0x000000000001925b
@property(readonly, copy) NSString *description;
- (id)formattedDescription:(unsigned long long)arg1;	// IMP=0x0000000000018fe7
- (id)materializeFromHash:(CDStruct_41a22ec7 *)arg1 fileIndex:(void *)arg2;	// IMP=0x0000000000018f69
- (void)materializeAll;	// IMP=0x0000000000018db9
- (id)materializeFromFileOffset:(unsigned long long)arg1 hash:(CDStruct_41a22ec7 *)arg2;	// IMP=0x00000000000189b0
- (void)dealloc;	// IMP=0x00000000000188ce
- (id)initWithOptions:(unsigned long long)arg1 device:(id)arg2 url:(id)arg3 error:(id *)arg4;	// IMP=0x00000000000184c2
- (id)initWithDevice:(id)arg1 descriptor:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000183b2
- (_Bool)storingReflectionIsSupported;	// IMP=0x000000000001d105
- (void *)programObjectForFunction:(const CDStruct_41a22ec7 *)arg1;	// IMP=0x000000000001cab0
- (void *)findProgramObjectForFunction:(const CDStruct_41a22ec7 *)arg1;	// IMP=0x000000000001ca54

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(copy) NSString *label;
@property(readonly) Class superclass;

@end

