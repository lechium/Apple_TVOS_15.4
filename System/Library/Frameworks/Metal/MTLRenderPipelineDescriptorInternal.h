//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface MTLRenderPipelineDescriptorInternal
{
    struct MTLRenderPipelineDescriptorPrivate _private;	// 24 = 0x18
    struct FlatBufferBuilder _builder;	// 384 = 0x180
}

- (id).cxx_construct;	// IMP=0x0000000000089b2b
- (void).cxx_destruct;	// IMP=0x0000000000089b1a
- (const void *)getPipelineScript;	// IMP=0x0000000000089a80
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000893ee
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000893d7
- (id)serializeFragmentData;	// IMP=0x00000000000893bf
- (id)newSerializedFragmentDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000088f25
- (void)validateWithDevice:(id)arg1;	// IMP=0x0000000000088eef
- (_Bool)validateWithDevice:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000088bbd
- (void)setStencilAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000088ae9
- (unsigned long long)stencilAttachmentPixelFormat;	// IMP=0x0000000000088ad7
- (void)setDepthAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000088ac5
- (unsigned long long)depthAttachmentPixelFormat;	// IMP=0x0000000000088ab3
- (id)colorAttachments;	// IMP=0x0000000000088aa2
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000088654
- (unsigned long long)hash;	// IMP=0x00000000000882ad
- (const struct MTLRenderPipelineDescriptorPrivate *)_descriptorPrivate;	// IMP=0x000000000008829d
- (id)driverCompilerOptions;	// IMP=0x0000000000088288
- (void)setDriverCompilerOptions:(id)arg1;	// IMP=0x000000000008823b
- (id)vertexDescriptor;	// IMP=0x0000000000088204
- (void)setVertexDescriptor:(id)arg1;	// IMP=0x0000000000088176
- (void)attachVertexDescriptor:(id)arg1;	// IMP=0x00000000000880ef
- (id)pipelineLibrary;	// IMP=0x00000000000880da
- (void)setPipelineLibrary:(id)arg1;	// IMP=0x0000000000088094
- (id)fragmentFunction;	// IMP=0x000000000008807f
- (void)setFragmentFunction:(id)arg1;	// IMP=0x0000000000087fb2
- (id)vertexFunction;	// IMP=0x0000000000087f9d
- (void)setVertexFunction:(id)arg1;	// IMP=0x0000000000087ed0
- (void)setLabel:(id)arg1;	// IMP=0x0000000000087e2b
- (id)label;	// IMP=0x0000000000087e16
- (void)reset;	// IMP=0x0000000000087bfa
- (id)fragmentBuffers;	// IMP=0x0000000000087be5
- (id)vertexBuffers;	// IMP=0x0000000000087bd0
- (void)setInsertFragmentLibraries:(id)arg1;	// IMP=0x0000000000087bb2
- (id)insertFragmentLibraries;	// IMP=0x0000000000087b9d
- (void)setInsertVertexLibraries:(id)arg1;	// IMP=0x0000000000087b7f
- (id)insertVertexLibraries;	// IMP=0x0000000000087b6a
- (void)setFragmentPreloadedLibraries:(id)arg1;	// IMP=0x0000000000087b1d
- (id)fragmentPreloadedLibraries;	// IMP=0x0000000000087b08
- (void)setVertexPreloadedLibraries:(id)arg1;	// IMP=0x0000000000087abb
- (id)vertexPreloadedLibraries;	// IMP=0x0000000000087aa6
- (void)setFragmentLinkedFunctions:(id)arg1;	// IMP=0x0000000000087a0e
- (id)fragmentLinkedFunctions;	// IMP=0x00000000000879b3
- (void)setVertexLinkedFunctions:(id)arg1;	// IMP=0x000000000008791b
- (id)vertexLinkedFunctions;	// IMP=0x00000000000878c0
- (id)binaryArchives;	// IMP=0x00000000000878ab
- (void)setBinaryArchives:(id)arg1;	// IMP=0x000000000008785e
- (void)setInputPrimitiveTopology:(unsigned long long)arg1;	// IMP=0x0000000000087803
- (unsigned long long)inputPrimitiveTopology;	// IMP=0x00000000000877e9
- (void)setDepthStencilWriteDisabled:(_Bool)arg1;	// IMP=0x00000000000877bf
- (_Bool)isDepthStencilWriteDisabled;	// IMP=0x00000000000877a6
- (void)setSampleCoverageInvert:(_Bool)arg1;	// IMP=0x0000000000087779
- (_Bool)sampleCoverageInvert;	// IMP=0x0000000000087763
- (void)setOpenGLModeEnabled:(_Bool)arg1;	// IMP=0x0000000000087736
- (_Bool)openGLModeEnabled;	// IMP=0x000000000008771f
- (void)setPluginData:(id)arg1;	// IMP=0x00000000000876d9
- (id)pluginData;	// IMP=0x00000000000876c4
- (void)setFragmentDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x00000000000876b0
- (unsigned int)fragmentDepthCompareClampMask;	// IMP=0x000000000008769c
- (void)setVertexDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x0000000000087688
- (unsigned int)vertexDepthCompareClampMask;	// IMP=0x0000000000087674
- (void)setTwoSideEnabled:(_Bool)arg1;	// IMP=0x0000000000087647
- (_Bool)isTwoSideEnabled;	// IMP=0x000000000008762e
- (void)setPointSizeOutputVS:(_Bool)arg1;	// IMP=0x0000000000087601
- (_Bool)isPointSizeOutputVS;	// IMP=0x00000000000875e8
- (void)setPointCoordLowerLeft:(_Bool)arg1;	// IMP=0x00000000000875bb
- (_Bool)isPointCoordLowerLeft;	// IMP=0x00000000000875a2
- (void)setPointSmoothEnabled:(_Bool)arg1;	// IMP=0x0000000000087575
- (_Bool)isPointSmoothEnabled;	// IMP=0x000000000008755c
- (unsigned char)clipDistanceEnableMask;	// IMP=0x0000000000087542
- (void)setClipDistanceEnableMask:(unsigned char)arg1;	// IMP=0x0000000000087515
- (void)setAlphaTestFunction:(unsigned long long)arg1;	// IMP=0x00000000000874e7
- (unsigned long long)alphaTestFunction;	// IMP=0x00000000000874cd
- (void)setAlphaTestEnabled:(_Bool)arg1;	// IMP=0x00000000000874a0
- (_Bool)isAlphaTestEnabled;	// IMP=0x0000000000087487
- (void)setLogicOperation:(unsigned long long)arg1;	// IMP=0x0000000000087459
- (unsigned long long)logicOperation;	// IMP=0x000000000008743f
- (void)setLogicOperationEnabled:(_Bool)arg1;	// IMP=0x000000000008740f
- (_Bool)isLogicOperationEnabled;	// IMP=0x00000000000873f8
- (void)setColorSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000873e3
- (unsigned long long)colorSampleCount;	// IMP=0x00000000000873ce
- (void)setRasterizationEnabled:(_Bool)arg1;	// IMP=0x00000000000873a7
- (_Bool)isRasterizationEnabled;	// IMP=0x000000000008738e
- (void)setAlphaToOneEnabled:(_Bool)arg1;	// IMP=0x0000000000087367
- (_Bool)isAlphaToOneEnabled;	// IMP=0x000000000008734f
- (void)setAlphaToCoverageEnabled:(_Bool)arg1;	// IMP=0x0000000000087329
- (_Bool)isAlphaToCoverageEnabled;	// IMP=0x0000000000087313
- (void)setSampleCoverage:(float)arg1;	// IMP=0x00000000000872fd
- (float)sampleCoverage;	// IMP=0x00000000000872e7
- (void)setSampleMask:(unsigned long long)arg1;	// IMP=0x00000000000872d2
- (unsigned long long)sampleMask;	// IMP=0x00000000000872bd
- (void)setRasterSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000872a8
- (unsigned long long)rasterSampleCount;	// IMP=0x0000000000087293
- (void)setSampleCount:(unsigned long long)arg1;	// IMP=0x0000000000087281
- (unsigned long long)sampleCount;	// IMP=0x000000000008726f
@property(nonatomic) unsigned long long postVertexDumpBufferIndex;
- (void)setResourceIndex:(unsigned long long)arg1;	// IMP=0x0000000000087230
- (unsigned long long)resourceIndex;	// IMP=0x000000000008721b
- (void)setForceResourceIndex:(_Bool)arg1;	// IMP=0x00000000000871ed
- (_Bool)forceResourceIndex;	// IMP=0x00000000000871d7
- (long long)textureWriteRoundingMode;	// IMP=0x00000000000871bb
- (void)setTextureWriteRoundingMode:(long long)arg1;	// IMP=0x00000000000871a6
- (void)setSupportIndirectCommandBuffers:(_Bool)arg1;	// IMP=0x0000000000087192
- (_Bool)supportIndirectCommandBuffers;	// IMP=0x000000000008717e
- (void)setTessellationOutputWindingOrder:(unsigned long long)arg1;	// IMP=0x000000000008713b
- (unsigned long long)tessellationOutputWindingOrder;	// IMP=0x0000000000087126
- (void)setTessellationFactorStepFunction:(unsigned long long)arg1;	// IMP=0x00000000000870e3
- (unsigned long long)tessellationFactorStepFunction;	// IMP=0x00000000000870ce
- (void)setTessellationControlPointIndexType:(unsigned long long)arg1;	// IMP=0x000000000008708e
- (unsigned long long)tessellationControlPointIndexType;	// IMP=0x000000000008707c
- (void)setTessellationFactorFormat:(unsigned long long)arg1;	// IMP=0x000000000008703c
- (unsigned long long)tessellationFactorFormat;	// IMP=0x000000000008702a
- (void)setTessellationFactorScaleEnabled:(_Bool)arg1;	// IMP=0x0000000000087019
- (_Bool)isTessellationFactorScaleEnabled;	// IMP=0x0000000000087008
- (void)setMaxTessellationFactor:(unsigned long long)arg1;	// IMP=0x0000000000086fc2
- (unsigned long long)maxTessellationFactor;	// IMP=0x0000000000086fb0
- (void)setTessellationPartitionMode:(unsigned long long)arg1;	// IMP=0x0000000000086f70
- (unsigned long long)tessellationPartitionMode;	// IMP=0x0000000000086f5e
@property(nonatomic) _Bool forceSoftwareVertexFetch;
- (id)description;	// IMP=0x0000000000086f04
- (id)formattedDescription:(unsigned long long)arg1;	// IMP=0x0000000000086301
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000085faf
- (void)dealloc;	// IMP=0x0000000000085ec7
- (id)init;	// IMP=0x0000000000085d7d

@end

