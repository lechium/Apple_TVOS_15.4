//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface CSXPCConnection : NSObject
{
    _Bool _machService;	// 8 = 0x8
    _Bool _listener;	// 9 = 0x9
    _Bool _nonLaunching;	// 10 = 0xa
    _Bool _privateDaemon;	// 11 = 0xb
    unsigned int _user;	// 12 = 0xc
    NSString *_uuid;	// 16 = 0x10
    NSString *_serviceName;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_queue;	// 32 = 0x20
    NSObject<OS_xpc_object> *_connection;	// 40 = 0x28
}

+ (void)journalDictionary:(id)arg1 toFolderPath:(const char *)arg2 forPID:(int)arg3 withLabel:(const char *)arg4 andID:(unsigned long long)arg5;	// IMP=0x0000000000041005
+ (id)copyPlistFromXPCObject:(id)arg1;	// IMP=0x0000000000040d45
+ (void)setJournalEnabled:(_Bool)arg1;	// IMP=0x0000000000040d27
+ (_Bool)journalEnabled;	// IMP=0x0000000000040d10
+ (id)processNameForPID:(int)arg1;	// IMP=0x0000000000040c24
+ (id)appIdentifierFromTeamAppTuple:(id)arg1;	// IMP=0x0000000000040b5f
+ (id)dataWrapperForKey:(const char *)arg1 sizeKey:(const char *)arg2 fromXPCDictionary:(id)arg3;	// IMP=0x0000000000040b43
+ (id)dataWrapperForKey:(const char *)arg1 sizeKey:(const char *)arg2 fromXPCDictionary:(id)arg3 allowWritableSharedMemory:(_Bool)arg4;	// IMP=0x00000000000409cd
+ (void)dictionary:(id)arg1 setPlistContainer:(const struct _MDPlistContainer *)arg2 forKey:(const char *)arg3 sizeKey:(const char *)arg4;	// IMP=0x0000000000040939
+ (void)dictionary:(id)arg1 setPlistBytes:(struct __MDPlistBytes *)arg2 forKey:(const char *)arg3 sizeKey:(const char *)arg4;	// IMP=0x00000000000408a5
+ (_Bool)dictionary:(id)arg1 setSharedMemory:(void *)arg2 forKey:(const char *)arg3 size:(unsigned long long)arg4 forSizeKey:(const char *)arg5;	// IMP=0x0000000000040800
+ (void)dictionary:(id)arg1 setNumberArray:(id)arg2 forKey:(const char *)arg3;	// IMP=0x0000000000040611
+ (void)dictionary:(id)arg1 setStringOrDictionaryArray:(id)arg2 forKey:(const char *)arg3;	// IMP=0x000000000004036b
+ (id)constructDictionary:(id)arg1;	// IMP=0x000000000004025a
+ (id)constructArray:(id)arg1;	// IMP=0x00000000000400e6
+ (void)array:(id)arg1 setValue:(id)arg2 atIndex:(long long)arg3;	// IMP=0x000000000003ff9a
+ (void)dictionary:(id)arg1 setValue:(id)arg2 forKey:(const char *)arg3;	// IMP=0x000000000003fe4e
+ (void)dictionary:(id)arg1 setStringArray:(id)arg2 forKey:(const char *)arg3;	// IMP=0x000000000003fc4f
+ (id)copyNSStringSetFromXPCArray:(id)arg1;	// IMP=0x000000000003fb06
+ (id)copyNSNumberArrayFromXPCArray:(id)arg1;	// IMP=0x000000000003f9e8
+ (id)copyNSStringOrDictArrayFromXPCArray:(id)arg1;	// IMP=0x000000000003f84c
+ (id)copyNSArrayFromXPCObject:(id)arg1;	// IMP=0x000000000003f748
+ (id)copyNSDictionaryFromXPCObject:(id)arg1;	// IMP=0x000000000003f5e7
+ (id)copyNSObject:(id)arg1;	// IMP=0x000000000003f527
+ (id)copyNSString:(id)arg1;	// IMP=0x000000000003f4f1
+ (id)copyNSStringArrayFromXPCArray:(id)arg1;	// IMP=0x000000000003f3cb
+ (id)copyNSDataForKey:(const char *)arg1 fromXPCDictionary:(id)arg2;	// IMP=0x000000000003f37f
+ (id)copyNSStringForKey:(const char *)arg1 fromXPCDictionary:(id)arg2;	// IMP=0x000000000003f346
- (void).cxx_destruct;	// IMP=0x0000000000041177
@property(nonatomic) unsigned int user; // @synthesize user=_user;
@property(retain, nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection=_connection;
@property(nonatomic) _Bool privateDaemon; // @synthesize privateDaemon=_privateDaemon;
@property(nonatomic) _Bool nonLaunching; // @synthesize nonLaunching=_nonLaunching;
@property(readonly, nonatomic) _Bool listener; // @synthesize listener=_listener;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(readonly, nonatomic) _Bool machService; // @synthesize machService=_machService;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void)sendMessageAsync:(id)arg1;	// IMP=0x000000000003f2e6
- (void)sendMessageAsync:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003f114
- (void)handleReply:(id)arg1;	// IMP=0x000000000003ebb1
- (void)handleError:(id)arg1;	// IMP=0x000000000003ea82
- (void)_lostClientConnection:(id)arg1 error:(id)arg2;	// IMP=0x000000000003ea31
- (_Bool)lostClientConnection:(id)arg1 error:(id)arg2;	// IMP=0x000000000003e90a
- (_Bool)addClientConnectionIfAllowedForConnection:(id)arg1;	// IMP=0x000000000003e902
- (_Bool)addClientConnectionIfAllowedForConfiguration:(id)arg1;	// IMP=0x000000000003e8ac
- (_Bool)handleMessage:(id)arg1 type:(struct _xpc_type_s *)arg2 connection:(id)arg3;	// IMP=0x000000000003e551
- (_Bool)handleCommand:(const char *)arg1 info:(id)arg2 connection:(id)arg3;	// IMP=0x000000000003e549
- (void)_setUser:(unsigned int)arg1;	// IMP=0x000000000003e537
- (id)initMachServiceListenerWithName:(id)arg1;	// IMP=0x000000000003dfdb
- (id)initListenerWithName:(id)arg1;	// IMP=0x000000000003df65
- (id)initWithServiceName:(id)arg1 machService:(_Bool)arg2;	// IMP=0x000000000003df50
- (id)initWithServiceName:(id)arg1 machService:(_Bool)arg2 uuid:(id)arg3;	// IMP=0x000000000003dd36
- (id)initWithServiceName:(id)arg1;	// IMP=0x000000000003dd22
- (id)initWithMachServiceName:(id)arg1;	// IMP=0x000000000003dd0b
- (void)startListener;	// IMP=0x000000000003dcdc

@end

