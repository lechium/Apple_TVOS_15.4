//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSNumber, TKSmartCardSlot;
@protocol OS_dispatch_queue;

@interface TKSmartCard : NSObject
{
    TKSmartCardSlot *_slot;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_beginSessionQueue;	// 16 = 0x10
    _Bool _sensitive;	// 24 = 0x18
    _Bool _sensitiveRequired;	// 25 = 0x19
    _Bool _synchronous;	// 26 = 0x1a
    id _session;	// 32 = 0x20
    long long _sessionCounter;	// 40 = 0x28
    _Bool _someoneWantsSession;	// 48 = 0x30
    long long _sessionEndPolicy;	// 56 = 0x38
    NSMutableDictionary *_contexts;	// 64 = 0x40
    NSNumber *_reservationId;	// 72 = 0x48
    _Bool _useExtendedLength;	// 80 = 0x50
    _Bool _useCommandChaining;	// 81 = 0x51
    unsigned char _cla;	// 82 = 0x52
    _Bool _valid;	// 83 = 0x53
    unsigned long long _allowedProtocols;	// 88 = 0x58
    unsigned long long _currentProtocol;	// 96 = 0x60
}

+ (_Bool)decodeResponse:(id)arg1 sw:(unsigned short *)arg2 appendTo:(id)arg3 error:(id *)arg4;	// IMP=0x000000000000d85c
+ (id)_localizedString:(id)arg1;	// IMP=0x000000000000addf
- (void).cxx_destruct;	// IMP=0x000000000000f6bb
@property unsigned long long currentProtocol; // @synthesize currentProtocol=_currentProtocol;
@property unsigned long long allowedProtocols; // @synthesize allowedProtocols=_allowedProtocols;
@property _Bool valid; // @synthesize valid=_valid;
@property(readonly, nonatomic) TKSmartCardSlot *slot; // @synthesize slot=_slot;
- (_Bool)selectApplication:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000f437
- (id)sendIns:(unsigned char)arg1 p1:(unsigned char)arg2 p2:(unsigned char)arg3 data:(id)arg4 le:(id)arg5 sw:(unsigned short *)arg6 error:(id *)arg7;	// IMP=0x000000000000f1f0
- (void)sendIns:(unsigned char)arg1 p1:(unsigned char)arg2 p2:(unsigned char)arg3 data:(id)arg4 le:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000000000eadf
- (void)transmitChunkedIns:(unsigned char)arg1 p1:(unsigned char)arg2 p2:(unsigned char)arg3 data:(id)arg4 fromOffset:(unsigned long long)arg5 realLe:(unsigned long long)arg6 chained:(_Bool)arg7 isCase4:(_Bool)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x000000000000e446
- (id)buildIns:(unsigned char)arg1 p1:(unsigned char)arg2 p2:(unsigned char)arg3 data:(id)arg4 range:(struct _NSRange)arg5 le:(id)arg6 protocol:(unsigned long long)arg7 chained:(_Bool)arg8 extended:(_Bool *)arg9 realLe:(unsigned long long *)arg10;	// IMP=0x000000000000e136
- (void)encodeLength:(unsigned long long)arg1 into:(id)arg2 sized:(long long)arg3;	// IMP=0x000000000000e092
- (void)handleApduResponse:(id)arg1 body:(id)arg2 le:(unsigned long long)arg3 isCase4:(_Bool)arg4 error:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000000000dd5d
- (_Bool)checkAPDUResponse:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000dcec
- (void)setUseCommandChaining:(_Bool)arg1;	// IMP=0x000000000000d853
- (_Bool)useCommandChaining;	// IMP=0x000000000000d84a
- (void)setUseExtendedLength:(_Bool)arg1;	// IMP=0x000000000000d841
- (_Bool)useExtendedLength;	// IMP=0x000000000000d838
- (void)setCla:(unsigned char)arg1;	// IMP=0x000000000000d82f
- (unsigned char)cla;	// IMP=0x000000000000d825
- (_Bool)revalidate;	// IMP=0x000000000000d7da
- (void)unreserve;	// IMP=0x000000000000d741
- (void)reserveExclusive:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000d50f
- (void)dealloc;	// IMP=0x000000000000d402
- (id)userInteractionForSecurePINChangeWithPINFormat:(id)arg1 APDU:(id)arg2 currentPINByteOffset:(long long)arg3 newPINByteOffset:(long long)arg4;	// IMP=0x000000000000d304
- (id)userInteractionForSecurePINVerificationWithPINFormat:(id)arg1 APDU:(id)arg2 PINByteOffset:(long long)arg3;	// IMP=0x000000000000d212
- (void)setContext:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000000d05f
- (id)contextForKey:(id)arg1;	// IMP=0x000000000000d049
@property(retain) id context;
- (void)transmitRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000cb50
- (void)endSession;	// IMP=0x000000000000cb31
- (void)endSessionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000c97a
- (void)setSessionEndPolicy:(long long)arg1;	// IMP=0x000000000000c959
- (long long)sessionEndPolicy;	// IMP=0x000000000000c951
- (_Bool)inSessionWithError:(id *)arg1 executeBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c8e8
- (_Bool)beginSessionWithError:(id *)arg1;	// IMP=0x000000000000c3fe
- (void)beginSessionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000c110
- (void)querySessionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b758
- (void)inSlotQueueExecuteBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b6db
- (void)sessionRequested;	// IMP=0x000000000000b629
- (void)releaseSessionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b2f4
- (_Bool)synchronous;	// IMP=0x000000000000b2eb
- (void)setSynchronous:(_Bool)arg1;	// IMP=0x000000000000b2e2
@property _Bool sensitive;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000000b16b
- (id)remoteSessionWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b133
- (id)initWithSlot:(id)arg1;	// IMP=0x000000000000ae77

@end

