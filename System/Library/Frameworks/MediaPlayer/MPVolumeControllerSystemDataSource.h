//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlayer/MPVolumeControllerDataSource-Protocol.h>

@class AVSystemController, NSMutableArray, NSString;
@protocol MPVolumeControllerDataSourceDelegate, OS_dispatch_queue;

@interface MPVolumeControllerSystemDataSource : NSObject <MPVolumeControllerDataSource>
{
    _Bool _debugVolumeWarning;	// 8 = 0x8
    _Bool _volumeInitialized;	// 9 = 0x9
    _Bool _volumeControlCapabilitiesInitialized;	// 10 = 0xa
    NSMutableArray *_pendingVolumeCompletions;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_avscQueue;	// 24 = 0x18
    AVSystemController *_avSystemController;	// 32 = 0x20
    _Bool _volumeControlAvailable;	// 40 = 0x28
    _Bool _muted;	// 41 = 0x29
    _Bool _volumeWarningEnabled;	// 42 = 0x2a
    float _volume;	// 44 = 0x2c
    float _EUVolumeLimit;	// 48 = 0x30
    NSString *_volumeAudioCategory;	// 56 = 0x38
    id <MPVolumeControllerDataSourceDelegate> _delegate;	// 64 = 0x40
    NSString *_volumeControlLabel;	// 72 = 0x48
    long long _volumeWarningState;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x00000000002c5a34
@property(readonly, nonatomic) long long volumeWarningState; // @synthesize volumeWarningState=_volumeWarningState;
@property(readonly, nonatomic) _Bool volumeWarningEnabled; // @synthesize volumeWarningEnabled=_volumeWarningEnabled;
@property(readonly, nonatomic) float EUVolumeLimit; // @synthesize EUVolumeLimit=_EUVolumeLimit;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(readonly, copy, nonatomic) NSString *volumeControlLabel; // @synthesize volumeControlLabel=_volumeControlLabel;
@property(readonly, nonatomic, getter=isVolumeControlAvailable) _Bool volumeControlAvailable; // @synthesize volumeControlAvailable=_volumeControlAvailable;
@property(nonatomic) __weak id <MPVolumeControllerDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *volumeAudioCategory; // @synthesize volumeAudioCategory=_volumeAudioCategory;
- (float)_volumeApplyingEUVolumePolicyToVolume:(float)arg1;	// IMP=0x00000000002c58f8
- (void)_tearDown;	// IMP=0x00000000002c57da
- (void)_setup;	// IMP=0x00000000002c5669
- (void)_reloadEUVolumeLimits;	// IMP=0x00000000002c55f8
- (void)_systemMuteDidChange:(id)arg1;	// IMP=0x00000000002c55e6
- (void)_systemVolumeDidChange:(id)arg1;	// IMP=0x00000000002c53d3
- (void)_volumeControlCapabilitiesDidChangeNotification:(id)arg1;	// IMP=0x00000000002c5293
- (void)_volumeDidChangeNotification:(id)arg1;	// IMP=0x00000000002c514c
- (void)_updateRouteLabelForRoute:(id)arg1;	// IMP=0x00000000002c5087
- (void)_routeDidChangeNotification:(id)arg1;	// IMP=0x00000000002c5028
- (void)_mediaServerDiedNotification:(id)arg1;	// IMP=0x00000000002c4fed
- (void)_EUVolumeLimitEnforcedDidChange:(id)arg1;	// IMP=0x00000000002c4ece
- (void)_EUVolumeLimitDidChange:(id)arg1;	// IMP=0x00000000002c4df0
- (void)getVolumeValueWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000002c4d31
- (void)adjustVolumeValue:(float)arg1;	// IMP=0x00000000002c4c3c
- (void)reloadWarning;	// IMP=0x00000000002c4b7e
- (void)reload;	// IMP=0x00000000002c4958
- (id)_reloadQueue;	// IMP=0x00000000002c4928
- (id)_mediaPlaybackVolumeAudioCategory;	// IMP=0x00000000002c48c5
- (void)updateVolumeControlCapabilities:(unsigned int)arg1;	// IMP=0x00000000002c484b
- (void)updateVolume:(float)arg1;	// IMP=0x00000000002c467d
@property(readonly, nonatomic) _Bool applicationShouldOverrideHardwareVolumeBehavior;
@property(readonly, copy) NSString *description;
- (void)initializeVolume;	// IMP=0x00000000002c427d
- (void)dealloc;	// IMP=0x00000000002c423f
- (id)init;	// IMP=0x00000000002c41b3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

