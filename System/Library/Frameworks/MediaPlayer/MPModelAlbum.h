//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MPModelArtist, MPModelGenre, MPModelSong, NSDate, NSDateComponents, NSString;

@interface MPModelAlbum
{
}

+ (id)__versionHash_KEY;	// IMP=0x00000000002db2e2
+ (id)__classicalExperienceAvailable_KEY;	// IMP=0x00000000002db2d5
+ (id)__traits_KEY;	// IMP=0x00000000002db2c8
+ (id)__downloadedDate_KEY;	// IMP=0x00000000002db2bb
+ (id)__songPopularityBlock_KEY;	// IMP=0x00000000002db2ae
+ (id)__shortEditorNotes_KEY;	// IMP=0x00000000002db2a1
+ (id)__editorNotes_KEY;	// IMP=0x00000000002db294
+ (id)__preorder_KEY;	// IMP=0x00000000002db287
+ (id)__lastDevicePlaybackDate_KEY;	// IMP=0x00000000002db27a
+ (id)__libraryAddEligible_KEY;	// IMP=0x00000000002db26d
+ (id)__keepLocalManagedStatus_KEY;	// IMP=0x00000000002db260
+ (id)__keepLocalEnableState_KEY;	// IMP=0x00000000002db253
+ (id)__volumeNormalization_KEY;	// IMP=0x00000000002db246
+ (id)__libraryAdded_KEY;	// IMP=0x00000000002db239
+ (id)__year_KEY;	// IMP=0x00000000002db22c
+ (id)__libraryAddedDate_KEY;	// IMP=0x00000000002db21f
+ (id)__copyrightText_KEY;	// IMP=0x00000000002db212
+ (id)__artworkCatalogBlock_KEY;	// IMP=0x00000000002db205
+ (id)__releaseDateComponents_KEY;	// IMP=0x00000000002db1f8
+ (id)__classical_KEY;	// IMP=0x00000000002db1eb
+ (id)__compilation_KEY;	// IMP=0x00000000002db1de
+ (id)__hasExplicitContent_KEY;	// IMP=0x00000000002db1d1
+ (id)__hasCleanContent_KEY;	// IMP=0x00000000002db1c4
+ (id)__discCount_KEY;	// IMP=0x00000000002db1b7
+ (id)__maximumItemTrackNumber_KEY;	// IMP=0x00000000002db1aa
+ (id)__trackCount_KEY;	// IMP=0x00000000002db19d
+ (id)__representativeSong_KEY;	// IMP=0x00000000002db190
+ (id)__genre_KEY;	// IMP=0x00000000002db183
+ (id)__artist_KEY;	// IMP=0x00000000002db176
+ (id)__title_KEY;	// IMP=0x00000000002db169
+ (id)kindWithVariants:(unsigned long long)arg1 songKind:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x00000000002db150
+ (id)kindWithVariants:(unsigned long long)arg1 songKind:(id)arg2;	// IMP=0x00000000002db13b
+ (id)kindWithSongKind:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000002db11e
+ (id)kindWithSongKind:(id)arg1;	// IMP=0x00000000002db101
+ (id)requiredLibraryAddStatusObservationProperties;	// IMP=0x000000000018fe13
+ (_Bool)supportsLibraryAddStatusObservation;	// IMP=0x000000000018fe0b
+ (_Bool)supportsLibraryRemoval;	// IMP=0x00000000001a863c
+ (id)requiredLibraryRemovalProperties;	// IMP=0x00000000001a858e
+ (_Bool)supportsKeepLocalStatusObservation;	// IMP=0x00000000001a92c7
+ (id)requiredKeepLocalStatusObservationProperties;	// IMP=0x00000000001a9219
+ (long long)genericObjectType;	// IMP=0x00000000001e3181
+ (id)requiredStoreLibraryPersonalizationProperties;	// IMP=0x00000000001fe12c
- (id)songPopularityForIdentifiers:(id)arg1;	// IMP=0x00000000002db085
- (id)artworkCatalog;	// IMP=0x00000000002db02d
- (id)humanDescription;	// IMP=0x00000000002daf07
- (id)contentItemCollectionInfo;	// IMP=0x0000000000095418
- (struct MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;	// IMP=0x000000000018f8a3
- (long long)libraryRemovalSupportedOptions;	// IMP=0x00000000001a7de1
- (id)newKeepLocalStatusObserverConfiguration;	// IMP=0x00000000001a8a14
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;	// IMP=0x00000000001fd968
- (id)relativeModelObjectForStoreLibraryPersonalization;	// IMP=0x00000000001fd95f
- (id)personalizationScopedPropertiesForProperties:(id)arg1;	// IMP=0x00000000001fd952

// Remaining properties
@property(retain, nonatomic) MPModelArtist *artist; // @dynamic artist;
@property(copy, nonatomic) CDUnknownBlockType artworkCatalogBlock; // @dynamic artworkCatalogBlock;
@property(nonatomic, getter=isClassical) _Bool classical; // @dynamic classical;
@property(nonatomic, getter=isClassicalExperienceAvailable) _Bool classicalExperienceAvailable; // @dynamic classicalExperienceAvailable;
@property(nonatomic, getter=isCompilation) _Bool compilation; // @dynamic compilation;
@property(copy, nonatomic) NSString *copyrightText; // @dynamic copyrightText;
@property(nonatomic) long long discCount; // @dynamic discCount;
@property(readonly, copy, nonatomic) NSDate *downloadedDate; // @dynamic downloadedDate;
@property(copy, nonatomic) NSString *editorNotes; // @dynamic editorNotes;
@property(retain, nonatomic) MPModelGenre *genre; // @dynamic genre;
@property(nonatomic) _Bool hasCleanContent; // @dynamic hasCleanContent;
@property(nonatomic) _Bool hasExplicitContent; // @dynamic hasExplicitContent;
@property(nonatomic) long long keepLocalEnableState; // @dynamic keepLocalEnableState;
@property(nonatomic) long long keepLocalManagedStatus; // @dynamic keepLocalManagedStatus;
@property(copy, nonatomic) NSDate *lastDevicePlaybackDate; // @dynamic lastDevicePlaybackDate;
@property(nonatomic, getter=isLibraryAddEligible) _Bool libraryAddEligible; // @dynamic libraryAddEligible;
@property(nonatomic, getter=isLibraryAdded) _Bool libraryAdded; // @dynamic libraryAdded;
@property(copy, nonatomic) NSDate *libraryAddedDate; // @dynamic libraryAddedDate;
@property(nonatomic) long long maximumItemTrackNumber; // @dynamic maximumItemTrackNumber;
@property(nonatomic, getter=isPreorder) _Bool preorder; // @dynamic preorder;
@property(copy, nonatomic) NSDateComponents *releaseDateComponents; // @dynamic releaseDateComponents;
@property(retain, nonatomic) MPModelSong *representativeSong; // @dynamic representativeSong;
@property(copy, nonatomic) NSString *shortEditorNotes; // @dynamic shortEditorNotes;
@property(copy, nonatomic) CDUnknownBlockType songPopularityBlock; // @dynamic songPopularityBlock;
@property(copy, nonatomic) NSString *title; // @dynamic title;
@property(nonatomic) long long trackCount; // @dynamic trackCount;
@property(nonatomic) unsigned long long traits; // @dynamic traits;
@property(copy, nonatomic) NSString *versionHash; // @dynamic versionHash;
@property(nonatomic) float volumeNormalization; // @dynamic volumeNormalization;
@property(nonatomic) long long year; // @dynamic year;

@end

