//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UISlider.h>

#import <MediaPlayer/MPVolumeControllerDelegate-Protocol.h>
#import <MediaPlayer/MPVolumeDisplaying-Protocol.h>

@class MPAVController, MPAVEndpointRoute, MPAVOutputDeviceRoute, MPAVRoute, MPVolumeController, NSString, NSTimer, UIImage, UIImageView, UILabel, UILayoutGuide, UIView, UIWindowScene;

@interface MPVolumeSlider : UISlider <MPVolumeControllerDelegate, MPVolumeDisplaying>
{
    NSTimer *_commitTimer;	// 8 = 0x8
    UILabel *_routeNameLabel;	// 16 = 0x10
    long long _style;	// 24 = 0x18
    UIImageView *_thumbImageView;	// 32 = 0x20
    _Bool _isOffScreen;	// 40 = 0x28
    _Bool _forcingOffscreenVisibility;	// 41 = 0x29
    _Bool _thumbIsDefault;	// 42 = 0x2a
    _Bool _configuredLayoutGuide;	// 43 = 0x2b
    UIView *_volumeWarningView;	// 48 = 0x30
    _Bool _volumeWarningBlinking;	// 56 = 0x38
    UIImage *_volumeWarningTrackImage;	// 64 = 0x40
    _Bool _beganTrackingFromEUVolumeLimit;	// 72 = 0x48
    double _originalMinTrackViewAlphaOverride;	// 80 = 0x50
    double _originalMinValueViewAlphaOverride;	// 88 = 0x58
    double _originalMaxValueViewAlphaOverride;	// 96 = 0x60
    _Bool _isCurrentlyTracking;	// 104 = 0x68
    float _setVolumeStartValue;	// 108 = 0x6c
    int _coalescedVolumeDidChangeLogCount;	// 112 = 0x70
    _Bool _optimisticState;	// 116 = 0x74
    float _optimisticValue;	// 120 = 0x78
    UILayoutGuide *_trackLayoutGuide;	// 128 = 0x80
    MPVolumeController *_volumeController;	// 136 = 0x88
    MPAVController *_player;	// 144 = 0x90
    MPAVEndpointRoute *_groupRoute;	// 152 = 0x98
    MPAVOutputDeviceRoute *_outputDeviceRoute;	// 160 = 0xa0
    struct UIEdgeInsets _hitRectInsets;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x000000000006c7bd
@property(nonatomic) float optimisticValue; // @synthesize optimisticValue=_optimisticValue;
@property(nonatomic, getter=isInOptimisticState) _Bool optimisticState; // @synthesize optimisticState=_optimisticState;
@property(retain, nonatomic) MPAVOutputDeviceRoute *outputDeviceRoute; // @synthesize outputDeviceRoute=_outputDeviceRoute;
@property(retain, nonatomic) MPAVEndpointRoute *groupRoute; // @synthesize groupRoute=_groupRoute;
@property(retain, nonatomic) MPAVController *player; // @synthesize player=_player;
@property(retain, nonatomic) MPVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property(readonly, nonatomic) UILayoutGuide *trackLayoutGuide; // @synthesize trackLayoutGuide=_trackLayoutGuide;
@property(nonatomic) struct UIEdgeInsets hitRectInsets; // @synthesize hitRectInsets=_hitRectInsets;
@property(retain, nonatomic) UIImage *volumeWarningTrackImage; // @synthesize volumeWarningTrackImage=_volumeWarningTrackImage;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void)_logVolumeValueDidChange:(float)arg1;	// IMP=0x000000000006c60c
- (id)_routeName;	// IMP=0x000000000006c4a2
- (id)_newVolumeWarningView;	// IMP=0x000000000006c2b5
- (void)_endBlinkingWarningView;	// IMP=0x000000000006c279
- (void)_blinkWarningView;	// IMP=0x000000000006c1ff
- (void)_beginBlinkingWarningView;	// IMP=0x000000000006c1da
- (void)_layoutVolumeWarningView;	// IMP=0x000000000006bf4d
- (void)_layoutForAvailableRoutes;	// IMP=0x000000000006ba64
- (void)_resetThumbImageForState:(unsigned long long)arg1;	// IMP=0x000000000006b9fc
- (id)_maxTrackImageForStyle:(long long)arg1;	// IMP=0x000000000006b890
- (id)_minTrackImageForStyle:(long long)arg1;	// IMP=0x000000000006b724
- (id)_thumbImageForStyle:(long long)arg1;	// IMP=0x000000000006b359
- (void)_commitVolumeChange;	// IMP=0x000000000006b223
- (void)_applicationWillEnterForegroundNotification:(id)arg1;	// IMP=0x000000000006b211
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;	// IMP=0x000000000006b1ff
@property(readonly, nonatomic) __weak UIView *thumbView;
@property(nonatomic, setter=_setIsOffScreen:) _Bool _isOffScreen;
- (void)volumeController:(id)arg1 volumeWarningStateDidChange:(long long)arg2;	// IMP=0x000000000006aede
- (void)volumeController:(id)arg1 EUVolumeLimitEnforcedDidChange:(_Bool)arg2;	// IMP=0x000000000006adf2
- (void)volumeController:(id)arg1 EUVolumeLimitDidChange:(float)arg2;	// IMP=0x000000000006ad02
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;	// IMP=0x000000000006ac76
- (void)volumeController:(id)arg1 volumeControlLabelDidChange:(id)arg2;	// IMP=0x000000000006ac17
- (void)volumeController:(id)arg1 volumeControlCapabilitiesDidChange:(unsigned int)arg2;	// IMP=0x000000000006abad
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(_Bool)arg2;	// IMP=0x000000000006ab43
- (void)updateVolume;	// IMP=0x000000000006aabb
@property(readonly, nonatomic) NSString *volumeAudioCategory;
@property(readonly, nonatomic, getter=isOnScreenForVolumeDisplay) _Bool onScreenForVolumeDisplay;
@property(readonly, nonatomic) UIWindowScene *windowSceneForVolumeDisplay;
- (void)setVolumeDataSource:(id)arg1;	// IMP=0x000000000006a781
@property(retain, nonatomic) MPAVRoute *route;
@property(readonly, copy, nonatomic) NSString *volumeControlLabel;
- (void)_dynamicUserInterfaceTraitDidChange;	// IMP=0x000000000006a3d1
- (void)setUserInteractionEnabled:(_Bool)arg1;	// IMP=0x000000000006a34d
- (void)setHidden:(_Bool)arg1;	// IMP=0x000000000006a2df
- (void)setAlpha:(double)arg1;	// IMP=0x000000000006a271
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000006a222
- (struct CGRect)hitRect;	// IMP=0x000000000006a1a2
- (void)didMoveToWindow;	// IMP=0x000000000006a098
- (void)didMoveToSuperview;	// IMP=0x0000000000069fb5
- (void)layoutSubviews;	// IMP=0x0000000000069ade
- (void)_endTracking;	// IMP=0x0000000000069a8a
- (void)cancelTrackingWithEvent:(id)arg1;	// IMP=0x0000000000069944
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000000697e2
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000000697b3
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000069528
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;	// IMP=0x0000000000069478
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;	// IMP=0x0000000000069128
- (void)setValue:(float)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000068d71
- (void)setThumbImage:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x0000000000068d35
- (float)minimumValue;	// IMP=0x0000000000068d2c
- (float)maximumValue;	// IMP=0x0000000000068d1e
- (id)createThumbView;	// IMP=0x0000000000068ad4
- (void)dealloc;	// IMP=0x00000000000689f9
@property(readonly, copy) NSString *description;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 endpointRoute:(id)arg3 outputDeviceRoute:(id)arg4;	// IMP=0x00000000000687f4
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;	// IMP=0x000000000006852e
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000006851a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isOnScreen) _Bool onScreen;
@property(readonly) Class superclass;

@end

