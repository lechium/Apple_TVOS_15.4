//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpriteKit/NSCopying-Protocol.h>
#import <SpriteKit/NSSecureCoding-Protocol.h>

@interface SKAction : NSObject <NSCopying, NSSecureCoding>
{
    struct SKCAction *_caction;	// 8 = 0x8
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000001ad8
+ (id)animateWithWarps:(id)arg1 times:(id)arg2 restore:(_Bool)arg3;	// IMP=0x0000000000001aaf
+ (id)animateWithWarps:(id)arg1 times:(id)arg2;	// IMP=0x0000000000001a83
+ (id)warpTo:(id)arg1 duration:(double)arg2;	// IMP=0x0000000000001a5a
+ (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;	// IMP=0x0000000000004823
+ (void)clearActionTableCache;	// IMP=0x0000000000004803
+ (void)convertAction:(id)arg1 toDuration:(double)arg2;	// IMP=0x0000000000004354
+ (void)addActionsToCachedActionTable:(id)arg1;	// IMP=0x000000000000431a
+ (id)findNamedActionInBundle:(id)arg1;	// IMP=0x0000000000003649
+ (id)recursivePathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;	// IMP=0x000000000000335c
+ (id)actionNamed:(id)arg1 fromURL:(id)arg2 duration:(double)arg3;	// IMP=0x00000000000032f0
+ (id)actionNamed:(id)arg1 fromURL:(id)arg2;	// IMP=0x0000000000002f13
+ (id)actionNamed:(id)arg1 duration:(double)arg2;	// IMP=0x0000000000002e82
+ (id)actionNamed:(id)arg1;	// IMP=0x0000000000002df3
+ (id)customActionWithDuration:(double)arg1 actionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000002dbc
+ (id)javaScriptActionWithDuration:(double)arg1 script:(id)arg2;	// IMP=0x0000000000002d85
+ (id)runAction:(id)arg1 onChildWithName:(id)arg2;	// IMP=0x0000000000002d4e
+ (id)runBlock:(CDUnknownBlockType)arg1 queue:(id)arg2;	// IMP=0x0000000000002d25
+ (id)runBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000002cec
+ (id)performSelector:(SEL)arg1 onTarget:(id)arg2;	// IMP=0x0000000000002cb5
+ (id)removeFromParent;	// IMP=0x0000000000002c9c
+ (id)waitForDuration:(double)arg1 withRange:(double)arg2;	// IMP=0x0000000000002c83
+ (id)waitForDuration:(double)arg1;	// IMP=0x0000000000002c6a
+ (id)reachToNode:(id)arg1 rootNode:(id)arg2 velocity:(double)arg3;	// IMP=0x0000000000002bbb
+ (id)reachToNode:(id)arg1 rootNode:(id)arg2 duration:(double)arg3;	// IMP=0x0000000000002b0c
+ (id)reachTo:(struct CGPoint)arg1 rootNode:(id)arg2 velocity:(double)arg3;	// IMP=0x0000000000002ae3
+ (id)reachTo:(struct CGPoint)arg1 rootNode:(id)arg2 duration:(double)arg3;	// IMP=0x0000000000002aba
+ (id)strengthBy:(float)arg1 duration:(double)arg2;	// IMP=0x0000000000002a9d
+ (id)strengthTo:(float)arg1 duration:(double)arg2;	// IMP=0x0000000000002a80
+ (id)speedTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002a67
+ (id)speedBy:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002a4e
+ (id)followPath:(struct CGPath *)arg1 asOffset:(_Bool)arg2 orientToPath:(_Bool)arg3 speed:(double)arg4;	// IMP=0x0000000000002a35
+ (id)followPath:(struct CGPath *)arg1 speed:(double)arg2;	// IMP=0x0000000000002a1c
+ (id)followPath:(struct CGPath *)arg1 asOffset:(_Bool)arg2 orientToPath:(_Bool)arg3 duration:(double)arg4;	// IMP=0x0000000000002a03
+ (id)followPath:(struct CGPath *)arg1 duration:(double)arg2;	// IMP=0x00000000000029ea
+ (id)colorizeWithColorBlendFactor:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000029d1
+ (id)colorizeWithColor:(id)arg1 colorBlendFactor:(double)arg2 duration:(double)arg3;	// IMP=0x000000000000299a
+ (id)playSoundFileNamed:(id)arg1 atPosition:(struct CGPoint)arg2 waitForCompletion:(_Bool)arg3;	// IMP=0x0000000000002963
+ (id)playSoundFileNamed:(id)arg1 waitForCompletion:(_Bool)arg2;	// IMP=0x000000000000291c
+ (id)playSoundFileNamed:(id)arg1;	// IMP=0x00000000000028d3
+ (id)animateWithNormalTextures:(id)arg1 timePerFrame:(double)arg2 resize:(_Bool)arg3 restore:(_Bool)arg4;	// IMP=0x000000000000289c
+ (id)animateWithTextures:(id)arg1 timePerFrame:(double)arg2 resize:(_Bool)arg3 restore:(_Bool)arg4;	// IMP=0x0000000000002865
+ (id)animateWithNormalTextures:(id)arg1 timePerFrame:(double)arg2;	// IMP=0x0000000000002829
+ (id)animateWithTextures:(id)arg1 timePerFrame:(double)arg2;	// IMP=0x00000000000027ed
+ (id)setNormalTexture:(id)arg1 resize:(_Bool)arg2;	// IMP=0x0000000000002707
+ (id)setTexture:(id)arg1 resize:(_Bool)arg2;	// IMP=0x0000000000002621
+ (id)setNormalTexture:(id)arg1;	// IMP=0x000000000000253e
+ (id)setTexture:(id)arg1;	// IMP=0x000000000000245b
+ (id)unhide;	// IMP=0x0000000000002442
+ (id)hide;	// IMP=0x0000000000002429
+ (id)falloffBy:(float)arg1 duration:(double)arg2;	// IMP=0x000000000000240c
+ (id)falloffTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000023ef
+ (id)fadeAlphaTo:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000023d6
+ (id)fadeAlphaBy:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000023bd
+ (id)fadeOutWithDuration:(double)arg1;	// IMP=0x00000000000023a4
+ (id)fadeInWithDuration:(double)arg1;	// IMP=0x000000000000238b
+ (id)repeatActionForever:(id)arg1;	// IMP=0x0000000000002354
+ (id)repeatAction:(id)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000000231d
+ (id)group:(id)arg1;	// IMP=0x00000000000022e6
+ (id)sequence:(id)arg1;	// IMP=0x00000000000022af
+ (id)resizeToHeight:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002296
+ (id)resizeToWidth:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000227d
+ (id)resizeToWidth:(double)arg1 height:(double)arg2 duration:(double)arg3;	// IMP=0x0000000000002264
+ (id)resizeByWidth:(double)arg1 height:(double)arg2 duration:(double)arg3;	// IMP=0x000000000000224b
+ (id)scaleToSize:(struct CGSize)arg1 duration:(double)arg2;	// IMP=0x0000000000002232
+ (id)scaleYTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002219
+ (id)scaleXTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002200
+ (id)scaleXTo:(double)arg1 y:(double)arg2 duration:(double)arg3;	// IMP=0x00000000000021e7
+ (id)scaleTo:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000021ce
+ (id)scaleXBy:(double)arg1 y:(double)arg2 duration:(double)arg3;	// IMP=0x00000000000021b5
+ (id)scaleBy:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000219c
+ (id)rotateToAngle:(double)arg1 duration:(double)arg2 shortestUnitArc:(_Bool)arg3;	// IMP=0x0000000000002183
+ (id)rotateToAngle:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000216a
+ (id)rotateByAngle:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002151
+ (id)moveToY:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002138
+ (id)moveToX:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000211f
+ (id)moveTo:(struct CGPoint)arg1 duration:(double)arg2;	// IMP=0x0000000000002106
+ (id)moveBY:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000020ed
+ (id)moveBy:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000020d4
+ (id)moveByX:(double)arg1 y:(double)arg2 duration:(double)arg3;	// IMP=0x00000000000020bb
+ (id)applyAngularImpulse:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000cb566
+ (id)applyImpulse:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2 duration:(double)arg3;	// IMP=0x00000000000cb3e4
+ (id)applyImpulse:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000cb276
+ (id)applyTorque:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000cb259
+ (id)applyForce:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2 duration:(double)arg3;	// IMP=0x00000000000cb235
+ (id)applyForce:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000cb214
+ (id)changeMassBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cb02e
+ (id)changeMassTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cad7e
+ (id)changeChargeBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cabf4
+ (id)changeChargeTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000ca975
+ (id)changePlaybackRateBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cf342
+ (id)changePlaybackRateTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cf072
+ (id)stop;	// IMP=0x00000000000cef3d
+ (id)pause;	// IMP=0x00000000000cee08
+ (id)play;	// IMP=0x00000000000cec8c
+ (id)changeVolumeBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cf86f
+ (id)changeVolumeTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cf59f
+ (id)changeOcclusionBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d0d23
+ (id)changeOcclusionTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d0a53
+ (id)changeObstructionBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d07f6
+ (id)changeObstructionTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d0526
+ (id)changeReverbBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d02c9
+ (id)changeReverbTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cfff9
+ (id)stereoPanBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cfd9c
+ (id)stereoPanTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cfacc
- (void)dealloc;	// IMP=0x000000000000206c
- (id)reversedAction;	// IMP=0x0000000000002052
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000001fb4
- (id)copy;	// IMP=0x0000000000001f8d
@property(nonatomic) double speed;
- (_Bool)isEqualToAction:(id)arg1;	// IMP=0x0000000000001f2c
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000001e44
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000001cb4
- (id)init;	// IMP=0x0000000000001c17
- (void)commonInit;	// IMP=0x0000000000001b69
@property(nonatomic) long long timingMode;
@property(nonatomic) double duration;
@property(copy, nonatomic) CDUnknownBlockType timingFunction;
- (id)subactions;	// IMP=0x0000000000001ae0
- (struct SKCAction *)caction;	// IMP=0x0000000000001a50
- (void)updateWithTarget:(id)arg1 forTime:(double)arg2;	// IMP=0x0000000000004a1a
- (void)willStartWithTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000000049fe
- (void)wasRemovedFromTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000000049ee
- (void)wasAddedToTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x0000000000004952
- (double)ratioForTime:(double)arg1;	// IMP=0x000000000000493f
@property(nonatomic) _Bool finished;
- (void)willResumeWithTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x000000000000490c
- (void)wasPausedWithTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000000048fd
- (void)setCppAction:(void *)arg1;	// IMP=0x00000000000048cc

@end

