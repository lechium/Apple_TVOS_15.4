//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NetworkExtension/NEConfigurationValidating-Protocol.h>
#import <NetworkExtension/NEPrettyDescription-Protocol.h>

@class NSNumber;

@interface NEPathRule <NEConfigurationValidating, NEPrettyDescription>
{
    _Bool _denyCellularFallback;	// 8 = 0x8
    _Bool _denyMulticast;	// 9 = 0x9
    _Bool _multicastPreferenceSet;	// 10 = 0xa
    _Bool _isIdentifierExternal;	// 11 = 0xb
    NSNumber *_aggregatePersonalCellular;	// 16 = 0x10
    NSNumber *_aggregateEnterpriseCellular;	// 24 = 0x18
    long long _internalCellularBehavior;	// 32 = 0x20
    NSNumber *_aggregatePersonalWiFi;	// 40 = 0x28
    NSNumber *_aggregateEnterpriseWiFi;	// 48 = 0x30
    long long _internalWiFiBehavior;	// 56 = 0x38
}

+ (long long)aggregateNetworkBehavior:(long long)arg1 other:(long long)arg2;	// IMP=0x0000000000152091
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000001510cd
- (void).cxx_destruct;	// IMP=0x0000000000152774
@property long long internalWiFiBehavior; // @synthesize internalWiFiBehavior=_internalWiFiBehavior;
@property(retain) NSNumber *aggregateEnterpriseWiFi; // @synthesize aggregateEnterpriseWiFi=_aggregateEnterpriseWiFi;
@property(retain) NSNumber *aggregatePersonalWiFi; // @synthesize aggregatePersonalWiFi=_aggregatePersonalWiFi;
@property long long internalCellularBehavior; // @synthesize internalCellularBehavior=_internalCellularBehavior;
@property(retain) NSNumber *aggregateEnterpriseCellular; // @synthesize aggregateEnterpriseCellular=_aggregateEnterpriseCellular;
@property(retain) NSNumber *aggregatePersonalCellular; // @synthesize aggregatePersonalCellular=_aggregatePersonalCellular;
@property _Bool isIdentifierExternal; // @synthesize isIdentifierExternal=_isIdentifierExternal;
@property _Bool multicastPreferenceSet; // @synthesize multicastPreferenceSet=_multicastPreferenceSet;
@property _Bool denyMulticast; // @synthesize denyMulticast=_denyMulticast;
@property _Bool denyCellularFallback; // @synthesize denyCellularFallback=_denyCellularFallback;
- (_Bool)supportsWiFiBehavior:(long long)arg1;	// IMP=0x0000000000152574
- (void)addWiFiBehavior:(long long)arg1 grade:(long long)arg2;	// IMP=0x0000000000152369
- (_Bool)supportsCellularBehavior:(long long)arg1;	// IMP=0x00000000001522d1
- (void)addCellularBehavior:(long long)arg1 grade:(long long)arg2;	// IMP=0x00000000001520c6
@property long long wifiBehavior;
@property long long cellularBehavior;
- (_Bool)isAggregateRule;	// IMP=0x0000000000151c56
- (_Bool)signingIdentifierAllowed:(id)arg1 domainsOrAccountsRequired:(out _Bool *)arg2;	// IMP=0x0000000000151c4b
- (id)description;	// IMP=0x0000000000151a16
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000151881
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001516c6
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000001514bb
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000001512a9
@property(readonly, getter=isDefaultPathRule) _Bool defaultPathRule;
- (id)initDefaultPathRule;	// IMP=0x0000000000151245
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000001510d5

@end

