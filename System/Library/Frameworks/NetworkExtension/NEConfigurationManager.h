//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NEHelper, NSData, NSDictionary, NSKeyedUnarchiver, NSMutableDictionary, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface NEConfigurationManager : NSObject
{
    NSString *_description;	// 8 = 0x8
    _Bool _hasReadPermission;	// 16 = 0x10
    _Bool _isVPNPublicAPI;	// 17 = 0x11
    _Bool _isVPNPrivateAPI;	// 18 = 0x12
    _Bool _isNEHelper;	// 19 = 0x13
    _Bool _isSynchronous;	// 20 = 0x14
    _Bool _isSyncedOnQueue;	// 21 = 0x15
    _Bool _hasVPNAPIEntitlement;	// 22 = 0x16
    int _changedNotifyToken;	// 24 = 0x18
    NSString *_pluginType;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_outerQueue;	// 48 = 0x30
    NSDictionary *_currentIndex;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_changedQueue;	// 64 = 0x40
    CDUnknownBlockType _changedHandler;	// 72 = 0x48
    NSMutableDictionary *_loadedIndex;	// 80 = 0x50
    NSMutableDictionary *_loadedConfigurations;	// 88 = 0x58
    NSKeyedUnarchiver *_decoder;	// 96 = 0x60
    long long _generation;	// 104 = 0x68
    NEHelper *_helper;	// 112 = 0x70
    NSData *_SCPreferencesSignature;	// 120 = 0x78
    NSUUID *_userUUID;	// 128 = 0x80
    long long _configurationChangeSource;	// 136 = 0x88
}

+ (void)disableConfiguration:(id)arg1 onDemandOnly:(_Bool)arg2;	// IMP=0x000000000002d24e
+ (long long)configuration:(id)arg1 overlapsWithOtherConfiguration:(id)arg2 sameTypeCount:(unsigned long long *)arg3;	// IMP=0x000000000002c3c2
+ (_Bool)configurationIsEnabled:(id)arg1;	// IMP=0x000000000002c040
+ (void)updateFlags:(unsigned long long *)arg1 withConfiguration:(id)arg2;	// IMP=0x000000000002b815
+ (id)sharedManagerForAllUsers;	// IMP=0x000000000002ad0c
+ (id)sharedManager;	// IMP=0x000000000002acb7
- (void).cxx_destruct;	// IMP=0x000000000003ebfc
@property long long configurationChangeSource; // @synthesize configurationChangeSource=_configurationChangeSource;
@property(readonly) NSUUID *userUUID; // @synthesize userUUID=_userUUID;
@property _Bool hasVPNAPIEntitlement; // @synthesize hasVPNAPIEntitlement=_hasVPNAPIEntitlement;
@property _Bool isSyncedOnQueue; // @synthesize isSyncedOnQueue=_isSyncedOnQueue;
@property(nonatomic) _Bool isSynchronous; // @synthesize isSynchronous=_isSynchronous;
@property _Bool isNEHelper; // @synthesize isNEHelper=_isNEHelper;
@property _Bool isVPNPrivateAPI; // @synthesize isVPNPrivateAPI=_isVPNPrivateAPI;
@property _Bool isVPNPublicAPI; // @synthesize isVPNPublicAPI=_isVPNPublicAPI;
@property _Bool hasReadPermission; // @synthesize hasReadPermission=_hasReadPermission;
@property(retain) NSData *SCPreferencesSignature; // @synthesize SCPreferencesSignature=_SCPreferencesSignature;
@property(retain) NEHelper *helper; // @synthesize helper=_helper;
@property long long generation; // @synthesize generation=_generation;
@property(retain) NSKeyedUnarchiver *decoder; // @synthesize decoder=_decoder;
@property(retain) NSMutableDictionary *loadedConfigurations; // @synthesize loadedConfigurations=_loadedConfigurations;
@property(retain) NSMutableDictionary *loadedIndex; // @synthesize loadedIndex=_loadedIndex;
@property(copy) CDUnknownBlockType changedHandler; // @synthesize changedHandler=_changedHandler;
@property(retain) NSObject<OS_dispatch_queue> *changedQueue; // @synthesize changedQueue=_changedQueue;
@property(retain) NSDictionary *currentIndex; // @synthesize currentIndex=_currentIndex;
@property int changedNotifyToken; // @synthesize changedNotifyToken=_changedNotifyToken;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *outerQueue; // @synthesize outerQueue=_outerQueue;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly) NSString *pluginType; // @synthesize pluginType=_pluginType;
- (id)getCurrentUserUUIDForConfigurationID:(id)arg1 fromIndex:(id)arg2;	// IMP=0x000000000003e786
- (void)upgradeLegacyPluginConfigurations:(id)arg1 withUpgradeInfo:(id)arg2 completionQueue:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000000003d399
- (void)loadLegacyPluginConfigurationsWithCompletionQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003cfe3
- (void)fetchUpgradeInfoForPluginType:(id)arg1 completionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003cdaa
- (void)fetchClientListenerWithBundleID:(id)arg1 completionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003cbaf
- (void)repopulateNetworkPrivacyConfigurationResetAll:(_Bool)arg1;	// IMP=0x000000000003cb43
- (void)showLocalNetworkAlertForApp:(id)arg1 withCompletionQueue:(id)arg2 query:(id)arg3 hasEntitlement:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x000000000003c582
- (void)showLocalNetworkAlertForApp:(id)arg1 withCompletionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003c55d
- (void)triggerLocalAuthenticationForConfigurationWithID:(id)arg1 withCompletionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003c3e5
- (void)copyIdentities:(id)arg1 fromDomain:(long long)arg2 withCompletionQueue:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000000003c029
- (void)handleApplicationsRemoved:(id)arg1 completionQueue:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003b1f4
- (void)handlePluginTypesRemoved:(id)arg1 configuration:(id)arg2 vpn:(id)arg3 updateSCPreferences:(struct __SCPreferences *)arg4;	// IMP=0x000000000003afb4
- (void)handleFileRemovedWithCompletionQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003ae38
- (void)setChangedQueue:(id)arg1 andHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003ad20
- (void)removeConfiguration:(id)arg1 withCompletionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003a66e
- (void)saveConfiguration:(id)arg1 withCompletionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000038c02
- (_Bool)resetKeychainItemsAfterProtocolChange:(id)arg1 newConfiguration:(id)arg2;	// IMP=0x0000000000038480
- (void)loadConfigurationsWithCompletionQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000381d5
- (void)loadConfigurationAndUserWithID:(id)arg1 withCompletionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000037cb5
- (id)getConfigurationUserUUID:(id)arg1;	// IMP=0x0000000000037a05
- (void)loadConfigurationWithID:(id)arg1 withCompletionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000374fc
- (void)loadConfigurations:(id)arg1 withFilter:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000036df9
- (void)loadConfigurationsInternal:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000365f7
- (void)loadIndexWithFilter:(id)arg1 completionQueue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003642a
- (void)syncConfigurationsWithSC:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000354bd
- (void)updateSCPreferencesSignatureOnDisk;	// IMP=0x0000000000034fe1
- (void)removeConfigurationFromDisk:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000034922
- (id)removeConfigurationFromDisk:(id)arg1 updateSCPreferences:(struct __SCPreferences *)arg2;	// IMP=0x0000000000033ec0
- (void)saveConfigurationToDisk:(id)arg1 currentSignature:(id)arg2 userUUID:(id)arg3 isUpgrade:(_Bool)arg4 completionQueue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x0000000000033554
- (id)saveConfigurationToDisk:(id)arg1 updateSCPreferences:(struct __SCPreferences *)arg2 currentSignature:(id)arg3 userUUID:(id)arg4 notifyNow:(_Bool)arg5 isUpgrade:(_Bool)arg6;	// IMP=0x0000000000031bef
- (_Bool)isSystemConfiguration:(id)arg1;	// IMP=0x0000000000031bb9
- (void)postChangeNotification;	// IMP=0x00000000000319a0
- (void)postChangeNotificationWithGeneration:(long long)arg1 andFlags:(unsigned long long)arg2 onlyIfChanged:(_Bool)arg3;	// IMP=0x00000000000314a3
- (id)makeMutableCopyOfIndex:(id)arg1;	// IMP=0x0000000000031102
- (id)filterIndexWithFilter:(id)arg1;	// IMP=0x0000000000030787
- (id)readIndexFromDiskWithError:(id *)arg1;	// IMP=0x000000000002fe12
- (id)copyChangedConfigurationIDs:(id)arg1;	// IMP=0x000000000002fa52
- (_Bool)configurationHasChanged:(id)arg1;	// IMP=0x000000000002f7a6
- (void)clearLoadedConfigurationsWithIDs:(id)arg1;	// IMP=0x000000000002f5b5
- (void)didLoadConfiguration:(id)arg1;	// IMP=0x000000000002f4b0
- (void)didLoadConfiguration:(id)arg1 withSignature:(id)arg2;	// IMP=0x000000000002f229
- (void)registerForChangeNotifications;	// IMP=0x000000000002ef27
- (void)notifyChanges;	// IMP=0x000000000002ecaa
- (void)getCurrentIndexWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e63b
- (_Bool)reloadFromDisk;	// IMP=0x000000000002db15
- (id)copyCurrentIndexWithConfigurationIDsExpunged:(id)arg1;	// IMP=0x000000000002d547
- (void)postGeneration;	// IMP=0x000000000002b510
- (void)sendRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b40f
@property(copy) CDUnknownBlockType incomingMessageHandler;
- (id)decodeConfigurationWithIdentifier:(id)arg1;	// IMP=0x000000000002b1a1
- (void)executeCallbackOnQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b127
- (void)executeBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002afc8
- (id)errorWithCode:(long long)arg1 specifics:(id)arg2;	// IMP=0x000000000002ad81
- (id)description;	// IMP=0x000000000002ad73
- (void)dealloc;	// IMP=0x000000000002ac5b
- (id)initSynchronous;	// IMP=0x000000000002abf0
- (id)initForAllUsers;	// IMP=0x000000000002abdc
- (id)initWithPluginType:(id)arg1;	// IMP=0x000000000002ab82
- (id)init;	// IMP=0x000000000002ab19
- (id)initWithUserUUID:(id)arg1;	// IMP=0x000000000002a844

@end

