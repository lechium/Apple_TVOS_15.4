//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSCoder.h>

@class NSArray;

@interface NEHasher : NSCoder
{
    struct CC_SHA1state_st *_sha1Context;	// 8 = 0x8
    NSArray *_classPrefixWhitelist;	// 16 = 0x10
}

+ (id)hashObject:(id)arg1 withClassPrefixWhitelist:(id)arg2;	// IMP=0x00000000000760b7
+ (id)hashObject:(id)arg1;	// IMP=0x000000000007603c
- (void).cxx_destruct;	// IMP=0x00000000000770a9
@property(retain) NSArray *classPrefixWhitelist; // @synthesize classPrefixWhitelist=_classPrefixWhitelist;
@property struct CC_SHA1state_st *sha1Context; // @synthesize sha1Context=_sha1Context;
- (id)decodePropertyListForKey:(id)arg1;	// IMP=0x000000000007704e
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000007703c
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;	// IMP=0x000000000007702a
- (id)decodeObjectForKey:(id)arg1;	// IMP=0x0000000000077018
- (int)decodeIntForKey:(id)arg1;	// IMP=0x0000000000076fe8
- (long long)decodeIntegerForKey:(id)arg1;	// IMP=0x0000000000076fb6
- (long long)decodeInt64ForKey:(id)arg1;	// IMP=0x0000000000076f84
- (int)decodeInt32ForKey:(id)arg1;	// IMP=0x0000000000076f54
- (float)decodeFloatForKey:(id)arg1;	// IMP=0x0000000000076f22
- (double)decodeDoubleForKey:(id)arg1;	// IMP=0x0000000000076eef
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;	// IMP=0x0000000000076ec8
- (_Bool)decodeBoolForKey:(id)arg1;	// IMP=0x0000000000076e9b
- (id)decodeDataObject;	// IMP=0x0000000000076e5a
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;	// IMP=0x0000000000076e19
- (void)encodeObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000076e07
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;	// IMP=0x0000000000076dde
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000076db6
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;	// IMP=0x0000000000076d8d
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;	// IMP=0x0000000000076d63
- (void)encodeInt:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000076d3b
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;	// IMP=0x0000000000076d11
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000076cff
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000076cc4
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;	// IMP=0x0000000000076cb2
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;	// IMP=0x0000000000076c8a
- (void)encodeDataObject:(id)arg1;	// IMP=0x0000000000076bf0
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;	// IMP=0x0000000000076311
- (long long)versionForClassName:(id)arg1;	// IMP=0x0000000000076309
- (_Bool)containsValueForKey:(id)arg1;	// IMP=0x0000000000076301
- (_Bool)allowsKeyedCoding;	// IMP=0x00000000000762f9
- (id)finishHashing;	// IMP=0x0000000000076233
- (void)dealloc;	// IMP=0x00000000000761d5
- (id)init;	// IMP=0x000000000007615f

@end

