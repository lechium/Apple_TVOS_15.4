//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreML/NSSecureCoding-Protocol.h>

@class NSArray;

@interface MLMultiArray : NSObject <NSSecureCoding>
{
    struct unique_ptr<StorageManager, std::default_delete<StorageManager>> _storageManager;	// 8 = 0x8
    _Bool _managingData;	// 16 = 0x10
    NSArray *_shape;	// 24 = 0x18
    NSArray *_strides;	// 32 = 0x20
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000031af6
+ (id)stringForDataType:(long long)arg1;	// IMP=0x0000000000031ab3
+ (id)arrayFromIndexVector:(const void *)arg1;	// IMP=0x00000000000319d2
+ (int)cppStorageOrder:(long long)arg1;	// IMP=0x0000000000038e0c
+ (id)float32MatrixWithValues:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003656c
+ (id)doubleMatrixWithValues:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000036150
+ (_Bool)getShapeOfArrayOfSameLengthArrays:(id)arg1 numberOfRows:(unsigned long long *)arg2 numberOfColumns:(unsigned long long *)arg3 error:(id *)arg4;	// IMP=0x0000000000035f7a
+ (id)doubleMultiArrayWithShape:(id)arg1 valueArray:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000035cf1
+ (id)doubleVectorWithValues:(id)arg1;	// IMP=0x0000000000035b57
+ (id)doubleMultiArrayWithCopyOfMultiArray:(id)arg1;	// IMP=0x0000000000035a98
+ (id)multiArrayByConcatenatingMultiArrays:(id)arg1 alongAxis:(long long)arg2 dataType:(long long)arg3;	// IMP=0x000000000003728e
+ (_Bool)validateMultiArrays:(id)arg1 forConcatenatingAlongAxis:(long long)arg2 normalizedAxis:(unsigned long long *)arg3 reason:(id *)arg4;	// IMP=0x0000000000036ce8
+ (struct __CVBuffer *)pixelBufferBGRA8FromMultiArrayCHW:(id)arg1 channelOrderIsBGR:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000003ec3b
+ (struct __CVBuffer *)pixelBufferGray8FromMultiArrayHW:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003e8d2
- (id).cxx_construct;	// IMP=0x00000000000304c4
- (void).cxx_destruct;	// IMP=0x0000000000030491
@property(readonly, nonatomic) NSArray *strides; // @synthesize strides=_strides;
@property(readonly, nonatomic) NSArray *shape; // @synthesize shape=_shape;
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000002fec8
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000002fd64
- (id)description;	// IMP=0x000000000002f80a
@property(readonly, nonatomic) long long dataType;
@property(readonly, nonatomic) struct __CVBuffer *pixelBuffer;
@property(readonly, nonatomic) long long count;
@property(readonly, nonatomic) const void *bytes;
@property(readonly, nonatomic) void *mutableBytes;
@property(readonly, nonatomic) void *dataPointer;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x000000000002f37c
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x000000000002f28f
- (unsigned long long)offsetForKeyedSubscript:(id)arg1;	// IMP=0x000000000002ef1b
- (void)setObject:(id)arg1 atIndexedSubscript:(long long)arg2;	// IMP=0x000000000002ee70
- (id)objectAtIndexedSubscript:(long long)arg1;	// IMP=0x000000000002ede0
- (void)setNumber:(id)arg1 atOffset:(unsigned long long)arg2;	// IMP=0x000000000002ec4b
- (id)numberAtOffset:(unsigned long long)arg1;	// IMP=0x000000000002eaa1
- (id)initWithPixelBuffer:(struct __CVBuffer *)arg1 shape:(id)arg2;	// IMP=0x000000000002e452
- (id)initWithMultiArrayBuffer:(shared_ptr_4162d239)arg1;	// IMP=0x000000000002e2c6
- (id)initWithDataPointer:(void *)arg1 shape:(id)arg2 dataType:(long long)arg3 strides:(id)arg4 deallocator:(CDUnknownBlockType)arg5 error:(id *)arg6;	// IMP=0x000000000002e2a3
- (id)initWithBytesNoCopy:(void *)arg1 shape:(id)arg2 dataType:(long long)arg3 strides:(id)arg4 deallocator:(CDUnknownBlockType)arg5 mutableShapedBufferProvider:(CDUnknownBlockType)arg6 error:(id *)arg7;	// IMP=0x000000000002de77
- (id)initWithShape:(id)arg1 dataType:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000002de5f
- (id)init;	// IMP=0x000000000002ddb0
- (void)getMutableBytesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000033662
- (void)getBytesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000033550
- (float *)float32Pointer;	// IMP=0x00000000000359d2
- (double *)doublePointer;	// IMP=0x000000000003590c
- (_Bool)isEqualToMultiArray:(id)arg1;	// IMP=0x0000000000034f0e
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000034e99
- (_Bool)isContiguousInOrder:(long long)arg1;	// IMP=0x0000000000034dd7
@property(readonly, nonatomic, getter=isContiguous) _Bool contiguous;
@property(readonly, nonatomic, getter=isManagingData) _Bool managingData;
@property(readonly, nonatomic) unsigned long long numberOfBytesPerElement;
- (id)initWithBytesNoCopy:(void *)arg1 shape:(id)arg2 dataType:(long long)arg3 strides:(id)arg4 mutableShapedBufferProvider:(CDUnknownBlockType)arg5;	// IMP=0x000000000003428c
- (id)initWithShape:(id)arg1 dataType:(long long)arg2 storageOrder:(long long)arg3 bufferAlignment:(unsigned long long)arg4;	// IMP=0x0000000000033ec6
- (id)initWithShape:(id)arg1 dataType:(long long)arg2 storageOrder:(long long)arg3 error:(id *)arg4;	// IMP=0x0000000000033b4a
- (_Bool)vectorizeIntoMultiArray:(id)arg1 storageOrder:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000000034b07
- (_Bool)copyIntoMultiArray:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003496f
- (id)numberArray;	// IMP=0x0000000000034939
- (_Bool)setRangeWithRawData:(id)arg1 destIndex:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000034555
- (_Bool)fillWithNumber:(id)arg1;	// IMP=0x00000000000342ae
- (id)multiArrayViewExpandingDimensionsAtAxis:(long long)arg1;	// IMP=0x0000000000033515
- (id)squeezeDimensions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000334a3
- (id)squeeze;	// IMP=0x0000000000033468
- (id)sliceAtOrigin:(id)arg1 shape:(id)arg2 squeeze:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000000333b9
- (void *)multiArrayBuffer;	// IMP=0x0000000000033af4
- (_Bool)renderToCVPixelBuffer:(struct __CVBuffer *)arg1 channelOrderIsBGR:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000003e7f2
- (_Bool)renderTo32BGRAPixelBuffer:(struct __CVBuffer *)arg1 channelOrderIsBGR:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000003e00f
- (_Bool)renderToOneComponent8PixelBuffer:(struct __CVBuffer *)arg1 error:(id *)arg2;	// IMP=0x000000000003da36
- (id)debugQuickLookObject;	// IMP=0x00000000000f455d

@end

