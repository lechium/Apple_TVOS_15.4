//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Vision/VNClusteringCancelling-Protocol.h>
#import <Vision/VNClusteringReadOnly-Protocol.h>

@class NSData, NSString, VNClusteringLogger, VNSuggestionsLogger;

__attribute__((visibility("hidden")))
@interface VNGreedyClusteringReadOnly : NSObject <VNClusteringReadOnly, VNClusteringCancelling>
{
    VNClusteringLogger *_clusteringLogger;	// 8 = 0x8
    VNSuggestionsLogger *_suggestionsLogger;	// 16 = 0x10
    NSString *_cacheFolderPath;	// 24 = 0x18
    NSString *_algorithmType;	// 32 = 0x20
    NSData *_state;	// 40 = 0x28
    _Bool _vectorMapReadOnlyFlag;	// 48 = 0x30
    unsigned long long _faceprintRevision;	// 56 = 0x38
    unsigned long long _torsoprintRevision;	// 64 = 0x40
    NSString *_ageClassifierFilePath;	// 72 = 0x48
    float _ageClassifierBabyThreshold;	// 80 = 0x50
    float _ageClassifierKidThreshold;	// 84 = 0x54
    shared_ptr_8fc713d1 m_ClusteringImpl_const;	// 88 = 0x58
}

+ (id)clustererModelFileNamesFromState:(id)arg1 storedInPath:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000022a40
+ (id)getRepresentativenessForFaces:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002263c
+ (void)addPersonData:(id)arg1 withGroupingIdentifiers:(id)arg2 toFaceDescriptorBuffer:(void *)arg3;	// IMP=0x00000000000224e3
+ (void)addFaceObservations:(id)arg1 withGroupingIdentifiers:(id)arg2 toFaceDescriptorBuffer:(void *)arg3;	// IMP=0x000000000002234f
+ (void)addFaceObservations:(id)arg1 toFaceDescriptorBuffer:(void *)arg2;	// IMP=0x0000000000021fcc
+ (id)nonGroupedGroupID;	// IMP=0x0000000000021f9c
- (id).cxx_construct;	// IMP=0x0000000000020446
- (void).cxx_destruct;	// IMP=0x00000000000203c7
- (_Bool)cancelClustering:(id *)arg1;	// IMP=0x00000000000203b2
- (id)maximumFaceIdInModelAndReturnError:(id *)arg1;	// IMP=0x00000000000202e4
- (id)getDistances:(id)arg1 to:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001f1f0
- (id)getClustersForClusterIds:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001ea2f
- (id)getAllClustersFromStateAndReturnError:(id *)arg1;	// IMP=0x000000000001e7d7
- (id)getDistanceBetweenLevel1Clusters:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001e650
- (id)getDistanceBetweenLevel0ClustersWithFaceId:(id)arg1 andFaceId:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001e487
- (id)getLevel1ClusteredIdsGroupedByLevel0ClustersForFaceId:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001deb0
- (id)getLevel0ClusteredIdsForFaceId:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001dbde
- (id)getClusteredIds:(id *)arg1;	// IMP=0x000000000001da1d
- (id)getClusterState:(id *)arg1;	// IMP=0x000000000001d8b7
- (id)suggestionsForClusterIdsWithFlags:(id)arg1 affinityThreshold:(float)arg2 error:(id *)arg3;	// IMP=0x000000000001ba78
- (id)convertUpdatePairsToClusters:(void *)arg1;	// IMP=0x000000000001b5b5
- (void)setGreedyClustererFaces_const:(shared_ptr_8fc713d1)arg1;	// IMP=0x000000000001b55d
- (id)initWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001b16e
- (void)initializeLogging;	// IMP=0x000000000001aff6
- (_Bool)_parseOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ab3b

@end

