//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Vision/VNClustererModelBuilding-Protocol.h>
#import <Vision/VNClustererModelQuerying-Protocol.h>

@protocol VNClustererModelQuerying><VNClustererModelBuilding;

@interface VNClustererBuilder : NSObject <VNClustererModelBuilding, VNClustererModelQuerying>
{
    id <VNClustererModelQuerying><VNClustererModelBuilding> _context;	// 8 = 0x8
}

+ (id)nonGroupedGroupID;	// IMP=0x000000000021b71f
+ (id)clustererModelFileNamesFromState:(id)arg1 storedInPath:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021b6f6
+ (id)distanceBetweenFacesWithFaceObservation:(id)arg1 andFaceObservation:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021b610
+ (id)distanceBetweenFacesWithFaceprint:(id)arg1 andFaceprint:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021b5e7
+ (id)representativenessForFaces:(id)arg1 error:(id *)arg2;	// IMP=0x000000000021b5be
+ (id)clustererBuilderWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000021b274
- (void).cxx_destruct;	// IMP=0x000000000021b264
- (id)maximumFaceIdInModelAndReturnError:(id *)arg1;	// IMP=0x000000000021b24e
- (id)suggestionsForClustersWithFaceIds:(id)arg1 affinityThreshold:(float)arg2 canceller:(id)arg3 error:(id *)arg4;	// IMP=0x000000000021b228
- (id)distanceBetweenLevel1Clusters:(id)arg1 error:(id *)arg2;	// IMP=0x000000000021b202
- (id)distanceBetweenClustersWithFaceId:(id)arg1 andFaceId:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021b1dc
- (id)getDistances:(id)arg1 to:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021b1b6
- (id)l1ClusteredFaceIdsGroupedByL0ClustersForClustersContainingFaceIds:(id)arg1 error:(id *)arg2;	// IMP=0x000000000021b190
- (id)getAllClustersAndReturnError:(id *)arg1;	// IMP=0x000000000021b17a
- (id)clusteredFaceIdsForClusterContainingFaceId:(id)arg1 error:(id *)arg2;	// IMP=0x000000000021b154
- (id)allClusteredFaceIdsAndReturnError:(id *)arg1;	// IMP=0x000000000021b13e
- (id)updateModelByAddingPersons:(id)arg1 withGroupingIdentifiers:(id)arg2 andRemovingPersons:(id)arg3 canceller:(id)arg4 error:(id *)arg5;	// IMP=0x000000000021b108
- (id)updateModelByAddingFaces:(id)arg1 withGroupingIdentifiers:(id)arg2 andRemovingFaces:(id)arg3 canceller:(id)arg4 error:(id *)arg5;	// IMP=0x000000000021b0d2
- (id)updateModelByAddingFaces:(id)arg1 andRemovingFaces:(id)arg2 canceller:(id)arg3 error:(id *)arg4;	// IMP=0x000000000021b099
- (id)updateModelByRemovingFaces:(id)arg1 canceller:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021b05e
- (id)updateModelByAddingFaces:(id)arg1 withGroupingIdentifiers:(id)arg2 canceller:(id)arg3 error:(id *)arg4;	// IMP=0x000000000021b027
- (id)updateModelByAddingFaces:(id)arg1 canceller:(id)arg2 error:(id *)arg3;	// IMP=0x000000000021aff1
- (id)saveAndReturnCurrentModelState:(id *)arg1;	// IMP=0x000000000021afdb
- (_Bool)resetModelState:(id)arg1 error:(id *)arg2;	// IMP=0x000000000021afc5
- (id)initWithType:(id)arg1 cachePath:(id)arg2 state:(id)arg3 threshold:(float)arg4 torsoThreshold:(float)arg5 requestRevision:(unsigned long long)arg6 torsoprintRequestRevision:(unsigned long long)arg7 error:(id *)arg8;	// IMP=0x000000000021ae51
- (id)initWithType:(id)arg1 cachePath:(id)arg2 state:(id)arg3 threshold:(float)arg4 requestRevision:(unsigned long long)arg5 torsoprintRequestRevision:(unsigned long long)arg6 error:(id *)arg7;	// IMP=0x000000000021ac92

@end

