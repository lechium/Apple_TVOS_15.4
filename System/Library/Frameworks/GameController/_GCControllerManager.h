//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <GameController/GameControllerClientProtocol-Protocol.h>
#import <GameController/_GCHIDEventSource-Protocol.h>
#import <GameController/_GCIPCObjectMaterializationContext-Protocol.h>
#import <GameController/_GCIPCObjectRegistry-Protocol.h>
#import <GameController/_GCIPCServiceRegistry-Protocol.h>
#import <GameController/_GCImplicitIPCObject-Protocol.h>

@class GCController, GCExtendedGamepad, GCKeyboardAndMouseManager, GCMicroGamepad, GCMouse, NSMapTable, NSMutableArray, NSMutableDictionary, NSString, NSThread, NSTimer, NSXPCConnection, _GCHIDEventSubject;
@protocol GCRemoteDaemonProxy, NSObject><NSCopying><NSSecureCoding, OS_dispatch_queue, _GCIPCObjectRegistry, _GCIPCServiceRegistry;

@interface _GCControllerManager : NSObject <_GCImplicitIPCObject, _GCIPCObjectRegistry, _GCIPCServiceRegistry, _GCIPCObjectMaterializationContext, GameControllerClientProtocol, _GCHIDEventSource>
{
    NSObject<OS_dispatch_queue> *_controllersQueue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_hidSystemClientQueue;	// 16 = 0x10
    struct os_unfair_lock_s _ipcRegistryLock;	// 24 = 0x18
    NSMapTable *_ipcObjectRegistry;	// 32 = 0x20
    struct __IOHIDEventSystemClient *_hidSystemClient;	// 40 = 0x28
    _GCHIDEventSubject *_hidEventSource;	// 48 = 0x30
    GCController *_currentController;	// 56 = 0x38
    GCMicroGamepad *_currentMicroGamepad;	// 64 = 0x40
    GCExtendedGamepad *_currentExtendedGamepad;	// 72 = 0x48
    NSXPCConnection *_connection;	// 80 = 0x50
    NSXPCConnection *_daemonConnection;	// 88 = 0x58
    NSObject<GCRemoteDaemonProxy> *_remote;	// 96 = 0x60
    NSThread *_hidInputThread;	// 104 = 0x68
    struct __CFRunLoop *_hidInputThreadRunLoop;	// 112 = 0x70
    struct __CFRunLoopSource *_hidThreadRunLoopSource;	// 120 = 0x78
    NSMutableArray *_hidThreadExecutionBlocks;	// 128 = 0x80
    struct __IOHIDManager *_hidManager;	// 136 = 0x88
    struct IONotificationPort *_usbNotify;	// 144 = 0x90
    unsigned int _usbAddedIterator;	// 152 = 0x98
    unsigned int _usbRemovedIterator;	// 156 = 0x9c
    id _hidEventObservation;	// 160 = 0xa0
    _Bool _shouldKeepRunning;	// 168 = 0xa8
    CDUnknownBlockType _requestConnectedHostsCallback;	// 176 = 0xb0
    NSMutableDictionary *_controllersByUDID;	// 184 = 0xb8
    NSMutableDictionary *_controllersByRegistryID;	// 192 = 0xc0
    CDUnknownBlockType _logger;	// 200 = 0xc8
    GCController *_firstMicroGamepad;	// 208 = 0xd0
    NSTimer *_idleWatchTimer;	// 216 = 0xd8
    _Bool _gameControllerActive;	// 224 = 0xe0
    _Bool _isAppInBackground;	// 225 = 0xe1
    long long _currentMediaRemoteInputMode;	// 232 = 0xe8
    GCKeyboardAndMouseManager *_keyboardAndMouseManager;	// 240 = 0xf0
    GCController *__controller_genericBTRemote;	// 248 = 0xf8
    _Bool _shouldMonitorBackgroundEvents;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_hidSystemPropertyQueue;	// 264 = 0x108
}

+ (void)initialize;	// IMP=0x000000000001ebc0
+ (id)sharedInstance;	// IMP=0x000000000001eb56
- (void).cxx_destruct;	// IMP=0x000000000001fbdb
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *hidSystemPropertyQueue; // @synthesize hidSystemPropertyQueue=_hidSystemPropertyQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *controllersQueue; // @synthesize controllersQueue=_controllersQueue;
- (void)open;	// IMP=0x000000000001fb24
- (id)observeHIDEvents:(CDUnknownBlockType)arg1;	// IMP=0x000000000001fb0e
- (id)observeHIDEvents:(CDUnknownBlockType)arg1 forService:(id)arg2;	// IMP=0x000000000001faf8
- (void)teardownHIDMonitor:(_Bool)arg1;	// IMP=0x000000000001f9b4
- (void)setupHIDMonitor:(_Bool)arg1;	// IMP=0x000000000001f2d5
- (void)onScreenshotTriggeredWithController:(id)arg1;	// IMP=0x000000000001f2cf
- (void)onVideoRecordingToggledWithController:(id)arg1 mode:(long long)arg2;	// IMP=0x000000000001f2c9
- (void)onVideoRecordingToggledWithController:(id)arg1;	// IMP=0x000000000001f2c3
- (void)stopVideoRecordingBuffering;	// IMP=0x000000000001f2bd
- (void)startVideoRecordingBuffering;	// IMP=0x000000000001f2b7
- (void)enableKeyboardAndMouseSupport;	// IMP=0x000000000001f2b1
- (void)onHIDDeviceRemoved:(struct __IOHIDServiceClient *)arg1;	// IMP=0x000000000001f2ab
- (void)onHIDDeviceAdded:(struct __IOHIDServiceClient *)arg1;	// IMP=0x000000000001f2a5
- (id)makeHIDEventSource:(struct __IOHIDEventSystemClient *)arg1;	// IMP=0x000000000001f293
- (id)HIDDeviceMatchingAttributes;	// IMP=0x000000000001eebe
@property(nonatomic) _Bool shouldMonitorBackgroundEvents; // @synthesize shouldMonitorBackgroundEvents=_shouldMonitorBackgroundEvents;
- (void)dealloc;	// IMP=0x000000000001ed98
- (id)init;	// IMP=0x000000000001ec72
@property(readonly) id <_GCIPCServiceRegistry> IPCServiceRegistry;
@property(readonly) id <_GCIPCObjectRegistry> IPCObjectRegistry;
- (id)serviceClientForIPCService:(id)arg1;	// IMP=0x000000000001fe7e
- (void)registerIPCObject:(id)arg1;	// IMP=0x000000000001fd72
- (id)IPCObjectWithIdentifier:(id)arg1;	// IMP=0x000000000001fd0b
@property(readonly) id <NSObject><NSCopying><NSSecureCoding> identifier;
- (void)microControllerWithUDID:(unsigned long long)arg1 setDigitizerX:(float)arg2 digitizerY:(float)arg3 withTimeStamp:(unsigned long long)arg4 touchDown:(_Bool)arg5;	// IMP=0x000000000009a1d3
- (void)microControllerWithDigitizerX:(float)arg1 withY:(float)arg2 withTimeStamp:(unsigned long long)arg3 touchDown:(_Bool)arg4;	// IMP=0x000000000009a1cd
- (void)controllerWithUDID:(unsigned long long)arg1 setValue0:(float)arg2 setValue1:(float)arg3 setValue2:(float)arg4 setValue3:(float)arg5 forElement:(int)arg6;	// IMP=0x0000000000099d77
- (void)controllerWithUDID:(unsigned long long)arg1 setValue:(float)arg2 forElement:(int)arg3;	// IMP=0x0000000000098890
- (void)controller:(id)arg1 setValue:(float)arg2 forElement:(int)arg3;	// IMP=0x0000000000098843
- (void)controllerWithUDID:(unsigned long long)arg1 setData:(id)arg2;	// IMP=0x000000000009874c
- (void)addControllerForAppStoreRemote:(id)arg1;	// IMP=0x00000000000985be
- (_Bool)combineSiriRemoteHIDDevicesWithNewController:(id)arg1 existingController:(id)arg2;	// IMP=0x0000000000097d5d
@property(nonatomic) __weak GCController *firstMicroGamepad;
- (int)connectedATVRemoteCount;	// IMP=0x0000000000097b00
- (_Bool)detectAndSetIfFirstMicroGamepad:(id)arg1;	// IMP=0x00000000000977b3
- (_Bool)coalesceController:(id)arg1;	// IMP=0x0000000000097471
- (void)removeCoalescedControllerComponent:(id)arg1;	// IMP=0x0000000000096e80
- (void)setMediaRemoteEnabled:(_Bool)arg1;	// IMP=0x0000000000096e6c
- (void)_legacy_updateControllerWithEvent:(struct __IOHIDEvent *)arg1;	// IMP=0x0000000000096870
@property(retain) GCExtendedGamepad *currentExtendedGamepad;
@property(retain) GCMicroGamepad *currentMicroGamepad;
@property(retain) GCController *currentController;
- (id)_legacy_coalescedKeyboard;	// IMP=0x0000000000095fb2
- (id)coalescedKeyboard;	// IMP=0x0000000000095fa0
@property(retain) GCMouse *currentMouse;
- (id)_legacy_mice;	// IMP=0x0000000000095f40
- (id)mice;	// IMP=0x0000000000095f2e
- (void)_legacy_removeControllerWithServiceRef:(struct __IOHIDServiceClient *)arg1;	// IMP=0x0000000000095db4
- (void)_legacy_addControllerWithServiceRef:(struct __IOHIDServiceClient *)arg1;	// IMP=0x0000000000095c08
- (_Bool)isExistingController:(id)arg1;	// IMP=0x0000000000095a20
- (id)_legacy_controllers;	// IMP=0x00000000000956e8
- (void)_queue_removeController:(id)arg1 registryID:(id)arg2;	// IMP=0x0000000000095258
- (void)removeController:(id)arg1 registryID:(id)arg2;	// IMP=0x000000000009511e
- (void)removeController:(id)arg1;	// IMP=0x000000000009510a
- (void)addController:(id)arg1;	// IMP=0x0000000000094c8b
- (void)storeController:(id)arg1;	// IMP=0x0000000000094952
- (void)_legacy_unpublishController:(id)arg1;	// IMP=0x00000000000946fe
- (void)updateCurrentControllerAndProfileForUnpublishedController:(id)arg1;	// IMP=0x0000000000094101
- (void)_legacy_publishController:(id)arg1;	// IMP=0x0000000000093e5b
- (id)controllers;	// IMP=0x0000000000093e49
- (void)_legacy_stopHIDEventMonitor;	// IMP=0x0000000000093dbc
- (void)_legacy_startHIDEventMonitor;	// IMP=0x0000000000093ca9
- (void)_legacy_stopHIDDeviceMonitor;	// IMP=0x0000000000093c26
- (void)_legacy_startHIDDeviceMonitor;	// IMP=0x0000000000093ba0
- (id)_legacy_makeHIDEventSource:(struct __IOHIDEventSystemClient *)arg1;	// IMP=0x0000000000093a50
@property(nonatomic) struct __IOHIDManager *hidManager;
- (void)startIdleWatchTimer;	// IMP=0x00000000000939ca
- (void)updateIdleTimer:(id)arg1;	// IMP=0x000000000009398f
@property(nonatomic) _Bool gameControllerActive;
- (void)CBApplicationDidBecomeActive;	// IMP=0x0000000000093620
- (void)CBApplicationWillResignActive;	// IMP=0x00000000000932d5
@property(readonly, nonatomic) _Bool isAppInBackground;
@property(retain, nonatomic) NSObject<GCRemoteDaemonProxy> *remote;
@property(retain, nonatomic) NSXPCConnection *daemonConnection;
@property(retain, nonatomic) NSXPCConnection *connection;
- (void)async_HIDBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000009314e
- (void)launchHIDInputThread;	// IMP=0x00000000000930f7
- (void)threadHIDInputOnMain:(id)arg1;	// IMP=0x000000000009306d
- (void)threadHIDInputOffMain:(id)arg1;	// IMP=0x0000000000092e76
@property(readonly, nonatomic) NSMutableArray *hidThreadExecutionBlocks;
@property(readonly, nonatomic) struct __CFRunLoopSource *hidThreadRunLoopSource;
@property(readonly, nonatomic) struct __CFRunLoop *hidInputThreadRunLoop;
@property(readonly, nonatomic) NSThread *hidInputThread;
- (void)_legacy_dealloc;	// IMP=0x0000000000092d29
- (void)_legacy_init;	// IMP=0x0000000000092bac
@property(copy, nonatomic) CDUnknownBlockType logger;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

