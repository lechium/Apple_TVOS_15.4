//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <MetalKit/CALayerDelegate-Protocol.h>
#import <MetalKit/NSCoding-Protocol.h>

@class CADisplayLink, CAMetalLayer, MTKOffscreenDrawable, MTLRenderPassDescriptor, NSString;
@protocol CAMetalDrawable, MTKViewDelegate, MTLDevice, MTLTexture;

@interface MTKView : UIView <NSCoding, CALayerDelegate>
{
    CAMetalLayer *_metalLayer;	// 8 = 0x8
    _Bool _sizeDirty;	// 16 = 0x10
    struct CGSize _drawableScaleFactor;	// 24 = 0x18
    _Bool _pausedOnBackgrounding;	// 40 = 0x28
    CADisplayLink *_displayLink;	// 48 = 0x30
    id <CAMetalDrawable> _currentDrawable;	// 56 = 0x38
    CDUnknownFunctionPointerType _drawRectSubIMP;	// 64 = 0x40
    _Bool _subClassOverridesDrawRect;	// 72 = 0x48
    _Bool _deviceReset;	// 73 = 0x49
    _Bool _doesNotifyOnRecommendedSizeUpdate;	// 74 = 0x4a
    id <MTLTexture> _depthStencilTexture;	// 80 = 0x50
    id <MTLTexture> _multisampleColorTexture;	// 88 = 0x58
    _Bool _framebufferOnly;	// 96 = 0x60
    unsigned long long _depthStencilTextureUsage;	// 104 = 0x68
    unsigned long long _multisampleColorTextureUsage;	// 112 = 0x70
    unsigned long long _drawableAttachmentIndex;	// 120 = 0x78
    long long _nominalFramesPerSecond;	// 128 = 0x80
    long long _maxValidAttachmentIndex;	// 136 = 0x88
    unsigned long long _colorPixelFormats[8];	// 144 = 0x90
    id <MTLTexture> _multisampleColorTextures[8];	// 208 = 0xd0
    id <MTLTexture> _colorTextures[8];	// 272 = 0x110
    MTKOffscreenDrawable *_offscreenSwapChain[3];	// 336 = 0x150
    unsigned long long _drawableIdx;	// 360 = 0x168
    int _renderAttachmentDirtyState;	// 368 = 0x170
    unsigned long long _terminateAfterFrame;	// 376 = 0x178
    unsigned long long _terminateAfterSeconds;	// 384 = 0x180
    unsigned long long _measureAfterFrame;	// 392 = 0x188
    unsigned long long _measureAfterSeconds;	// 400 = 0x190
    unsigned long long _dumpFrameAtFrame;	// 408 = 0x198
    unsigned long long _dumpFrameAtSeconds;	// 416 = 0x1a0
    NSString *_dumpPath;	// 424 = 0x1a8
    _Bool _dumpFirstFrame;	// 432 = 0x1b0
    _Bool _drawOffscreen;	// 433 = 0x1b1
    long long _forceOrientation;	// 440 = 0x1b8
    double _startTime;	// 448 = 0x1c0
    unsigned int _frameNum;	// 456 = 0x1c8
    _Bool _enableSetNeedsDisplay;	// 460 = 0x1cc
    _Bool _autoResizeDrawable;	// 461 = 0x1cd
    _Bool _paused;	// 462 = 0x1ce
    unsigned int _clearStencil;	// 464 = 0x1d0
    id <MTKViewDelegate> _delegate;	// 472 = 0x1d8
    id <MTLDevice> _device;	// 480 = 0x1e0
    unsigned long long _depthStencilPixelFormat;	// 488 = 0x1e8
    unsigned long long _sampleCount;	// 496 = 0x1f0
    double _clearDepth;	// 504 = 0x1f8
    long long _preferredFramesPerSecond;	// 512 = 0x200
    struct CGSize _drawableSize;	// 520 = 0x208
    struct CGSize _preferredDrawableSize;	// 536 = 0x218
    CDStruct_3ead2808 _clearColor;	// 552 = 0x228
}

+ (Class)layerClass;	// IMP=0x00000000000019ad
- (void).cxx_destruct;	// IMP=0x0000000000006679
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(readonly, nonatomic) struct CGSize preferredDrawableSize; // @synthesize preferredDrawableSize=_preferredDrawableSize;
@property(nonatomic) struct CGSize drawableSize; // @synthesize drawableSize=_drawableSize;
@property(nonatomic) _Bool autoResizeDrawable; // @synthesize autoResizeDrawable=_autoResizeDrawable;
@property(nonatomic) _Bool enableSetNeedsDisplay; // @synthesize enableSetNeedsDisplay=_enableSetNeedsDisplay;
@property(nonatomic) long long preferredFramesPerSecond; // @synthesize preferredFramesPerSecond=_preferredFramesPerSecond;
@property(nonatomic) unsigned int clearStencil; // @synthesize clearStencil=_clearStencil;
@property(nonatomic) double clearDepth; // @synthesize clearDepth=_clearDepth;
@property(nonatomic) CDStruct_3ead2808 clearColor; // @synthesize clearColor=_clearColor;
@property(nonatomic) unsigned long long sampleCount; // @synthesize sampleCount=_sampleCount;
@property(nonatomic) unsigned long long depthStencilPixelFormat; // @synthesize depthStencilPixelFormat=_depthStencilPixelFormat;
@property(retain, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
@property(nonatomic) __weak id <MTKViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool presentsWithTransaction;
@property(nonatomic) _Bool framebufferOnly;
@property(nonatomic) unsigned long long multisampleColorAttachmentTextureUsage;
@property(nonatomic) unsigned long long depthStencilAttachmentTextureUsage;
- (void)setNilValueForKey:(id)arg1;	// IMP=0x00000000000061ac
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000000000000614d
- (void)layoutSubviews;	// IMP=0x00000000000060ff
- (void)setContentScaleFactor:(double)arg1;	// IMP=0x0000000000005e87
- (void)_resizeMetalLayerDrawable;	// IMP=0x0000000000005dfa
- (void)_resizeDrawable;	// IMP=0x0000000000005d17
@property(readonly) id <MTLDevice> preferredDevice;
- (_Bool)_controlsOwnScaleFactor;	// IMP=0x0000000000005b7d
- (_Bool)_canDrawContent;	// IMP=0x0000000000005b75
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x0000000000005b54
- (void)displayLayer:(id)arg1;	// IMP=0x0000000000005b33
- (void)_updateToNativeScale;	// IMP=0x0000000000005ada
- (struct CGSize)_pixelSizeFromPointSize:(struct CGSize)arg1;	// IMP=0x0000000000005836
- (void)draw;	// IMP=0x0000000000005482
@property(readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
- (void)releaseDrawables;	// IMP=0x0000000000004f86
- (void)dealloc;	// IMP=0x0000000000004efc
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000004c2c
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000004766
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000004752
- (id)initWithFrame:(struct CGRect)arg1 device:(id)arg2;	// IMP=0x00000000000046c3
- (void)_applicationDidEnterBackground:(id)arg1;	// IMP=0x0000000000004671
- (void)_applicationWillEnterForeground:(id)arg1;	// IMP=0x0000000000004622
- (void)_createDisplayLinkForScreen:(id)arg1;	// IMP=0x00000000000044eb
- (void)didMoveToWindow;	// IMP=0x00000000000043fd
- (long long)_calculateRefeshesPerSecond;	// IMP=0x0000000000004331
- (void)setNominalFramesPerSecond:(long long)arg1;	// IMP=0x00000000000042b1
- (long long)nominalFramesPerSecond;	// IMP=0x00000000000042a0
@property(readonly, nonatomic) id <CAMetalDrawable> currentDrawable; // @synthesize currentDrawable=_currentDrawable;
@property(readonly, nonatomic) id <MTLTexture> multisampleColorTexture;
- (const id *)colorTexturesForceUpdate:(_Bool)arg1;	// IMP=0x0000000000003aae
- (const id *)colorTextures;	// IMP=0x0000000000003a9a
- (const id *)multisampleColorTexturesForceUpdate:(_Bool)arg1;	// IMP=0x000000000000359b
- (const id *)multisampleColorTextures;	// IMP=0x0000000000003587
@property(readonly, nonatomic) id <MTLTexture> depthStencilTexture;
- (void)createDepthStencilTexture;	// IMP=0x000000000000311b
- (unsigned long long)drawableAttachmentIndex;	// IMP=0x0000000000002ffe
- (void)setDrawableAttachmentIndex:(unsigned long long)arg1;	// IMP=0x0000000000002fe6
@property(nonatomic) unsigned long long colorPixelFormat;
@property(nonatomic) struct CGColorSpace *colorspace;
- (void)setColorPixelFormat:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000002edd
- (void)_dumpFrameImageWithFilename:(id)arg1;	// IMP=0x00000000000029b8
- (void)_dumpFramerate:(double)arg1 withFilename:(id)arg2;	// IMP=0x0000000000002848
- (unsigned long long)drawNumber;	// IMP=0x0000000000002838
- (double)startTime;	// IMP=0x0000000000002826
- (_Bool)exportToTargaAtLocation:(id)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 size:(unsigned long long)arg4 bytes:(void *)arg5;	// IMP=0x00000000000026ed
- (void)getEnvironmentSettings;	// IMP=0x0000000000001eb0
- (void)__initCommon;	// IMP=0x00000000000019be

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

