//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAudioFormat, NSArray, NSData, NSDictionary, NSString, NSURL;
@protocol AVAudioPlayerDelegate;

@interface AVAudioPlayer : NSObject
{
    id _impl;	// 8 = 0x8
    NSString *_currentDevice;	// 16 = 0x10
}

@property(copy) NSString *currentDevice; // @synthesize currentDevice=_currentDevice;
- (void)setMixToUplink:(_Bool)arg1;	// IMP=0x000000000003760a
- (_Bool)mixToUplink;	// IMP=0x00000000000375f7
- (void)setAudioSession:(id)arg1;	// IMP=0x000000000003755c
- (id)audioSession;	// IMP=0x0000000000037541
@property(copy, nonatomic) NSArray *channelAssignments;
- (float)averagePowerForChannel:(unsigned long long)arg1;	// IMP=0x0000000000037215
- (float)peakPowerForChannel:(unsigned long long)arg1;	// IMP=0x00000000000371dd
- (void)updateMeters;	// IMP=0x00000000000371c2
@property(getter=isMeteringEnabled) _Bool meteringEnabled;
@property long long numberOfLoops;
@property double currentTime;
@property(readonly) double deviceCurrentTime;
@property(readonly) unsigned long long numberOfChannels;
@property float pan;
@property float rate;
@property _Bool enableRate;
- (void)setVolume:(float)arg1 fadeDuration:(double)arg2;	// IMP=0x0000000000036f1d
@property float volume;
@property(readonly) double duration;
@property(readonly) AVAudioFormat *format;
@property(readonly) NSDictionary *settings;
@property __weak id <AVAudioPlayerDelegate> delegate;
@property(readonly) NSData *data;
@property(readonly) NSURL *url;
@property(readonly, getter=isPlaying) _Bool playing;
- (void)stop;	// IMP=0x0000000000036d86
- (void)pause;	// IMP=0x0000000000036d5c
- (_Bool)playAtTime:(double)arg1;	// IMP=0x0000000000036d19
- (_Bool)play;	// IMP=0x0000000000036ce7
- (_Bool)prepareToPlay;	// IMP=0x0000000000036cb5
- (id)initWithData:(id)arg1 fileTypeHint:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000036ad7
- (id)initWithContentsOfURL:(id)arg1 fileTypeHint:(id)arg2 error:(id *)arg3;	// IMP=0x000000000003694e
- (id)initWithContentsOfURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000036937
- (id)initWithData:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000036920
- (void)dealloc;	// IMP=0x00000000000368d0
- (void)finalize;	// IMP=0x000000000003688d
- (id)init;	// IMP=0x000000000003687f
- (void)endInterruption;	// IMP=0x00000000000385e1
- (void)endInterruptionWithFlags:(id)arg1;	// IMP=0x000000000003854d
- (void)beginInterruption;	// IMP=0x0000000000038502
- (void)handleInterruption:(id)arg1;	// IMP=0x00000000000382aa
- (void)privRemoveSessionListener;	// IMP=0x0000000000038249
- (void)decodeError:(id)arg1;	// IMP=0x0000000000038182
- (void)finishedPlaying:(id)arg1;	// IMP=0x00000000000380fb
- (id)initBase;	// IMP=0x00000000000380a0
- (id)impl;	// IMP=0x0000000000038096

@end

