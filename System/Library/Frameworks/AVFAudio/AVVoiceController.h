//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AVFAudio/AVAudioRemoteInputPlugin_PrivateTest-Protocol.h>

@class AVAudioFormat, NSDictionary, NSString;
@protocol AVVoiceControllerPlaybackDelegate, AVVoiceControllerRecordDelegate, Endpointer;

@interface AVVoiceController : NSObject <AVAudioRemoteInputPlugin_PrivateTest>
{
    void *_impl;	// 8 = 0x8
    unsigned long long _alertStartTime;	// 16 = 0x10
}

@property(readonly) unsigned long long alertStartTime; // @synthesize alertStartTime=_alertStartTime;
- (id)mockPluginEndpoint;	// IMP=0x0000000000020cfa
- (_Bool)setDuckOthersForStream:(unsigned long long)arg1 withSettings:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000020856
- (void)getInputChannelInfoForStream:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000020698
- (_Bool)setAnnounceCallsEnabledForStream:(unsigned long long)arg1 enable:(_Bool)arg2;	// IMP=0x00000000000203cb
- (_Bool)enableSmartRoutingConsiderationForStream:(unsigned long long)arg1 enable:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000020189
- (void)setRecordStatusChangeBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020002
- (float)getAveragePowerForStream:(unsigned long long)arg1 forChannel:(unsigned long long)arg2;	// IMP=0x000000000001fe44
- (float)getPeakPowerForStream:(unsigned long long)arg1 forChannel:(unsigned long long)arg2;	// IMP=0x000000000001fc86
- (_Bool)updateMeterForStream:(unsigned long long)arg1;	// IMP=0x000000000001fa1e
- (_Bool)isMeteringEnabledForStream:(unsigned long long)arg1;	// IMP=0x000000000001f882
- (id)getRecordSettingsForStream:(unsigned long long)arg1;	// IMP=0x000000000001f6ed
- (double)getRecordBufferDurationForStream:(unsigned long long)arg1;	// IMP=0x000000000001f534
- (_Bool)playAlertSoundForType:(int)arg1 overrideMode:(long long)arg2;	// IMP=0x000000000001ef8c
- (void)playAlert:(int)arg1 withOverride:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000001eb12
- (_Bool)setContextForStream:(id)arg1 forStream:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000001dbf2
- (long long)getCurrentSessionStateForStream:(unsigned long long)arg1;	// IMP=0x000000000001db41
- (long long)getCurrentSessionState;	// IMP=0x000000000001da94
- (void)deactivateAudioSessionForStream:(unsigned long long)arg1 withOptions:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000001d8a1
- (void)deactivateAudioSessionWithOptions:(unsigned long long)arg1;	// IMP=0x000000000001d6ce
- (_Bool)activateAudioSessionForStream:(unsigned long long)arg1 isPrewarm:(_Bool)arg2 recordMode:(_Bool)arg3 error:(id *)arg4;	// IMP=0x000000000001d428
- (_Bool)activateAudioSessionForStream:(unsigned long long)arg1 isPrewarm:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000001d1aa
- (id)getRecordDeviceInfoForStream:(unsigned long long)arg1;	// IMP=0x000000000001ccfe
- (long long)getCurrentStreamState:(unsigned long long)arg1;	// IMP=0x000000000001ca8d
- (_Bool)stopRecordForStream:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000001c7b0
- (void)stopRecordOnStream:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000001bf9a
- (_Bool)configureAlertBehaviorForStream:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001b9f5
- (_Bool)startRecordForStream:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ad9c
- (void)startRecordWithSettings:(id)arg1 completion:(CDUnknownBlockType)arg2 alertCompletion:(CDUnknownBlockType)arg3 audioCallback:(CDUnknownBlockType)arg4;	// IMP=0x000000000001a157
- (_Bool)prepareRecordForStream:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000197d2
- (void)prepareRecordForStream:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000018e96
- (unsigned long long)setContext:(id)arg1 streamType:(long long *)arg2 error:(id *)arg3;	// IMP=0x0000000000018bb2
- (unsigned long long)setContext:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000188db
- (id)initVoiceControllerForClient:(long long)arg1 withError:(id *)arg2;	// IMP=0x0000000000018553
- (id)initWithError:(id *)arg1;	// IMP=0x0000000000018539
- (id)currentRecordDeviceInfo;	// IMP=0x0000000000018043
@property(readonly) NSDictionary *metrics;
@property(getter=isStopOnEndpointEnabled) _Bool stopOnEndpointEnabled;
- (float)averagePowerForChannel:(unsigned long long)arg1;	// IMP=0x0000000000017ba6
- (float)peakPowerForChannel:(unsigned long long)arg1;	// IMP=0x0000000000017992
- (void)updateMeters;	// IMP=0x00000000000178e9
@property(getter=isMeteringEnabled) _Bool meteringEnabled;
@property float playbackVolume;
- (unsigned long long)getAlertStartTime;	// IMP=0x00000000000171ee
@property float alertVolume;
@property(readonly, getter=isRecording) _Bool recording;
@property(readonly, getter=isPlaying) _Bool playing;
- (_Bool)setPlaybackBufferDuration:(double)arg1;	// IMP=0x0000000000016b2a
- (double)getPlaybackBufferDuration;	// IMP=0x0000000000016ab3
@property(readonly) NSDictionary *playbackSettings;
@property id <AVVoiceControllerPlaybackDelegate> playbackDelegate; // @dynamic playbackDelegate;
@property double recordEndWaitTime;
@property double recordInterspeechWaitTime;
@property double recordStartWaitTime;
@property int recordEndpointMode;
@property(retain) id <Endpointer> endpointerDelegate;
- (_Bool)setRecordBufferDuration:(double)arg1;	// IMP=0x0000000000015c09
- (double)getRecordBufferDuration;	// IMP=0x0000000000015a13
@property(readonly) NSDictionary *recordSettings;
@property id <AVVoiceControllerRecordDelegate> recordDelegate; // @dynamic recordDelegate;
- (void)stopPlaying;	// IMP=0x00000000000151cc
- (_Bool)startPlaying;	// IMP=0x0000000000014aeb
- (_Bool)preparePlaybackFromURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000013a33
- (_Bool)preparePlaybackWithSettings:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001348b
- (void)stopRecording;	// IMP=0x00000000000132b2
- (_Bool)startRecordingWithSettings:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000012f6c
- (_Bool)startRecordingAtTime:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000000012d37
- (_Bool)startRecording:(id *)arg1;	// IMP=0x0000000000012b06
- (_Bool)startRecording;	// IMP=0x00000000000129a9
- (void)setupAlertBehavior_v1:(id)arg1;	// IMP=0x0000000000012470
- (int)doStartRecordingAtTime_v1:(unsigned long long)arg1 behavior:(id)arg2;	// IMP=0x0000000000011632
- (_Bool)playRecordStartingAlertAndResetEndpointer;	// IMP=0x0000000000011440
- (void)resetEndpointer;	// IMP=0x00000000000112fa
- (_Bool)playAlertSoundForType:(int)arg1;	// IMP=0x0000000000010f84
- (_Bool)setAlertSoundFromURL:(id)arg1 forType:(int)arg2;	// IMP=0x0000000000010c68
- (_Bool)prepareRecordWithSettings:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000103e1
- (_Bool)setCurrentContext:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000fd2e
- (_Bool)IsDeviceAvailableInLocalRoute:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000fc45
- (_Bool)willAcceptContext:(id)arg1;	// IMP=0x000000000000f96b
- (void)enableMiniDucking:(_Bool)arg1;	// IMP=0x000000000000f774
- (void)releaseAudioSession:(unsigned long long)arg1;	// IMP=0x000000000000f4b4
- (void)releaseAudioSession;	// IMP=0x000000000000f203
- (void)dealloc;	// IMP=0x000000000000ea63
- (void)finalize;	// IMP=0x000000000000e967
- (void)prewarmAudioSession;	// IMP=0x000000000000e6cb
- (id)initWithContext:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000df45
- (oneway void)release;	// IMP=0x000000000000de2b
- (id)retain;	// IMP=0x000000000000dd11
- (void)endAudioSessionActivate_v1v2:(_Bool)arg1;	// IMP=0x000000000002b31f
- (void)beginAudioSessionActivate_v1v2:(_Bool)arg1;	// IMP=0x000000000002b195
- (void)endPlaybackInterruption_v1v2;	// IMP=0x000000000002b0ee
- (void)beginPlaybackInterruption_v1v2;	// IMP=0x000000000002b047
- (void)endRecordInterruption_v1v2;	// IMP=0x000000000002afa0
- (void)beginRecordInterruptionWithContext_v1v2:(id)arg1;	// IMP=0x000000000002aeef
- (void)beginRecordInterruption_v1v2;	// IMP=0x000000000002ae48
- (void)notifyStreamInvalidated_v1v2:(unsigned long long)arg1;	// IMP=0x000000000002ac34
- (void)alertPlaybackFinishedOfType_v1v2:(int)arg1;	// IMP=0x000000000002a97d
- (void)decodeError;	// IMP=0x000000000002a887
- (void)finishedPlaying_v1v2;	// IMP=0x000000000002a539
- (void)playbackBufferReceived:(struct MyAudioQueueBuffer *)arg1;	// IMP=0x000000000002a444
- (void)beganPlaying;	// IMP=0x000000000002a214
- (void)encodeError;	// IMP=0x000000000002a11e
- (void)endpointDetected;	// IMP=0x0000000000029e0c
- (void)interspeechPointDetected;	// IMP=0x0000000000029afa
- (void)startpointDetected;	// IMP=0x000000000002984d
- (void)finishedRecording_v1v2:(id)arg1;	// IMP=0x00000000000293b5
- (void)beganRecording_v1v2:(id)arg1;	// IMP=0x0000000000028f5f
- (void)handlePluginDidUnpublishDevice:(id)arg1 withDevice:(id)arg2;	// IMP=0x0000000000028d04
- (void)handlePluginDidPublishDevice:(id)arg1 withDevice:(id)arg2;	// IMP=0x0000000000028ada
- (void)handleMediaServerReset_v1v2:(id)arg1;	// IMP=0x0000000000027ebc
- (void)handleMediaServerDeath_v1v2:(id)arg1;	// IMP=0x0000000000026f6e
- (void)handleRouteChange_v1v2:(id)arg1;	// IMP=0x0000000000026d48
- (void)handleInterruption_v1v2:(id)arg1;	// IMP=0x0000000000024753
- (void)hardwareConfigChanged;	// IMP=0x0000000000024455
- (void)removeSessionNotifications:(id)arg1;	// IMP=0x0000000000024326
- (void)setSessionNotifications_v1v2:(id)arg1;	// IMP=0x00000000000241f7
- (void)sessionCleanup_v1v2;	// IMP=0x00000000000240ce
- (void)sessionSetup_v1v2;	// IMP=0x0000000000023ed2
- (shared_ptr_94a40f34)impl;	// IMP=0x0000000000023ead
@property(readonly) unsigned long long numberOfChannels;
@property(setter=setDuckOthersOption:) _Bool duckOthersOption;
@property(readonly) AVAudioFormat *pcmRecordBufferFormat;
@property(getter=isSynchronousCallbackEnabled) _Bool synchronousCallbackEnabled;
@property(getter=isStopOnBargeInEnabled) _Bool stopOnBargeInEnabled;
@property(getter=isBargeInDetectEnabled) _Bool bargeInDetectEnabled;
@property(readonly) NSDictionary *voiceTriggerInfo;
@property(readonly) unsigned long long lastRecordStartTime;
@property(readonly, copy) NSString *playbackRoute;
@property(readonly, copy) NSString *recordRoute;
- (void)sendRemoteConnectionMessage:(id)arg1;	// IMP=0x0000000000022fab

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

