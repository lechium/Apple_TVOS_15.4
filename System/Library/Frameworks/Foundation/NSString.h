//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Foundation/NSCopying-Protocol.h>
#import <Foundation/NSItemProviderReading-Protocol.h>
#import <Foundation/NSItemProviderWriting-Protocol.h>
#import <Foundation/NSMutableCopying-Protocol.h>
#import <Foundation/NSSecureCoding-Protocol.h>

@class NSArray, NSAttributedString;

@interface NSString : NSObject <NSItemProviderReading, NSItemProviderWriting, NSCopying, NSMutableCopying, NSSecureCoding>
{
}

+ (_Bool)_subclassesMustBeExplicitlyMentionedWhenDecoded;	// IMP=0x00000000001385bb
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000138196
+ (id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x0000000000131f43
+ (id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000131f00
+ (id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x0000000000131ebd
+ (id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000131e7a
+ (id)stringWithContentsOfURL:(id)arg1;	// IMP=0x0000000000131e4b
+ (id)stringWithContentsOfFile:(id)arg1;	// IMP=0x0000000000131e1c
+ (id)stringWithFormat:(id)arg1 locale:(id)arg2;	// IMP=0x0000000000131d73
+ (id)stringWithFormat:(id)arg1;	// IMP=0x0000000000131cab
+ (id)stringWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000131bd8
+ (id)localizedStringWithFormat:(id)arg1;	// IMP=0x0000000000131af2
+ (id)localizedStringWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001319fa
+ (id)stringWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;	// IMP=0x000000000013195d
+ (id)stringWithUTF8String:(const char *)arg1;	// IMP=0x00000000001318af
+ (id)stringWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;	// IMP=0x0000000000131802
+ (id)stringWithCString:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000001317ce
+ (id)stringWithCString:(const char *)arg1;	// IMP=0x0000000000131746
+ (id)stringWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000131712
+ (id)stringWithString:(id)arg1;	// IMP=0x00000000001316e3
+ (id)string;	// IMP=0x00000000001316c1
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000013169a
+ (void)initialize;	// IMP=0x00000000001315d7
+ (id)pathWithComponents:(id)arg1;	// IMP=0x00000000000ecd66
+ (id)_newZStringWithUTF8String:(const char *)arg1;	// IMP=0x00000000000f60fc
+ (id)_newZStringWithString:(id)arg1;	// IMP=0x00000000000f60ce
+ (id)_newZStringWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000000f609b
+ (unsigned long long)stringEncodingForData:(id)arg1 encodingOptions:(id)arg2 convertedString:(id *)arg3 usedLossyConversion:(_Bool *)arg4;	// IMP=0x000000000010a6ab
+ (id)writableTypeIdentifiersForItemProvider;	// IMP=0x000000000012deae
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000000012dc41
+ (id)_newStringFromUTF16InternalData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000000012daf8
+ (id)readableTypeIdentifiersForItemProvider;	// IMP=0x000000000012da74
+ (id)localizedNameOfStringEncoding:(unsigned long long)arg1;	// IMP=0x000000000013b402
+ (const unsigned long long *)availableStringEncodings;	// IMP=0x000000000013b379
+ (unsigned long long)defaultCStringEncoding;	// IMP=0x000000000013a16d
+ (id)_web_stringRepresentationForBytes:(long long)arg1;	// IMP=0x000000000013c262
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000138426
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000013819e
- (_Bool)_allowsDirectEncoding;	// IMP=0x000000000013818e
- (Class)classForCoder;	// IMP=0x0000000000138181
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(struct __va_list_tag [1])arg3;	// IMP=0x0000000000138169
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x0000000000138151
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(_Bool)arg4;	// IMP=0x0000000000138139
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;	// IMP=0x0000000000138121
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3;	// IMP=0x0000000000138109
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;	// IMP=0x00000000001380f1
- (id)initWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x00000000001380da
- (id)initWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 locale:(id)arg3 arguments:(struct __va_list_tag [1])arg4 error:(id *)arg5;	// IMP=0x00000000001380c8
- (id)initWithFormat:(id)arg1 locale:(id)arg2;	// IMP=0x000000000013802e
- (id)initWithFormat:(id)arg1;	// IMP=0x0000000000137f8e
- (id)initWithData:(id)arg1 usedEncoding:(unsigned long long *)arg2;	// IMP=0x0000000000137f27
- (id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x0000000000137dca
- (id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x0000000000137ba3
- (id)initWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000137abb
- (id)initWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000001378a8
- (id)initWithContentsOfURL:(id)arg1;	// IMP=0x0000000000137848
- (id)initWithContentsOfFile:(id)arg1;	// IMP=0x00000000001377e8
- (id)_initWithDataOfUnknownEncoding:(id)arg1;	// IMP=0x000000000013771e
- (id)_initWithBytesOfUnknownEncoding:(char *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 usedEncoding:(unsigned long long *)arg4;	// IMP=0x000000000013766e
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;	// IMP=0x000000000013760d
- (id)initWithString:(id)arg1;	// IMP=0x0000000000137525
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000137490
- (id)initWithUTF8String:(const char *)arg1;	// IMP=0x00000000001373c9
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;	// IMP=0x000000000013732e
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000137276
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000137223
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;	// IMP=0x0000000000137172
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;	// IMP=0x000000000013712b
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x0000000000137116
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x0000000000136fd2
- (_Bool)getExternalRepresentation:(id *)arg1 extendedAttributes:(id *)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned long long)arg4 error:(id *)arg5;	// IMP=0x0000000000136e24
- (id)displayableString;	// IMP=0x0000000000136775
- (void)enumerateLinesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000001366ca
- (void)enumerateSubstringsInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000135919
- (struct _NSRange)paragraphRangeForRange:(struct _NSRange)arg1;	// IMP=0x00000000001358ab
- (struct _NSRange)lineRangeForRange:(struct _NSRange)arg1;	// IMP=0x000000000013583d
- (void)getParagraphStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;	// IMP=0x0000000000135828
- (void)getLineStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;	// IMP=0x0000000000135810
- (void)_getBlockStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4 stopAtLineSeparators:(_Bool)arg5;	// IMP=0x0000000000134f8c
- (id)stringByApplyingTransform:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x0000000000134f24
- (id)stringByFoldingWithOptions:(unsigned long long)arg1 locale:(id)arg2;	// IMP=0x0000000000134ed3
- (id)precomposedStringWithCompatibilityMapping;	// IMP=0x0000000000134e91
- (id)decomposedStringWithCompatibilityMapping;	// IMP=0x0000000000134e4f
- (id)precomposedStringWithCanonicalMapping;	// IMP=0x0000000000134e0d
- (id)decomposedStringWithCanonicalMapping;	// IMP=0x0000000000134dce
- (id)capitalizedStringWithLocale:(id)arg1;	// IMP=0x0000000000134d82
- (id)lowercaseStringWithLocale:(id)arg1;	// IMP=0x0000000000134d36
- (id)uppercaseStringWithLocale:(id)arg1;	// IMP=0x0000000000134cea
- (id)localizedCapitalizedString;	// IMP=0x0000000000134cb2
- (id)localizedLowercaseString;	// IMP=0x0000000000134c7a
- (id)localizedUppercaseString;	// IMP=0x0000000000134c42
- (id)capitalizedString;	// IMP=0x0000000000134c2e
- (id)lowercaseString;	// IMP=0x0000000000134c1a
- (id)uppercaseString;	// IMP=0x0000000000134c06
- (_Bool)boolValue;	// IMP=0x00000000001348aa
- (long long)integerValue;	// IMP=0x0000000000134898
- (long long)longLongValue;	// IMP=0x0000000000134820
- (int)intValue;	// IMP=0x00000000001347aa
- (float)floatValue;	// IMP=0x000000000013472e
- (double)doubleValue;	// IMP=0x00000000001346b2
- (id)stringByAppendingFormat:(id)arg1;	// IMP=0x00000000001345c0
- (id)stringByAppendingString:(id)arg1;	// IMP=0x00000000001344d2
- (id)substringToIndex:(unsigned long long)arg1;	// IMP=0x0000000000134424
- (id)substringFromIndex:(unsigned long long)arg1;	// IMP=0x0000000000134375
- (id)substringWithRange:(struct _NSRange)arg1;	// IMP=0x0000000000134296
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;	// IMP=0x000000000013416a
- (void)getCharacters:(unsigned short *)arg1;	// IMP=0x0000000000134128
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;	// IMP=0x00000000001340ce
- (id)stringByReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;	// IMP=0x000000000013401d
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;	// IMP=0x0000000000133f9a
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;	// IMP=0x0000000000133e86
- (id)stringByPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3;	// IMP=0x0000000000133d1e
- (id)stringByTrimmingCharactersInSet:(id)arg1;	// IMP=0x00000000001338cf
- (struct _NSRange)localizedStandardRangeOfString:(id)arg1;	// IMP=0x0000000000133869
- (_Bool)localizedStandardContainsString:(id)arg1;	// IMP=0x00000000001337f3
- (_Bool)localizedCaseInsensitiveContainsString:(id)arg1;	// IMP=0x000000000013377d
- (_Bool)containsString:(id)arg1;	// IMP=0x0000000000133721
- (_Bool)localizedHasSuffix:(id)arg1;	// IMP=0x00000000001336ab
- (_Bool)localizedHasPrefix:(id)arg1;	// IMP=0x0000000000133635
- (_Bool)hasSuffix:(id)arg1;	// IMP=0x00000000001335de
- (_Bool)hasPrefix:(id)arg1;	// IMP=0x0000000000133587
- (id)commonPrefixWithString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000001332b2
- (id)componentsSeparatedByCharactersInSet:(id)arg1;	// IMP=0x0000000000133118
- (id)componentsSeparatedByString:(id)arg1;	// IMP=0x0000000000132f7e
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1;	// IMP=0x0000000000132f39
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000132ef1
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000132d3e
- (struct _NSRange)rangeOfString:(id)arg1;	// IMP=0x0000000000132cf2
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000132c9b
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000132c78
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;	// IMP=0x0000000000132a34
- (struct _NSRange)rangeOfComposedCharacterSequencesForRange:(struct _NSRange)arg1;	// IMP=0x00000000001329ae
- (struct _NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000132930
- (long long)localizedStandardCompare:(id)arg1;	// IMP=0x00000000001328ca
- (long long)localizedCaseInsensitiveCompare:(id)arg1;	// IMP=0x0000000000132864
- (long long)localizedCompare:(id)arg1;	// IMP=0x0000000000132801
- (long long)caseInsensitiveCompare:(id)arg1;	// IMP=0x00000000001327b9
- (long long)compare:(id)arg1;	// IMP=0x000000000013276c
- (long long)compare:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000013271c
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;	// IMP=0x0000000000132673
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000132648
- (_Bool)isEqualToString:(id)arg1;	// IMP=0x00000000001325f3
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000001325a9
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000132571
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000132539
@property(readonly, copy) NSString *description;
- (id)quotedStringRepresentation;	// IMP=0x00000000001321aa
- (id)_stringRepresentation;	// IMP=0x0000000000131fb1
- (_Bool)_isCString;	// IMP=0x0000000000131f96
- (const char *)_fastCStringContents:(_Bool)arg1;	// IMP=0x0000000000131f8e
- (const unsigned short *)_fastCharacterContents;	// IMP=0x0000000000131f86
- (id)init;	// IMP=0x00000000001316b8
- (unsigned short)characterAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000131686
@property(readonly) unsigned long long length;
- (id)_widthVariants;	// IMP=0x0000000000015729
- (id)variantFittingPresentationWidth:(long long)arg1;	// IMP=0x0000000000015716
@property(readonly, nonatomic) NSAttributedString *__baseAttributedString;
- (_Bool)_getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned int)arg3;	// IMP=0x000000000001c280
- (unsigned int)_fastestEncodingInCFStringEncoding;	// IMP=0x000000000001c266
- (unsigned int)_smallestEncodingInCFStringEncoding;	// IMP=0x000000000001c24c
- (unsigned char)_encodingCantBeStoredInEightBitCFString;	// IMP=0x000000000001c20a
- (id)_createSubstringWithRange:(struct _NSRange)arg1;	// IMP=0x000000000001c0b2
- (unsigned long long)_cfTypeID;	// IMP=0x000000000001c0a8
- (CDStruct_5fe7aead)decimalValue;	// IMP=0x000000000004ce33
- (_Bool)_getBytesAsData:(id *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;	// IMP=0x0000000000052b04
- (id)_getCharactersAsStringInRange:(struct _NSRange)arg1;	// IMP=0x0000000000052af2
- (id)__escapeString5991;	// IMP=0x00000000000cdce7
- (id)stringByConvertingURLToPath;	// IMP=0x00000000000ef345
- (id)stringByConvertingPathToURL;	// IMP=0x00000000000ef313
- (unsigned long long)completePathIntoString:(id *)arg1 caseSensitive:(_Bool)arg2 matchesIntoArray:(id *)arg3 filterTypes:(id)arg4;	// IMP=0x00000000000ee0ad
- (_Bool)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;	// IMP=0x00000000000ee061
- (const char *)fileSystemRepresentation;	// IMP=0x00000000000ee029
- (id)stringsByAppendingPaths:(id)arg1;	// IMP=0x00000000000edea4
- (id)stringByResolvingSymlinksInPath;	// IMP=0x00000000000ede90
- (id)_stringByResolvingSymlinksInPathUsingCache:(_Bool)arg1;	// IMP=0x00000000000eddaa
- (id)stringByStandardizingPath;	// IMP=0x00000000000edd96
- (id)_stringByStandardizingPathUsingCache:(_Bool)arg1;	// IMP=0x00000000000edcbf
- (id)stringByExpandingTildeInPath;	// IMP=0x00000000000edbbf
- (id)stringByAbbreviatingWithTildeInPath;	// IMP=0x00000000000eda54
- (id)stringByAppendingPathExtension:(id)arg1;	// IMP=0x00000000000ed76a
- (id)stringByDeletingPathExtension;	// IMP=0x00000000000ed61b
- (id)pathExtension;	// IMP=0x00000000000ed4b6
- (id)stringByAppendingPathComponent:(id)arg1;	// IMP=0x00000000000ed1cc
- (id)stringByDeletingLastPathComponent;	// IMP=0x00000000000ed063
- (id)lastPathComponent;	// IMP=0x00000000000ecef4
- (_Bool)isAbsolutePath;	// IMP=0x00000000000ece55
- (id)pathComponents;	// IMP=0x00000000000ecd7f
- (_Bool)isNSString__;	// IMP=0x0000000000100ef0
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012dfdf
@property(readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
- (id)propertyListFromStringsFileFormat;	// IMP=0x000000000013957c
- (id)propertyList;	// IMP=0x000000000013944e
- (id)formatConfiguration;	// IMP=0x0000000000139fc1
- (id)_copyFormatStringWithConfiguration:(id)arg1;	// IMP=0x0000000000139f60
- (_Bool)getBytes:(char *)arg1 maxLength:(unsigned long long)arg2 filledLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 allowLossyConversion:(_Bool)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;	// IMP=0x000000000013aecb
- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;	// IMP=0x000000000013ad44
- (unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000013ac73
- (unsigned long long)maximumLengthOfBytesUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000013abea
- (_Bool)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3;	// IMP=0x000000000013ab0f
- (const char *)cStringUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000013aafb
- (id)dataUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000013aae7
- (id)dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(_Bool)arg2;	// IMP=0x000000000013a8bd
- (_Bool)canBeConvertedToEncoding:(unsigned long long)arg1;	// IMP=0x000000000013a7ee
- (unsigned long long)smallestEncoding;	// IMP=0x000000000013a77f
- (unsigned long long)fastestEncoding;	// IMP=0x000000000013a774
- (const char *)lossyCString;	// IMP=0x000000000013a739
- (unsigned long long)cStringLength;	// IMP=0x000000000013a67e
- (const char *)cString;	// IMP=0x000000000013a640
- (const char *)UTF8String;	// IMP=0x000000000013a3b5
- (void)getCString:(char *)arg1;	// IMP=0x000000000013a34d
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;	// IMP=0x000000000013a2f6
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;	// IMP=0x000000000013a189
- (unsigned int)_web_extractFourCharCode;	// IMP=0x000000000013c74a
- (id)_web_filenameByFixingIllegalCharacters;	// IMP=0x000000000013c5d5
- (id)_web_stringByCollapsingNonPrintingCharacters;	// IMP=0x000000000013c3f2
- (id)_web_URLFragment;	// IMP=0x000000000013c20f
- (_Bool)_web_isFileURL;	// IMP=0x000000000013c1f6
- (_Bool)_web_looksLikeAbsoluteURL;	// IMP=0x000000000013c1bd
- (struct _NSRange)_web_rangeOfURLHost;	// IMP=0x000000000013c104
- (struct _NSRange)_web_rangeOfURLUserPasswordHostPort;	// IMP=0x000000000013c05e
- (id)_web_fixedCarbonPOSIXPath;	// IMP=0x000000000013bedb
- (id)_web_stringByExpandingTildeInPath;	// IMP=0x000000000013be5c
- (id)_web_stringByTrimmingWhitespace;	// IMP=0x000000000013bd69
- (id)_web_domainFromHost;	// IMP=0x000000000013bc29
- (_Bool)_web_domainMatches:(id)arg1;	// IMP=0x000000000013bb52
- (_Bool)_web_hasCountryCodeTLD;	// IMP=0x000000000013baeb
- (_Bool)_web_looksLikeIPAddress;	// IMP=0x000000000013b9d2
- (long long)_web_countOfString:(id)arg1;	// IMP=0x000000000013b937
- (_Bool)_web_hasCaseInsensitivePrefix:(id)arg1;	// IMP=0x000000000013b90f
- (_Bool)_web_isCaseInsensitiveEqualToString:(id)arg1;	// IMP=0x000000000013b8f1
- (_Bool)_web_isJavaScriptURL;	// IMP=0x000000000013d539
- (id)_web_stringByReplacingValidPercentEscapes_nowarn;	// IMP=0x000000000013d398
- (id)_web_fileNameFromContentDispositionHeader_nowarn;	// IMP=0x000000000013d213
- (id)_web_characterSetFromContentTypeHeader_nowarn;	// IMP=0x000000000013d153
- (id)_web_mimeTypeFromContentTypeHeader_nowarn;	// IMP=0x000000000013cdaa
- (struct _NSRange)_web_rangeOfURLResourceSpecifier_nowarn;	// IMP=0x000000000013cd59
- (struct _NSRange)_web_rangeOfURLScheme_nowarn;	// IMP=0x000000000013cc97
- (id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(_Bool)arg1;	// IMP=0x000000000013ca5e
- (id)_web_parseAsKeyValuePair_nowarn;	// IMP=0x000000000013ca4a
- (id)_web_splitAtNonDateCommas_nowarn;	// IMP=0x000000000013c814
- (id)stringByAddingPercentEscapes;	// IMP=0x000000000014d02d
- (id)stringByRemovingPercentEscapes;	// IMP=0x000000000014d00f
- (id)standardizedURLPath;	// IMP=0x000000000014cc10
- (id)stringByReplacingPercentEscapesUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000014d141
- (id)stringByAddingPercentEscapesUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000014d0c8
@property(readonly, copy) NSString *stringByRemovingPercentEncoding;
- (id)stringByAddingPercentEncodingWithAllowedCharacters:(id)arg1;	// IMP=0x000000000014d08a
- (id)_web_HTTPStyleLanguageCodeWithoutRegion;	// IMP=0x0000000000159725
- (id)_web_HTTPStyleLanguageCode;	// IMP=0x000000000015962f
- (void)enumerateLinguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000000001a683c
- (id)linguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 tokenRanges:(id *)arg5;	// IMP=0x00000000001a6760
- (void)_flushRegularExpressionCaches;	// IMP=0x00000000001aec50
- (id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;	// IMP=0x00000000001aeb1a
- (struct _NSRange)_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;	// IMP=0x00000000001ae9d0
- (struct _NSRange)significantText;	// IMP=0x00000000001ba2f4
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00000000001c09a6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

