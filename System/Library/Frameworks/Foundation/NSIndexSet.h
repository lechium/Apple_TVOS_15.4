//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Foundation/NSCopying-Protocol.h>
#import <Foundation/NSMutableCopying-Protocol.h>
#import <Foundation/NSSecureCoding-Protocol.h>

@interface NSIndexSet : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    struct {
        unsigned int _isEmpty:1;
        unsigned int _hasSingleRange:1;
        unsigned int _cacheValid:1;
        unsigned int _reservedArrayBinderController:29;
    } _indexSetFlags;	// 8 = 0x8
    union {
        struct {
            struct _NSRange _range;
        } _singleRange;
        struct {
            void *_data;
            void *_reserved;
        } _multipleRanges;
    } _internal;	// 16 = 0x10
}

+ (_Bool)_subclassesMustBeExplicitlyMentionedWhenDecoded;	// IMP=0x0000000000085664
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000084d1f
+ (id)indexSetWithIndexes:(const unsigned long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000846f6
+ (id)indexSetWithIndexesInRange:(struct _NSRange)arg1;	// IMP=0x00000000000846c2
+ (id)indexSetWithIndex:(unsigned long long)arg1;	// IMP=0x0000000000084693
+ (id)indexSet;	// IMP=0x0000000000084681
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000084649
+ (id)_alloc;	// IMP=0x00000000000845f5
- (void)enumerateRangesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000087942
- (void)enumerateRangesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000878e2
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000878cb
- (id)indexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x0000000000087776
- (id)indexesWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00000000000875c9
- (id)indexesPassingTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000000875b2
- (unsigned long long)indexInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x0000000000087543
- (unsigned long long)indexWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00000000000874e3
- (unsigned long long)indexPassingTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000000874cc
- (void)enumerateIndexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000087465
- (void)enumerateIndexesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000086c05
- (void)enumerateIndexesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000086bee
- (void)__forwardEnumerateRanges:(CDUnknownBlockType)arg1;	// IMP=0x0000000000086ae2
- (id)description;	// IMP=0x00000000000868ec
- (id)_numberEnumerator;	// IMP=0x00000000000868b6
- (_Bool)intersectsIndexesInRange:(struct _NSRange)arg1;	// IMP=0x00000000000867f3
- (_Bool)containsIndexes:(id)arg1;	// IMP=0x00000000000866ae
- (_Bool)containsIndexesInRange:(struct _NSRange)arg1;	// IMP=0x0000000000086639
- (_Bool)containsIndex:(unsigned long long)arg1;	// IMP=0x0000000000086576
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000864d3
- (unsigned long long)rangeCount;	// IMP=0x00000000000864af
- (unsigned long long)countOfIndexesInRange:(struct _NSRange)arg1;	// IMP=0x00000000000863a6
- (unsigned long long)__getContainmentVector:(out _Bool *)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00000000000862be
- (unsigned long long)getIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 inIndexRange:(struct _NSRange *)arg3;	// IMP=0x0000000000086059
- (unsigned long long)indexLessThanOrEqualToIndex:(unsigned long long)arg1;	// IMP=0x000000000008603f
- (unsigned long long)indexGreaterThanOrEqualToIndex:(unsigned long long)arg1;	// IMP=0x0000000000086022
- (unsigned long long)indexLessThanIndex:(unsigned long long)arg1;	// IMP=0x000000000008600b
- (unsigned long long)indexGreaterThanIndex:(unsigned long long)arg1;	// IMP=0x0000000000085ff1
- (unsigned long long)_indexClosestToIndex:(unsigned long long)arg1 equalAllowed:(_Bool)arg2 following:(_Bool)arg3;	// IMP=0x0000000000085ccd
@property(readonly) unsigned long long lastIndex;
@property(readonly) unsigned long long firstIndex;
@property(readonly) unsigned long long count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000085bda
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000085b69
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000085b1d
- (_Bool)isEqualToIndexSet:(id)arg1;	// IMP=0x00000000000858de
- (unsigned long long)hash;	// IMP=0x0000000000085875
- (unsigned long long)_indexOfRangeAfterOrContainingIndex:(unsigned long long)arg1;	// IMP=0x00000000000857b6
- (unsigned long long)_indexOfRangeBeforeOrContainingIndex:(unsigned long long)arg1;	// IMP=0x0000000000085712
- (unsigned long long)_indexOfRangeContainingIndex:(unsigned long long)arg1;	// IMP=0x000000000008566c
- (Class)classForCoder;	// IMP=0x0000000000085657
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000084fc6
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000084d27
- (void)dealloc;	// IMP=0x0000000000084cbc
- (id)initWithIndexes:(const unsigned long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000084a69
- (id)initWithIndexSet:(id)arg1;	// IMP=0x0000000000084a2f
- (void)_setContentToContentFromIndexSet:(id)arg1;	// IMP=0x0000000000084881
- (id)initWithIndexesInRange:(struct _NSRange)arg1;	// IMP=0x00000000000847b2
- (id)initWithIndex:(unsigned long long)arg1;	// IMP=0x000000000008479b
- (id)init;	// IMP=0x0000000000084785
- (id)_init;	// IMP=0x000000000008472a
- (unsigned long long)_indexAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000cdc9c
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00000000001c082c

@end

