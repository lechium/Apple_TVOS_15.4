//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface NSConcreteMapTable
{
    struct NSSlice keys;	// 8 = 0x8
    struct NSSlice values;	// 120 = 0x78
    unsigned long long count;	// 232 = 0xe8
    unsigned long long capacity;	// 240 = 0xf0
    unsigned long long keyOptions;	// 248 = 0xf8
    unsigned long long valueOptions;	// 256 = 0x100
    unsigned long long mutations;	// 264 = 0x108
    struct os_unfair_lock_s growLock;	// 272 = 0x110
    _Bool shouldRehash;	// 276 = 0x114
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000c68d1
- (id)allValues;	// IMP=0x00000000000c8c92
- (id)allKeys;	// IMP=0x00000000000c8bd0
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000c8aa2
- (unsigned long long)hash;	// IMP=0x00000000000c8a72
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;	// IMP=0x00000000000c898b
- (id)objectEnumerator;	// IMP=0x00000000000c896f
- (id)keyEnumerator;	// IMP=0x00000000000c8939
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000000c8876
- (id)description;	// IMP=0x00000000000c874a
- (void)dealloc;	// IMP=0x00000000000c8685
- (void)removeAllItems;	// IMP=0x00000000000c85d7
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000000000c84cf
- (void)rehash;	// IMP=0x00000000000c8447
- (unsigned long long)rehashAround:(unsigned long long)arg1;	// IMP=0x00000000000c820c
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;	// IMP=0x00000000000c8156
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;	// IMP=0x00000000000c8095
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000000c7fa8
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;	// IMP=0x00000000000c7eab
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000000c7dd7
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000c7cfd
- (id)objectForKey:(id)arg1;	// IMP=0x00000000000c7c76
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(_Bool)arg4;	// IMP=0x00000000000c7b98
- (void)grow;	// IMP=0x00000000000c77b2
- (id)dump;	// IMP=0x00000000000c76f7
- (_Bool)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000000c72f8
- (unsigned long long)__capacity;	// IMP=0x00000000000c72e7
- (unsigned long long)count;	// IMP=0x00000000000c7292
- (id)valuePointerFunctions;	// IMP=0x00000000000c7215
- (id)keyPointerFunctions;	// IMP=0x00000000000c7198
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000c6d40
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000c68d9
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000000c66d1
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000000c6526
- (id)copy;	// IMP=0x00000000000c6300
- (void)_setBackingStore;	// IMP=0x00000000000c6283
- (void)checkCount:(const char *)arg1;	// IMP=0x00000000000c61fa
- (unsigned long long)realCount;	// IMP=0x00000000000c6155
- (void)raiseCountUnderflowException;	// IMP=0x00000000000c6104
- (id)init;	// IMP=0x00000000000c60e8

@end

