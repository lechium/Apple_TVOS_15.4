//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class EKAvailabilityCache, EKSourceConstraints, NSData, NSDate, NSDictionary, NSError, NSNumber, NSSet, NSString;

@interface EKSource
{
    EKAvailabilityCache *_availabilityCache;	// 8 = 0x8
    _Bool _isFacebook;	// 16 = 0x10
    _Bool _snoozeAlarmRequiresDetach;	// 17 = 0x11
    NSDate *_timeOfLastExternalIdentificationCache;	// 24 = 0x18
    NSString *_cachedHost;	// 32 = 0x20
    long long _cachedPort;	// 40 = 0x28
    NSSet *_cachedOwnerAddresses;	// 48 = 0x30
}

+ (id)primaryLocalSourceID;	// IMP=0x00000000000c0595
+ (long long)_calEventPrivacyLevelToEKPrivacyLevel:(int)arg1;	// IMP=0x00000000000bceef
+ (int)_ekPrivacyLevelToCalEventPrivacyLevel:(long long)arg1;	// IMP=0x00000000000bce9e
+ (id)sourceWithEventStore:(id)arg1;	// IMP=0x00000000000bcd43
+ (id)knownSingleValueKeysForComparison;	// IMP=0x00000000000bcc9c
+ (id)knownIdentityKeysForComparison;	// IMP=0x00000000000bcbf5
+ (_Bool)isWeakRelationship;	// IMP=0x00000000000bcbed
+ (Class)frozenClass;	// IMP=0x00000000000bcbdc
- (void).cxx_destruct;	// IMP=0x00000000000c1a50
@property(nonatomic) _Bool snoozeAlarmRequiresDetach; // @synthesize snoozeAlarmRequiresDetach=_snoozeAlarmRequiresDetach;
@property(nonatomic) _Bool isFacebook; // @synthesize isFacebook=_isFacebook;
@property(retain, nonatomic) NSSet *cachedOwnerAddresses; // @synthesize cachedOwnerAddresses=_cachedOwnerAddresses;
@property(nonatomic) long long cachedPort; // @synthesize cachedPort=_cachedPort;
@property(retain, nonatomic) NSString *cachedHost; // @synthesize cachedHost=_cachedHost;
@property(retain, nonatomic) NSDate *timeOfLastExternalIdentificationCache; // @synthesize timeOfLastExternalIdentificationCache=_timeOfLastExternalIdentificationCache;
- (_Bool)_reset;	// IMP=0x00000000000c18af
- (_Bool)refresh;	// IMP=0x00000000000c1876
@property(readonly, nonatomic) _Bool isEnabledForEvents;
@property(readonly, nonatomic) _Bool preferUsingEventOrganizerEmailWhenComposingMail;
@property(readonly, nonatomic) _Bool supportsAttendeeEventForwarding;
@property(readonly, nonatomic) _Bool prefersSuggestingNewTimeViaEmail;
@property(readonly, nonatomic) _Bool supportsURLs;
@property(readonly, nonatomic) _Bool supportsYearlyRecurrenceWithArbitraryInterval;
@property(readonly, nonatomic) _Bool supportsMultipleDaysInMonthlyRecurrence;
@property(readonly, nonatomic) _Bool supportsMultipleMonthsInYearlyRecurrence;
@property(readonly, nonatomic) _Bool supportsMultipleAlarms;
@property(readonly, nonatomic) _Bool supportsFloatingTimeZone;
@property(readonly, nonatomic) _Bool supportsEventCalendarCreation;
@property(readonly, nonatomic) _Bool supportsFreebusy;
- (int)managedConfigurationAccountAccess;	// IMP=0x00000000000c12d7
@property(readonly, nonatomic) _Bool isWritable;
@property(readonly, nonatomic) NSString *preferredOwnerAddress;
@property(readonly, nonatomic) NSSet *ownerAddresses;
@property(readonly, nonatomic) _Bool serverUsesSSL;
@property(readonly, nonatomic) long long serverPort;
@property(readonly, nonatomic) NSString *serverHost;
- (void)_cacheExternalIdentificationIfNeeded;	// IMP=0x00000000000c108c
- (void)_cacheExternalIdentification;	// IMP=0x00000000000c0cba
@property(readonly, nonatomic) EKAvailabilityCache *availabilityCache;
@property(readonly, nonatomic) _Bool wantsCommentPromptWhenDeclining;
- (_Bool)remove:(id *)arg1;	// IMP=0x00000000000c0b0d
- (_Bool)save:(id *)arg1;	// IMP=0x00000000000c0959
- (_Bool)validate:(id *)arg1;	// IMP=0x00000000000c080c
- (_Bool)_validateClientCanModifySources:(id *)arg1;	// IMP=0x00000000000c0766
- (id)description;	// IMP=0x00000000000c066c
@property(readonly, nonatomic, getter=isNestedLocalSource) _Bool nestedLocalSource;
@property(readonly, nonatomic, getter=isPrimaryLocalSource) _Bool primaryLocalSource;
@property(copy, nonatomic) NSString *ownerName;
@property(nonatomic) int displayOrder;
@property(readonly, nonatomic) _Bool syncs;
@property(readonly, nonatomic) _Bool isSyncing;
@property(retain, nonatomic) NSDate *lastSyncEndDate;
@property(retain, nonatomic) NSDate *lastSyncStartDate;
@property(retain, nonatomic) NSData *lastSyncErrorData;
@property(readonly, copy, nonatomic) NSDictionary *lastSyncErrorUserInfo;
- (void)setLastSyncErrorUserInfo:(id)arg1;	// IMP=0x00000000000c026e
@property(readonly, nonatomic) unsigned long long lastSyncError;
- (void)setLastSyncError:(unsigned long long)arg1;	// IMP=0x00000000000c01c3
- (void)setLastSyncError:(unsigned long long)arg1 userInfo:(id)arg2;	// IMP=0x00000000000c0146
@property(readonly, nonatomic) NSError *sourceError;
- (id)_calDAVOfficeHoursFromEKOfficeHours:(id)arg1;	// IMP=0x00000000000bfbbe
- (void)setOfficeHours:(id)arg1 withCompletion:(CDUnknownBlockType)arg2 onQueue:(id)arg3;	// IMP=0x00000000000bfa81
- (id)_ekOfficeHoursFromCalDAVOfficeHours:(id)arg1;	// IMP=0x00000000000bf7cc
- (void)fetchOfficeHoursWithCompletion:(CDUnknownBlockType)arg1 onQueue:(id)arg2;	// IMP=0x00000000000bf653
@property(readonly, nonatomic) NSString *personaIdentifier;
@property(readonly, nonatomic) NSString *symbolicColorForNewCalendar;
@property(readonly, nonatomic) int displayOrderForNewCalendar;
@property(readonly, nonatomic) EKSourceConstraints *constraints;
@property(readonly, nonatomic) _Bool supportsPhoneNumbers;
@property(readonly, nonatomic) _Bool supportsJunkReporting;
- (void)_countCalendarItemsOfCalType:(int)arg1 resultHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000befe7
- (void)countCalendarItemsOfType:(unsigned long long)arg1 resultHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000befbe
- (void)countCalendarItemsWithResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000befa4
@property(readonly, nonatomic) _Bool supportsReminderActions;
@property(readonly, nonatomic) _Bool supportsCalendarCreation;
- (id)readWriteCalendarsForEntityType:(unsigned long long)arg1;	// IMP=0x00000000000becc7
- (_Bool)removeCalendarItemsOlderThanDate:(id)arg1 entityTypeMask:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000bea4e
- (id)calendarWithExternalIdentifier:(id)arg1;	// IMP=0x00000000000be7d2
- (id)calendarsForEntityType:(unsigned long long)arg1;	// IMP=0x00000000000be5aa
@property(readonly, nonatomic) NSSet *allCalendars;
@property(readonly, nonatomic) NSSet *calendars;
@property(readonly, nonatomic) _Bool isFacebookSource;
@property(readonly, nonatomic) _Bool isDelegate;
@property(copy, nonatomic) NSString *delegatedAccountOwnerStoreID;
@property(nonatomic) _Bool supportsPush;
@property(nonatomic) _Bool supportsAttachments;
@property(nonatomic) _Bool requiresOccurrencesConformToRecurrenceRule;
@property(nonatomic) _Bool supportsEventForwarding;
@property(nonatomic) _Bool prohibitsSlicingEventsWithAttendees;
@property(nonatomic) _Bool supportsDelegateEnumeration;
@property(nonatomic) _Bool supportsDelegation;
@property(nonatomic) _Bool prohibitsYearlyRecurrenceInterval;
@property(nonatomic) _Bool prohibitsMultipleMonthsInYearlyRecurrence;
@property(nonatomic) _Bool prohibitsMultipleDaysInMonthlyRecurrence;
@property(nonatomic) _Bool prohibitsDetachmentOnCommentChange;
@property(nonatomic) _Bool prohibitsICSImport;
@property(nonatomic) _Bool allowsProposeNewTime;
@property(nonatomic) _Bool supportsLocationDirectorySearches;
@property(nonatomic) _Bool supportsIgnoringEventsInAvailabilityRequests;
@property(nonatomic) _Bool supportsAvailabilityRequests;
@property(nonatomic) _Bool requiresSamePrivacyLevelAcrossRecurrenceSeries;
@property(nonatomic) _Bool prohibitsPrivateEventsWithAttendees;
@property(nonatomic) _Bool supportsPrivateEvents;
@property(nonatomic) _Bool supportsAlarmAcknowledgedDate;
@property(nonatomic) _Bool supportsSharedCalendars;
@property(nonatomic) _Bool allowsCalendarAddDeleteModify;
@property(nonatomic) _Bool allowsEvents;
@property(nonatomic) _Bool allowsTasks;
@property(nonatomic, getter=isEnabled) _Bool enabled;
- (void)setDisabled:(_Bool)arg1;	// IMP=0x00000000000bda8a
- (_Bool)disabled;	// IMP=0x00000000000bda3c
@property(nonatomic) _Bool usesSelfAttendee;
@property(nonatomic) _Bool showsNotifications;
@property(nonatomic) _Bool wasMigrated;
@property(nonatomic) _Bool doesSyncDefaultAlarmsToServer;
@property(nonatomic) _Bool isInSeparateWindow;
@property(nonatomic) _Bool isInMainWindow;
- (void)setFlag2:(int)arg1 value:(_Bool)arg2;	// IMP=0x00000000000bd83c
- (_Bool)flag2:(int)arg1;	// IMP=0x00000000000bd81b
@property(nonatomic) int flags2;
- (void)setFlag:(int)arg1 value:(_Bool)arg2;	// IMP=0x00000000000bd712
- (_Bool)flag:(int)arg1;	// IMP=0x00000000000bd6f1
@property(nonatomic) int flags;
@property(nonatomic) _Bool onlyCreatorCanModify;
@property(copy, nonatomic) NSString *creatorCodeSigningIdentity;
@property(copy, nonatomic) NSString *creatorBundleID;
@property(copy, nonatomic) NSString *externalModificationTag;
@property(retain, nonatomic) NSString *constraintsDescriptionPathForUnitTesting;
@property(retain, nonatomic) NSString *constraintsName;
- (void)_setConstraintsNameWithoutValidation:(id)arg1;	// IMP=0x00000000000bd395
@property(retain, nonatomic) NSString *constraintsDescriptionPath;
@property(copy, nonatomic) NSString *externalID;
@property(retain, nonatomic) NSString *sourceIdentifier;
- (void)setUUID:(id)arg1;	// IMP=0x00000000000bd298
- (id)UUID;	// IMP=0x00000000000bd27c
@property(copy, nonatomic) NSNumber *defaultAllDayAlarmOffset;
@property(copy, nonatomic) NSNumber *defaultAlarmOffset;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) long long strictestEventPrivateValue;
- (void)setStrictestEventPrivateValueRaw:(int)arg1;	// IMP=0x00000000000bd0b4
- (int)strictestEventPrivateValueRaw;	// IMP=0x00000000000bd066
@property(nonatomic) long long preferredEventPrivateValue;
- (void)setPreferredEventPrivateValueRaw:(int)arg1;	// IMP=0x00000000000bcf7d
- (int)preferredEventPrivateValueRaw;	// IMP=0x00000000000bcf2f
@property(nonatomic) long long sourceType;
@property(readonly, nonatomic) _Bool hasOwnerEmailAddress;

@end

