//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreMotion/CMDistributedSensingDelegate-Protocol.h>

@class CMMotionActivityManager, NSOperationQueue, NSString, NSUserDefaults;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CMMediaSession : NSObject <CMDistributedSensingDelegate>
{
    struct unique_ptr<CMHeadTrackingService, std::default_delete<CMHeadTrackingService>> _headTrackingService;	// 8 = 0x8
    struct Dispatcher *_deviceMotionDispatcher;	// 16 = 0x10
    struct Dispatcher *_accessoryDeviceMotionDispatcher;	// 24 = 0x18
    struct Dispatcher *_accessoryDeviceMotionConfigDispatcher;	// 32 = 0x20
    struct Dispatcher *_accessoryDeviceMotionInEarStatusDispatcher;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_clientQueue;	// 48 = 0x30
    CDUnknownBlockType _clientHandler;	// 56 = 0x38
    _Bool _started;	// 64 = 0x40
    int _clientMode;	// 68 = 0x44
    unsigned long long _predictionIntervalMicroseconds;	// 72 = 0x48
    int _scheme;	// 80 = 0x50
    struct CMOQuaternion _q_bf;	// 84 = 0x54
    _Bool _disable2IMU;	// 100 = 0x64
    double _lidAngle;	// 104 = 0x68
    struct UnTimesyncedAuxSampleHelper _unsyncedAuxHelper;	// 112 = 0x70
    struct unique_ptr<CMMediaSessionAnalyticsTracker, std::default_delete<CMMediaSessionAnalyticsTracker>> _analyticsTracker;	// 216 = 0xd8
    int _previousBTZState;	// 224 = 0xe0
    double _lastInBTZTime;	// 232 = 0xe8
    int _previousMotionActivityType;	// 240 = 0xf0
    double _lastAccessoryDMTime;	// 248 = 0xf8
    int _previousTracking1IMU;	// 256 = 0x100
    _Bool _previousCTState;	// 260 = 0x104
    _Bool _previousCTBodyTurnState;	// 261 = 0x105
    _Bool _previousHeadTurnState;	// 262 = 0x106
    double _lastExitCTTime;	// 264 = 0x108
    float _lastAngleBetweenCurrentBoresightToDefault;	// 272 = 0x110
    _Bool _previousTrackingEnabled;	// 276 = 0x114
    double _lastDistractedViewingStartTime;	// 280 = 0x118
    double _lastDistractedViewingEndTime;	// 288 = 0x120
    _Bool _previousSrcMoving;	// 296 = 0x128
    _Bool _previousAuxMoving;	// 297 = 0x129
    _Bool _previousSteadyStatePedestrian;	// 298 = 0x12a
    _Bool _previousKeepBoresightCentered;	// 299 = 0x12b
    int _lastTrackingDisableRoute;	// 300 = 0x12c
    struct AudioAccessorySample _lastAudioAccessorySample;	// 304 = 0x130
    unsigned long long _lastAccessoryTimestamp;	// 432 = 0x1b0
    unsigned long long _lastSourceTimestampMicroSeconds;	// 440 = 0x1b8
    unsigned long long _lastStateTimestamp;	// 448 = 0x1c0
    _Bool _trackingEstimatesStagnated;	// 456 = 0x1c8
    _Bool _logForReplay;	// 457 = 0x1c9
    double _printPoseTimer;	// 464 = 0x1d0
    _Bool _enableJBLThreshold;	// 472 = 0x1d8
    _Bool _verboseLogging;	// 473 = 0x1d9
    double _accessorySampleTimer;	// 480 = 0x1e0
    int _accessorySamplesPerSecond;	// 488 = 0x1e8
    CMMotionActivityManager *_activityManager;	// 496 = 0x1f0
    NSOperationQueue *_activityQueue;	// 504 = 0x1f8
    struct unique_ptr<CLSettings, std::default_delete<CLSettings>> _motionSettings;	// 512 = 0x200
    NSUserDefaults *_motionDefaults;	// 520 = 0x208
    double _minQuiescentPeriodForBTZ;	// 528 = 0x210
    int _notify50HzPoseDecimator;	// 536 = 0x218
    NSObject<OS_dispatch_source> *_emulatedSourceDMTimer;	// 544 = 0x220
    NSObject<OS_dispatch_queue> *_emulatedSourceDMTimerQueue;	// 552 = 0x228
    double _sessionStartTime;	// 560 = 0x230
    double _firstAccessoryDMTime;	// 568 = 0x238
    double _firstValidPoseTime;	// 576 = 0x240
    double _lastTimesyncLostTime;	// 584 = 0x248
    struct unique_ptr<CMSpatialLogger, std::default_delete<CMSpatialLogger>> _logger;	// 592 = 0x250
    int _inEarStatus;	// 600 = 0x258
    _Bool _inEarStatusGatingEnabled;	// 604 = 0x25c
    int _jitterBufferLevelNotificationToken;	// 608 = 0x260
    NSObject<OS_dispatch_source> *_jitterBufferLevelInitialUpdateTimer;	// 616 = 0x268
    unsigned short _jitterBufferLevel;	// 624 = 0x270
    unsigned short _jitterBufferLevelThreshold;	// 626 = 0x272
    _Bool _sitStandDetectorEnabled;	// 628 = 0x274
    _Bool _userSettingFwdPredictorEnabled;	// 629 = 0x275
    _Bool _overrideDefaultHeadsetOrientation;	// 630 = 0x276
    _Bool _returnDefaultPose;	// 631 = 0x277
    _Bool _returnRandomPose;	// 632 = 0x278
    _Bool _alwaysNotify50HzPose;	// 633 = 0x279
    unsigned int _totalSourceIMUSamples;	// 636 = 0x27c
    unsigned int _totalAccessoryIMUSamples;	// 640 = 0x280
    unsigned int _totalFacePoseAnchorSamples;	// 644 = 0x284
    unsigned int _accessoryIMUSampleRate;	// 648 = 0x288
    float _prevAmbienceBedRoll;	// 652 = 0x28c
    struct CMOQuaternion _headsetOrientationOverride;	// 656 = 0x290
}

+ (_Bool)_isAvailable;	// IMP=0x00000000000f8d74
- (id).cxx_construct;	// IMP=0x00000000001030e9
- (void).cxx_destruct;	// IMP=0x0000000000103093
@property _Bool alwaysNotify50HzPose; // @synthesize alwaysNotify50HzPose=_alwaysNotify50HzPose;
@property _Bool returnRandomPose; // @synthesize returnRandomPose=_returnRandomPose;
@property _Bool returnDefaultPose; // @synthesize returnDefaultPose=_returnDefaultPose;
@property struct CMOQuaternion headsetOrientationOverride; // @synthesize headsetOrientationOverride=_headsetOrientationOverride;
@property _Bool overrideDefaultHeadsetOrientation; // @synthesize overrideDefaultHeadsetOrientation=_overrideDefaultHeadsetOrientation;
@property float prevAmbienceBedRoll; // @synthesize prevAmbienceBedRoll=_prevAmbienceBedRoll;
@property unsigned int accessoryIMUSampleRate; // @synthesize accessoryIMUSampleRate=_accessoryIMUSampleRate;
@property unsigned int totalFacePoseAnchorSamples; // @synthesize totalFacePoseAnchorSamples=_totalFacePoseAnchorSamples;
@property unsigned int totalAccessoryIMUSamples; // @synthesize totalAccessoryIMUSamples=_totalAccessoryIMUSamples;
@property unsigned int totalSourceIMUSamples; // @synthesize totalSourceIMUSamples=_totalSourceIMUSamples;
- (void)_setFixedTransforms:(const struct CMOQuaternion *)arg1;	// IMP=0x0000000000102efc
- (void)_setConvergenceRateForBTZ:(float)arg1;	// IMP=0x0000000000102ea0
- (void)_logEvent:(id)arg1;	// IMP=0x0000000000102dfb
- (int)_currentAudioListenerOrientation:(id *)arg1;	// IMP=0x0000000000102d0d
- (struct AudioAccessorySample)_getLastAudioAccessorySample;	// IMP=0x0000000000102ca2
- (void)_feedAdaptiveLatencyJitterBufferLevel;	// IMP=0x0000000000102abd
- (void)_feedAccessoryInEarStatus:(const int *)arg1;	// IMP=0x000000000010280a
- (void)_feedPredictorEstimates;	// IMP=0x000000000010252c
- (void)_feedAccessoryConfig:(const void *)arg1;	// IMP=0x0000000000101d7c
- (void)_feedAccessoryDeviceMotion:(const void *)arg1;	// IMP=0x00000000000ff466
- (unsigned long long)_getAuxSampleTimestamp:(const void *)arg1 currentTime:(double)arg2;	// IMP=0x00000000000fed45
- (void)feedPoseAnchorWithAttitude:(CDStruct_bf7dff04)arg1 position:(CMVector_8ab2a447)arg2 timestampUs:(unsigned long long)arg3;	// IMP=0x00000000000fec55
- (void)_feedPoseAnchor:(const struct Sample *)arg1 facePoseError:(CDStruct_a3d1096a *)arg2;	// IMP=0x00000000000fea59
- (void)_feedFacePose:(id)arg1 rotationMatrix:(id)arg2 timestamp:(double)arg3 error:(CDStruct_a3d1096a *)arg4;	// IMP=0x00000000000fe5a5
- (void)_feedLidAngle:(double)arg1;	// IMP=0x00000000000fe59a
- (void)_feedSourceDeviceIMU:(const struct Sample *)arg1;	// IMP=0x00000000000fe334
- (void)_notifyClientHandler;	// IMP=0x00000000000fdb14
- (void)_stopSourceDMTimer;	// IMP=0x00000000000fdacc
- (void)_startSourceDMTimer;	// IMP=0x00000000000fd95a
- (void)_emulatedSourceDMUpdate;	// IMP=0x00000000000fd021
- (void)_stopJitterBufferLevelRetryTimer;	// IMP=0x00000000000fcfe9
- (void)_startJitterBufferLevelRetryTimer;	// IMP=0x00000000000fcbf5
- (void)_stopJitterBufferLevelMonitor;	// IMP=0x00000000000fcbe5
- (void)_startJitterBufferLevelMonitor;	// IMP=0x00000000000fcb5b
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000000000fcb11
- (void)_stopDefaultsPreferenceUpdater;	// IMP=0x00000000000fca9f
- (void)_startDefaultsPreferenceUpdater;	// IMP=0x00000000000fc9eb
- (void)_updateUserSettings;	// IMP=0x00000000000fc2eb
- (void)_updateUseFwdPredictionUserSettings;	// IMP=0x00000000000fc18b
- (void)_updateMinQuiescentPeriodForBTZ;	// IMP=0x00000000000fbfdf
- (void)_stop;	// IMP=0x00000000000fbc9f
- (void)_stopHeadTracking;	// IMP=0x00000000000fb3d8
- (_Bool)_startPoseUpdatesToQueue:(id)arg1 andHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000fafec
- (void)_triggerUserInteractedWithDeviceEvent;	// IMP=0x00000000000faf0b
- (void)_startHeadTracking;	// IMP=0x00000000000fa573
- (_Bool)_start;	// IMP=0x00000000000fa1ca
- (void)dealloc;	// IMP=0x00000000000fa154
- (void)_reset;	// IMP=0x00000000000fa099
- (id)_initWithOptions:(id)arg1;	// IMP=0x00000000000f97c8
- (id)init;	// IMP=0x00000000000f97b4
- (int)_createPoseFromListenerOrientation:(const struct ListenerOrientation *)arg1 Pose:(id *)arg2;	// IMP=0x00000000000f939e
- (void)_disableLoggingForReplay;	// IMP=0x00000000000f9329
- (void)_enableLoggingForReplayWithFilenamePrefix:(id)arg1 filePath:(id)arg2;	// IMP=0x00000000000f8d7c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

