//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <QuartzCore/CAMediaTiming-Protocol.h>
#import <QuartzCore/CAPropertyInfo-Protocol.h>
#import <QuartzCore/NSSecureCoding-Protocol.h>

@class CAMeshTransform, NSArray, NSDictionary, NSString;
@protocol CALayerDelegate;

@interface CALayer : NSObject <CAPropertyInfo, NSSecureCoding, CAMediaTiming>
{
    struct _CALayerIvars _attr;	// 8 = 0x8
}

+ (double)cornerCurveExpansionFactor:(id)arg1;	// IMP=0x000000000016bc8e
+ (id)defaultActionForKey:(id)arg1;	// IMP=0x000000000016bc86
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000016bc7e
+ (_Bool)CA_automaticallyNotifiesObservers:(Class)arg1;	// IMP=0x000000000016bc5c
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x000000000016bc3d
+ (_Bool)_hasRenderLayerSubclass;	// IMP=0x000000000016bc35
+ (void)initialize;	// IMP=0x000000000016bbc8
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000016bb6a
+ (id)layer;	// IMP=0x000000000016bb58
+ (_Bool)needsDisplayForKey:(id)arg1;	// IMP=0x000000000016bb50
+ (id)defaultValueForKey:(id)arg1;	// IMP=0x000000000016b4f2
+ (void)CAMLParserEndElement:(id)arg1;	// IMP=0x000000000018429d
+ (void)CAMLParserStartElement:(id)arg1;	// IMP=0x000000000018426b
+ (_Bool)resolveInstanceMethod:(SEL)arg1;	// IMP=0x000000000018425e
+ (CDUnknownFunctionPointerType)CA_getterForProperty:(const struct _CAPropertyInfo *)arg1;	// IMP=0x0000000000184244
+ (CDUnknownFunctionPointerType)CA_setterForProperty:(const struct _CAPropertyInfo *)arg1;	// IMP=0x000000000018422d
+ (id)properties;	// IMP=0x0000000000184223
+ (_Bool)needsLayoutForKey:(id)arg1;	// IMP=0x000000000018421b
@property _Bool allowsGroupOpacity;
@property _Bool allowsEdgeAntialiasing;
@property _Bool drawsAsynchronously;
@property _Bool rasterizationPrefersDisplayCompositing;
@property _Bool shouldRasterize;
@property const struct CGPath *shadowPath;
@property double shadowRadius;
@property struct CGSize shadowOffset;
@property struct CGColor *shadowColor;
@property float shadowOpacity;
@property(copy) NSString *contentsSwizzle;
@property struct CGColor *contentsMultiplyColor;
@property double cornerRadius;
@property double borderWidth;
@property struct CGColor *borderColor;
@property(copy) NSDictionary *actions;
@property(copy) NSDictionary *style;
@property(copy) NSString *name;
@property(retain) id compositingFilter;
@property(copy) NSArray *backgroundFilters;
@property(copy) NSArray *filters;
@property _Bool masksToBounds;
@property struct CGColor *backgroundColor;
@property float gain;
@property float minificationFilterBias;
@property(copy) NSString *minificationFilter;
@property(copy) NSString *magnificationFilter;
@property _Bool contentsContainsSubtitles;
@property _Bool cornerContentsMasksEdges;
@property struct CGRect cornerContentsCenter;
@property struct CGRect contentsCenter;
@property struct CGRect contentsRect;
@property struct CATransform3D sublayerTransform;
@property _Bool needsDisplayOnBoundsChange;
@property(getter=isOpaque) _Bool opaque;
@property(getter=isDoubleSided) _Bool doubleSided;
@property(getter=isHidden) _Bool hidden;
@property(retain) id cornerContents;
@property double anchorPointZ;
@property(copy) NSString *fillMode;
@property _Bool autoreverses;
@property double repeatDuration;
@property float repeatCount;
@property float speed;
@property double duration;
@property double timeOffset;
@property double beginTime;
@property _Bool continuousCorners;
- (_Bool)_continuousCorners;	// IMP=0x0000000000174fe0
@property(copy) NSString *cornerCurve;
@property unsigned long long maskedCorners;
- (void)layoutSublayers;	// IMP=0x0000000000174de4
- (void)layoutIfNeeded;	// IMP=0x0000000000174bf0
- (struct CGSize)preferredFrameSize;	// IMP=0x0000000000174b01
- (struct CGSize)_preferredSize;	// IMP=0x0000000000174aef
- (_Bool)needsLayout;	// IMP=0x0000000000174ab2
- (void)setNeedsLayout;	// IMP=0x00000000001748b7
- (void)_validateLayoutHashHasChangedWithLayoutTime:(double)arg1;	// IMP=0x0000000000174633
- (void)_saveCurrentLayoutHash;	// IMP=0x00000000001745b1
- (void)_setPreviousLayoutHash:(id)arg1;	// IMP=0x000000000017459b
- (id)_previousLayoutHash;	// IMP=0x000000000017458a
- (id)_layoutHash;	// IMP=0x000000000017440d
- (void)drawInContext:(struct CGContext *)arg1;	// IMP=0x00000000001742a9
- (void)_contentsFormatDidChange:(id)arg1;	// IMP=0x00000000001741e7
- (struct CGColorSpace *)_retainColorSpace;	// IMP=0x000000000017419b
- (void)_colorSpaceDidChange;	// IMP=0x0000000000174028
- (void)_display;	// IMP=0x00000000001734d4
- (void)display;	// IMP=0x0000000000173411
- (int)_overrideImageFormat;	// IMP=0x0000000000173406
- (void)_renderBorderInContext:(struct CGContext *)arg1;	// IMP=0x0000000000173195
- (void)_renderSublayersInContext:(struct CGContext *)arg1;	// IMP=0x0000000000172f48
- (void)_renderForegroundInContext:(struct CGContext *)arg1;	// IMP=0x0000000000171ac8
- (void)_renderBackgroundInContext:(struct CGContext *)arg1;	// IMP=0x0000000000171638
- (void)renderInContext:(struct CGContext *)arg1;	// IMP=0x0000000000170d60
- (void)displayIfNeeded;	// IMP=0x0000000000170d29
- (_Bool)needsDisplay;	// IMP=0x0000000000170cec
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x0000000000170b31
- (void)setNeedsDisplay;	// IMP=0x0000000000170aff
- (id)modelLayer;	// IMP=0x0000000000170ad1
- (id)presentationLayer;	// IMP=0x0000000000170ab1
- (void)_cancelAnimationTimer;	// IMP=0x0000000000170aab
- (_Bool)_scheduleAnimationTimer;	// IMP=0x0000000000170aa3
- (id)animationKeys;	// IMP=0x000000000017092f
- (id)animationForKey:(id)arg1;	// IMP=0x0000000000170806
- (void)removeAnimationForKey:(id)arg1;	// IMP=0x0000000000170683
- (void)removeAllAnimations;	// IMP=0x000000000017057c
- (void)addAnimation:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000001702e4
- (id)actionForKey:(id)arg1;	// IMP=0x000000000017009f
- (void)replaceSublayer:(id)arg1 with:(id)arg2;	// IMP=0x000000000016fcc4
- (void)insertSublayer:(id)arg1 above:(id)arg2;	// IMP=0x000000000016fb7a
- (void)insertSublayer:(id)arg1 below:(id)arg2;	// IMP=0x000000000016fa3b
- (void)addSublayer:(id)arg1;	// IMP=0x000000000016f951
- (void)insertSublayer:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x000000000016f86a
- (void)removeFromSuperlayer;	// IMP=0x000000000016f85c
@property id <CALayerDelegate> unsafeUnretainedDelegate;
@property __weak id <CALayerDelegate> delegate;
@property(retain) CALayer *mask;
@property(readonly) CALayer *superlayer;
@property(copy) NSArray *sublayers;
@property float opacity;
@property(copy) NSString *contentsScaling;
@property(copy) NSString *contentsGravity;
@property(readonly) long long contentsGravityEnum;
@property(copy) NSString *contentsFormat;
@property(copy) NSString *securityMode;
@property unsigned int disableUpdateMask;
@property double rasterizationScale;
@property double contentsScale;
@property unsigned int edgeAntialiasingMask;
@property(retain) id contents;
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x000000000016ecf2
- (id)hitTest:(struct CGPoint)arg1;	// IMP=0x000000000016e912
- (double)convertTime:(double)arg1 toLayer:(id)arg2;	// IMP=0x000000000016e8a4
- (double)convertTime:(double)arg1 fromLayer:(id)arg2;	// IMP=0x000000000016e836
- (struct CGRect)convertRect:(struct CGRect)arg1 toLayer:(id)arg2;	// IMP=0x000000000016e720
- (struct CGRect)convertRect:(struct CGRect)arg1 fromLayer:(id)arg2;	// IMP=0x000000000016e60a
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toLayer:(id)arg2;	// IMP=0x000000000016e5a5
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromLayer:(id)arg2;	// IMP=0x000000000016e53d
- (_Bool)contentsAreFlipped;	// IMP=0x000000000016e52b
@property(getter=isGeometryFlipped) _Bool geometryFlipped;
@property struct CGRect frame;
- (void)setAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x000000000016dfbe
- (struct CGAffineTransform)affineTransform;	// IMP=0x000000000016de94
@property struct CATransform3D transform;
@property double zPosition;
@property struct CGPoint position;
@property struct CGPoint anchorPoint;
@property struct CGRect bounds;
- (_Bool)shouldArchiveValueForKey:(id)arg1;	// IMP=0x000000000016d16a
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000016d011
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000016cea8
- (void)setObservationInfo:(void *)arg1;	// IMP=0x000000000016ce9e
- (void *)observationInfo;	// IMP=0x000000000016ce94
- (_Bool)CA_validateValue:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000016cc84
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x000000000016c9ca
- (id)valueForKeyPath:(id)arg1;	// IMP=0x000000000016c9bd
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x000000000016c854
- (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000016c7d3
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x000000000016c6ef
- (id)CA_archivingValueForKey:(id)arg1;	// IMP=0x000000000016c679
- (id)valueForKey:(id)arg1;	// IMP=0x000000000016c646
- (id)debugDescription;	// IMP=0x000000000016c204
- (void)dealloc;	// IMP=0x000000000016c160
- (void)_dealloc;	// IMP=0x000000000016c14e
- (id)_initWithReference:(id)arg1;	// IMP=0x000000000016bfb6
- (id)initWithLayer:(id)arg1;	// IMP=0x000000000016be5f
- (id)init;	// IMP=0x000000000016bd14
- (_Bool)allowsWeakReference;	// IMP=0x000000000016bd07
- (unsigned long long)retainCount;	// IMP=0x000000000016bcf4
- (oneway void)release;	// IMP=0x000000000016bcea
- (_Bool)retainWeakReference;	// IMP=0x000000000016bcd9
- (id)retain;	// IMP=0x000000000016bcc1
- (id)stateTransitionFrom:(id)arg1 to:(id)arg2;	// IMP=0x000000000007f85e
- (id)dependentStatesOfState:(id)arg1;	// IMP=0x000000000007f810
- (id)stateWithName:(id)arg1;	// IMP=0x000000000007f6a1
- (void)removeState:(id)arg1;	// IMP=0x000000000007f605
- (void)insertState:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x000000000007f553
- (void)addState:(id)arg1;	// IMP=0x000000000007f53c
@property(readonly) struct CGRect visibleRect;
- (struct CGRect)_visibleRectOfLayer:(id)arg1;	// IMP=0x0000000000080317
- (void)scrollRectToVisible:(struct CGRect)arg1;	// IMP=0x0000000000080302
- (void)_scrollRect:(struct CGRect)arg1 fromLayer:(id)arg2;	// IMP=0x00000000000802d1
- (void)scrollPoint:(struct CGPoint)arg1;	// IMP=0x00000000000802bc
- (void)_scrollPoint:(struct CGPoint)arg1 fromLayer:(id)arg2;	// IMP=0x000000000008026f
@property double motionBlurAmount;
@property _Bool definesDisplayRegionOfInterest;
@property _Bool acceleratesDrawing;
@property struct CGSize backgroundColorPhase;
@property struct CGSize sizeRequisition;
@property _Bool allowsGroupBlending;
@property _Bool toneMapToStandardDynamicRange;
@property _Bool wantsExtendedDynamicRangeContent;
@property _Bool allowsDisplayCompositing;
@property _Bool createsCompositingGroup;
@property _Bool preloadsCache;
@property _Bool inheritsTiming;
@property _Bool contentsOpaque;
@property _Bool contentsDither;
@property _Bool contentsAlignsToPixels;
@property struct CGAffineTransform contentsTransform;
@property _Bool shadowPathIsBounds;
@property _Bool invertsShadow;
@property _Bool flipsHorizontalAxis;
@property _Bool sortsSublayers;
@property _Bool needsLayoutOnGeometryChange;
@property(getter=isFrozen) _Bool frozen;
@property _Bool clearsContext;
@property _Bool canDrawConcurrently;
@property _Bool literalContentsCenter;
@property _Bool hitTestsAsOpaque;
@property _Bool hitTestsContentsAlphaChannel;
@property _Bool allowsHitTesting;
- (void)setFlipped:(_Bool)arg1;	// IMP=0x00000000001832a1
- (_Bool)isFlipped;	// IMP=0x000000000018328f
- (_Bool)doubleSided;	// IMP=0x000000000018327d
- (_Bool)opaque;	// IMP=0x000000000018326b
- (_Bool)hidden;	// IMP=0x0000000000183259
- (_Bool)CAMLTypeSupportedForKey:(id)arg1;	// IMP=0x000000000018318e
- (id)CAMLTypeForKey:(id)arg1;	// IMP=0x000000000018314b
- (void)encodeWithCAMLWriter:(id)arg1;	// IMP=0x0000000000182ffc
- (void)CAMLParser:(id)arg1 setValue:(id)arg2 forKey:(id)arg3;	// IMP=0x0000000000182f92
- (id)recursiveDescription;	// IMP=0x0000000000182f5c
@property(copy) NSArray *presentationModifiers;
- (void)removePresentationModifier:(id)arg1;	// IMP=0x0000000000182d83
- (void)addPresentationModifier:(id)arg1;	// IMP=0x0000000000182c9c
- (_Bool)_defersDidBecomeVisiblePostCommit;	// IMP=0x0000000000182c94
- (void)layerDidBecomeVisible:(_Bool)arg1;	// IMP=0x0000000000182c8e
- (unsigned int)_renderLayerPropertyAnimationFlags:(unsigned int)arg1;	// IMP=0x0000000000182bde
- (_Bool)_renderLayerDefinesProperty:(unsigned int)arg1;	// IMP=0x0000000000182bc0
- (void)_didCommitLayer:(void *)arg1;	// IMP=0x0000000000182bba
- (void *)_copyRenderLayer:(void *)arg1 layerFlags:(unsigned int)arg2 commitFlags:(unsigned int *)arg3;	// IMP=0x0000000000180ee1
- (id)layerAtTime:(double)arg1;	// IMP=0x0000000000180eb3
- (id)layerBeingDrawn;	// IMP=0x0000000000180e7f
- (struct CGSize)size;	// IMP=0x0000000000180e6b
- (id)ancestorSharedWithLayer:(id)arg1;	// IMP=0x0000000000180db4
- (_Bool)isDescendantOf:(id)arg1;	// IMP=0x0000000000180d56
- (_Bool)ignoresHitTesting;	// IMP=0x0000000000180d18
- (void)layoutBelowIfNeeded;	// IMP=0x0000000000180cf8
- (_Bool)layoutIsActive;	// IMP=0x0000000000180c99
- (void)_prepareContext:(struct CGContext *)arg1;	// IMP=0x0000000000180c93
- (void *)regionBeingDrawn;	// IMP=0x0000000000180c38
- (unsigned int)_renderImageCopyFlags;	// IMP=0x0000000000180b36
- (void)setContentsChanged;	// IMP=0x0000000000180adb
- (void)invalidateContents;	// IMP=0x00000000001809be
@property(copy) CAMeshTransform *meshTransform;
- (id)context;	// IMP=0x00000000001808ab
- (void)clearHasBeenCommitted;	// IMP=0x0000000000180899
- (_Bool)hasBeenCommitted;	// IMP=0x0000000000180886
- (_Bool)drawsMipmapLevels;	// IMP=0x000000000018087e
- (_Bool)_canDisplayConcurrently;	// IMP=0x000000000018086c
- (id)implicitAnimationForKeyPath:(id)arg1;	// IMP=0x0000000000180722
- (void)reloadValueForKeyPath:(id)arg1;	// IMP=0x00000000001806b5
- (_Bool)getRendererInfo:(struct _CARenderRendererInfo *)arg1 size:(unsigned long long)arg2;	// IMP=0x0000000000183f63
- (id)optimizationOpportunities:(_Bool)arg1;	// IMP=0x00000000001bb2d5

// Remaining properties
@property(copy) NSArray *stateTransitions; // @dynamic stateTransitions;
@property(copy) NSArray *states; // @dynamic states;

@end

