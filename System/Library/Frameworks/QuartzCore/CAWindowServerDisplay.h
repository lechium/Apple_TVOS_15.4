//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <QuartzCore/CABrightnessControl-Protocol.h>
#import <QuartzCore/CAPresetTransaction-Protocol.h>

@class NSDictionary, NSSet, NSString, NSUUID;

@interface CAWindowServerDisplay : NSObject <CABrightnessControl, CAPresetTransaction>
{
    struct CAWindowServerDisplayImpl *_impl;	// 8 = 0x8
    _Bool _mirroringEnabled;	// 16 = 0x10
    unsigned long long _minimumFrameTime;	// 24 = 0x18
    unsigned long long _maximumFrameTime;	// 32 = 0x20
    unsigned long long _minimumVRRVBLDelta;	// 40 = 0x28
    unsigned long long _maximumVRRVBLDelta;	// 48 = 0x30
}

@property(readonly) unsigned long long maximumVRRVBLDelta; // @synthesize maximumVRRVBLDelta=_maximumVRRVBLDelta;
@property(readonly) unsigned long long minimumVRRVBLDelta; // @synthesize minimumVRRVBLDelta=_minimumVRRVBLDelta;
@property(readonly) unsigned long long maximumFrameTime; // @synthesize maximumFrameTime=_maximumFrameTime;
@property(readonly) unsigned long long minimumFrameTime; // @synthesize minimumFrameTime=_minimumFrameTime;
@property(getter=isMirroringEnabled) _Bool mirroringEnabled; // @synthesize mirroringEnabled=_mirroringEnabled;
- (void)renderForTime:(double)arg1;	// IMP=0x00000000001b4c7d
@property _Bool accessibilityFrameRateLimitEnabled;
- (void)setGammaAdjustment:(struct CGColorTRC [3])arg1;	// IMP=0x00000000001b4ba8
@property struct CGColorTRC blackpointAdaptation;
@property struct CGColorTRC systemGamma;
@property(retain) struct CGColorSpace *displayColorSpace;
@property(retain) struct CGColorSpace *blendColorSpace;
@property(readonly) _Bool supportsColorSpaces;
- (void)addFramePresentationTimestamp:(unsigned long long)arg1;	// IMP=0x00000000001b4920
- (void)copyDisplayTimingsFromDisplay:(id)arg1;	// IMP=0x00000000001b48ee
- (_Bool)setDigitalModes:(id)arg1 withTimings:(id)arg2;	// IMP=0x00000000001b48c6
- (void)postNotification:(id)arg1 payload:(id)arg2;	// IMP=0x00000000001b4616
- (void)setNotificationQueue:(id)arg1;	// IMP=0x00000000001b45de
- (id)notificationQueue;	// IMP=0x00000000001b45a2
- (void)unregisterNotificationBlocks;	// IMP=0x00000000001b458d
- (void)registerForNotifications:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001b4337
@property(readonly, nonatomic) unsigned int serviceObject;
@property(readonly, nonatomic) NSDictionary *brightnessCapabilities;
@property(readonly) _Bool wantedToDetach;
@property(retain) struct __IOSurface *cursorSurface;
@property(readonly) struct CGSize minimumVisibleCursorSize;
@property(readonly) _Bool tripleBuffered;
@property _Bool cursorEnabled;
@property _Bool cursorHidden;
@property(copy) NSDictionary *cursorDictionary;
@property struct CGPoint cursorPosition;
@property(readonly) struct CGSize maximumCursorSize;
@property(readonly) _Bool supportsCursor;
@property(readonly) _Bool needsUpdate;
@property(readonly) struct CGRect detachingRect;
@property(readonly, getter=isDetaching) _Bool detaching;
@property(readonly) void *detachingDisplay;
- (void)presentSurface:(struct __IOSurface *)arg1 withOptions:(id)arg2;	// IMP=0x00000000001b3ff5
- (void)activateReplay;	// IMP=0x00000000001b3fa8
- (_Bool)finishExternalUpdate:(void *)arg1 withFlags:(unsigned int)arg2 debugInfo:(unsigned long long)arg3;	// IMP=0x00000000001b3f66
- (_Bool)finishExternalUpdate:(void *)arg1 withFlags:(unsigned int)arg2;	// IMP=0x00000000001b3f51
- (void)beginExternalUpdate:(void *)arg1 usingSoftwareRenderer:(_Bool)arg2;	// IMP=0x00000000001b3ef0
@property(readonly) unsigned long long previousVBL;
@property(readonly) unsigned long long vblDelta;
@property(readonly) double nextWakeupTime;
- (_Bool)canUpdateWithFlags:(unsigned int)arg1;	// IMP=0x00000000001b3d73
- (_Bool)canUpdate:(_Bool)arg1;	// IMP=0x00000000001b3d61
- (_Bool)abortWhitePointRamp:(CDStruct_443af386 *)arg1 error:(id *)arg2;	// IMP=0x00000000001b3d4a
- (_Bool)setWhitePoint:(CDStruct_443af386 *)arg1 rampDuration:(double)arg2 error:(id *)arg3;	// IMP=0x00000000001b3c68
@property(readonly, nonatomic) _Bool whitePointD50XYZ;
@property(readonly, nonatomic) _Bool whitePointAvailable;
@property(readonly, nonatomic) _Bool brightnessAvailable;
- (_Bool)commitPreset;	// IMP=0x00000000001b3bc9
@property(nonatomic) _Bool preserveAppleSRGBGammaResponse;
@property(nonatomic) long long trinityCabalConfig;
@property(nonatomic) double maximumReferenceLuminance;
@property(nonatomic) double minimumLuminance;
@property(nonatomic) double maximumSDRLuminance;
@property(nonatomic) double maximumHDRLuminance;
- (_Bool)commitBrightness:(id *)arg1;	// IMP=0x00000000001b3845
- (void)setBrightnessLimit:(float)arg1;	// IMP=0x00000000001b382d
- (void)setSDRBrightness:(float)arg1;	// IMP=0x00000000001b3815
- (void)setPotentialHeadroom:(float)arg1;	// IMP=0x00000000001b37fd
- (void)setHeadroom:(float)arg1;	// IMP=0x00000000001b37e5
- (void)setFilteredAmbient:(float)arg1;	// IMP=0x00000000001b37cd
- (void)setAmbient:(float)arg1;	// IMP=0x00000000001b37b5
- (void)emitWhitePointError:(id *)arg1;	// IMP=0x00000000001b3709
- (void)emitBrightnessError:(id *)arg1;	// IMP=0x00000000001b365d
@property(readonly) long long transportType;
@property(readonly) float gamma;
@property(readonly) CDStruct_31cefc2d chromaticities;
@property(readonly) CDStruct_b2fbf00d whitepoint;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int framebufferFormat;
@property _Bool enabled;
@property _Bool disabled;
@property _Bool disablesUpdates;
- (struct __IOSurface *)acquireFrozenSurface;	// IMP=0x00000000001b3188
- (void)freeze;	// IMP=0x00000000001b314f
@property _Bool allowsDisplayCompositing;
@property(getter=isSecure) _Bool secure;
@property(copy) CDUnknownBlockType updateRequestCallback;
@property(copy) CDUnknownBlockType brightnessCallback;
@property(copy) CDUnknownBlockType hotPlugCallback;
@property(copy) NSString *TVSignalType;
@property(copy) NSString *TVMode;
@property int processId;
@property long long tag;
@property(readonly) _Bool supportsExtendedColors;
@property _Bool allowsVirtualModes;
@property(copy, nonatomic) NSString *colorMode;
@property _Bool usesPreferredModeRefreshRate;
@property float idealRefreshRate;
- (float)maximumRefreshRate;	// IMP=0x00000000001b2b5b
- (void)setMaximumRefreshRate:(float)arg1;	// IMP=0x00000000001b2b47
- (float)minimumRefreshRate;	// IMP=0x00000000001b2b30
- (void)setMinimumRefreshRate:(float)arg1;	// IMP=0x00000000001b2b1c
@property(readonly) float maximumLuminance;
@property float maximumBrightness;
@property float contrast;
- (void)setAccessibilityColorMatrix:(float *)arg1 scale:(float)arg2;	// IMP=0x00000000001b287d
@property float nits;
- (void)abortContrastEnhancerRamp:(float *)arg1;	// IMP=0x00000000001b26b7
- (void)setContrastEnhancer:(float)arg1 rampDuration:(double)arg2;	// IMP=0x00000000001b263c
- (void)setUserAdjustment:(float *)arg1 scale:(float)arg2;	// IMP=0x00000000001b25bf
- (void)abortColorMatrixRamp:(float *)arg1 scale:(float *)arg2;	// IMP=0x00000000001b2543
- (void)setColorMatrix:(float *)arg1 scale:(float)arg2 rampDuration:(double)arg3;	// IMP=0x00000000001b24de
@property(getter=isGrayscale) _Bool grayscale;
@property _Bool allowsExtendedDynamicRange;
@property _Bool invertsColors;
- (double)apertureOffset;	// IMP=0x00000000001b225e
- (void)setApertureOffset:(double)arg1;	// IMP=0x00000000001b2216
@property struct CGSize overscanAmounts;
@property double overscanAmount;
@property(copy) NSString *overscanAdjustment;
@property(copy) NSString *orientation;
@property(getter=isFlipBookEnabled) _Bool flipBookEnabled;
- (void)setCalibrationPhase:(unsigned int)arg1 forIdentifier:(unsigned int)arg2;	// IMP=0x00000000001b1c22
- (void)willUnblank;	// IMP=0x00000000001b1be9
@property(getter=isBlanked) _Bool blanked;
- (void)powerStateDidChange:(id)arg1;	// IMP=0x00000000001b1acc
@property(readonly) CAWindowServerDisplay *cloneMaster;
- (void)removeAllClones;	// IMP=0x00000000001b18b3
- (void)removeClone:(id)arg1;	// IMP=0x00000000001b1776
- (void)addClone:(id)arg1;	// IMP=0x00000000001b1762
- (void)addClone:(id)arg1 options:(id)arg2;	// IMP=0x00000000001b1174
@property(readonly) NSSet *clones;
- (struct CATransform3D)transformFromLayerId:(unsigned long long)arg1 inContextId:(unsigned int)arg2;	// IMP=0x00000000001b045e
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x00000000001b032e
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toContextId:(unsigned int)arg2;	// IMP=0x00000000001b01f8
- (unsigned int)taskNamePortOfContextId:(unsigned int)arg1;	// IMP=0x00000000001b0165
- (unsigned int)clientPortOfContextId:(unsigned int)arg1;	// IMP=0x00000000001b011c
- (unsigned int)clientPortAtPosition:(struct CGPoint)arg1;	// IMP=0x00000000001b0036
- (id)hitTestAtPosition:(struct CGPoint)arg1 options:(id)arg2;	// IMP=0x00000000001af570
- (unsigned int)contextIdAtPosition:(struct CGPoint)arg1 excludingContextIds:(id)arg2;	// IMP=0x00000000001af3d3
- (unsigned int)contextIdAtPosition:(struct CGPoint)arg1;	// IMP=0x00000000001af3bf
@property(readonly) unsigned int rendererFlags;
@property(readonly, nonatomic) NSUUID *uuid;
@property(readonly, nonatomic) unsigned long long vendorId;
@property(readonly, nonatomic) unsigned long long productId;
@property(readonly) NSString *uniqueId;
@property(readonly) long long displayType;
@property(readonly) unsigned int displayId;
@property(readonly) NSString *deviceName;
@property(readonly) NSString *name;
@property(readonly) unsigned long long panelPointsPerInch;
@property(readonly) struct CGSize panelPhysicalSize;
@property(readonly) unsigned long long maximumSourceRectPixels;
@property(readonly) unsigned long long maximumSourceRectWidth;
@property(readonly) unsigned long long minimumSourceRectSize;
@property(readonly) double maximumScale;
@property(readonly) double minimumScale;
@property _Bool scalePreservesAspect;
@property struct CGSize scales;
@property double scale;
@property(readonly) struct CGSize nativeSize;
@property(readonly) struct CGRect bounds;
- (void)update;	// IMP=0x00000000001aed39
- (void)dealloc;	// IMP=0x00000000001aec68
- (void)invalidate;	// IMP=0x00000000001aec06
- (id)_initWithCADisplayServer:(void *)arg1;	// IMP=0x00000000001aeb22

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

