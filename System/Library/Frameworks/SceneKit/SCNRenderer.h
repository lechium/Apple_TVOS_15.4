//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SceneKit/SCNMTLRenderContextCommandBufferStatusMonitor-Protocol.h>
#import <SceneKit/SCNMTLRenderContextResourceManagerMonitor-Protocol.h>
#import <SceneKit/SCNSceneRenderer-Protocol.h>
#import <SceneKit/SCNTechniqueSupport-Protocol.h>

@class AVAudioEngine, AVAudioEnvironmentNode, EAGLContext, MISSING_TYPE, MTLRenderPassDescriptor, NSArray, NSString, SCNAuthoringEnvironment, SCNMTLRenderContext, SCNNode, SCNRecursiveLock, SCNRendererTransitionContext, SCNScene, SCNTechnique, SKScene, UIColor, __SKSCNRenderer;
@protocol MTLCommandQueue, MTLDevice, MTLRenderCommandEncoder, MTLTexture, OS_dispatch_queue, SCNSceneRenderer, SCNSceneRendererDelegate, _SCNSceneCommandBufferStatusMonitor, _SCNSceneRendererResourceManagerMonitor;

@interface SCNRenderer : NSObject <SCNMTLRenderContextCommandBufferStatusMonitor, SCNMTLRenderContextResourceManagerMonitor, SCNSceneRenderer, SCNTechniqueSupport>
{
    SCNScene *_scene;	// 8 = 0x8
    SCNNode *_pointOfView;	// 16 = 0x10
    SCNNode *_pointOfCulling;	// 24 = 0x18
    SCNRecursiveLock *_lock;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *__renderingQueue;	// 40 = 0x28
    unsigned long long __antialiasingMode;	// 48 = 0x30
    unsigned long long __preparePixelFormat;	// 56 = 0x38
    struct {
        struct __C3DFramebuffer *frameBuffer;
        struct __C3DFramebuffer *multisamplingFrameBuffer;
        struct CGSize drawableSize;
    } _framebufferInfo;	// 64 = 0x40
    id <MTLTexture> _mtlTexture;	// 96 = 0x60
    NSArray *_viewPoints;	// 104 = 0x68
    _Bool _pointOfViewWasSet;	// 112 = 0x70
    unsigned int _shouldDeleteFramebuffer:1;	// 113 = 0x71
    unsigned int _rendersContinuously:1;	// 113 = 0x71
    unsigned int _isPrivateRenderer:1;	// 113 = 0x71
    unsigned int _isViewPrivateRenderer:1;	// 113 = 0x71
    unsigned int _renderingSnapshot:1;	// 113 = 0x71
    unsigned int _renderingPrepare:1;	// 113 = 0x71
    unsigned int _autoUpdate:1;	// 113 = 0x71
    unsigned int _disableLinearRendering:1;	// 113 = 0x71
    double _currentSceneTime;	// 120 = 0x78
    double _currentSystemTime;	// 128 = 0x80
    double _deltaTime;	// 136 = 0x88
    double _forceSystemTime;	// 144 = 0x90
    double _lastSystemTime;	// 152 = 0x98
    double __nextFrameTime;	// 160 = 0xa0
    SCNRendererTransitionContext *_transitionContext;	// 168 = 0xa8
    _Bool _playing;	// 176 = 0xb0
    _Bool _loops;	// 177 = 0xb1
    _Bool _isAnimating;	// 178 = 0xb2
    unsigned int _adaptativeState0;	// 180 = 0xb4
    unsigned int _adaptativeEndFrame;	// 184 = 0xb8
    unsigned int _adaptativeTechniqueTimeStamp;	// 188 = 0xbc
    id _delegate;	// 192 = 0xc0
    struct __C3DEngineContext *_engineContext;	// 200 = 0xc8
    unsigned long long _renderingAPI;	// 208 = 0xd0
    struct SCNVector4 __viewport;	// 216 = 0xd8
    double __aspectRatio;	// 232 = 0xe8
    MISSING_TYPE *__drawableSafeAreaInsets;	// 240 = 0xf0
    EAGLContext *_glContext;	// 256 = 0x100
    SCNMTLRenderContext *_renderContext;	// 264 = 0x108
    unsigned int _jitteringEnabled:1;	// 272 = 0x110
    unsigned int _temporalAntialiasingEnabled:1;	// 272 = 0x110
    unsigned int _frozen:1;	// 272 = 0x110
    unsigned int _shouldForwardSceneRendererDelegationMessagesToSelf:1;	// 272 = 0x110
    unsigned int _shouldForwardSceneRendererDelegationMessagesToPrivateRendererOwner:1;	// 272 = 0x110
    CDStruct_f76d274b _selfDelegationConformance;	// 276 = 0x114
    CDStruct_f76d274b _privateRendererOwnerDelegationConformance;	// 280 = 0x118
    CDStruct_f76d274b _delegationConformance;	// 284 = 0x11c
    UIColor *_backgroundColor;	// 288 = 0x120
    struct C3DColor4 {
        union {
            float rgba[4];
            struct {
                float r;
                float g;
                float b;
                float a;
            } ;
            MISSING_TYPE *simd;
        } ;
    } _c3dBackgroundColor;	// 304 = 0x130
    SCNRenderer *_preloadRenderer;	// 320 = 0x140
    id <SCNSceneRenderer> _privateRendererOwner;	// 328 = 0x148
    SCNTechnique *_technique;	// 336 = 0x150
    SCNRenderer *_snapshotRenderer;	// 344 = 0x158
    __SKSCNRenderer *_overlayRenderer;	// 352 = 0x160
    id _overlayScene;	// 360 = 0x168
    _Bool _disableOverlays;	// 368 = 0x170
    float _contentScaleFactor;	// 372 = 0x174
    _Bool _isRunningInExtension;	// 376 = 0x178
    SCNAuthoringEnvironment *_authoringEnvironment;	// 384 = 0x180
    unsigned long long _debugOptions;	// 392 = 0x188
    _Bool _showStatistics;	// 400 = 0x190
    _Bool _showAuthoringEnvironment;	// 401 = 0x191
    double _statisticsTimeStamp;	// 408 = 0x198
    id <_SCNSceneRendererResourceManagerMonitor> _resourceManagerMonitor;	// 416 = 0x1a0
    id <_SCNSceneCommandBufferStatusMonitor> _commandBufferStatusMonitor;	// 424 = 0x1a8
}

+ (id)rendererWithContext:(id)arg1 options:(id)arg2;	// IMP=0x00000000001a7799
+ (id)rendererWithDevice:(id)arg1 options:(id)arg2;	// IMP=0x00000000001a772c
- (void).cxx_destruct;	// IMP=0x00000000001b4d3a
- (void)_setInterfaceOrientation:(long long)arg1;	// IMP=0x00000000001b4cf1
- (void)_interfaceOrientationDidChange;	// IMP=0x00000000001b4c77
- (void)_UIOrientationDidChangeNotification:(id)arg1;	// IMP=0x00000000001b4c65
- (void)_addGPUFramePresentedHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b4b57
- (void)_addGPUFrameCompletedHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b4a9c
- (void)_addGPUFrameScheduledHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b49e1
- (id)privateRendererOwner;	// IMP=0x00000000001b49d4
- (void)_jitterAtStep:(unsigned long long)arg1 updateMainFramebuffer:(_Bool)arg2 redisplay:(_Bool)arg3 jitterer:(id)arg4;	// IMP=0x00000000001b47bd
- (void)updateProbes:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000001b3512
- (void)_updateProbes:(id)arg1 withProgress:(id)arg2;	// IMP=0x00000000001b34b9
- (id)snapshotRendererWithSize:(struct CGSize)arg1;	// IMP=0x00000000001b3031
- (struct CGImage *)_createSnapshotAtTime:(double)arg1 withSize:(struct CGSize)arg2 antialiasingMode:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00000000001b2eaa
- (struct CGImage *)_createSnapshotAtTime:(double)arg1 withSize:(struct CGSize)arg2 antialiasingMode:(unsigned long long)arg3;	// IMP=0x00000000001b2e93
- (id)snapshotAtTime:(double)arg1 withSize:(struct CGSize)arg2 antialiasingMode:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00000000001b2e49
- (id)snapshotAtTime:(double)arg1 withSize:(struct CGSize)arg2 antialiasingMode:(unsigned long long)arg3;	// IMP=0x00000000001b2dcf
- (struct CGImage *)_createBackgroundColorImageWithSize:(struct CGSize)arg1;	// IMP=0x00000000001b2c8e
- (id)snapshotAtTime:(double)arg1;	// IMP=0x00000000001b2c4a
- (struct CGImage *)createSnapshot:(double)arg1 error:(id *)arg2;	// IMP=0x00000000001b2881
- (void)_installGLContextAndSetViewport;	// IMP=0x00000000001b27f4
- (void)render;	// IMP=0x00000000001b27d0
- (void)renderWithViewpoints:(id)arg1 events:(id)arg2;	// IMP=0x00000000001b26f1
- (void)renderAtTime:(double)arg1 commandBuffer:(id)arg2 viewPoints:(id)arg3;	// IMP=0x00000000001b26df
- (void)renderWithCommandBuffer:(id)arg1 viewPoints:(id)arg2;	// IMP=0x00000000001b24f9
- (void)renderAtTime:(double)arg1 viewport:(struct CGRect)arg2 encoder:(id)arg3 passDescriptor:(id)arg4 commandQueue:(id)arg5;	// IMP=0x00000000001b24e1
- (void)_renderAtTime:(double)arg1 viewport:(struct CGRect)arg2 encoder:(id)arg3 passDescriptor:(id)arg4 commandQueue:(id)arg5 commandBuffer:(id)arg6;	// IMP=0x00000000001b216c
- (void)renderAtTime:(double)arg1 viewport:(struct CGRect)arg2 commandBuffer:(id)arg3 passDescriptor:(id)arg4;	// IMP=0x00000000001b2110
- (void)renderWithViewport:(struct CGRect)arg1 commandBuffer:(id)arg2 passDescriptor:(id)arg3;	// IMP=0x00000000001b20a3
- (void)renderAtTime:(double)arg1;	// IMP=0x00000000001b203b
- (void)_renderAtTime:(double)arg1;	// IMP=0x00000000001b1fba
- (void)_drawAtTime:(double)arg1;	// IMP=0x00000000001b1941
- (void)_draw;	// IMP=0x00000000001b191d
- (void)_updateSystemTimeAndDeltaTimeWithCurrentTime:(double)arg1;	// IMP=0x00000000001b186d
- (void)_drawScene:(struct __C3DScene *)arg1;	// IMP=0x00000000001b17d4
- (double)_computeNextFrameTime;	// IMP=0x00000000001b1787
- (_Bool)_needsRedrawAsap;	// IMP=0x00000000001b15df
- (_Bool)_drawSceneWithLegacyRenderer:(struct __C3DScene *)arg1;	// IMP=0x00000000001b1385
- (_Bool)_drawSceneWithNewRenderer:(struct __C3DScene *)arg1;	// IMP=0x00000000001b115c
- (void)_renderSceneWithEngineContext:(struct __C3DEngineContext *)arg1 sceneTime:(double)arg2;	// IMP=0x00000000001b050e
- (void)_drawWithJitteringPresentationMode;	// IMP=0x00000000001b04ea
- (id)MTLTexture;	// IMP=0x00000000001b04e0
@property(retain, nonatomic) SCNNode *audioListener;
@property(readonly, nonatomic) AVAudioEnvironmentNode *audioEnvironmentNode;
@property(readonly, nonatomic) AVAudioEngine *audioEngine;
- (void)set_drawableSafeAreaInsets: /* Error: Ran out of types for this method. */;	// IMP=0x00000000001b043d
- (MISSING_TYPE *)_drawableSafeAreaInsets;	// IMP=0x00000000001b0430
- (void)set_viewport:(struct SCNVector4)arg1;	// IMP=0x00000000001b03c2
- (struct CGRect)viewport;	// IMP=0x00000000001b038f
@property(readonly, nonatomic) struct CGRect currentViewport;
- (struct SCNVector4)_viewport;	// IMP=0x00000000001b0321
- (id)_authoringEnvironment;	// IMP=0x00000000001b0314
- (void)setupAuthoringEnvironment;	// IMP=0x00000000001b0296
- (void)set_showsAuthoringEnvironment:(_Bool)arg1;	// IMP=0x00000000001b0209
- (_Bool)_showsAuthoringEnvironment;	// IMP=0x00000000001b01fd
- (id)_compilationErrors;	// IMP=0x00000000001b018b
- (void)set_collectCompilationErrors:(_Bool)arg1;	// IMP=0x00000000001b012c
- (_Bool)_collectCompilationErrors;	// IMP=0x00000000001b00cf
- (void)set_shouldDelegateARCompositing:(_Bool)arg1;	// IMP=0x00000000001b00ac
- (_Bool)_shouldDelegateARCompositing;	// IMP=0x00000000001b008a
- (void)set_enableARMode:(_Bool)arg1;	// IMP=0x00000000001b0067
- (_Bool)_enableARMode;	// IMP=0x00000000001b0045
- (void)set_disableLinearRendering:(_Bool)arg1;	// IMP=0x00000000001b0032
- (_Bool)_disableLinearRendering;	// IMP=0x00000000001b0026
- (void)set_enablesDeferredShading:(_Bool)arg1;	// IMP=0x00000000001b0003
- (_Bool)_enablesDeferredShading;	// IMP=0x00000000001affe1
- (void)_reloadDebugOptions;	// IMP=0x00000000001afef0
@property(nonatomic) _Bool usesReverseZ;
@property(nonatomic) unsigned long long debugOptions;
- (void)_presentFramebuffer;	// IMP=0x00000000001afb74
- (void)_runningInExtension;	// IMP=0x00000000001afb67
@property(nonatomic) _Bool showsStatistics;
- (void)_displayLinkStatsTack;	// IMP=0x00000000001afaf3
- (void)_displayLinkStatsTick;	// IMP=0x00000000001afaa7
- (id)_copyPerformanceStatistics;	// IMP=0x00000000001afa24
- (void)setFrozen:(_Bool)arg1;	// IMP=0x00000000001af9d5
- (_Bool)frozen;	// IMP=0x00000000001af9c4
- (_Bool)temporalAntialiasingEnabled;	// IMP=0x00000000001af9b4
@property(nonatomic, getter=isTemporalAntialiasingEnabled) _Bool temporalAntialiasingEnabled;
- (_Bool)jitteringEnabled;	// IMP=0x00000000001af97e
@property(nonatomic, getter=isJitteringEnabled) _Bool jitteringEnabled;
@property(nonatomic) _Bool loops;
- (void)setRendersContinuously:(_Bool)arg1;	// IMP=0x00000000001af930
@property(getter=isPlaying) _Bool playing;
- (void)_stop;	// IMP=0x00000000001af8b9
- (void)_pause;	// IMP=0x00000000001af8ac
- (void)_play;	// IMP=0x00000000001af88b
- (id)nodesInsideFrustumWithPointOfView:(id)arg1;	// IMP=0x00000000001af852
- (id)_nodesInsideFrustumWithPointOfView:(id)arg1 viewport:(struct SCNVector4)arg2;	// IMP=0x00000000001af675
- (_Bool)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2;	// IMP=0x00000000001af641
- (_Bool)_isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2 viewport:(struct SCNVector4)arg3;	// IMP=0x00000000001af3a9
- (id)_hitTest:(struct CGPoint)arg1 viewport:(struct CGSize)arg2 options:(id)arg3;	// IMP=0x00000000001af141
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3)arg1 toPoint:(struct SCNVector3)arg2 options:(id)arg3;	// IMP=0x00000000001af0d9
- (id)hitTest:(struct CGPoint)arg1 options:(id)arg2;	// IMP=0x00000000001af0a5
- (void)_drawOverlaySceneAtTime:(double)arg1;	// IMP=0x00000000001aef34
- (void)updateAndDrawStatisticsIfNeeded;	// IMP=0x00000000001aedf7
- (void)updateAtTime:(double)arg1;	// IMP=0x00000000001aede5
- (void)_updateWithSystemTime:(double)arg1;	// IMP=0x00000000001aed31
- (void)_update:(struct __C3DScene *)arg1;	// IMP=0x00000000001ae3a3
@property(readonly, nonatomic) void *context;
- (void)setContext:(id)arg1;	// IMP=0x00000000001ae17e
- (void)set_deltaTime:(double)arg1;	// IMP=0x00000000001ae164
- (void)set_systemTime:(double)arg1;	// IMP=0x00000000001ae13f
- (double)_systemTime;	// IMP=0x00000000001ae11d
@property(nonatomic) double sceneTime;
- (void)_setSceneTime:(double)arg1;	// IMP=0x00000000001adff3
- (void)setCurrentTime:(double)arg1;	// IMP=0x00000000001adfd6
- (double)currentTime;	// IMP=0x00000000001adfc4
- (_Bool)_needsRepetitiveRedraw;	// IMP=0x00000000001adfa3
@property(readonly, nonatomic) double nextFrameTime;
- (double)_nextFrameTime;	// IMP=0x00000000001adf87
- (void)set_nextFrameTime:(double)arg1;	// IMP=0x00000000001adf79
- (void)updateCurrentTimeIfPlayingWithSystemTime:(double)arg1;	// IMP=0x00000000001ade16
- (void)renderContext:(id)arg1 commandBufferDidCompleteWithError:(id)arg2;	// IMP=0x00000000001addd6
- (void)set_commandBufferStatusMonitor:(id)arg1;	// IMP=0x00000000001add15
- (id)_commandBufferStatusMonitor;	// IMP=0x00000000001add04
- (void)renderContext:(id)arg1 didFallbackToDefaultTextureForSource:(id)arg2 message:(id)arg3;	// IMP=0x00000000001adcb5
- (void)set_resourceManagerMonitor:(id)arg1;	// IMP=0x00000000001adbf4
- (id)_resourceManagerMonitor;	// IMP=0x00000000001adbe3
- (void)set_shouldForwardSceneRendererDelegationMessagesToPrivateRendererOwner:(_Bool)arg1;	// IMP=0x00000000001ad9f4
- (_Bool)_shouldForwardSceneRendererDelegationMessagesToPrivateRendererOwner;	// IMP=0x00000000001ad9e3
- (void)set_wantsSceneRendererDelegationMessages:(_Bool)arg1;	// IMP=0x00000000001ad811
- (_Bool)_wantsSceneRendererDelegationMessages;	// IMP=0x00000000001ad800
@property(nonatomic) __weak id <SCNSceneRendererDelegate> delegate;
- (void)_updateEngineCallbacks;	// IMP=0x00000000001ad44f
- (id)programWithNode:(id)arg1 withMaterial:(id)arg2;	// IMP=0x00000000001ad1dd
- (void)prepareObjects:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001accc5
- (_Bool)_prepareObject:(id)arg1 shouldAbortBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aca7e
- (_Bool)prepareObject:(id)arg1 shouldAbortBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001ac9c2
- (void)_releasePreloadRenderer;	// IMP=0x00000000001ac928
- (_Bool)_preparePreloadRenderer:(id)arg1;	// IMP=0x00000000001ac661
- (_Bool)_preloadResource:(id)arg1 abortHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001ac364
- (void)set_computedLightingEnvironmentMapsPath:(id)arg1;	// IMP=0x00000000001ac336
- (id)_computedLightingEnvironmentMapsPath;	// IMP=0x00000000001ac315
- (void)set_recordWithoutExecute:(_Bool)arg1;	// IMP=0x00000000001ac29e
- (_Bool)_recordWithoutExecute;	// IMP=0x00000000001ac24e
- (void)_renderGraphFrameRecordingAtPath:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001ac1f8
- (id)_copyRenderGraphDescription;	// IMP=0x00000000001ac19b
- (id)_copyPassDescription;	// IMP=0x00000000001ac144
@property(copy, nonatomic) SCNTechnique *technique;
@property(retain, nonatomic) SKScene *overlaySKScene;
- (void)_overlaysDidUpdate:(id)arg1;	// IMP=0x00000000001abe67
- (id)_prepareSKRenderer;	// IMP=0x00000000001abd3e
- (id)_setupSKRendererIfNeeded;	// IMP=0x00000000001abc27
- (id)metalDevice;	// IMP=0x00000000001abc0e
- (id)metalLayer;	// IMP=0x00000000001abbeb
- (void)setDisableOverlays:(_Bool)arg1;	// IMP=0x00000000001abbd2
- (_Bool)disableOverlays;	// IMP=0x00000000001abbc6
- (void)resolvedBackgroundColorDidChange;	// IMP=0x00000000001abb52
- (void)_c3dBackgroundColorDidChange;	// IMP=0x00000000001abaea
- (void)setBackgroundColor:(id)arg1;	// IMP=0x00000000001aba50
- (id)backgroundColor;	// IMP=0x00000000001aba36
@property(retain, nonatomic) SCNScene *scene;
- (void)setScene:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001ab820
- (void)presentScene:(id)arg1 withTransition:(id)arg2 incomingPointOfView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001ab725
- (void)_prepareForTransition:(id)arg1 outgoingScene:(id)arg2 outgoingPointOfView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001ab5f3
- (void)__setTransitionContext:(id)arg1;	// IMP=0x00000000001ab5bd
- (void)_updatePointOfView;	// IMP=0x00000000001ab558
- (id)_defaultPOVForScene:(id)arg1;	// IMP=0x00000000001ab430
- (_Bool)autoAdjustCamera;	// IMP=0x00000000001ab407
- (void)setAutoAdjustCamera:(_Bool)arg1;	// IMP=0x00000000001ab3d5
- (void)_writeSubdivCacheForHash:(id)arg1 dataProvider:(CDUnknownBlockType)arg2;	// IMP=0x00000000001ab332
- (id)_readSubdivCacheForHash:(id)arg1;	// IMP=0x00000000001ab297
- (void)_willRenderScene:(id)arg1;	// IMP=0x00000000001ab0cb
- (void)_didRenderScene:(id)arg1;	// IMP=0x00000000001aaeb8
- (struct SCNVector3)unprojectPoint:(struct SCNVector3)arg1;	// IMP=0x00000000001aae87
- (struct SCNVector3)projectPoint:(struct SCNVector3)arg1;	// IMP=0x00000000001aae56
- (struct SCNVector3)_unprojectPoint:(struct SCNVector3)arg1 viewport:(struct SCNVector4)arg2;	// IMP=0x00000000001aad3e
- (struct SCNVector3)_projectPoint:(struct SCNVector3)arg1 viewport:(struct SCNVector4)arg2;	// IMP=0x00000000001aac26
- (void)_projectPoints:(struct SCNVector3 *)arg1 count:(unsigned long long)arg2 viewport:(struct SCNVector4)arg3;	// IMP=0x00000000001aaaf9
- (MISSING_TYPE *)adjustViewportForRendering: /* Error: Ran out of types for this method. */;	// IMP=0x00000000001aaaf3
- (id)pointOfCulling;	// IMP=0x00000000001aaae9
- (void)setPointOfCulling:(id)arg1;	// IMP=0x00000000001aaa26
@property(retain, nonatomic) SCNNode *pointOfView;
@property(nonatomic) _Bool autoenablesDefaultLighting;
- (const void *)__CFObject;	// IMP=0x00000000001a8e17
- (long long)_getFrameIndex;	// IMP=0x00000000001a8e03
- (id)_renderContextMetal;	// IMP=0x00000000001a8df6
- (struct __C3DRendererContext *)_rendererContextGL;	// IMP=0x00000000001a8ddc
- (struct __C3DEngineContext *)_engineContext;	// IMP=0x00000000001a8dcf
- (struct SCNMatrix4)_screenTransform;	// IMP=0x00000000001a8d8d
- (void)set_screenTransform:(struct SCNMatrix4)arg1;	// IMP=0x00000000001a8d74
- (double)_aspectRatio;	// IMP=0x00000000001a8d66
- (void)set_aspectRatio:(double)arg1;	// IMP=0x00000000001a8d58
- (double)_superSamplingFactor;	// IMP=0x00000000001a8d42
- (void)set_superSamplingFactor:(double)arg1;	// IMP=0x00000000001a8d2d
- (void)set_preparePixelFormat:(unsigned long long)arg1;	// IMP=0x00000000001a8d23
- (unsigned long long)_preparePixelFormat;	// IMP=0x00000000001a8d19
- (void)set_antialiasingMode:(unsigned long long)arg1;	// IMP=0x00000000001a8c70
- (unsigned long long)_antialiasingMode;	// IMP=0x00000000001a8c4a
- (unsigned long long)_sampleCount;	// IMP=0x00000000001a8bf8
- (void)_createPrepareFramebufferIfNeeded;	// IMP=0x00000000001a8b07
- (void)_createOffscreenFramebufferIfNeeded;	// IMP=0x00000000001a8841
- (void)_prepareGLRenderTarget;	// IMP=0x00000000001a8399
- (void)_prepareRenderTarget;	// IMP=0x00000000001a8305
- (void)_resolveAndDiscardGL;	// IMP=0x00000000001a82a6
- (void)_endFrame;	// IMP=0x00000000001a816f
- (void)_beginFrame;	// IMP=0x00000000001a8093
- (void)_deleteGLFramebuffer;	// IMP=0x00000000001a7fb3
- (void)_invalidateFramebuffer;	// IMP=0x00000000001a7fa9
- (void)_setBackingSize:(struct CGSize)arg1;	// IMP=0x00000000001a7ee9
- (struct CGSize)_backingSize;	// IMP=0x00000000001a7ed9
- (double)_contentsScaleFactor;	// IMP=0x00000000001a7ecb
- (void)_setContentsScaleFactor:(double)arg1;	// IMP=0x00000000001a7e68
- (void)_clearBackBuffer;	// IMP=0x00000000001a7e03
- (void)_installViewport;	// IMP=0x00000000001a7d72
- (_Bool)_installContext;	// IMP=0x00000000001a7d27
- (id)_renderingQueue;	// IMP=0x00000000001a7d1d
- (void)unlock;	// IMP=0x00000000001a7d07
- (void)lock;	// IMP=0x00000000001a7cf1
@property(readonly, nonatomic) unsigned long long stencilPixelFormat;
@property(readonly, nonatomic) unsigned long long depthPixelFormat;
@property(readonly, nonatomic) unsigned long long colorPixelFormat;
@property(readonly, nonatomic) id <MTLCommandQueue> commandQueue;
@property(readonly, nonatomic) id <MTLDevice> device;
@property(readonly, nonatomic) id <MTLRenderCommandEncoder> currentRenderCommandEncoder;
@property(readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
- (id)currentCommandBuffer;	// IMP=0x00000000001a7bb2
@property(readonly, nonatomic) unsigned long long renderingAPI;
- (void)dealloc;	// IMP=0x00000000001a7929
@property(readonly, copy) NSString *description;
- (id)_initWithOptions:(id)arg1 isPrivateRenderer:(_Bool)arg2 privateRendererOwner:(id)arg3 clearsOnDraw:(_Bool)arg4 context:(void *)arg5 renderingAPI:(unsigned long long)arg6;	// IMP=0x00000000001a72bb
- (void)_setupOffscreenRendererWithSize:(struct CGSize)arg1;	// IMP=0x00000000001a71fc
- (id)init;	// IMP=0x00000000001a71d9
- (_Bool)renderMovieToURL:(id)arg1 size:(struct CGSize)arg2 antialiasingMode:(unsigned long long)arg3 attributes:(id)arg4 error:(id *)arg5;	// IMP=0x000000000029b4c4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

