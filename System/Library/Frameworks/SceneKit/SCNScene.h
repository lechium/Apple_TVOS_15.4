//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SceneKit/NSSecureCoding-Protocol.h>
#import <SceneKit/SCNTransactionCommandObject-Protocol.h>

@class NSMutableDictionary, NSString, NSURL, SCNAuthoringEnvironment, SCNMaterialProperty, SCNNode, SCNPhysicsWorld, SCNSceneSource;

@interface SCNScene : NSObject <SCNTransactionCommandObject, NSSecureCoding>
{
    struct __C3DScene *_scene;	// 8 = 0x8
    SCNSceneSource *_sceneSource;	// 16 = 0x10
    SCNPhysicsWorld *_physicsWorld;	// 24 = 0x18
    SCNNode *_rootNode;	// 32 = 0x20
    SCNNode *_layerRootNode[4];	// 40 = 0x28
    SCNMaterialProperty *_background;	// 72 = 0x48
    SCNMaterialProperty *_environment;	// 80 = 0x50
    NSMutableDictionary *_userAttributes;	// 88 = 0x58
    double _fogStartDistance;	// 96 = 0x60
    double _fogEndDistance;	// 104 = 0x68
    double _fogDensityExponent;	// 112 = 0x70
    id _fogColor;	// 120 = 0x78
    _Bool _wantsScreenSpaceReflection;	// 128 = 0x80
    long long _screenSpaceReflectionSampleCount;	// 136 = 0x88
    double _screenSpaceReflectionMaxRayDistance;	// 144 = 0x90
    double _screenSpaceReflectionStride;	// 152 = 0x98
    _Bool _paused;	// 160 = 0xa0
    NSURL *_sourceURL;	// 168 = 0xa8
    _Bool _pausedForEditing;	// 176 = 0xb0
    _Bool _allowsDefaultLightingEnvironmentFallback;	// 177 = 0xb1
    SCNAuthoringEnvironment *_authoringEnvironment;	// 184 = 0xb8
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000001a6aac
+ (SEL)jsConstructor;	// IMP=0x00000000001a5701
+ (id)_indexPathForNode:(id)arg1;	// IMP=0x00000000001a5365
+ (id)supportedFileUTIsForExport;	// IMP=0x00000000001a2f0c
+ (id)supportedFileUTIsForImport;	// IMP=0x00000000001a2ece
+ (_Bool)canImportFileExtension:(id)arg1;	// IMP=0x00000000001a2e21
+ (_Bool)canImportFileUTI:(id)arg1;	// IMP=0x00000000001a2dd7
+ (id)sceneWithSceneRef:(struct __C3DScene *)arg1;	// IMP=0x00000000001a275d
+ (id)sceneWithData:(id)arg1 options:(id)arg2;	// IMP=0x00000000001a2713
+ (id)sceneWithData:(id)arg1 atIndex:(long long)arg2 options:(id)arg3;	// IMP=0x00000000001a268d
+ (id)sceneWithURL:(id)arg1 atIndex:(long long)arg2 options:(id)arg3;	// IMP=0x00000000001a2604
+ (id)sceneWithURL:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001a258f
+ (id)sceneWithURL:(id)arg1 options:(id)arg2;	// IMP=0x00000000001a257a
+ (id)sceneNamed:(id)arg1 options:(id)arg2;	// IMP=0x00000000001a2563
+ (id)sceneNamed:(id)arg1 inDirectory:(id)arg2 options:(id)arg3;	// IMP=0x00000000001a24a8
+ (id)sceneNamed:(id)arg1;	// IMP=0x00000000001a2491
+ (id)scene;	// IMP=0x00000000001a247f
+ (id)sceneWithMDLAsset:(id)arg1 options:(id)arg2;	// IMP=0x00000000000159d2
+ (id)sceneWithMDLAsset:(id)arg1;	// IMP=0x00000000000159be
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000001a65a6
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000001a6382
- (void)_prettifyForPreview;	// IMP=0x00000000001a589d
- (void)_didEncodeSCNScene:(id)arg1;	// IMP=0x00000000001a5897
- (void)_didDecodeSCNScene:(id)arg1;	// IMP=0x00000000001a5853
- (void)_customDecodingOfSCNScene:(id)arg1;	// IMP=0x00000000001a57a5
- (void)_customEncodingOfSCNScene:(id)arg1;	// IMP=0x00000000001a570e
- (id)initForJavascript:(id)arg1;	// IMP=0x00000000001a54d6
- (id)_subnodeFromIndexPath:(id)arg1;	// IMP=0x00000000001a54ba
- (id)_nodeWithIndexPath:(id)arg1;	// IMP=0x00000000001a5270
- (_Bool)isPausedForEditing;	// IMP=0x00000000001a5264
- (void)setPausedForEditing:(_Bool)arg1;	// IMP=0x00000000001a5243
- (_Bool)isPausedOrPausedByInheritance;	// IMP=0x00000000001a5237
@property(nonatomic, getter=isPaused) _Bool paused;
- (id)particleSystems;	// IMP=0x00000000001a4ed7
- (void)removeAllParticleSystems;	// IMP=0x00000000001a4e2c
- (void)removeParticleSystem:(id)arg1;	// IMP=0x00000000001a4d15
- (void)addParticleSystem:(id)arg1 withTransform:(struct SCNMatrix4)arg2;	// IMP=0x00000000001a4bb4
- (void)addSceneAnimation:(id)arg1 forKey:(id)arg2 target:(id)arg3;	// IMP=0x00000000001a4b55
- (const void *)__CFObject;	// IMP=0x00000000001a4b4b
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x00000000001a4b39
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x00000000001a49fc
- (id)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2;	// IMP=0x00000000001a499a
- (id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;	// IMP=0x00000000001a4733
- (void)unlock;	// IMP=0x00000000001a4712
- (void)lock;	// IMP=0x00000000001a46f1
- (void)_dumpToDisk;	// IMP=0x00000000001a45f0
- (_Bool)writeToURL:(id)arg1 options:(id)arg2 delegate:(id)arg3 progressHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001a40bc
@property(nonatomic) double screenSpaceReflectionStride;
@property(nonatomic) double screenSpaceReflectionMaximumDistance;
- (void)setScreenSpaceReflectionDepthThreshold:(double)arg1;	// IMP=0x00000000001a3f20
- (double)screenSpaceReflectionDepthThreshold;	// IMP=0x00000000001a3f17
@property(nonatomic) long long screenSpaceReflectionSampleCount;
@property(nonatomic) _Bool wantsScreenSpaceReflection;
@property(nonatomic) double fogStartDistance;
@property(nonatomic) double fogDensityExponent;
@property(nonatomic) double fogEndDistance;
@property(retain, nonatomic) id fogColor;
- (void)set_allowsDefaultLightingEnvironmentFallback:(_Bool)arg1;	// IMP=0x00000000001a3998
- (_Bool)_allowsDefaultLightingEnvironmentFallback;	// IMP=0x00000000001a398c
@property(readonly, nonatomic) SCNMaterialProperty *lightingEnvironment;
@property(readonly, nonatomic) SCNMaterialProperty *background;
- (id)attributeForKey:(id)arg1;	// IMP=0x00000000001a37f1
- (void)setAttribute:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000001a35e4
- (void)setPlaybackSpeed:(float)arg1;	// IMP=0x00000000001a3580
- (float)playbackSpeed;	// IMP=0x00000000001a3520
- (void)setFrameRate:(double)arg1;	// IMP=0x00000000001a34b6
- (double)frameRate;	// IMP=0x00000000001a3458
- (void)setEndTime:(double)arg1;	// IMP=0x00000000001a33f4
- (double)endTime;	// IMP=0x00000000001a3394
- (void)setStartTime:(double)arg1;	// IMP=0x00000000001a3330
- (double)startTime;	// IMP=0x00000000001a32d0
- (void)_resetSceneTimeRange;	// IMP=0x00000000001a2fa1
- (id)_physicsWorldCreateIfNeeded:(_Bool)arg1;	// IMP=0x00000000001a2f61
@property(readonly, nonatomic) SCNPhysicsWorld *physicsWorld;
- (void)_scaleSceneBy:(double)arg1;	// IMP=0x00000000001a2d24
- (id)rootNodeForLayer:(int)arg1;	// IMP=0x00000000001a2d16
- (void)setRootNode:(id)arg1 forLayer:(int)arg2;	// IMP=0x00000000001a2c22
- (void)setRootNode:(id)arg1;	// IMP=0x00000000001a2c10
- (void)_setRootNode:(id)arg1;	// IMP=0x00000000001a2b4b
@property(readonly, nonatomic) SCNNode *rootNode;
- (id)root;	// IMP=0x00000000001a2a25
- (id)sceneSource;	// IMP=0x00000000001a2a1b
- (void)setSceneSource:(id)arg1;	// IMP=0x00000000001a29ed
- (struct __C3DScene *)sceneRef;	// IMP=0x00000000001a29e3
- (id)_scenes;	// IMP=0x00000000001a29c7
- (id)scene;	// IMP=0x00000000001a29be
- (void)_setSourceURL:(id)arg1;	// IMP=0x00000000001a298a
- (void)dealloc;	// IMP=0x00000000001a283a
- (void)setUpAxis:(struct SCNVector3)arg1;	// IMP=0x00000000001a2812
- (struct SCNVector3)upAxis;	// IMP=0x00000000001a27d9
- (void)_clearSceneRef;	// IMP=0x00000000001a27a3
- (void)_syncObjCModel;	// IMP=0x00000000001a23b4
- (id)initWithSceneRef:(struct __C3DScene *)arg1;	// IMP=0x00000000001a22ce
- (id)init;	// IMP=0x00000000001a21b2
- (_Bool)writeToURLWithUSDKit:(id)arg1;	// IMP=0x0000000000240e48
- (id)exportAsMovieOperationWithDestinationURL:(id)arg1 size:(struct CGSize)arg2 attributes:(id)arg3 delegate:(id)arg4 didEndSelector:(SEL)arg5 userInfo:(void *)arg6;	// IMP=0x000000000029b677
- (id)_exportAsMovieOperationWithDestinationURL:(id)arg1 size:(struct CGSize)arg2 attributes:(id)arg3 delegate:(id)arg4 didEndSelector:(SEL)arg5 userInfo:(void *)arg6;	// IMP=0x000000000029b5a0
- (_Bool)writeToURL:(id)arg1 options:(id)arg2;	// IMP=0x000000000029b598
- (id)debugQuickLookObjectWithPointOfView:(id)arg1;	// IMP=0x00000000002a0cfc
- (id)debugQuickLookObject;	// IMP=0x00000000002a0ce8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

