//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SceneKit/NSCopying-Protocol.h>
#import <SceneKit/NSSecureCoding-Protocol.h>
#import <SceneKit/SCNAnimatable-Protocol.h>

@class MISSING_TYPE, NSArray, NSData, NSMutableDictionary, NSString, NSURL, SCNMaterialProperty, SCNOrderedDictionary, SCNTechnique;

@interface SCNLight : NSObject <SCNAnimatable, NSCopying, NSSecureCoding>
{
    struct __C3DLight *_light;	// 8 = 0x8
    unsigned int _isPresentationInstance:1;	// 16 = 0x10
    unsigned int _castsShadow:1;	// 16 = 0x10
    unsigned int _usesDeferredShadows:1;	// 16 = 0x10
    unsigned int _usesModulatedMode:1;	// 16 = 0x10
    unsigned int _baked:1;	// 16 = 0x10
    unsigned int _shouldBakeDirectLighting:1;	// 16 = 0x10
    unsigned int _shouldBakeIndirectLighting:1;	// 16 = 0x10
    unsigned int _automaticallyAdjustsShadowProjection:1;	// 16 = 0x10
    unsigned int _forcesBackFaceCasters:1;	// 17 = 0x11
    unsigned int _sampleDistributedShadowMaps:1;	// 17 = 0x11
    SCNOrderedDictionary *_animations;	// 24 = 0x18
    NSMutableDictionary *_bindings;	// 32 = 0x20
    NSString *_name;	// 40 = 0x28
    NSString *_type;	// 48 = 0x30
    id _color;	// 56 = 0x38
    id _shadowColor;	// 64 = 0x40
    float _shadowRadius;	// 72 = 0x48
    double _intensity;	// 80 = 0x50
    double _temperature;	// 88 = 0x58
    double _orthographicScale;	// 96 = 0x60
    struct CGSize _shadowMapSize;	// 104 = 0x68
    unsigned long long _categoryBitMask;	// 120 = 0x78
    unsigned char _shadowSampleCount;	// 128 = 0x80
    unsigned char _shadowCascadeCount;	// 129 = 0x81
    double _maximumShadowDistance;	// 136 = 0x88
    double _shadowCascadeSplittingFactor;	// 144 = 0x90
    double _cascadeDebugFactor;	// 152 = 0x98
    double _zNear;	// 160 = 0xa0
    double _zFar;	// 168 = 0xa8
    double _shadowBias;	// 176 = 0xb0
    long long _probeType;	// 184 = 0xb8
    long long _probeUpdateType;	// 192 = 0xc0
    _Bool _parallaxCorrectionEnabled;	// 200 = 0xc8
    MISSING_TYPE *_probeExtents;	// 208 = 0xd0
    MISSING_TYPE *_probeOffset;	// 224 = 0xe0
    MISSING_TYPE *_parallaxExtentsFactor;	// 240 = 0xf0
    MISSING_TYPE *_parallaxCenterOffset;	// 256 = 0x100
    float _attenuationStartDistance;	// 272 = 0x110
    float _attenuationEndDistance;	// 276 = 0x114
    float _attenuationFalloffExponent;	// 280 = 0x118
    float _spotInnerAngle;	// 284 = 0x11c
    float _spotOuterAngle;	// 288 = 0x120
    float _spotFalloffExponent;	// 292 = 0x124
    SCNMaterialProperty *_gobo;	// 296 = 0x128
    NSURL *_IESProfileURL;	// 304 = 0x130
    SCNTechnique *_technique;	// 312 = 0x138
    NSData *_sphericalHarmonics;	// 320 = 0x140
    SCNMaterialProperty *_probeEnvironment;	// 328 = 0x148
    long long _areaType;	// 336 = 0x150
    MISSING_TYPE *_areaExtents;	// 352 = 0x160
    NSArray *_areaPolygonVertices;	// 368 = 0x170
    _Bool _drawsArea;	// 376 = 0x178
    _Bool _doubleSided;	// 377 = 0x179
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000016cd2b
+ (id)lightWithLightRef:(struct __C3DLight *)arg1;	// IMP=0x00000000001651e4
+ (id)light;	// IMP=0x00000000001651d2
+ (id)lightWithMDLLightProbe:(id)arg1;	// IMP=0x0000000000023e62
+ (id)lightWithMDLLight:(id)arg1;	// IMP=0x0000000000023cd7
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000016c343
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000016bf4d
- (void)_didDecodeSCNLight:(id)arg1;	// IMP=0x000000000016befb
- (void)_customDecodingOfSCNLight:(id)arg1;	// IMP=0x000000000016bbe0
- (void)_customEncodingOfSCNLight:(id)arg1;	// IMP=0x000000000016b7e6
@property(retain, nonatomic) NSURL *IESProfileURL;
- (void)setIESProfileURL:(id)arg1 resolvedURL:(id)arg2;	// IMP=0x000000000016b5c7
@property(readonly, nonatomic) SCNMaterialProperty *gobo;
- (_Bool)hasGobo;	// IMP=0x000000000016b4f1
@property(copy, nonatomic) NSArray *areaPolygonVertices;
@property(nonatomic) _Bool doubleSided;
@property(nonatomic) _Bool drawsArea;
@property(nonatomic) MISSING_TYPE *areaExtents;
@property(nonatomic) long long areaType;
@property(readonly, nonatomic) SCNMaterialProperty *probeEnvironment;
@property(nonatomic) MISSING_TYPE *probeOffset;
@property(nonatomic) MISSING_TYPE *probeExtents;
@property(nonatomic) MISSING_TYPE *parallaxExtentsFactor;
@property(nonatomic) MISSING_TYPE *parallaxCenterOffset;
@property(nonatomic) _Bool parallaxCorrectionEnabled;
@property(nonatomic) long long probeUpdateType;
@property(nonatomic) long long probeType;
@property(nonatomic) long long shadowMode;
- (void)set_shadowCascadeDebugFactor:(double)arg1;	// IMP=0x000000000016a571
- (double)_shadowCascadeDebugFactor;	// IMP=0x000000000016a506
@property(nonatomic) double shadowCascadeSplittingFactor;
@property(nonatomic) _Bool sampleDistributedShadowMaps;
@property(nonatomic) _Bool forcesBackFaceCasters;
@property(nonatomic) double maximumShadowDistance;
@property(nonatomic) _Bool automaticallyAdjustsShadowProjection;
- (void)setAdjustsShadowProjection:(_Bool)arg1;	// IMP=0x0000000000169e68
- (_Bool)adjustsShadowProjection;	// IMP=0x0000000000169e56
- (void)setForceBackFaceCasters:(_Bool)arg1;	// IMP=0x0000000000169e44
- (_Bool)forceBackFaceCasters;	// IMP=0x0000000000169e32
@property(nonatomic) unsigned long long shadowCascadeCount;
@property(nonatomic) double zNear;
@property(nonatomic) double zFar;
- (void)setUsesModulatedMode:(_Bool)arg1;	// IMP=0x000000000016991a
- (_Bool)usesModulatedMode;	// IMP=0x00000000001698bb
- (void)setUsesDeferredShadows:(_Bool)arg1;	// IMP=0x00000000001697cf
- (_Bool)usesDeferredShadows;	// IMP=0x0000000000169770
@property(copy, nonatomic) NSString *type;
- (void)_resyncObjCModelOfPerTypeParameters;	// IMP=0x0000000000169321
@property(nonatomic) double temperature;
- (void)setTechnique:(id)arg1;	// IMP=0x00000000001690b9
- (id)technique;	// IMP=0x000000000016903f
@property(nonatomic) double spotOuterAngle;
@property(nonatomic) double spotInnerAngle;
- (void)setSpotFalloffExponent:(double)arg1;	// IMP=0x0000000000168c5d
- (double)spotFalloffExponent;	// IMP=0x0000000000168bec
@property(nonatomic) unsigned long long shadowSampleCount;
@property(nonatomic) double shadowRadius;
@property(nonatomic) struct CGSize shadowMapSize;
@property(retain, nonatomic) id shadowColor;
@property(nonatomic) double shadowBias;
@property(nonatomic) double orthographicScale;
@property(nonatomic) double intensity;
@property(retain, nonatomic) id color;
@property(nonatomic) unsigned long long categoryBitMask;
@property(nonatomic) _Bool castsShadow;
- (void)setBaked:(_Bool)arg1;	// IMP=0x0000000000167d33
- (_Bool)isBaked;	// IMP=0x0000000000167cd4
@property(nonatomic) double attenuationStartDistance;
@property(nonatomic) double attenuationFalloffExponent;
@property(nonatomic) double attenuationEndDistance;
- (void)setShouldBakeIndirectLighting:(_Bool)arg1;	// IMP=0x000000000016786e
- (_Bool)shouldBakeIndirectLighting;	// IMP=0x0000000000167860
- (void)setShouldBakeDirectLighting:(_Bool)arg1;	// IMP=0x000000000016784d
- (_Bool)shouldBakeDirectLighting;	// IMP=0x000000000016783f
- (void)setSphericalHarmonicsCoefficients:(id)arg1;	// IMP=0x000000000016777a
@property(readonly, copy, nonatomic) NSData *sphericalHarmonicsCoefficients;
- (void)set_sphericalHarmonics:(id)arg1;	// IMP=0x000000000016775b
- (id)_sphericalHarmonics;	// IMP=0x0000000000167749
- (id)attributeForKey:(id)arg1;	// IMP=0x00000000001675ee
- (void)setAttribute:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000167498
- (id)copy;	// IMP=0x0000000000167484
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000016703e
- (id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;	// IMP=0x0000000000167031
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000000166f80
- (void)removeAllBindings;	// IMP=0x0000000000166ed6
- (void)unbindAnimatablePath:(id)arg1;	// IMP=0x0000000000166df2
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;	// IMP=0x0000000000166bf3
- (id)_scnBindings;	// IMP=0x0000000000166be9
- (_Bool)isAnimationForKeyPaused:(id)arg1;	// IMP=0x0000000000166b62
- (void)setSpeed:(double)arg1 forAnimationKey:(id)arg2;	// IMP=0x0000000000166a50
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2;	// IMP=0x0000000000166a3e
- (void)resumeAnimationForKey:(id)arg1;	// IMP=0x000000000016699a
- (void)pauseAnimationForKey:(id)arg1;	// IMP=0x00000000001668f3
- (void)_pauseAnimation:(_Bool)arg1 forKey:(id)arg2 pausedByNode:(_Bool)arg3;	// IMP=0x0000000000166872
- (id)animationPlayerForKey:(id)arg1;	// IMP=0x00000000001667f7
- (void)_copyAnimationsFrom:(id)arg1;	// IMP=0x000000000016664d
- (id)_scnAnimationForKey:(id)arg1;	// IMP=0x00000000001665c2
- (id)animationForKey:(id)arg1;	// IMP=0x0000000000166590
- (void)_syncObjCAnimations;	// IMP=0x00000000001664ce
@property(readonly) NSArray *animationKeys;
- (void)removeAnimationForKey:(id)arg1 blendOutDuration:(double)arg2;	// IMP=0x000000000016636b
- (void)removeAnimationForKey:(id)arg1;	// IMP=0x000000000016628d
- (void)removeAllAnimationsWithBlendOutDuration:(double)arg1;	// IMP=0x00000000001661b5
- (void)removeAllAnimations;	// IMP=0x00000000001660f3
- (void)addAnimation:(id)arg1;	// IMP=0x00000000001660df
- (void)addAnimation:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000165fe9
- (void)addAnimationPlayer:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000165da0
- (_Bool)__removeAnimation:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000165cab
- (struct __C3DAnimationManager *)animationManager;	// IMP=0x0000000000165c88
- (id)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2;	// IMP=0x0000000000165c32
- (const void *)__CFObject;	// IMP=0x0000000000165c28
- (id)scene;	// IMP=0x0000000000165c05
- (struct __C3DScene *)sceneRef;	// IMP=0x0000000000165beb
- (_Bool)isPausedOrPausedByInheritance;	// IMP=0x0000000000165be3
- (id)presentationInstance;	// IMP=0x0000000000165bd1
- (id)presentationLight;	// IMP=0x0000000000165b8a
- (void)_syncObjCModel;	// IMP=0x000000000016565f
- (void)_syncEntityObjCModel;	// IMP=0x0000000000165621
- (id)identifier;	// IMP=0x0000000000165607
- (void)setIdentifier:(id)arg1;	// IMP=0x00000000001655e0
@property(copy, nonatomic) NSString *name;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x000000000016522a
- (struct __C3DLight *)lightRef;	// IMP=0x00000000001651c8
- (id)initPresentationLightWithLightRef:(struct __C3DLight *)arg1;	// IMP=0x0000000000165175
- (id)initWithLightRef:(struct __C3DLight *)arg1;	// IMP=0x00000000001650f5
- (id)init;	// IMP=0x0000000000165090

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

