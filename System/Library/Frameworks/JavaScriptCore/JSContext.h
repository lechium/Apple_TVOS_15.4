//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class JSValue, JSVirtualMachine, NSString;

@interface JSContext : NSObject
{
    struct RetainPtr<JSVirtualMachine> m_virtualMachine;	// 8 = 0x8
    struct OpaqueJSContext *m_context;	// 16 = 0x10
    struct Strong<JSC::JSObject, JSC::ShouldStrongDestructorGrabLock::No> m_exception;	// 24 = 0x18
    struct WeakObjCPtr<id<JSModuleLoaderDelegate>> m_moduleLoaderDelegate;	// 32 = 0x20
    CDUnknownBlockType _exceptionHandler;	// 40 = 0x28
}

+ (id)currentArguments;	// IMP=0x00000000002e5400
+ (id)currentCallee;	// IMP=0x00000000002e5370
+ (id)currentThis;	// IMP=0x00000000002e52f0
+ (id)currentContext;	// IMP=0x00000000002e52b0
+ (id)contextWithJSGlobalContextRef:(struct OpaqueJSContext *)arg1;	// IMP=0x00000000002e5c80
- (id).cxx_construct;	// IMP=0x00000000002e57e0
- (void).cxx_destruct;	// IMP=0x00000000002e5760
@property(copy) CDUnknownBlockType exceptionHandler; // @synthesize exceptionHandler=_exceptionHandler;
- (void)setModuleLoaderDelegate:(id)arg1;	// IMP=0x00000000002e5710
- (id)moduleLoaderDelegate;	// IMP=0x00000000002e5700
- (void)_setDebuggerRunLoop:(struct __CFRunLoop *)arg1;	// IMP=0x00000000002e56e0
- (struct __CFRunLoop *)_debuggerRunLoop;	// IMP=0x00000000002e56d0
- (void)_setIncludesNativeCallStackWhenReportingExceptions:(_Bool)arg1;	// IMP=0x00000000002e56c0
- (_Bool)_includesNativeCallStackWhenReportingExceptions;	// IMP=0x00000000002e56b0
- (void)_setRemoteInspectionEnabled:(_Bool)arg1;	// IMP=0x00000000002e56a0
- (_Bool)_remoteInspectionEnabled;	// IMP=0x00000000002e5690
@property(copy) NSString *name;
@property(readonly) JSVirtualMachine *virtualMachine;
@property(readonly) JSValue *globalObject;
@property(retain) JSValue *exception;
- (void)_setITMLDebuggableType;	// IMP=0x00000000002e5030
- (id)dependencyIdentifiersForModuleJSScript:(id)arg1;	// IMP=0x00000000002e4d30
- (id)evaluateJSScript:(id)arg1;	// IMP=0x00000000002e4ad0
- (id)evaluateScript:(id)arg1 withSourceURL:(id)arg2;	// IMP=0x00000000002e48a0
- (id)evaluateScript:(id)arg1;	// IMP=0x00000000002e4880
- (void)dealloc;	// IMP=0x00000000002e47f0
- (id)initWithVirtualMachine:(id)arg1;	// IMP=0x00000000002e4720
- (id)init;	// IMP=0x00000000002e46c0
- (void)ensureWrapperMap;	// IMP=0x00000000002e4640
- (struct OpaqueJSContext *)JSGlobalContextRef;	// IMP=0x00000000002e4630
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x00000000002e5840
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x00000000002e5800
- (id)wrapperForJSObject:(struct OpaqueJSValue *)arg1;	// IMP=0x00000000002e5c10
- (id)wrapperMap;	// IMP=0x00000000002e5bf0
- (id)wrapperForObjCObject:(id)arg1;	// IMP=0x00000000002e5b80
- (void)endCallbackWithData:(void *)arg1;	// IMP=0x00000000002e5b20
- (void)beginCallbackWithData:(void *)arg1 calleeValue:(struct OpaqueJSValue *)arg2 thisValue:(struct OpaqueJSValue *)arg3 argumentCount:(unsigned long long)arg4 arguments:(const struct OpaqueJSValue **)arg5;	// IMP=0x00000000002e5a30
- (_Bool)boolFromNotifyException:(struct OpaqueJSValue *)arg1;	// IMP=0x00000000002e5a10
- (id)valueFromNotifyException:(struct OpaqueJSValue *)arg1;	// IMP=0x00000000002e59d0
- (void)notifyException:(struct OpaqueJSValue *)arg1;	// IMP=0x00000000002e5970
- (id)initWithGlobalContextRef:(struct OpaqueJSContext *)arg1;	// IMP=0x00000000002e5880

@end

