//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class JSContext;

@interface JSValue : NSObject
{
    struct OpaqueJSValue *m_value;	// 8 = 0x8
    JSContext *_context;	// 16 = 0x10
}

+ (id)valueWithNewPromiseRejectedWithReason:(id)arg1 inContext:(id)arg2;	// IMP=0x00000000002ea0f0
+ (id)valueWithNewPromiseResolvedWithResult:(id)arg1 inContext:(id)arg2;	// IMP=0x00000000002e9fd0
+ (id)valueWithNewPromiseInContext:(id)arg1 fromExecutor:(CDUnknownBlockType)arg2;	// IMP=0x00000000002e9d80
+ (id)valueWithNewSymbolFromDescription:(id)arg1 inContext:(id)arg2;	// IMP=0x00000000002e9c50
+ (id)valueWithUndefinedInContext:(id)arg1;	// IMP=0x00000000002e9c00
+ (id)valueWithNullInContext:(id)arg1;	// IMP=0x00000000002e9bb0
+ (id)valueWithNewErrorFromMessage:(id)arg1 inContext:(id)arg2;	// IMP=0x00000000002e9a60
+ (id)valueWithNewRegularExpressionFromPattern:(id)arg1 flags:(id)arg2 inContext:(id)arg3;	// IMP=0x00000000002e97b0
+ (id)valueWithNewArrayInContext:(id)arg1;	// IMP=0x00000000002e9750
+ (id)valueWithNewObjectInContext:(id)arg1;	// IMP=0x00000000002e96f0
+ (id)valueWithUInt32:(unsigned int)arg1 inContext:(id)arg2;	// IMP=0x00000000002e9690
+ (id)valueWithInt32:(int)arg1 inContext:(id)arg2;	// IMP=0x00000000002e9630
+ (id)valueWithDouble:(double)arg1 inContext:(id)arg2;	// IMP=0x00000000002e95d0
+ (id)valueWithBool:(_Bool)arg1 inContext:(id)arg2;	// IMP=0x00000000002e9570
+ (id)valueWithObject:(id)arg1 inContext:(id)arg2;	// IMP=0x00000000002e8e90
+ (id)valueWithSize:(struct CGSize)arg1 inContext:(id)arg2;	// IMP=0x00000000002ec750
+ (id)valueWithRect:(struct CGRect)arg1 inContext:(id)arg2;	// IMP=0x00000000002ec640
+ (id)valueWithRange:(struct _NSRange)arg1 inContext:(id)arg2;	// IMP=0x00000000002ec570
+ (id)valueWithPoint:(struct CGPoint)arg1 inContext:(id)arg2;	// IMP=0x00000000002ec4a0
+ (SEL)selectorForValueToStruct:(const char *)arg1;	// IMP=0x00000000002ee730
+ (SEL)selectorForStructToValue:(const char *)arg1;	// IMP=0x00000000002ee110
+ (id)valueWithJSValueRef:(struct OpaqueJSValue *)arg1 inContext:(id)arg2;	// IMP=0x00000000002ee050
@property(readonly) JSContext *context; // @synthesize context=_context;
- (id)invokeMethod:(id)arg1 withArguments:(id)arg2;	// IMP=0x00000000002ebed0
- (id)constructWithArguments:(id)arg1;	// IMP=0x00000000002ebc50
- (id)callWithArguments:(id)arg1;	// IMP=0x00000000002eb9d0
- (_Bool)isInstanceOf:(id)arg1;	// IMP=0x00000000002eb920
- (_Bool)isEqualWithTypeCoercionToObject:(id)arg1;	// IMP=0x00000000002eb8a0
- (_Bool)isEqualToObject:(id)arg1;	// IMP=0x00000000002eb850
@property(readonly) _Bool isDate;
@property(readonly) _Bool isArray;
@property(readonly) _Bool isSymbol;
@property(readonly) _Bool isObject;
@property(readonly) _Bool isString;
@property(readonly) _Bool isNumber;
@property(readonly) _Bool isBoolean;
@property(readonly) _Bool isNull;
@property(readonly) _Bool isUndefined;
- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000000002eb5e0
- (id)valueAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002eb4b0
- (void)defineProperty:(id)arg1 descriptor:(id)arg2;	// IMP=0x00000000002eb3f0
- (_Bool)hasProperty:(id)arg1;	// IMP=0x00000000002eb200
- (_Bool)deleteProperty:(id)arg1;	// IMP=0x00000000002eb010
- (void)setValue:(id)arg1 forProperty:(id)arg2;	// IMP=0x00000000002eae00
- (id)valueForProperty:(id)arg1;	// IMP=0x00000000002eabf0
- (id)toDictionary;	// IMP=0x00000000002eaa20
- (id)toArray;	// IMP=0x00000000002ea850
- (id)toDate;	// IMP=0x00000000002ea6f0
- (id)toString;	// IMP=0x00000000002ea5a0
- (id)toNumber;	// IMP=0x00000000002ea490
- (unsigned int)toUInt32;	// IMP=0x00000000002ea410
- (int)toInt32;	// IMP=0x00000000002ea390
- (double)toDouble;	// IMP=0x00000000002ea330
- (_Bool)toBool;	// IMP=0x00000000002ea300
- (id)toObjectOfClass:(Class)arg1;	// IMP=0x00000000002ea2c0
- (id)toObject;	// IMP=0x00000000002ea1d0
- (struct OpaqueJSValue *)JSValueRef;	// IMP=0x00000000002e8e80
- (id)description;	// IMP=0x00000000002e8e20
- (void)dealloc;	// IMP=0x00000000002e8db0
- (struct CGSize)toSize;	// IMP=0x00000000002ec430
- (struct CGRect)toRect;	// IMP=0x00000000002ec3d0
- (struct _NSRange)toRange;	// IMP=0x00000000002ec340
- (struct CGPoint)toPoint;	// IMP=0x00000000002ec2d0
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;	// IMP=0x00000000002ec880
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x00000000002ec860
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;	// IMP=0x00000000002ec840
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x00000000002ec820
- (id)initWithValue:(struct OpaqueJSValue *)arg1 inContext:(id)arg2;	// IMP=0x00000000002ee080
- (id)init;	// IMP=0x00000000002ee070

@end

