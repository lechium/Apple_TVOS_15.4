//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <WebKit/UIGestureRecognizerDelegate-Protocol.h>
#import <WebKit/UITextAutoscrolling-Protocol.h>
#import <WebKit/UITextInputMultiDocument-Protocol.h>
#import <WebKit/UITextInputPrivate-Protocol.h>
#import <WebKit/UIWKInteractionViewProtocol-Protocol.h>
#import <WebKit/UIWebFormAccessoryDelegate-Protocol.h>
#import <WebKit/UIWebTouchEventsGestureRecognizerDelegate-Protocol.h>
#import <WebKit/WKActionSheetAssistantDelegate-Protocol.h>
#import <WebKit/WKDeferringGestureRecognizerDelegate-Protocol.h>
#import <WebKit/WKFileUploadPanelDelegate-Protocol.h>
#import <WebKit/WKKeyboardScrollViewAnimatorDelegate-Protocol.h>
#import <WebKit/WKTouchActionGestureRecognizerDelegate-Protocol.h>
#import <WebKit/_WKWebViewPrintProvider-Protocol.h>

@class NSArray, NSDictionary, NSIndexSet, NSString, NSUndoManager, RTIInputSystemSourceSession, UIColor, UIGestureRecognizer, UIImage, UIInputContextHistory, UITextInputAssistantItem, UITextInputPasswordRules, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, UIWKTextInteractionAssistant, UIWebFormAccessory, UIWebTouchEventsGestureRecognizer, WKBrowsingContextController, WKDateTimeInputControl, WKFormSelectControl, _UISupplementalLexicon;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer, WKFormControl;

__attribute__((visibility("hidden")))
@interface WKContentView <_WKWebViewPrintProvider, UIGestureRecognizerDelegate, UITextAutoscrolling, UITextInputMultiDocument, UITextInputPrivate, UIWebFormAccessoryDelegate, UIWebTouchEventsGestureRecognizerDelegate, UIWKInteractionViewProtocol, WKActionSheetAssistantDelegate, WKFileUploadPanelDelegate, WKKeyboardScrollViewAnimatorDelegate, WKDeferringGestureRecognizerDelegate, WKTouchActionGestureRecognizerDelegate>
{
    struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> _page;	// 8 = 0x8
    struct WeakObjCPtr<WKWebView> _webView;	// 16 = 0x10
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForImmediatelyResettableGestures;	// 24 = 0x18
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForDelayedResettableGestures;	// 32 = 0x20
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForSyntheticTapGestures;	// 40 = 0x28
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForImmediatelyResettableGestures;	// 48 = 0x30
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForDelayedResettableGestures;	// 56 = 0x38
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForSyntheticTapGestures;	// 64 = 0x40
    struct optional<WTF::HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>>> _failedTouchStartDeferringGestures;	// 72 = 0x48
    struct unique_ptr<WebKit::GestureRecognizerConsistencyEnforcer, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> _gestureRecognizerConsistencyEnforcer;	// 88 = 0x58
    struct RetainPtr<UIWebTouchEventsGestureRecognizer> _touchEventGestureRecognizer;	// 96 = 0x60
    _Bool _touchEventsCanPreventNativeGestures;	// 104 = 0x68
    _Bool _preventsPanningInXAxis;	// 105 = 0x69
    _Bool _preventsPanningInYAxis;	// 106 = 0x6a
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _singleTapGestureRecognizer;	// 112 = 0x70
    struct RetainPtr<WKHighlightLongPressGestureRecognizer> _highlightLongPressGestureRecognizer;	// 120 = 0x78
    struct RetainPtr<UILongPressGestureRecognizer> _longPressGestureRecognizer;	// 128 = 0x80
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _doubleTapGestureRecognizer;	// 136 = 0x88
    struct RetainPtr<UITapGestureRecognizer> _nonBlockingDoubleTapGestureRecognizer;	// 144 = 0x90
    struct RetainPtr<UITapGestureRecognizer> _doubleTapGestureRecognizerForDoubleClick;	// 152 = 0x98
    struct RetainPtr<UITapGestureRecognizer> _twoFingerDoubleTapGestureRecognizer;	// 160 = 0xa0
    struct RetainPtr<UITapGestureRecognizer> _twoFingerSingleTapGestureRecognizer;	// 168 = 0xa8
    struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> _inspectorNodeSearchGestureRecognizer;	// 176 = 0xb0
    struct RetainPtr<WKTouchActionGestureRecognizer> _touchActionGestureRecognizer;	// 184 = 0xb8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionLeftSwipeGestureRecognizer;	// 192 = 0xc0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionRightSwipeGestureRecognizer;	// 200 = 0xc8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionUpSwipeGestureRecognizer;	// 208 = 0xd0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionDownSwipeGestureRecognizer;	// 216 = 0xd8
    struct RetainPtr<UIWKTextInteractionAssistant> _textInteractionAssistant;	// 224 = 0xe0
    struct OptionSet<WebKit::SuppressSelectionAssistantReason> _suppressSelectionAssistantReasons;	// 232 = 0xe8
    struct RetainPtr<UITextInputTraits> _traits;	// 240 = 0xf0
    struct RetainPtr<UIWebFormAccessory> _formAccessoryView;	// 248 = 0xf8
    struct RetainPtr<_UIHighlightView> _highlightView;	// 256 = 0x100
    struct RetainPtr<UIView> _interactionViewsContainerView;	// 264 = 0x108
    RetainPtr_f11d553d _contextMenuHintContainerView;	// 272 = 0x110
    struct WeakObjCPtr<UIScrollView> _scrollViewForTargetedPreview;	// 280 = 0x118
    struct CGPoint _scrollViewForTargetedPreviewInitialOffset;	// 288 = 0x120
    RetainPtr_f11d553d _dragPreviewContainerView;	// 304 = 0x130
    RetainPtr_f11d553d _dropPreviewContainerView;	// 312 = 0x138
    struct RetainPtr<NSString> _markedText;	// 320 = 0x140
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;	// 328 = 0x148
    struct RetainPtr<WKAirPlayRoutePicker> _airPlayRoutePicker;	// 336 = 0x150
    struct RetainPtr<WKFormInputSession> _formInputSession;	// 344 = 0x158
    struct RetainPtr<WKFileUploadPanel> _fileUploadPanel;	// 352 = 0x160
    struct FrameInfoData _frameInfoForFileUploadPanel;	// 360 = 0x168
    struct RetainPtr<UIGestureRecognizer> _previewGestureRecognizer;	// 624 = 0x270
    struct RetainPtr<UIGestureRecognizer> _previewSecondaryGestureRecognizer;	// 632 = 0x278
    struct Vector<bool, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _focusStateStack;	// 640 = 0x280
    struct RefPtr<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>, WTF::DefaultRefDerefTraits<WebCore::TextIndicator>> _textIndicator;	// 656 = 0x290
    struct RetainPtr<WebTextIndicatorLayer> _textIndicatorLayer;	// 664 = 0x298
    struct unique_ptr<WebKit::SmartMagnificationController, std::default_delete<WebKit::SmartMagnificationController>> _smartMagnificationController;	// 672 = 0x2a0
    struct WeakObjCPtr<id<UITextInputDelegate>> _inputDelegate;	// 680 = 0x2a8
    ObjectIdentifier_e7ec9792 _latestTapID;	// 688 = 0x2b0
    struct TapHighlightInformation _tapHighlightInformation;	// 696 = 0x2b8
    struct WebAutocorrectionContext _lastAutocorrectionContext;	// 760 = 0x2f8
    struct WKAutoCorrectionData _autocorrectionData;	// 808 = 0x328
    struct InteractionInformationAtPosition _positionInformation;	// 880 = 0x370
    struct FocusedElementInformation _focusedElementInformation;	// 1392 = 0x570
    struct RetainPtr<NSObject<WKFormPeripheral>> _inputPeripheral;	// 1752 = 0x6d8
    struct BlockPtr<void (WebEvent *, bool)> _keyWebEventHandler;	// 1760 = 0x6e0
    struct CGPoint _lastInteractionLocation;	// 1768 = 0x6e8
    struct MonotonicObjectIdentifier<WebKit::TransactionIDType> _layerTreeTransactionIdAtLastInteractionStart;	// 1784 = 0x6f8
    struct WKSelectionDrawingInfo _lastSelectionDrawingInfo;	// 1792 = 0x700
    struct RetainPtr<WKTextRange> _cachedSelectedTextRange;	// 1856 = 0x740
    struct optional<WebKit::InteractionInformationRequest> _lastOutstandingPositionInformationRequest;	// 1864 = 0x748
    unsigned long long _positionInformationCallbackDepth;	// 1888 = 0x760
    struct Vector<std::optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)>>>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _pendingPositionInformationHandlers;	// 1896 = 0x768
    struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::default_delete<WebKit::InputViewUpdateDeferrer>> _inputViewUpdateDeferrer;	// 1912 = 0x778
    struct RetainPtr<WKKeyboardScrollViewAnimator> _keyboardScrollingAnimator;	// 1920 = 0x780
    struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterEditorStateUpdate;	// 1928 = 0x788
    struct RetainPtr<UIView<WKFormControl>> _dataListTextSuggestionsInputView;	// 1944 = 0x798
    struct RetainPtr<NSArray<UITextSuggestion *>> _dataListTextSuggestions;	// 1952 = 0x7a0
    struct WeakObjCPtr<WKDataListSuggestionsControl> _dataListSuggestionsControl;	// 1960 = 0x7a8
    _Bool _isEditable;	// 1968 = 0x7b0
    _Bool _showingTextStyleOptions;	// 1969 = 0x7b1
    _Bool _hasValidPositionInformation;	// 1970 = 0x7b2
    _Bool _isTapHighlightIDValid;	// 1971 = 0x7b3
    _Bool _isTapHighlightFading;	// 1972 = 0x7b4
    _Bool _potentialTapInProgress;	// 1973 = 0x7b5
    _Bool _isDoubleTapPending;	// 1974 = 0x7b6
    _Bool _longPressCanClick;	// 1975 = 0x7b7
    _Bool _hasTapHighlightForPotentialTap;	// 1976 = 0x7b8
    _Bool _selectionNeedsUpdate;	// 1977 = 0x7b9
    _Bool _shouldRestoreSelection;	// 1978 = 0x7ba
    _Bool _usingGestureForSelection;	// 1979 = 0x7bb
    _Bool _inspectorNodeSearchEnabled;	// 1980 = 0x7bc
    _Bool _isChangingFocusUsingAccessoryTab;	// 1981 = 0x7bd
    _Bool _didAccessoryTabInitiateFocus;	// 1982 = 0x7be
    _Bool _isExpectingFastSingleTapCommit;	// 1983 = 0x7bf
    _Bool _showDebugTapHighlightsForFastClicking;	// 1984 = 0x7c0
    _Bool _textInteractionDidChangeFocusedElement;	// 1985 = 0x7c1
    _Bool _treatAsContentEditableUntilNextEditorStateUpdate;	// 1986 = 0x7c2
    _Bool _isWaitingOnPositionInformation;	// 1987 = 0x7c3
    int _commitPotentialTapPointerId;	// 1988 = 0x7c4
    _Bool _keyboardDidRequestDismissal;	// 1992 = 0x7c8
    _Bool _candidateViewNeedsUpdate;	// 1993 = 0x7c9
    _Bool _seenHardwareKeyDownInNonEditableElement;	// 1994 = 0x7ca
    _Bool _becomingFirstResponder;	// 1995 = 0x7cb
    _Bool _resigningFirstResponder;	// 1996 = 0x7cc
    _Bool _needsDeferredEndScrollingSelectionUpdate;	// 1997 = 0x7cd
    _Bool _isChangingFocus;	// 1998 = 0x7ce
    _Bool _isFocusingElementWithKeyboard;	// 1999 = 0x7cf
    _Bool _isBlurringFocusedElement;	// 2000 = 0x7d0
    _Bool _isRelinquishingFirstResponderToFocusedElement;	// 2001 = 0x7d1
    _Bool _unsuppressSoftwareKeyboardAfterNextAutocorrectionContextUpdate;	// 2002 = 0x7d2
    _Bool _isUnsuppressingSoftwareKeyboardUsingLastAutocorrectionContext;	// 2003 = 0x7d3
    _Bool _shouldZoomToFocusRectAfterShowingKeyboard;	// 2004 = 0x7d4
    _Bool _focusRequiresStrongPasswordAssistance;	// 2005 = 0x7d5
    _Bool _waitingForEditDragSnapshot;	// 2006 = 0x7d6
    long long _dropAnimationCount;	// 2008 = 0x7d8
    _Bool _hasSetUpInteractions;	// 2016 = 0x7e0
    unsigned long long _ignoreSelectionCommandFadeCount;	// 2024 = 0x7e8
    unsigned long long _activeTextInteractionCount;	// 2032 = 0x7f0
    long long _suppressNonEditableSingleTapTextInteractionCount;	// 2040 = 0x7f8
    struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> _domPasteRequestHandler;	// 2048 = 0x800
    struct optional<WebCore::DOMPasteAccessCategory> _domPasteRequestCategory;	// 2056 = 0x808
    struct BlockPtr<void (UIWKAutocorrectionContext *)> _pendingAutocorrectionContextHandler;	// 2064 = 0x810
    struct CompletionHandler<void ()> _pendingRunModalJavaScriptDialogCallback;	// 2072 = 0x818
    struct RetainPtr<NSDictionary> _additionalContextForStrongPasswordAssistance;	// 2080 = 0x820
    struct optional<int> _lastInsertedCharacterToOverrideCharacterBeforeSelection;	// 2088 = 0x828
    unsigned int _selectionChangeNestingLevel;	// 2096 = 0x830
    struct unique_ptr<WebKit::PageClientImpl, std::default_delete<WebKit::PageClientImpl>> _pageClient;	// 2104 = 0x838
    struct RetainPtr<WKBrowsingContextController> _browsingContextController;	// 2112 = 0x840
    struct RetainPtr<UIView> _rootContentView;	// 2120 = 0x848
    struct RetainPtr<UIView> _fixedClippingView;	// 2128 = 0x850
    struct RetainPtr<WKInspectorIndicationView> _inspectorIndicationView;	// 2136 = 0x858
    struct RetainPtr<WKInspectorHighlightView> _inspectorHighlightView;	// 2144 = 0x860
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForWebProcess;	// 2152 = 0x868
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForGPUProcess;	// 2160 = 0x870
    struct HistoricalVelocityData _historicalKinematicData;	// 2168 = 0x878
    struct RetainPtr<NSUndoManager> _undoManager;	// 2256 = 0x8d0
    struct RetainPtr<WKQuirkyNSUndoManager> _quirkyUndoManager;	// 2264 = 0x8d8
    unsigned long long _pdfPrintCallbackID;	// 2272 = 0x8e0
    struct RetainPtr<CGPDFDocument *> _printedDocument;	// 2280 = 0x8e8
    struct Vector<WTF::RetainPtr<NSURL>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _temporaryURLsToDeleteWhenDeallocated;	// 2288 = 0x8f0
    _Bool _sizeChangedSinceLastVisibleContentRectUpdate;	// 2304 = 0x900
}

- (id).cxx_construct;	// IMP=0x00000000007134c3
- (void).cxx_destruct;	// IMP=0x0000000000712a8d
@property(nonatomic) _Bool sizeChangedSinceLastVisibleContentRectUpdate; // @synthesize sizeChangedSinceLastVisibleContentRectUpdate=_sizeChangedSinceLastVisibleContentRectUpdate;
@property(readonly, nonatomic, getter=isResigningFirstResponder) _Bool resigningFirstResponder; // @synthesize resigningFirstResponder=_resigningFirstResponder;
- (void)_screenCapturedDidChange:(id)arg1;	// IMP=0x0000000000712a14
- (void)_applicationWillEnterForeground:(id)arg1;	// IMP=0x00000000007129dc
- (void)_applicationDidEnterBackground:(id)arg1;	// IMP=0x00000000007129a4
- (void)_applicationDidBecomeActive:(id)arg1;	// IMP=0x0000000000712972
- (void)_applicationWillResignActive:(id)arg1;	// IMP=0x0000000000712940
- (double)_targetContentZoomScaleForRect:(const struct FloatRect *)arg1 currentScale:(double)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5;	// IMP=0x00000000007128e3
- (double)_contentZoomScale;	// IMP=0x00000000007128c2
- (double)_initialScaleFactor;	// IMP=0x00000000007128a1
- (void)_zoomToInitialScaleWithOrigin:(struct CGPoint)arg1;	// IMP=0x0000000000712842
- (void)_zoomOutWithOrigin:(struct CGPoint)arg1;	// IMP=0x00000000007127e3
- (_Bool)_zoomToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6;	// IMP=0x0000000000712738
- (void)_zoomToFocusRect:(struct CGRect)arg1 selectionRect:(struct CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(_Bool)arg6 forceScroll:(_Bool)arg7;	// IMP=0x00000000007126a9
- (_Bool)_scrollToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 minimumScrollDistance:(double)arg3;	// IMP=0x000000000071261d
- (void)_setAcceleratedCompositingRootView:(id)arg1;	// IMP=0x00000000007124cb
- (void)_layerTreeCommitComplete;	// IMP=0x00000000007124aa
- (void)_didCommitLayerTree:(const void *)arg1;	// IMP=0x000000000071219a
- (void)_gpuProcessDidCreateContextForVisibilityPropagation;	// IMP=0x0000000000712188
- (void)_webProcessDidCreateContextForVisibilityPropagation;	// IMP=0x0000000000712176
- (void)_didRelaunchProcess;	// IMP=0x000000000071212e
- (void)_processWillSwap;	// IMP=0x000000000071211c
- (void)_gpuProcessDidExit;	// IMP=0x000000000071210a
- (void)_processDidExit;	// IMP=0x00000000007120a3
- (unique_ptr_7306e13f)_createDrawingAreaProxy:(void *)arg1;	// IMP=0x000000000071204a
- (void)_webViewDestroyed;	// IMP=0x0000000000712037
- (void)_accessibilityRegisterUIProcessTokens;	// IMP=0x0000000000711e44
- (void)_updateRemoteAccessibilityRegistration:(_Bool)arg1;	// IMP=0x0000000000711e3e
- (void)_setAccessibilityWebProcessToken:(id)arg1;	// IMP=0x0000000000711e2c
- (void)_updateForScreen:(id)arg1;	// IMP=0x0000000000711dd2
- (void)_windowDidMoveToScreenNotification:(id)arg1;	// IMP=0x0000000000711d89
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x0000000000711d09
- (_Bool)canBecomeFocused;	// IMP=0x0000000000711c78
@property(readonly, nonatomic) long long interfaceOrientation;
@property(readonly, nonatomic) NSUndoManager *undoManagerForWebView;
- (void)didZoomToScale:(double)arg1;	// IMP=0x0000000000711b92
- (void)willStartZoomOrScroll;	// IMP=0x0000000000711b80
- (void)didInterruptScrolling;	// IMP=0x0000000000711b6c
- (void)didFinishScrolling;	// IMP=0x0000000000711b5a
- (void)didUpdateVisibleRect:(struct CGRect)arg1 unobscuredRect:(struct CGRect)arg2 contentInsets:(struct UIEdgeInsets)arg3 unobscuredRectInScrollViewCoordinates:(struct CGRect)arg4 obscuredInsets:(struct UIEdgeInsets)arg5 unobscuredSafeAreaInsets:(struct UIEdgeInsets)arg6 inputViewBounds:(struct CGRect)arg7 scale:(double)arg8 minimumScale:(double)arg9 viewStability:(OptionSet_7e3fdc04)arg10 enclosedInScrollableAncestorView:(_Bool)arg11 sendEvenIfUnchanged:(_Bool)arg12;	// IMP=0x000000000071170a
- (struct CGRect)_computeUnobscuredContentRectRespectingInputViewBounds:(struct CGRect)arg1 inputViewBounds:(struct CGRect)arg2;	// IMP=0x00000000007115f9
- (void)_didExitStableState;	// IMP=0x00000000007115b0
- (void)updateFixedClippingView:(struct FloatRect)arg1;	// IMP=0x00000000007114da
@property(nonatomic, getter=isShowingInspectorIndication) _Bool showingInspectorIndication;
- (void)_hideInspectorHighlight;	// IMP=0x000000000071137c
- (void)_showInspectorHighlight:(const void *)arg1;	// IMP=0x00000000007112aa
@property(readonly, nonatomic) _Bool isFocusingElement;
- (struct OpaqueWKPage *)_pageRef;	// IMP=0x000000000071127a
@property(readonly, nonatomic) WKBrowsingContextController *browsingContextController;
- (void)didMoveToWindow;	// IMP=0x00000000007111aa
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000007110d7
- (id)rootContentView;	// IMP=0x00000000007110c6
- (id)webView;	// IMP=0x00000000007110b5
@property(readonly, nonatomic) void *page;
- (void)_removeTemporaryDirectoriesWhenDeallocated:(void *)arg1;	// IMP=0x0000000000711006
- (void)_removeTemporaryFilesIfNecessary;	// IMP=0x0000000000710f18
- (void)dealloc;	// IMP=0x0000000000710e8e
- (id)initWithFrame:(struct CGRect)arg1 processPool:(NakedRef_6f117943)arg2 configuration:(void *)arg3 webView:(id)arg4;	// IMP=0x0000000000710db7
- (void)_removeVisibilityPropagationViewForGPUProcess;	// IMP=0x0000000000710cf9
- (void)_removeVisibilityPropagationViewForWebProcess;	// IMP=0x0000000000710c3b
- (void)_setupVisibilityPropagationViewForGPUProcess;	// IMP=0x0000000000710ac6
- (void)_setupVisibilityPropagationViewForWebProcess;	// IMP=0x0000000000710982
- (id)_commonInitializationWithProcessPool:(void *)arg1 configuration:(void *)arg2;	// IMP=0x000000000071048a
@property(readonly, nonatomic) struct CGPDFDocument *_wk_printedDocument;
- (_Bool)_waitForDrawToPDFCallback;	// IMP=0x0000000000713d5a
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1;	// IMP=0x0000000000713a93
- (void)startFadeOut;	// IMP=0x000000000072c10c
- (void)teardownTextIndicatorLayer;	// IMP=0x000000000072c0cb
- (void)setTextIndicatorAnimationProgress:(float)arg1;	// IMP=0x000000000072c09e
- (void)clearTextIndicator:(unsigned char)arg1;	// IMP=0x000000000072bfc6
- (void)setUpTextIndicator:(Ref_72f36232)arg1;	// IMP=0x000000000072be56
- (void)_writePromisedAttachmentToPasteboard:(void *)arg1;	// IMP=0x000000000072be50
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x000000000072be05
- (_Bool)deferringGestureRecognizer:(id)arg1 shouldDeferOtherGestureRecognizer:(id)arg2;	// IMP=0x000000000072bb2d
- (void)deferringGestureRecognizer:(id)arg1 didEndTouchesWithEvent:(id)arg2;	// IMP=0x000000000072ba4b
- (void)deferringGestureRecognizer:(id)arg1 didTransitionToState:(long long)arg2;	// IMP=0x000000000072ba19
- (_Bool)deferringGestureRecognizer:(id)arg1 willBeginTouchesWithEvent:(id)arg2;	// IMP=0x000000000072b9cb
- (void)_updateTargetedPreviewScrollViewUsingContainerScrollingNodeID:(unsigned long long)arg1;	// IMP=0x000000000072b8b9
- (void)_updateFrameOfContainerForContextMenuHintPreviewsIfNeeded;	// IMP=0x000000000072b7b6
- (void)_removeContainerForContextMenuHintPreviews;	// IMP=0x000000000072b73d
- (id)containerForContextMenuHintPreviews;	// IMP=0x000000000072b602
- (void)_removeContainerForDragPreviews;	// IMP=0x000000000072b5af
- (id)containerForDragPreviews;	// IMP=0x000000000072b518
- (void)_removeContainerForDropPreviews;	// IMP=0x000000000072b4c5
- (id)containerForDropPreviews;	// IMP=0x000000000072b42e
- (RetainPtr_f11d553d)_createPreviewContainerWithLayerName:(id)arg1;	// IMP=0x000000000072b357
- (unsigned char)_dataOwnerForPasteboard:(_Bool)arg1;	// IMP=0x000000000072b2fc
@property(readonly, nonatomic) _Bool _shouldUseLegacySelectPopoverDismissalBehavior;
@property(readonly, nonatomic) _Bool _shouldAvoidScrollingWhenFocusedContentIsVisible;
@property(readonly, nonatomic) _Bool _shouldAvoidResizingWhenInputViewBoundsChange;
@property(readonly, nonatomic) _Bool _shouldUseContextMenusForFormControls;
@property(readonly, nonatomic) _Bool _shouldUseContextMenus;
- (void)actionSheetAssistant:(id)arg1 getAlternateURLForImage:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000072b162
- (id)selectedTextForActionSheetAssistant:(id)arg1;	// IMP=0x000000000072b150
- (id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const void *)arg2;	// IMP=0x000000000072b13b
- (id)dataDetectionContextForPositionInformation:(const void *)arg1;	// IMP=0x000000000072b09f
- (void)actionSheetAssistantDidStopInteraction:(id)arg1;	// IMP=0x000000000072b06d
- (void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2;	// IMP=0x000000000072b021
- (RetainPtr_f649c0c3)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr_f649c0c3)arg3;	// IMP=0x000000000072afa8
- (_Bool)actionSheetAssistant:(id)arg1 showCustomSheetForElement:(id)arg2;	// IMP=0x000000000072af09
- (void)actionSheetAssistant:(id)arg1 shareElementWithImage:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x000000000072ab96
- (void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x000000000072a9e0
- (void)actionSheetAssistant:(id)arg1 openElementAtLocation:(struct CGPoint)arg2;	// IMP=0x000000000072a9cc
- (void)actionSheetAssistant:(id)arg1 performAction:(_Bool)arg2;	// IMP=0x000000000072a99b
- (void)updatePositionInformationForActionSheetAssistant:(id)arg1;	// IMP=0x000000000072a921
- (optional_76ed3b22)positionInformationForActionSheetAssistant:(id)arg1;	// IMP=0x000000000072a87c
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;	// IMP=0x000000000072a874
- (_Bool)gestureRecognizer:(id)arg1 isInterruptingMomentumScrollingWithEvent:(id)arg2;	// IMP=0x000000000072a6bc
- (_Bool)gestureRecognizer:(id)arg1 shouldIgnoreWebTouchWithEvent:(id)arg2;	// IMP=0x000000000072a69f
- (void)_preserveFocusWithToken:(id)arg1 destructively:(_Bool)arg2;	// IMP=0x000000000072a5d1
- (void)stopRelinquishingFirstResponderToFocusedElement;	// IMP=0x000000000072a59d
- (void)startRelinquishingFirstResponderToFocusedElement;	// IMP=0x000000000072a569
- (_Bool)_restoreFocusWithToken:(id)arg1;	// IMP=0x000000000072a523
- (id)inputLabelText;	// IMP=0x000000000072a4c0
- (void)_showContactPicker:(const struct ContactsRequestData *)arg1 completionHandler:(void *)arg2;	// IMP=0x000000000072a453
- (void)_showShareSheet:(const void *)arg1 inRect:(optional_acc783a3)arg2 completionHandler:(void *)arg3;	// IMP=0x000000000072a44d
- (_Bool)fileUploadPanelDestinationIsManaged:(id)arg1;	// IMP=0x000000000072a369
- (void)fileUploadPanelDidDismiss:(id)arg1;	// IMP=0x000000000072a326
- (void)_showRunOpenPanel:(struct OpenPanelParameters *)arg1 frameInfo:(const void *)arg2 resultListener:(struct WebOpenPanelResultListenerProxy *)arg3;	// IMP=0x000000000072a1c0
- (void)_showPlaybackTargetPicker:(_Bool)arg1 fromRect:(const struct IntRect *)arg2 routeSharingPolicy:(unsigned char)arg3 routingContextUID:(id)arg4;	// IMP=0x000000000072a116
- (void)updateTextSuggestionsForInputDelegate;	// IMP=0x000000000072a082
@property(retain, nonatomic) NSArray *dataListTextSuggestions;
@property(retain, nonatomic) UIView<WKFormControl> *dataListTextSuggestionsInputView;
- (void)_stopSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x0000000000729f03
- (void)_startSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x0000000000729ed1
- (_Bool)_shouldSuppressSelectionCommands;	// IMP=0x0000000000729ebd
- (_Bool)hasHiddenContentEditable;	// IMP=0x0000000000729ea9
- (_Bool)supportsTextSelectionWithCharacterGranularity;	// IMP=0x0000000000729ea1
- (_Bool)shouldAllowHidingSelectionCommands;	// IMP=0x0000000000729e8c
- (void)_updateChangedSelection:(_Bool)arg1;	// IMP=0x00000000007296dc
- (void)_updateChangedSelection;	// IMP=0x00000000007296c8
- (void)selectWordForReplacement;	// IMP=0x00000000007295e6
- (void)_selectionChanged;	// IMP=0x000000000072944b
- (void)_updateSelectionAssistantSuppressionState;	// IMP=0x000000000072933e
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x000000000072930f
- (void)reloadContextViewForPresentedListViewController;	// IMP=0x0000000000729309
- (void)updateCurrentFocusedElementInformation:(void *)arg1;	// IMP=0x000000000072918d
- (void)_updateInitialWritingDirectionIfNecessary;	// IMP=0x0000000000729108
- (void)_didUpdateEditorState;	// IMP=0x0000000000729001
- (void)doAfterEditorStateUpdateAfterFocusingElement:(CDUnknownBlockType)arg1;	// IMP=0x0000000000728f4d
- (void)_requestDOMPasteAccessForCategory:(unsigned char)arg1 elementRect:(const struct IntRect *)arg2 originIdentifier:(const void *)arg3 completionHandler:(void *)arg4;	// IMP=0x0000000000728b15
- (void)_didUpdateInputMode:(unsigned char)arg1;	// IMP=0x0000000000728aba
- (void)_hardwareKeyboardAvailabilityChanged;	// IMP=0x0000000000728a9d
@property(readonly, nonatomic) _Bool shouldIgnoreKeyboardWillHideNotification;
- (void)_updateInputContextAfterBlurringAndRefocusingElement;	// IMP=0x00000000007289e9
- (void)_elementDidBlur;	// IMP=0x00000000007287da
- (void)_elementDidFocus:(const void *)arg1 userIsInteracting:(_Bool)arg2 blurPreviousNode:(_Bool)arg3 activityStateChanges:(OptionSet_05ce0fa5)arg4 userObject:(id)arg5;	// IMP=0x0000000000727cb3
- (_Bool)_shouldShowKeyboardForElement:(const void *)arg1;	// IMP=0x0000000000727c78
- (void *)focusedSelectElementOptions;	// IMP=0x0000000000727c62
@property(readonly, nonatomic) const void *focusedElementInformation;
- (_Bool)_formControlRefreshEnabled;	// IMP=0x0000000000727bfb
- (void)_hideKeyboard;	// IMP=0x0000000000727b6b
- (void)_showKeyboard;	// IMP=0x0000000000727b06
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x0000000000727ad5
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x0000000000727acd
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x0000000000727ac5
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x0000000000727abd
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000007279f2
- (_Bool)hasSelection;	// IMP=0x00000000007279ea
- (id)fontForCaretSelection;	// IMP=0x0000000000727968
- (id)textColorForCaretSelection;	// IMP=0x000000000072794f
- (void)selectAll;	// IMP=0x0000000000727949
- (_Bool)hasContent;	// IMP=0x0000000000727921
- (void)setMarkedText:(id)arg1;	// IMP=0x000000000072791b
- (id)wordRangeContainingCaretSelection;	// IMP=0x0000000000727913
- (id)wordContainingCaretSelection;	// IMP=0x000000000072790b
- (unsigned short)characterBeforeCaretSelection;	// IMP=0x0000000000727903
- (void)moveForward:(unsigned int)arg1;	// IMP=0x00000000007278fd
- (void)moveBackward:(unsigned int)arg1;	// IMP=0x00000000007278f7
- (id)metadataDictionariesForDictationResults;	// IMP=0x00000000007278ef
@property(nonatomic) long long selectionGranularity;
- (id)automaticallySelectedOverlay;	// IMP=0x00000000007278d5
- (void)setBottomBufferHeight:(double)arg1;	// IMP=0x00000000007278cf
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000007278a3
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000727877
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000727815
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000007277e9
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000007277bd
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000727791
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000072772f
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000727703
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000007276d7
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000007276ab
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000072767f
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000727653
- (void)_transpose;	// IMP=0x000000000072763a
- (void)_deleteToEndOfParagraph;	// IMP=0x0000000000727621
- (void)_deleteForwardAndNotify:(_Bool)arg1;	// IMP=0x0000000000727608
- (void)_deleteToEndOfLine;	// IMP=0x00000000007275ef
- (void)_deleteToStartOfLine;	// IMP=0x00000000007275d6
- (void)_deleteForwardByWord;	// IMP=0x00000000007275bd
- (void)_deleteByWord;	// IMP=0x00000000007275a4
- (void)executeEditCommandWithCallback:(id)arg1;	// IMP=0x0000000000727432
- (void)keyboardScrollViewAnimatorDidFinishScrolling:(id)arg1;	// IMP=0x0000000000727411
- (void)keyboardScrollViewAnimatorWillScroll:(id)arg1;	// IMP=0x00000000007273ff
- (double)keyboardScrollViewAnimator:(id)arg1 distanceForIncrement:(unsigned char)arg2 inDirection:(unsigned char)arg3;	// IMP=0x0000000000727245
- (_Bool)isScrollableForKeyboardScrollViewAnimator:(id)arg1;	// IMP=0x00000000007271e0
- (void)dismissFilePicker;	// IMP=0x00000000007271c3
- (id)filePickerAcceptedTypeIdentifiers;	// IMP=0x0000000000727198
- (_Bool)_interpretKeyEvent:(id)arg1 isCharEvent:(_Bool)arg2;	// IMP=0x0000000000726f80
- (void)_didHandleKeyEvent:(id)arg1 eventWasHandled:(_Bool)arg2;	// IMP=0x0000000000726ed1
- (void)handleKeyWebEvent:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000726cde
- (void)handleKeyWebEvent:(id)arg1;	// IMP=0x0000000000726c84
- (void)generateSyntheticEditingCommand:(unsigned char)arg1;	// IMP=0x0000000000726c6d
- (void)_handleKeyUIEvent:(id)arg1;	// IMP=0x0000000000726b89
- (_Bool)requiresKeyEvents;	// IMP=0x0000000000726b81
- (_Bool)shouldSuppressUpdateCandidateView;	// IMP=0x0000000000726b71
- (void)modifierFlagsDidChangeFrom:(long long)arg1 to:(long long)arg2;	// IMP=0x0000000000726a30
- (void)_didFinishTextInteractionInTextInputContext:(id)arg1;	// IMP=0x00000000007269a5
- (void)_willBeginTextInteractionInTextInputContext:(id)arg1;	// IMP=0x000000000072692c
- (void)_requestTextInputContextsInRect:(struct CGRect)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000007267eb
- (void)_focusTextInputContext:(id)arg1 placeCaretAt:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000007265f4
- (_Bool)_isTextInputContextFocused:(id)arg1;	// IMP=0x0000000000726589
- (struct CGRect)rectContainingCaretSelection;	// IMP=0x000000000072656b
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x0000000000726565
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;	// IMP=0x000000000072655f
- (id)selectedDOMRange;	// IMP=0x0000000000726557
- (struct _NSRange)_markedTextNSRange;	// IMP=0x0000000000726545
- (struct CGRect)rectForNSRange:(struct _NSRange)arg1;	// IMP=0x0000000000726527
- (struct _NSRange)selectionRange;	// IMP=0x0000000000726515
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (void)_updateTextInputTraits:(id)arg1;	// IMP=0x0000000000725f9f
- (id)textInputTraits;	// IMP=0x0000000000725f3f
@property(readonly, nonatomic) _Bool hasText;
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;	// IMP=0x0000000000725cb9
- (void)insertText:(id)arg1;	// IMP=0x0000000000725b82
- (_Bool)_shouldSimulateKeyboardInputOnTextInsertion;	// IMP=0x0000000000725b7a
- (void)deleteBackward;	// IMP=0x0000000000725aec
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000725ae4
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000725adc
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000725ad4
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x0000000000725ab6
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x0000000000725a21
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000725a19
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000725a11
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000000725a09
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000007259f9
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000007259f1
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x00000000007259e9
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x00000000007259e1
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000007259d9
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x000000000072598d
- (void)_setMarkedText:(id)arg1 highlights:(const void *)arg2 selectedRange:(struct _NSRange)arg3;	// IMP=0x0000000000725886
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x000000000072583c
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000725527
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (id)markedText;	// IMP=0x000000000072533f
- (_Bool)hasMarkedText;	// IMP=0x000000000072531b
@property(copy) UITextRange *selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x00000000007252ca
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x0000000000725294
- (struct FloatRect)_scaledCaretRectForSelectionEnd:(struct FloatRect)arg1;	// IMP=0x0000000000724f30
- (struct FloatRect)_scaledCaretRectForSelectionStart:(struct FloatRect)arg1;	// IMP=0x0000000000724ebf
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000724eb9
- (id)textInRange:(id)arg1;	// IMP=0x0000000000724e56
- (void)insertTextSuggestion:(id)arg1;	// IMP=0x0000000000724c17
- (void)_didChangeWebViewEditability;	// IMP=0x0000000000724b58
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;	// IMP=0x0000000000724a8b
- (void)endSelectionChange;	// IMP=0x0000000000724a48
- (void)beginSelectionChange;	// IMP=0x0000000000724a0d
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x0000000000724a05
- (void)_updateAccessory;	// IMP=0x0000000000724918
- (void)accessoryOpen;	// IMP=0x00000000007248ba
@property(readonly, nonatomic) UIWebFormAccessory *formAccessoryView;
- (void)accessoryAutoFill;	// IMP=0x00000000007247af
- (void)accessoryTab:(_Bool)arg1;	// IMP=0x00000000007246cb
- (void)updateFocusedElementFocusedWithDataListDropdown:(_Bool)arg1;	// IMP=0x00000000007246ab
- (void)updateFocusedElementSelectedIndex:(unsigned int)arg1 allowsMultipleSelection:(_Bool)arg2;	// IMP=0x0000000000724653
- (void)updateFocusedElementValueAsColor:(id)arg1;	// IMP=0x00000000007244d0
- (void)updateFocusedElementValue:(id)arg1;	// IMP=0x00000000007243b0
- (void)accessoryDone;	// IMP=0x0000000000724348
- (void)accessoryClear;	// IMP=0x00000000007242a2
- (void)_setDoubleTapGesturesEnabled:(_Bool)arg1;	// IMP=0x000000000072415e
- (struct Color)_tapHighlightColorForFastClick:(_Bool)arg1;	// IMP=0x0000000000724134
- (void)_becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000724029
- (void)_previousAccessoryTabForWebView:(id)arg1;	// IMP=0x0000000000724015
- (void)_nextAccessoryTabForWebView:(id)arg1;	// IMP=0x0000000000723ffe
- (void)_didCommitLoadForMainFrame;	// IMP=0x0000000000723f44
- (void)_didStartProvisionalLoadForMainFrame;	// IMP=0x0000000000723eec
- (void)runModalJavaScriptDialog:(void *)arg1;	// IMP=0x0000000000723e81
- (void)unsuppressSoftwareKeyboardUsingLastAutocorrectionContextIfNeeded;	// IMP=0x0000000000723e29
- (void)updateSoftwareKeyboardSuppressionStateFromWebView;	// IMP=0x0000000000723d7f
- (void)_handleAutocorrectionContext:(const void *)arg1;	// IMP=0x0000000000723cdb
- (void)requestAutocorrectionContextWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000723a9b
- (void)_cancelPendingAutocorrectionContextHandler;	// IMP=0x0000000000723a63
- (void)_invokePendingAutocorrectionContextHandler:(id)arg1;	// IMP=0x0000000000723a1c
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000723899
- (void)requestDictationContext:(CDUnknownBlockType)arg1;	// IMP=0x00000000007237f7
- (void)replaceDictatedText:(id)arg1 withText:(id)arg2;	// IMP=0x00000000007236fe
- (struct CGRect)textLastRect;	// IMP=0x000000000072366d
- (struct CGRect)textFirstRect;	// IMP=0x00000000007235ea
- (_Bool)_selectionAtDocumentStart;	// IMP=0x00000000007235cf
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;	// IMP=0x0000000000723587
- (unsigned int)_characterBeforeCaretSelection;	// IMP=0x000000000072355b
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 withBoundary:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000723409
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000007232d6
- (void)beginSelectionInDirection:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000723204
- (void)selectTextWithGranularity:(long long)arg1 atPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000007230c0
- (void)moveSelectionAtBoundary:(long long)arg1 inDirection:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000722fb1
- (void)selectPositionAtBoundary:(long long)arg1 inDirection:(long long)arg2 fromPoint:(struct CGPoint)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000722e64
- (void)_selectPositionAtPoint:(struct CGPoint)arg1 stayingWithinFocusedElement:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000722d6c
- (void)selectPositionAtPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000722d15
- (void)requestRectsToEvadeForSelectionCommandsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000722b43
- (void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000007229a0
@property(readonly, nonatomic) const void *autocorrectionData;
- (void)moveByOffset:(long long)arg1;	// IMP=0x00000000007228be
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;	// IMP=0x000000000072279b
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3 withFlags:(long long)arg4;	// IMP=0x00000000007226ae
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;	// IMP=0x0000000000722584
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;	// IMP=0x000000000072256c
- (_Bool)_hasFocusedElement;	// IMP=0x0000000000722554
- (void)_didPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x0000000000722535
- (void)_willPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x0000000000722516
- (_Bool)_handleDOMPasteRequestWithResult:(unsigned char)arg1;	// IMP=0x00000000007223ef
- (void)_accessibilityClearSelection;	// IMP=0x00000000007223bd
- (void)_accessibilityStoreSelection;	// IMP=0x000000000072238b
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000722235
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2;	// IMP=0x0000000000722220
- (void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)arg1 withGranularity:(long long)arg2;	// IMP=0x000000000072214d
- (void)accessibilityRetrieveSpeakSelectionContent;	// IMP=0x0000000000722022
- (void)_defineForWebView:(id)arg1;	// IMP=0x0000000000721f1e
- (void)_showDictionary:(id)arg1;	// IMP=0x0000000000721e9c
- (void)_showTextStyleOptionsForWebView:(id)arg1;	// IMP=0x0000000000721e74
- (void)toggleUnderlineForWebView:(id)arg1;	// IMP=0x0000000000721e07
- (void)toggleItalicsForWebView:(id)arg1;	// IMP=0x0000000000721d9a
- (void)toggleBoldfaceForWebView:(id)arg1;	// IMP=0x0000000000721d2d
- (_Bool)shouldSynthesizeKeyEvents;	// IMP=0x0000000000721cff
- (void)selectAllForWebView:(id)arg1;	// IMP=0x0000000000721c69
- (void)selectForWebView:(id)arg1;	// IMP=0x0000000000721b98
- (void)_pasteAsQuotationForWebView:(id)arg1;	// IMP=0x0000000000721b0a
- (void)pasteForWebView:(id)arg1;	// IMP=0x0000000000721a44
- (void)cutForWebView:(id)arg1;	// IMP=0x0000000000721a2b
- (void)copyForWebView:(id)arg1;	// IMP=0x000000000072199d
- (void)_keyboardDidRequestDismissal:(id)arg1;	// IMP=0x0000000000721971
- (void)_didHideMenu:(id)arg1;	// IMP=0x0000000000721949
- (void)_willHideMenu:(id)arg1;	// IMP=0x0000000000721935
- (id)targetForActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000721906
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000007218d3
- (_Bool)canPerformActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000720e74
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000720c61
- (void)tintColorDidChange;	// IMP=0x0000000000720ba1
- (void)_updateInteractionTintColor:(id)arg1;	// IMP=0x0000000000720b70
- (id)_cascadeInteractionTintColor;	// IMP=0x0000000000720992
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *insertionPointColor;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000007207aa
- (void)toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x0000000000720798
- (void)_setTextColorForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x0000000000720639
- (void)_setFontSizeForWebView:(double)arg1 sender:(id)arg2;	// IMP=0x00000000007205b2
- (void)_setFontForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x00000000007203c0
- (void)decreaseSizeForWebView:(id)arg1;	// IMP=0x0000000000720302
- (void)increaseSizeForWebView:(id)arg1;	// IMP=0x0000000000720244
- (void)_toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x00000000007201b6
- (void)_changeListTypeForWebView:(id)arg1;	// IMP=0x00000000007201a1
- (void)_decreaseListLevelForWebView:(id)arg1;	// IMP=0x000000000072018c
- (void)_increaseListLevelForWebView:(id)arg1;	// IMP=0x0000000000720177
- (void)pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x0000000000720165
- (void)_pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x00000000007200d7
- (void)alignJustifiedForWebView:(id)arg1;	// IMP=0x00000000007200c5
- (void)_alignJustifiedForWebView:(id)arg1;	// IMP=0x0000000000720037
- (void)alignCenterForWebView:(id)arg1;	// IMP=0x0000000000720025
- (void)_alignCenterForWebView:(id)arg1;	// IMP=0x000000000071ff97
- (void)alignRightForWebView:(id)arg1;	// IMP=0x000000000071ff85
- (void)_alignRightForWebView:(id)arg1;	// IMP=0x000000000071fef7
- (void)alignLeftForWebView:(id)arg1;	// IMP=0x000000000071fee5
- (void)_alignLeftForWebView:(id)arg1;	// IMP=0x000000000071fe57
- (void)outdentForWebView:(id)arg1;	// IMP=0x000000000071fe45
- (void)_outdentForWebView:(id)arg1;	// IMP=0x000000000071fdb7
- (void)indentForWebView:(id)arg1;	// IMP=0x000000000071fda5
- (void)_indentForWebView:(id)arg1;	// IMP=0x000000000071fd17
- (void)insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x000000000071fd05
- (void)_insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x000000000071fc77
- (void)insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x000000000071fc65
- (void)_insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x000000000071fbd7
- (void)insertUnorderedListForWebView:(id)arg1;	// IMP=0x000000000071fbc5
- (void)_insertUnorderedListForWebView:(id)arg1;	// IMP=0x000000000071fb37
- (void)insertOrderedListForWebView:(id)arg1;	// IMP=0x000000000071fb25
- (void)_insertOrderedListForWebView:(id)arg1;	// IMP=0x000000000071fa97
- (void)replaceForWebView:(id)arg1;	// IMP=0x000000000071fa5f
- (void)_transliterateChineseForWebView:(id)arg1;	// IMP=0x000000000071fa10
- (void)_promptForReplaceForWebView:(id)arg1;	// IMP=0x000000000071f9ba
- (void)selectWordBackward;	// IMP=0x000000000071f988
- (void)replaceText:(id)arg1 withText:(id)arg2;	// IMP=0x000000000071f88f
- (_Bool)isReplaceAllowed;	// IMP=0x000000000071f878
- (void)makeTextWritingDirectionRightToLeftForWebView:(id)arg1;	// IMP=0x000000000071f85e
- (void)makeTextWritingDirectionLeftToRightForWebView:(id)arg1;	// IMP=0x000000000071f844
- (void)makeTextWritingDirectionNaturalForWebView:(id)arg1;	// IMP=0x000000000071f82d
- (id)alternativesForSelectedText;	// IMP=0x000000000071f73f
- (id)selectedText;	// IMP=0x000000000071f715
- (void)_addShortcutForWebView:(id)arg1;	// IMP=0x000000000071f682
- (void)_translateForWebView:(id)arg1;	// IMP=0x000000000071f5ae
- (void)_shareForWebView:(id)arg1;	// IMP=0x000000000071f4e8
- (void)_lookupForWebView:(id)arg1;	// IMP=0x000000000071f454
- (void)_pasteAndMatchStyle:(id)arg1;	// IMP=0x000000000071f3ed
- (void)_pasteAsQuotation:(id)arg1;	// IMP=0x000000000071f386
- (void)_changeListType:(id)arg1;	// IMP=0x000000000071f31f
- (void)_decreaseListLevel:(id)arg1;	// IMP=0x000000000071f2b8
- (void)_increaseListLevel:(id)arg1;	// IMP=0x000000000071f251
- (void)_insertNestedUnorderedList:(id)arg1;	// IMP=0x000000000071f1ea
- (void)_insertNestedOrderedList:(id)arg1;	// IMP=0x000000000071f183
- (void)_insertUnorderedList:(id)arg1;	// IMP=0x000000000071f11c
- (void)_insertOrderedList:(id)arg1;	// IMP=0x000000000071f0b5
- (void)_toggleStrikeThrough:(id)arg1;	// IMP=0x000000000071f04e
- (void)_outdent:(id)arg1;	// IMP=0x000000000071efe7
- (void)_indent:(id)arg1;	// IMP=0x000000000071ef80
- (void)_alignRight:(id)arg1;	// IMP=0x000000000071ef19
- (void)_alignLeft:(id)arg1;	// IMP=0x000000000071eeb2
- (void)_alignJustified:(id)arg1;	// IMP=0x000000000071ee4b
- (void)_alignCenter:(id)arg1;	// IMP=0x000000000071ede4
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x000000000071ed7d
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x000000000071ed16
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x000000000071ecaf
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x000000000071ec48
- (void)decreaseSize:(id)arg1;	// IMP=0x000000000071ebe1
- (void)increaseSize:(id)arg1;	// IMP=0x000000000071eb7a
- (void)toggleUnderline:(id)arg1;	// IMP=0x000000000071eb13
- (void)toggleItalics:(id)arg1;	// IMP=0x000000000071eaac
- (void)toggleBoldface:(id)arg1;	// IMP=0x000000000071ea45
- (void)selectAll:(id)arg1;	// IMP=0x000000000071e9de
- (void)select:(id)arg1;	// IMP=0x000000000071e977
- (void)replace:(id)arg1;	// IMP=0x000000000071e910
- (void)paste:(id)arg1;	// IMP=0x000000000071e8a9
- (void)cut:(id)arg1;	// IMP=0x000000000071e842
- (void)copy:(id)arg1;	// IMP=0x000000000071e7db
- (void)_previousAccessoryTab:(id)arg1;	// IMP=0x000000000071e774
- (void)_nextAccessoryTab:(id)arg1;	// IMP=0x000000000071e70d
- (void)_transliterateChinese:(id)arg1;	// IMP=0x000000000071e6a6
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x000000000071e63f
- (void)_share:(id)arg1;	// IMP=0x000000000071e5d8
- (void)_promptForReplace:(id)arg1;	// IMP=0x000000000071e571
- (void)_translate:(id)arg1;	// IMP=0x000000000071e50a
- (void)_lookup:(id)arg1;	// IMP=0x000000000071e4a3
- (void)_define:(id)arg1;	// IMP=0x000000000071e43c
- (void)_addShortcut:(id)arg1;	// IMP=0x000000000071e3d5
- (id)supportedPasteboardTypesForCurrentSelection;	// IMP=0x000000000071e299
@property(readonly, nonatomic) UIView *inputAccessoryViewForWebView;
- (id)inputAccessoryView;	// IMP=0x000000000071e222
@property(readonly, nonatomic) UITextInputAssistantItem *inputAssistantItemForWebView;
- (id)inputAssistantItem;	// IMP=0x000000000071e1d2
- (_Bool)requiresAccessoryView;	// IMP=0x000000000071e166
- (_Bool)_elementTypeRequiresAccessoryView:(int)arg1;	// IMP=0x000000000071e11f
- (void)_didEndScrollingOrZooming;	// IMP=0x000000000071e0b8
- (void)scrollViewWillStartPanOrPinchGesture;	// IMP=0x000000000071e05e
- (void)_willStartScrollingOrZooming;	// IMP=0x000000000071e024
- (void)_positionInformationDidChange:(const void *)arg1;	// IMP=0x000000000071dd04
- (void)_invalidateCurrentPositionInformation;	// IMP=0x000000000071db7a
- (void)clearSelection;	// IMP=0x000000000071db4e
- (void)pasteWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000071da02
- (void)setUpTextSelectionAssistant;	// IMP=0x000000000071d99d
- (void)_attemptSyntheticClickAtLocation:(struct CGPoint)arg1 modifierFlags:(long long)arg2;	// IMP=0x000000000071d8f2
- (void)_twoFingerDoubleTapRecognized:(id)arg1;	// IMP=0x000000000071d860
- (void)_nonBlockingDoubleTapRecognized:(id)arg1;	// IMP=0x000000000071d823
- (void)_resetIsDoubleTapPending;	// IMP=0x000000000071d812
- (void)_doubleTapRecognized:(id)arg1;	// IMP=0x000000000071d6d5
- (void)_singleTapRecognized:(id)arg1;	// IMP=0x000000000071d4b6
- (void)_didCompleteSyntheticClick;	// IMP=0x000000000071d3c2
- (void)_didNotHandleTapAsClick:(const struct IntPoint *)arg1;	// IMP=0x000000000071d32c
- (void)_commitPotentialTapFailed;	// IMP=0x000000000071d2a3
- (void)_doubleTapDidFail:(id)arg1;	// IMP=0x000000000071d20d
- (void)_singleTapDidReset:(id)arg1;	// IMP=0x000000000071d157
- (void)_singleTapIdentified:(id)arg1;	// IMP=0x000000000071cf97
- (void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;	// IMP=0x000000000071ce60
- (void)_longPressRecognized:(id)arg1;	// IMP=0x000000000071cd75
- (void)_twoFingerSingleTapGestureRecognized:(id)arg1;	// IMP=0x000000000071cc21
- (void)_doubleTapRecognizedForDoubleClick:(id)arg1;	// IMP=0x000000000071cb5f
- (void)_highlightLongPressRecognized:(id)arg1;	// IMP=0x000000000071c946
- (ObjectIdentifier_e7ec9792)nextTapIdentifier;	// IMP=0x000000000071c926
- (id)webSelectionRects;	// IMP=0x000000000071c8ec
- (id)webSelectionRectsForSelectionGeometries:(const void *)arg1;	// IMP=0x000000000071c6ec
- (_Bool)textInteractionGesture:(long long)arg1 shouldBeginAtPoint:(struct CGPoint)arg2;	// IMP=0x000000000071c434
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;	// IMP=0x000000000071c2cc
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000071c152
- (_Bool)canShowNonEmptySelectionView;	// IMP=0x000000000071c121
- (void)_fadeTapHighlightViewIfNeeded;	// IMP=0x000000000071bfd6
- (void)_finishInteraction;	// IMP=0x000000000071bfb9
- (void)_cancelInteraction;	// IMP=0x000000000071bf91
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000071b916
- (_Bool)_shouldToggleSelectionCommandsAfterTapAt:(struct CGPoint)arg1;	// IMP=0x000000000071b850
- (_Bool)_pointIsInsideSelectionRect:(struct CGPoint)arg1 outBoundingRect:(struct FloatRect *)arg2;	// IMP=0x000000000071b704
- (id)_uiTextSelectionRects;	// IMP=0x000000000071b510
- (void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;	// IMP=0x000000000071b2ec
- (_Bool)_currentPositionInformationIsApproximatelyValidForRequest:(const struct InteractionInformationRequest *)arg1 radiusForApproximation:(int)arg2;	// IMP=0x000000000071b2c5
- (_Bool)_hasValidOutstandingPositionInformationRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x000000000071b2a1
- (_Bool)_currentPositionInformationIsValidForRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x000000000071b27a
- (void)requestAsynchronousPositionInformationUpdate:(struct InteractionInformationRequest)arg1;	// IMP=0x000000000071b1f2
- (_Bool)ensurePositionInformationIsUpToDate:(struct InteractionInformationRequest)arg1;	// IMP=0x000000000071b052
- (void)doAfterPositionInformationUpdate:(CDUnknownBlockType)arg1 forRequest:(struct InteractionInformationRequest)arg2;	// IMP=0x000000000071ae57
- (SEL)_actionForLongPress;	// IMP=0x000000000071ae3b
- (SEL)_actionForLongPressFromPositionInformation:(const void *)arg1;	// IMP=0x000000000071adc7
- (void)_showDataDetectorsUIForPositionInformation:(const void *)arg1;	// IMP=0x000000000071adaa
- (void)_showDataDetectorsUI;	// IMP=0x000000000071ad8e
- (void)_showLinkSheet;	// IMP=0x000000000071ad71
- (void)_showAttachmentSheet;	// IMP=0x000000000071abfc
- (void)_showImageSheet;	// IMP=0x000000000071abdf
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x000000000071ab99
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x000000000071ab2e
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x000000000071a705
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;	// IMP=0x000000000071a6aa
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;	// IMP=0x000000000071a629
- (struct CGRect)_selectionClipRect;	// IMP=0x000000000071a5b8
@property(readonly, nonatomic) UIView *inputViewForWebView;
- (id)inputView;	// IMP=0x000000000071a4f5
- (void)resetShouldZoomToFocusRectAfterShowingKeyboard;	// IMP=0x000000000071a4c4
- (void)_zoomToRevealFocusedElement;	// IMP=0x000000000071a33e
- (void)_keyboardDidShow;	// IMP=0x000000000071a2f2
- (struct FloatRect)rectToRevealWhenZoomingToFocusedElement;	// IMP=0x000000000071a217
- (_Bool)_requiresKeyboardResetOnReload;	// IMP=0x000000000071a20f
- (_Bool)_requiresKeyboardWhenFirstResponder;	// IMP=0x000000000071a1dc
- (_Bool)_disableAutomaticKeyboardUI;	// IMP=0x000000000071a1a5
- (_Bool)_shouldShowAutomaticKeyboardUIIgnoringInputMode;	// IMP=0x000000000071a140
- (_Bool)shouldShowAutomaticKeyboardUI;	// IMP=0x000000000071a0e5
- (void)_scrollingNodeScrollingDidEnd;	// IMP=0x000000000071a08f
- (void)_scrollingNodeScrollingWillBegin;	// IMP=0x000000000071a072
- (void)_didScroll;	// IMP=0x000000000071a037
- (void)_cancelTouchEventGestureRecognizer;	// IMP=0x000000000071a031
- (void)_cancelLongPressGestureRecognizer;	// IMP=0x000000000071a014
- (void)_handleSmartMagnificationInformationForPotentialTap:(ObjectIdentifier_e7ec9792)arg1 renderRect:(const struct FloatRect *)arg2 fitEntireRect:(_Bool)arg3 viewportMinimumScale:(double)arg4 viewportMaximumScale:(double)arg5 nodeIsRootLevel:(_Bool)arg6;	// IMP=0x0000000000719c2b
- (void)_disableDoubleTapGesturesDuringTapIfNecessary:(ObjectIdentifier_e7ec9792)arg1;	// IMP=0x0000000000719c08
- (_Bool)_mayDisableDoubleTapGesturesDuringSingleTap;	// IMP=0x0000000000719bf8
- (void)_didGetTapHighlightForRequest:(ObjectIdentifier_e7ec9792)arg1 color:(const struct Color *)arg2 quads:(const void *)arg3 topLeftRadius:(const struct IntSize *)arg4 topRightRadius:(const struct IntSize *)arg5 bottomLeftRadius:(const struct IntSize *)arg6 bottomRightRadius:(const struct IntSize *)arg7 nodeHasBuiltInClickHandling:(_Bool)arg8;	// IMP=0x00000000007199cc
- (void)_showTapHighlight;	// IMP=0x00000000007197de
@property(readonly, nonatomic) UIGestureRecognizer *imageAnalysisGestureRecognizer;
@property(readonly, nonatomic) struct CGRect tapHighlightViewRect;
- (void)_updateTapHighlight;	// IMP=0x0000000000719062
- (_Bool)_isTouchEndDeferringGesture:(id)arg1;	// IMP=0x0000000000719032
- (_Bool)_isTouchStartDeferringGesture:(id)arg1;	// IMP=0x0000000000719002
- (void)_doneDeferringTouchEnd:(_Bool)arg1;	// IMP=0x0000000000718ed9
- (void)_doneDeferringTouchStart:(_Bool)arg1;	// IMP=0x0000000000718cf6
- (id)_touchEndDeferringGestures;	// IMP=0x0000000000718c60
- (id)_touchStartDeferringGestures;	// IMP=0x0000000000718bca
@property(readonly, nonatomic) NSArray *deferringGestures;
@property(readonly, nonatomic) void *gestureRecognizerConsistencyEnforcer;
@property(readonly, nonatomic) UIWebTouchEventsGestureRecognizer *touchEventGestureRecognizer;
- (void)_webTouchEvent:(const void *)arg1 preventsNativeGestures:(_Bool)arg2;	// IMP=0x0000000000718a83
- (void)_inspectorNodeSearchRecognized:(id)arg1;	// IMP=0x00000000007189b8
- (void)_resetPanningPreventionFlags;	// IMP=0x000000000071899c
- (id)touchActionActiveTouches;	// IMP=0x000000000071897f
- (_Bool)gestureRecognizerMayDoubleTapToZoomWebView:(id)arg1;	// IMP=0x000000000071895a
- (_Bool)gestureRecognizerMayPinchToZoomWebView:(id)arg1;	// IMP=0x0000000000718875
- (_Bool)gestureRecognizerMayPanWebView:(id)arg1;	// IMP=0x00000000007187e0
- (_Bool)gestureRecognizer:(id)arg1 shouldReceivePress:(id)arg2;	// IMP=0x00000000007187d8
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000000007186b2
- (void)_handleTouchActionsForTouchEvent:(const void *)arg1;	// IMP=0x0000000000718544
- (void)_webTouchEventsRecognized:(id)arg1;	// IMP=0x0000000000717ee8
- (_Bool)_touchEventsMustRequireGestureRecognizerToFail:(id)arg1;	// IMP=0x0000000000717e51
- (optional_488f82df)activeTouchIdentifierForGestureRecognizer:(id)arg1;	// IMP=0x0000000000717c97
- (void)cancelPointersForGestureRecognizer:(id)arg1;	// IMP=0x0000000000717990
- (_Bool)resignFirstResponderForWebView;	// IMP=0x00000000007177ad
- (void)endEditingAndUpdateFocusAppearanceWithReason:(long long)arg1;	// IMP=0x000000000071768f
- (_Bool)resignFirstResponder;	// IMP=0x000000000071766e
- (_Bool)becomeFirstResponderForWebView;	// IMP=0x000000000071748b
- (_Bool)becomeFirstResponder;	// IMP=0x000000000071746a
- (_Bool)canBecomeFirstResponderForWebView;	// IMP=0x0000000000717456
- (_Bool)canBecomeFirstResponder;	// IMP=0x0000000000717446
- (void)_resetInputViewDeferral;	// IMP=0x0000000000717419
- (void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;	// IMP=0x00000000007173d9
- (void)_cancelPreviousResetInputViewDeferralRequest;	// IMP=0x00000000007173b3
- (void)_endEditing;	// IMP=0x0000000000717355
- (_Bool)setIsEditable:(_Bool)arg1;	// IMP=0x0000000000717339
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) _Bool shouldHideSelectionWhenScrolling;
@property(readonly, nonatomic) struct CGPoint lastInteractionLocation;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) const void *positionInformation;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000071709d
- (void)_disableInspectorNodeSearch;	// IMP=0x0000000000717035
- (void)_enableInspectorNodeSearch;	// IMP=0x0000000000716fab
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000000716e74
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x0000000000716e6e
- (void)cancelAutoscroll;	// IMP=0x0000000000716e3c
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x0000000000716deb
- (struct CGRect)unobscuredContentRect;	// IMP=0x0000000000716dc0
- (id)_scroller;	// IMP=0x0000000000716d9f
- (double)inverseScale;	// IMP=0x0000000000716d48
- (id)unscaledView;	// IMP=0x0000000000716d37
- (void)_updateLongPressAndHighlightLongPressGestures;	// IMP=0x0000000000716c73
- (void)_didChangeLinkPreviewAvailability;	// IMP=0x0000000000716c61
- (void)_addDefaultGestureRecognizers;	// IMP=0x0000000000716a1d
- (void)_removeDefaultGestureRecognizers;	// IMP=0x00000000007167d9
- (void)_cancelPendingKeyEventHandler;	// IMP=0x0000000000716710
- (void)cleanUpInteractionPreviewContainers;	// IMP=0x00000000007166fe
- (void)cleanUpInteraction;	// IMP=0x0000000000715afd
- (void)setUpInteraction;	// IMP=0x0000000000714da3
- (void)_createAndConfigureLongPressGestureRecognizer;	// IMP=0x0000000000714cf6
- (void)_createAndConfigureDoubleTapGestureRecognizer;	// IMP=0x0000000000714bef
- (id)_formInputSession;	// IMP=0x0000000000714bde
@property(readonly, nonatomic) _Bool preventsPanningInYAxis;
@property(readonly, nonatomic) _Bool preventsPanningInXAxis;
@property(readonly, nonatomic) UIWKTextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) _Bool isShowingDataListSuggestions;
- (void)_setDataListSuggestionsControl:(id)arg1;	// IMP=0x000000000072cb66
- (void)_selectDataListOption:(long long)arg1;	// IMP=0x000000000072cb38
- (void)_dismissContactPickerWithContacts:(id)arg1;	// IMP=0x000000000072cb32
- (id)_contentsOfUserInterfaceItem:(id)arg1;	// IMP=0x000000000072c9fe
- (double)timePickerValueMinute;	// IMP=0x000000000072c99d
- (double)timePickerValueHour;	// IMP=0x000000000072c93c
- (void)setTimePickerValueToHour:(long long)arg1 minute:(long long)arg2;	// IMP=0x000000000072c8cb
@property(readonly, nonatomic) NSString *formInputLabel;
@property(readonly, nonatomic) NSString *selectFormPopoverTitle;
@property(readonly, nonatomic) NSString *textContentTypeForTesting;
- (void)setSelectedColorForColorPicker:(id)arg1;	// IMP=0x000000000072c7e1
- (_Bool)selectFormAccessoryHasCheckedItemAtRow:(long long)arg1;	// IMP=0x000000000072c783
- (void)selectFormAccessoryPickerRow:(long long)arg1;	// IMP=0x000000000072c722
- (void)_simulateLongPressActionAtLocation:(struct CGPoint)arg1;	// IMP=0x000000000072c528
- (void)_simulateElementAction:(long long)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x000000000072c30a
- (void)_simulateTextEntered:(id)arg1;	// IMP=0x000000000072c2f8
@property(readonly, nonatomic) WKFormSelectControl *selectControl;
@property(readonly, nonatomic) WKDateTimeInputControl *dateTimeInputControl;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(CDUnknownBlockType)arg1;	// IMP=0x000000000072c261

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(readonly, nonatomic) _Bool supportsImagePaste;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

