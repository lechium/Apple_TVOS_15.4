//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSString, NSURL, WKBackForwardList, WKBrowsingContextHandle, _WKRemoteObjectRegistry;
@protocol WKBrowsingContextHistoryDelegate, WKBrowsingContextLoadDelegate, WKBrowsingContextPolicyDelegate;

@interface WKBrowsingContextController : NSObject
{
    struct WeakObjCPtr<id<WKBrowsingContextHistoryDelegate>> _historyDelegate;	// 8 = 0x8
    struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> _page;	// 16 = 0x10
    struct unique_ptr<WebKit::PageLoadStateObserver, std::default_delete<WebKit::PageLoadStateObserver>> _pageLoadStateObserver;	// 24 = 0x18
    struct WeakObjCPtr<id<WKBrowsingContextLoadDelegate>> _loadDelegate;	// 32 = 0x20
    struct WeakObjCPtr<id<WKBrowsingContextPolicyDelegate>> _policyDelegate;	// 40 = 0x28
}

+ (id)_browsingContextControllerForPageRef:(struct OpaqueWKPage *)arg1;	// IMP=0x00000000001d6852
+ (id)customSchemes;	// IMP=0x00000000001d659d
+ (void)unregisterSchemeForCustomProtocol:(id)arg1;	// IMP=0x00000000001d54c9
+ (void)registerSchemeForCustomProtocol:(id)arg1;	// IMP=0x00000000001d53da
- (id).cxx_construct;	// IMP=0x00000000001d69c2
- (void).cxx_destruct;	// IMP=0x00000000001d6964
- (id)_initWithPageRef:(struct OpaqueWKPage *)arg1;	// IMP=0x00000000001d65cf
@property __weak id <WKBrowsingContextHistoryDelegate> historyDelegate;
@property __weak id <WKBrowsingContextPolicyDelegate> policyDelegate;
@property __weak id <WKBrowsingContextLoadDelegate> loadDelegate;
@property double pageZoom;
@property double textZoom;
@property(readonly) NSArray *certificateChain;
@property(readonly) NSString *title;
@property(readonly) double estimatedProgress;
@property(readonly) _Bool hasOnlySecureContent;
@property(readonly) NSURL *unreachableURL;
@property(readonly) NSURL *committedURL;
@property(readonly) NSURL *provisionalURL;
@property(readonly) NSURL *activeURL;
@property(readonly, getter=isLoading) _Bool loading;
@property(readonly) WKBackForwardList *backForwardList;
- (void)goToBackForwardListItem:(id)arg1;	// IMP=0x00000000001d60f9
@property(readonly) _Bool canGoBack;
- (void)goBack;	// IMP=0x00000000001d6077
@property(readonly) _Bool canGoForward;
- (void)goForward;	// IMP=0x00000000001d6020
@property(copy) NSString *customUserAgent;
@property(copy) NSString *applicationNameForUserAgent;
- (void)reloadFromOrigin;	// IMP=0x00000000001d5e8a
- (void)reload;	// IMP=0x00000000001d5e53
- (void)stopLoading;	// IMP=0x00000000001d5e45
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 userData:(id)arg5;	// IMP=0x00000000001d5c57
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;	// IMP=0x00000000001d5c34
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;	// IMP=0x00000000001d5a91
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 userData:(id)arg3;	// IMP=0x00000000001d5896
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;	// IMP=0x00000000001d5881
- (void)loadFileURL:(id)arg1 restrictToFilesWithin:(id)arg2 userData:(id)arg3;	// IMP=0x00000000001d56d9
- (void)loadFileURL:(id)arg1 restrictToFilesWithin:(id)arg2;	// IMP=0x00000000001d56c4
- (void)loadRequest:(id)arg1 userData:(id)arg2;	// IMP=0x00000000001d55cc
- (void)loadRequest:(id)arg1;	// IMP=0x00000000001d55b8
- (void)dealloc;	// IMP=0x00000000001d5211
- (_Bool)_webProcessIsResponsive;	// IMP=0x00000000001d6b2e
@property(readonly, nonatomic) int processIdentifier;
@property(readonly, nonatomic) _WKRemoteObjectRegistry *_remoteObjectRegistry;
@property(readonly, nonatomic) WKBrowsingContextHandle *handle;
@property(readonly) unsigned long long pageCount;
@property _Bool paginationLineGridEnabled;
@property double gapBetweenPages;
@property double pageLength;
@property _Bool paginationBehavesLikeColumns;
@property unsigned long long paginationMode;
@property(readonly) struct OpaqueWKPage *_pageRef;

@end

