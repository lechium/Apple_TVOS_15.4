//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GLKShaderBlockNode, NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface GLKEffect : NSObject
{
    NSMutableArray *_properties;	// 8 = 0x8
    unsigned char _colorMaterialEnabled;	// 16 = 0x10
    unsigned char _lightModelTwoSided;	// 17 = 0x11
    union _GLKVector4 _lightModelAmbientColor;	// 32 = 0x20
    unsigned char _texturingEnabled;	// 48 = 0x30
    NSArray *_textureOrder;	// 56 = 0x38
    NSString *_label;	// 64 = 0x40
    unsigned char _perVertexLightingEnabled;	// 72 = 0x48
    unsigned char _perPixelLightingEnabled;	// 73 = 0x49
    unsigned char _masksInitialized;	// 74 = 0x4a
    _Bool _textureOrderStale;	// 75 = 0x4b
    unsigned int _numLights;	// 76 = 0x4c
    unsigned int _numTextures;	// 80 = 0x50
    int _aColorLoc;	// 84 = 0x54
    unsigned int _vshName;	// 88 = 0x58
    unsigned int _fshName;	// 92 = 0x5c
    unsigned int _programName;	// 96 = 0x60
    unsigned int _numVshStrings;	// 100 = 0x64
    unsigned int _numFshStrings;	// 104 = 0x68
    int _lightModelAmbientColorLoc;	// 108 = 0x6c
    int _baseLightingColorLoc;	// 112 = 0x70
    NSMutableDictionary *_programHash;	// 120 = 0x78
    float *_materialAmbientColor;	// 128 = 0x80
    float *_materialDiffuseColor;	// 136 = 0x88
    id *_effectShaderArray;	// 144 = 0x90
    NSMutableArray *_lightProperties;	// 152 = 0x98
    GLKShaderBlockNode *_vshRootNode;	// 160 = 0xa0
    GLKShaderBlockNode *_fshRootNode;	// 168 = 0xa8
    char **_vshStrings;	// 176 = 0xb0
    char **_fshStrings;	// 184 = 0xb8
    unsigned long long _dirtyUniforms;	// 192 = 0xc0
    struct GLKBigInt_s *_fshMask;	// 200 = 0xc8
    struct GLKBigInt_s *_vshMask;	// 208 = 0xd0
    union _GLKVector4 _baseLightingColor;	// 224 = 0xe0
    struct GLKBigInt_s _prevFshMask;	// 240 = 0xf0
    struct GLKBigInt_s _prevVshMask;	// 256 = 0x100
}

+ (void)setStaticMasksWithVshRoot:(id)arg1 fshRoot:(id)arg2;	// IMP=0x00000000000065de
+ (id)shaderInfoLogForName:(unsigned int)arg1 effectLabel:(id)arg2 msg:(const char *)arg3;	// IMP=0x00000000000042c4
+ (id)programInfoLogForName:(unsigned int)arg1 effectLabel:(id)arg2 msg:(const char *)arg3;	// IMP=0x000000000000422f
+ (void)unrollLoopNodesForStaticTreeWithRoot:(id)arg1;	// IMP=0x0000000000002f50
+ (_Bool)parseXMLFile:(id)arg1 rootNode:(id)arg2;	// IMP=0x0000000000002ea6
+ (void)initializeStaticMasks;	// IMP=0x0000000000002278
+ (void)initialize;	// IMP=0x0000000000001df8
@property(nonatomic) struct GLKBigInt_s prevVshMask; // @synthesize prevVshMask=_prevVshMask;
@property(nonatomic) struct GLKBigInt_s prevFshMask; // @synthesize prevFshMask=_prevFshMask;
@property(nonatomic) struct GLKBigInt_s *vshMask; // @synthesize vshMask=_vshMask;
@property(nonatomic) struct GLKBigInt_s *fshMask; // @synthesize fshMask=_fshMask;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) int baseLightingColorLoc; // @synthesize baseLightingColorLoc=_baseLightingColorLoc;
@property(nonatomic) int lightModelAmbientColorLoc; // @synthesize lightModelAmbientColorLoc=_lightModelAmbientColorLoc;
@property(nonatomic) _Bool textureOrderStale; // @synthesize textureOrderStale=_textureOrderStale;
@property(nonatomic) unsigned long long dirtyUniforms; // @synthesize dirtyUniforms=_dirtyUniforms;
@property(nonatomic) unsigned int numFshStrings; // @synthesize numFshStrings=_numFshStrings;
@property(nonatomic) unsigned int numVshStrings; // @synthesize numVshStrings=_numVshStrings;
@property(nonatomic) char **fshStrings; // @synthesize fshStrings=_fshStrings;
@property(nonatomic) char **vshStrings; // @synthesize vshStrings=_vshStrings;
@property(nonatomic) unsigned int programName; // @synthesize programName=_programName;
@property(nonatomic) unsigned int fshName; // @synthesize fshName=_fshName;
@property(nonatomic) unsigned int vshName; // @synthesize vshName=_vshName;
@property(readonly, nonatomic) GLKShaderBlockNode *fshRootNode; // @synthesize fshRootNode=_fshRootNode;
@property(readonly, nonatomic) GLKShaderBlockNode *vshRootNode; // @synthesize vshRootNode=_vshRootNode;
@property(copy, nonatomic) NSArray *textureOrder; // @synthesize textureOrder=_textureOrder;
@property(retain, nonatomic) NSMutableArray *lightProperties; // @synthesize lightProperties=_lightProperties;
@property(nonatomic) id *effectShaderArray; // @synthesize effectShaderArray=_effectShaderArray;
@property(nonatomic) int aColorLoc; // @synthesize aColorLoc=_aColorLoc;
@property(nonatomic) unsigned char masksInitialized; // @synthesize masksInitialized=_masksInitialized;
@property(nonatomic) union _GLKVector4 baseLightingColor; // @synthesize baseLightingColor=_baseLightingColor;
@property(readonly, nonatomic) float *materialDiffuseColor; // @synthesize materialDiffuseColor=_materialDiffuseColor;
@property(readonly, nonatomic) float *materialAmbientColor; // @synthesize materialAmbientColor=_materialAmbientColor;
@property(nonatomic) unsigned char texturingEnabled; // @synthesize texturingEnabled=_texturingEnabled;
@property(nonatomic) union _GLKVector4 lightModelAmbientColor; // @synthesize lightModelAmbientColor=_lightModelAmbientColor;
@property(nonatomic) unsigned char lightModelTwoSided; // @synthesize lightModelTwoSided=_lightModelTwoSided;
@property(nonatomic) unsigned char colorMaterialEnabled; // @synthesize colorMaterialEnabled=_colorMaterialEnabled;
@property(nonatomic) unsigned int numTextures; // @synthesize numTextures=_numTextures;
@property(nonatomic) unsigned int numLights; // @synthesize numLights=_numLights;
@property(nonatomic) unsigned char perPixelLightingEnabled; // @synthesize perPixelLightingEnabled=_perPixelLightingEnabled;
@property(nonatomic) unsigned char perVertexLightingEnabled; // @synthesize perVertexLightingEnabled=_perVertexLightingEnabled;
@property(readonly, nonatomic) NSMutableDictionary *programHash; // @synthesize programHash=_programHash;
@property(retain, nonatomic) NSMutableArray *properties; // @synthesize properties=_properties;
- (void)dealloc;	// IMP=0x0000000000006b1d
- (char **)fshMaskStr;	// IMP=0x0000000000006b10
- (char **)vshMaskStr;	// IMP=0x0000000000006b03
- (unsigned int)fshMaskCt;	// IMP=0x0000000000006af8
- (unsigned int)vshMaskCt;	// IMP=0x0000000000006aed
- (struct GLKBigInt_s *)fshMasks;	// IMP=0x0000000000006ae0
- (struct GLKBigInt_s *)vshMasks;	// IMP=0x0000000000006ad3
- (id)description;	// IMP=0x0000000000006aaa
- (_Bool)includeVshShaderTextForRootNode:(id)arg1;	// IMP=0x00000000000064df
- (_Bool)includeFshShaderTextForRootNode:(id)arg1;	// IMP=0x00000000000063c6
- (_Bool)includeShaderTextForRootNode:(id)arg1;	// IMP=0x0000000000005c8a
- (void)initializeMasks;	// IMP=0x0000000000005b1c
- (void)bind;	// IMP=0x0000000000005370
- (void)createAndUseProgramWithShadingHash:(id)arg1;	// IMP=0x0000000000004938
- (void)updateFshStringsWithRoot:(id)arg1 enabled:(struct GLKBigInt_s)arg2;	// IMP=0x00000000000047af
- (void)updateVshStringsWithRoot:(id)arg1 enabled:(struct GLKBigInt_s)arg2;	// IMP=0x0000000000004626
- (void)setShaderBindings;	// IMP=0x00000000000045d1
- (_Bool)useColorAttrib;	// IMP=0x000000000000421a
- (_Bool)useTexCoordAttrib;	// IMP=0x0000000000004100
- (void)setTextureIndices;	// IMP=0x0000000000003d4c
- (void)addTransformProperty;	// IMP=0x0000000000003d13
- (void)dirtyAllUniforms;	// IMP=0x0000000000003bff
- (id)initWithPropertyArray:(id)arg1;	// IMP=0x0000000000003466
- (id)init;	// IMP=0x0000000000002098

@end

