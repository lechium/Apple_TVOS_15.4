//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVAssetTrack, AVCoordinatedPlaybackSuspension, AVDelegateManager, AVInterstitialController, AVMediaSelectionOption, AVNavigationMarkersGroup, AVObservationController, AVPlayer, AVPlayerItem, AVPlayerLayer, AVQueuePlayer, AVTimeRange, AVValueTiming, BSSimpleAssertion, NSArray, NSDate, NSDictionary, NSError, NSNumber, NSString;
@protocol AVPlayerControllerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface AVPlayerController : NSObject
{
    NSArray *_audioMediaSelectionOptions;	// 8 = 0x8
    NSArray *_visualMediaSelectionOptions;	// 16 = 0x10
    NSArray *_legibleMediaSelectionOptions;	// 24 = 0x18
    AVMediaSelectionOption *_cachedSelectedAudioMediaSelectionOption;	// 32 = 0x20
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOption;	// 40 = 0x28
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation;	// 48 = 0x30
    NSString *_lastKnownPersistedExtendedLanguageTag;	// 56 = 0x38
    void *_observationInfo;	// 64 = 0x40
    _Bool _inspectionSuspended;	// 72 = 0x48
    id _updateAtMinMaxTimePeriodicObserverToken;	// 80 = 0x50
    id _timecodePeriodicObserverToken;	// 88 = 0x58
    _Bool _pictureInPictureInterrupted;	// 96 = 0x60
    _Bool _handlesAudioSessionInterruptions;	// 97 = 0x61
    _Bool _isDeallocating;	// 98 = 0x62
    _Bool _hasSetUpSeekableLiveStreamState;	// 99 = 0x63
    NSNumber *_rateToRestoreAfterAudioSessionInterruptionEnds;	// 104 = 0x68
    CDUnknownBlockType _retryPlayingImmediatelyBlock;	// 112 = 0x70
    _Bool _shouldPlayImmediately;	// 120 = 0x78
    _Bool _looping;	// 121 = 0x79
    long long _actionAtItemEnd;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_seekQueue;	// 136 = 0x88
    NSObject<OS_dispatch_source> *_seekTimer;	// 144 = 0x90
    double _timeOfLastUpdate;	// 152 = 0x98
    _Bool _ignoreRateKeyValueChanges;	// 160 = 0xa0
    _Bool _ignoreNextRateKeyValueChange;	// 161 = 0xa1
    _Bool _pendingSeek;	// 162 = 0xa2
    _Bool _isResumed;	// 163 = 0xa3
    CDStruct_1b6d18a9 _toleranceBefore;	// 164 = 0xa4
    CDStruct_1b6d18a9 _toleranceAfter;	// 188 = 0xbc
    _Bool _isScanningForward;	// 212 = 0xd4
    _Bool _isScanningBackward;	// 213 = 0xd5
    unsigned long long _scanningCount;	// 216 = 0xd8
    double _preScanningRate;	// 224 = 0xe0
    AVValueTiming *_liveStreamMinTiming;	// 232 = 0xe8
    AVValueTiming *_liveStreamMaxTiming;	// 240 = 0xf0
    _Bool _liveStreamEventModePossible;	// 248 = 0xf8
    long long _canUseNetworkResourcesForLiveStreamingWhilePausedCount;	// 256 = 0x100
    _Bool _previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused;	// 264 = 0x108
    _Bool _shouldPlayWhenLikelyToKeepUp;	// 265 = 0x109
    _Bool _playingOnSecondScreen;	// 266 = 0x10a
    BSSimpleAssertion *_reduceResourceUsageAssertion;	// 272 = 0x110
    double _defaultPlaybackRate;	// 280 = 0x118
    _Bool _touchBarRequiresLinearPlayback;	// 288 = 0x120
    id <AVPlayerControllerDelegate> _internalDelegate;	// 296 = 0x128
    _Bool _atMaxTime;	// 304 = 0x130
    _Bool _atMinTime;	// 305 = 0x131
    _Bool _playbackSuspended;	// 306 = 0x132
    _Bool _scrubbing;	// 307 = 0x133
    _Bool _pictureInPictureSupported;	// 308 = 0x134
    _Bool _seekingInternal;	// 309 = 0x135
    _Bool _seeking;	// 310 = 0x136
    _Bool _composable;	// 311 = 0x137
    _Bool _hasProtectedContent;	// 312 = 0x138
    _Bool _compatibleWithAirPlayVideo;	// 313 = 0x139
    _Bool _preventingIdleSystemSleep;	// 314 = 0x13a
    _Bool _preventingIdleDisplaySleep;	// 315 = 0x13b
    _Bool _disablingAutomaticTermination;	// 316 = 0x13c
    _Bool _allowsPictureInPicturePlayback;	// 317 = 0x13d
    _Bool _pictureInPictureActive;	// 318 = 0x13e
    _Bool _canTogglePictureInPicture;	// 319 = 0x13f
    _Bool _hasBegunInspection;	// 320 = 0x140
    _Bool _playingOnMatchPointDevice;	// 321 = 0x141
    _Bool _coordinatedPlaybackActive;	// 322 = 0x142
    AVPlayer *_player;	// 328 = 0x148
    AVObservationController *_observationController;	// 336 = 0x150
    AVAsset *_currentAssetIfReady;	// 344 = 0x158
    NSObject<OS_dispatch_queue> *_assetInspectionQueue;	// 352 = 0x160
    AVAsset *_assetBeingPrepared;	// 360 = 0x168
    AVValueTiming *_timing;	// 368 = 0x170
    AVValueTiming *_minTiming;	// 376 = 0x178
    AVValueTiming *_maxTiming;	// 384 = 0x180
    AVAssetTrack *_currentAudioTrack;	// 392 = 0x188
    AVAssetTrack *_currentVideoTrack;	// 400 = 0x190
    double _seekToTime;	// 408 = 0x198
    NSDictionary *_metadata;	// 416 = 0x1a0
    NSArray *_availableMetadataFormats;	// 424 = 0x1a8
    double _rateBeforeScrubBegan;	// 432 = 0x1b0
    AVCoordinatedPlaybackSuspension *_scrubCoordinatorSuspension;	// 440 = 0x1b8
    NSString *_pipActivitySessionIdentifier;	// 448 = 0x1c0
    AVPlayerLayer *_playerLayerForReducingResources;	// 456 = 0x1c8
    long long _bestAvailableVideoResolution;	// 464 = 0x1d0
    long long _bestAvailableVideoRange;	// 472 = 0x1d8
    long long _bestAvailableAudioFormat;	// 480 = 0x1e0
    AVMediaSelectionOption *_currentVideoMediaSelectionOption;	// 488 = 0x1e8
    struct CGSize _presentationSize;	// 496 = 0x1f0
    CDStruct_1b6d18a9 _seekToTimeInternal;	// 512 = 0x200
}

+ (id)keyPathsForValuesAffectingPictureInPicturePossible;	// IMP=0x00000000000b8afe
+ (id)keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName;	// IMP=0x00000000000b8ad2
+ (id)keyPathsForValuesAffectingExternalPlaybackType;	// IMP=0x00000000000b8aa6
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;	// IMP=0x00000000000b8a86
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;	// IMP=0x00000000000b8a5a
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;	// IMP=0x00000000000b8a3a
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;	// IMP=0x00000000000b8a0e
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;	// IMP=0x00000000000b89e2
+ (id)keyPathsForValuesAffectingCanSeekToEnd;	// IMP=0x00000000000b89c2
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;	// IMP=0x00000000000b89a2
+ (id)keyPathsForValuesAffectingCanScanBackward;	// IMP=0x00000000000b896b
+ (id)keyPathsForValuesAffectingCanScanForward;	// IMP=0x00000000000b8934
+ (id)keyPathsForValuesAffectingCanSeek;	// IMP=0x00000000000b88e0
+ (id)keyPathsForValuesAffectingTimeControlStatus;	// IMP=0x00000000000b88c0
+ (id)keyPathsForValuesAffectingHasShareableContent;	// IMP=0x00000000000b8889
+ (id)keyPathsForValuesAffectingHasTrimmableContent;	// IMP=0x00000000000b885d
+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;	// IMP=0x00000000000b878e
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;	// IMP=0x00000000000b86ca
+ (id)keyPathsForValuesAffectingStreaming;	// IMP=0x00000000000b86aa
+ (id)keyPathsForValuesAffectingHasEnabledVideo;	// IMP=0x00000000000b868a
+ (id)keyPathsForValuesAffectingHasVideo;	// IMP=0x00000000000b866a
+ (id)keyPathsForValuesAffectingHasEnabledAudio;	// IMP=0x00000000000b864a
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;	// IMP=0x00000000000b8613
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;	// IMP=0x00000000000b85f3
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;	// IMP=0x00000000000b85c7
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;	// IMP=0x00000000000b859b
+ (id)keyPathsForValuesAffectingForwardPlaybackEndTime;	// IMP=0x00000000000b857b
+ (id)keyPathsForValuesAffectingMaxTime;	// IMP=0x00000000000b8533
+ (id)keyPathsForValuesAffectingReversePlaybackEndTime;	// IMP=0x00000000000b8513
+ (id)keyPathsForValuesAffectingMinTime;	// IMP=0x00000000000b84dc
+ (id)keyPathsForValuesAffectingCurrentTime;	// IMP=0x00000000000b84bc
+ (id)keyPathsForValuesAffectingContentDimensions;	// IMP=0x00000000000b840e
+ (id)keyPathsForValuesAffectingContentDuration;	// IMP=0x00000000000b83ee
+ (id)keyPathsForValuesAffectingHasContent;	// IMP=0x00000000000b83ce
+ (id)keyPathsForValuesAffectingMuted;	// IMP=0x00000000000b83ae
+ (id)keyPathsForValuesAffectingVolume;	// IMP=0x00000000000b838e
+ (id)keyPathsForValuesAffectingCanTogglePlayback;	// IMP=0x00000000000b8362
+ (id)keyPathsForValuesAffectingCanPause;	// IMP=0x00000000000b8342
+ (id)keyPathsForValuesAffectingPlaying;	// IMP=0x00000000000b8322
+ (id)keyPathsForValuesAffectingCanPlay;	// IMP=0x00000000000b82f6
+ (id)keyPathsForValuesAffectingRate;	// IMP=0x00000000000b82d6
+ (id)keyPathsForValuesAffectingCompletelySeekable;	// IMP=0x00000000000b82aa
+ (id)keyPathsForValuesAffectingError;	// IMP=0x00000000000b828a
+ (id)keyPathsForValuesAffectingReadyToPlay;	// IMP=0x00000000000b826a
+ (id)keyPathsForValuesAffectingStatus;	// IMP=0x00000000000b8233
+ (void)setCachedIsPictureInPictureSupported:(_Bool)arg1;	// IMP=0x00000000000b8227
+ (_Bool)cachedIsPictureInPictureSupported;	// IMP=0x00000000000b821b
+ (void)initialize;	// IMP=0x00000000000b81a1
+ (id)keyPathsForValuesAffectingMaximumVideoResolution;	// IMP=0x00000000000b8dd4
+ (id)keyPathsForValuesAffectingPreferredDisplayCriteria;	// IMP=0x00000000000b8db4
+ (id)keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive;	// IMP=0x00000000000b8d94
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;	// IMP=0x0000000000121c20
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;	// IMP=0x0000000000121c00
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;	// IMP=0x0000000000121bd4
+ (id)canonicalLanguageIdentifierFromString:(id)arg1;	// IMP=0x0000000000121a5d
- (void).cxx_destruct;	// IMP=0x00000000000b468d
@property(nonatomic) _Bool coordinatedPlaybackActive; // @synthesize coordinatedPlaybackActive=_coordinatedPlaybackActive;
@property(retain, nonatomic) AVMediaSelectionOption *currentVideoMediaSelectionOption; // @synthesize currentVideoMediaSelectionOption=_currentVideoMediaSelectionOption;
@property(readonly, nonatomic) NSArray *visualMediaSelectionOptions; // @synthesize visualMediaSelectionOptions=_visualMediaSelectionOptions;
@property(nonatomic) long long bestAvailableAudioFormat; // @synthesize bestAvailableAudioFormat=_bestAvailableAudioFormat;
@property(nonatomic) long long bestAvailableVideoRange; // @synthesize bestAvailableVideoRange=_bestAvailableVideoRange;
@property(nonatomic) long long bestAvailableVideoResolution; // @synthesize bestAvailableVideoResolution=_bestAvailableVideoResolution;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *seekTimer; // @synthesize seekTimer=_seekTimer;
@property(nonatomic) __weak AVPlayerLayer *playerLayerForReducingResources; // @synthesize playerLayerForReducingResources=_playerLayerForReducingResources;
@property(nonatomic, getter=isPlayingOnMatchPointDevice) _Bool playingOnMatchPointDevice; // @synthesize playingOnMatchPointDevice=_playingOnMatchPointDevice;
@property(nonatomic) _Bool hasBegunInspection; // @synthesize hasBegunInspection=_hasBegunInspection;
@property(copy, nonatomic) NSString *pipActivitySessionIdentifier; // @synthesize pipActivitySessionIdentifier=_pipActivitySessionIdentifier;
@property(nonatomic) _Bool canTogglePictureInPicture; // @synthesize canTogglePictureInPicture=_canTogglePictureInPicture;
@property(nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(nonatomic) _Bool allowsPictureInPicturePlayback; // @synthesize allowsPictureInPicturePlayback=_allowsPictureInPicturePlayback;
@property(nonatomic, getter=isDisablingAutomaticTermination) _Bool disablingAutomaticTermination; // @synthesize disablingAutomaticTermination=_disablingAutomaticTermination;
@property(nonatomic, getter=isPreventingIdleDisplaySleep) _Bool preventingIdleDisplaySleep; // @synthesize preventingIdleDisplaySleep=_preventingIdleDisplaySleep;
@property(nonatomic, getter=isPreventingIdleSystemSleep) _Bool preventingIdleSystemSleep; // @synthesize preventingIdleSystemSleep=_preventingIdleSystemSleep;
@property(retain, nonatomic) AVCoordinatedPlaybackSuspension *scrubCoordinatorSuspension; // @synthesize scrubCoordinatorSuspension=_scrubCoordinatorSuspension;
@property(nonatomic) double rateBeforeScrubBegan; // @synthesize rateBeforeScrubBegan=_rateBeforeScrubBegan;
@property(nonatomic, getter=isCompatibleWithAirPlayVideo) _Bool compatibleWithAirPlayVideo; // @synthesize compatibleWithAirPlayVideo=_compatibleWithAirPlayVideo;
@property(retain, nonatomic) NSArray *availableMetadataFormats; // @synthesize availableMetadataFormats=_availableMetadataFormats;
@property(nonatomic) _Bool hasProtectedContent; // @synthesize hasProtectedContent=_hasProtectedContent;
@property(nonatomic, getter=isComposable) _Bool composable; // @synthesize composable=_composable;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) double seekToTime; // @synthesize seekToTime=_seekToTime;
@property CDStruct_1b6d18a9 seekToTimeInternal; // @synthesize seekToTimeInternal=_seekToTimeInternal;
@property(nonatomic, getter=isSeeking) _Bool seeking; // @synthesize seeking=_seeking;
@property(getter=isSeekingInternal) _Bool seekingInternal; // @synthesize seekingInternal=_seekingInternal;
@property(retain, nonatomic) AVAssetTrack *currentVideoTrack; // @synthesize currentVideoTrack=_currentVideoTrack;
@property(retain, nonatomic) AVAssetTrack *currentAudioTrack; // @synthesize currentAudioTrack=_currentAudioTrack;
@property(retain, nonatomic) AVValueTiming *maxTiming; // @synthesize maxTiming=_maxTiming;
@property(retain, nonatomic) AVValueTiming *minTiming; // @synthesize minTiming=_minTiming;
@property(retain, nonatomic) AVValueTiming *timing; // @synthesize timing=_timing;
@property(nonatomic, getter=isPictureInPictureSupported) _Bool pictureInPictureSupported; // @synthesize pictureInPictureSupported=_pictureInPictureSupported;
@property(retain, nonatomic) AVAsset *assetBeingPrepared; // @synthesize assetBeingPrepared=_assetBeingPrepared;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *assetInspectionQueue; // @synthesize assetInspectionQueue=_assetInspectionQueue;
@property(retain, nonatomic) AVAsset *currentAssetIfReady; // @synthesize currentAssetIfReady=_currentAssetIfReady;
@property(nonatomic) struct CGSize presentationSize; // @synthesize presentationSize=_presentationSize;
@property(readonly, nonatomic) AVObservationController *observationController; // @synthesize observationController=_observationController;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic, getter=isPlaybackSuspended) _Bool playbackSuspended; // @synthesize playbackSuspended=_playbackSuspended;
@property(nonatomic, getter=isAtMinTime) _Bool atMinTime; // @synthesize atMinTime=_atMinTime;
@property(nonatomic, getter=isAtMaxTime) _Bool atMaxTime; // @synthesize atMaxTime=_atMaxTime;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (void)_prepareAssetForInspectionIfNeeded;	// IMP=0x00000000000b3c75
- (id)scanningDelays;	// IMP=0x00000000000b3c1b
- (void)_updateRateForScrubbingAndSeeking;	// IMP=0x00000000000b3aa9
- (void)_cancelPendingSeeksIfNeeded;	// IMP=0x00000000000b3a5b
- (id)_timecodeTrack;	// IMP=0x00000000000b3906
- (void)setCanUseNetworkResourcesForLiveStreamingWhilePaused:(_Bool)arg1;	// IMP=0x00000000000b3897
- (_Bool)canUseNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000b3829
- (void)stopUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000b372c
- (void)startUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000b3638
- (_Bool)isReducingResourcesForPictureInPicture;	// IMP=0x00000000000b3605
@property(retain, nonatomic) BSSimpleAssertion *reduceResourceUsageAssertion;
- (void)acquireResourceReductionAssertion;	// IMP=0x00000000000b33e7
- (void)endReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000b32f6
- (void)beginReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000b304a
- (void)togglePictureInPicture:(id)arg1;	// IMP=0x00000000000b3044
- (void)setPictureInPictureInterrupted:(_Bool)arg1;	// IMP=0x00000000000b2ffc
- (_Bool)isPictureInPictureInterrupted;	// IMP=0x00000000000b2ff3
- (_Bool)isPictureInPicturePossible;	// IMP=0x00000000000b2f30
- (id)externalPlaybackAirPlayDeviceLocalizedName;	// IMP=0x00000000000b2bc1
- (long long)externalPlaybackType;	// IMP=0x00000000000b2b36
- (_Bool)isExternalPlaybackActive;	// IMP=0x00000000000b2af2
@property(nonatomic, getter=isPlayingOnSecondScreen) _Bool playingOnSecondScreen;
- (_Bool)isPlayingOnExternalScreen;	// IMP=0x00000000000b2aad
- (void)setAllowsExternalPlayback:(_Bool)arg1;	// IMP=0x00000000000b2a61
- (_Bool)allowsExternalPlayback;	// IMP=0x00000000000b2a1d
- (void)_updateMinMaxTimingIfNeeded;	// IMP=0x00000000000b29dc
- (void)updateMinMaxTiming;	// IMP=0x00000000000b2155
- (void)updateTiming;	// IMP=0x00000000000b1f1f
- (void)endScrubbing:(id)arg1;	// IMP=0x00000000000b1ee8
- (void)beginScrubbing:(id)arg1;	// IMP=0x00000000000b1eb1
- (void)skipBackwardThirtySeconds:(id)arg1;	// IMP=0x00000000000b1d8d
- (void)seekOrStepByFrameCount:(long long)arg1;	// IMP=0x00000000000b1679
- (void)seekFrameBackward:(id)arg1;	// IMP=0x00000000000b163b
- (_Bool)canSeekFrameBackward;	// IMP=0x00000000000b1602
- (void)seekFrameForward:(id)arg1;	// IMP=0x00000000000b15c6
- (_Bool)canSeekFrameForward;	// IMP=0x00000000000b158d
- (void)seekToEnd:(id)arg1;	// IMP=0x00000000000b156d
- (_Bool)canSeekToEnd;	// IMP=0x00000000000b155b
- (void)seekToBeginning:(id)arg1;	// IMP=0x00000000000b153b
- (_Bool)canSeekToBeginning;	// IMP=0x00000000000b1529
- (void)endScanningBackward:(id)arg1;	// IMP=0x00000000000b13ae
- (void)_updateScanningBackwardRate;	// IMP=0x00000000000b11c1
- (void)beginScanningBackward:(id)arg1;	// IMP=0x00000000000b100d
- (void)scanBackward:(id)arg1;	// IMP=0x00000000000b0f35
- (_Bool)canScanBackward;	// IMP=0x00000000000b0e9a
- (void)endScanningForward:(id)arg1;	// IMP=0x00000000000b0d1f
- (void)_updateScanningForwardRate;	// IMP=0x00000000000b0b40
- (void)beginScanningForward:(id)arg1;	// IMP=0x00000000000b098c
- (void)scanForward:(id)arg1;	// IMP=0x00000000000b08b9
- (_Bool)canScanForward;	// IMP=0x00000000000b081e
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000b06d0
- (void)seekByTimeInterval:(double)arg1;	// IMP=0x00000000000b06b8
- (void)actuallySeekToTime;	// IMP=0x00000000000b03d7
- (void)throttledSeekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000b000d
- (void)seekToCMTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000afffb
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000aff58
- (void)resumePlaybackCoordinatorIfSuspended;	// IMP=0x00000000000afdc4
- (void)suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary;	// IMP=0x00000000000afc7a
- (void)endScrubbing;	// IMP=0x00000000000afba9
- (void)beginScrubbing;	// IMP=0x00000000000afac9
- (void)seekToTime:(double)arg1;	// IMP=0x00000000000afab1
- (_Bool)canSeek;	// IMP=0x00000000000af8e3
- (long long)timeControlStatus;	// IMP=0x00000000000af89f
- (id)currentEnabledAssetTrackForMediaType:(id)arg1;	// IMP=0x00000000000af501
- (void)_updatePlayingOnMatchPointDeviceIfNeeded;	// IMP=0x00000000000af32a
- (void)_updateCurrentVideoTrackIfNeeded;	// IMP=0x00000000000af2b1
- (void)_updateCurrentAudioTrackIfNeeded;	// IMP=0x00000000000af238
- (void)_updateCoordinatedPlaybackActive;	// IMP=0x00000000000af199
- (_Bool)_assetContainsProResRaw:(id)arg1;	// IMP=0x00000000000aef09
- (_Bool)_assetIsMarkedNotSerializable:(id)arg1;	// IMP=0x00000000000aecad
- (id)audioWaveform;	// IMP=0x00000000000aeca5
- (_Bool)_assetIsRestrictedFromSaving:(id)arg1;	// IMP=0x00000000000aebc7
- (_Bool)hasShareableContent;	// IMP=0x00000000000aeab8
- (_Bool)hasTrimmableContent;	// IMP=0x00000000000ae9e2
- (_Bool)hasSeekableLiveStreamingContent;	// IMP=0x00000000000ae733
- (_Bool)hasLiveStreamingContent;	// IMP=0x00000000000ae5cc
- (_Bool)isStreaming;	// IMP=0x00000000000ae557
- (_Bool)hasContentChapters;	// IMP=0x00000000000ae54f
- (_Bool)hasEnabledVideo;	// IMP=0x00000000000ae4e1
- (_Bool)hasVideo;	// IMP=0x00000000000ae473
- (_Bool)hasEnabledAudio;	// IMP=0x00000000000ae405
- (id)loadedTimeRanges;	// IMP=0x00000000000ae05c
- (id)seekableTimeRanges;	// IMP=0x00000000000adfe2
- (double)currentTimeWithinEndTimes;	// IMP=0x00000000000adf9b
@property(readonly, nonatomic) NSDate *currentOrEstimatedDate;
@property(readonly, nonatomic) NSDate *currentDate;
- (double)contentDurationWithinEndTimes;	// IMP=0x00000000000addf6
- (void)_setMinTiming:(id)arg1 maxTiming:(id)arg2;	// IMP=0x00000000000add95
- (void)setForwardPlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000add17
- (CDStruct_1b6d18a9)forwardPlaybackEndTime;	// IMP=0x00000000000adc8a
- (void)setMaxTime:(double)arg1;	// IMP=0x00000000000adad8
- (double)maxTime;	// IMP=0x00000000000ad97b
- (void)setReversePlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000ad8fd
- (CDStruct_1b6d18a9)reversePlaybackEndTime;	// IMP=0x00000000000ad870
- (void)setMinTime:(double)arg1;	// IMP=0x00000000000ad789
- (double)minTime;	// IMP=0x00000000000ad664
- (double)currentTime;	// IMP=0x00000000000ad553
- (struct CGSize)contentDimensions;	// IMP=0x00000000000ad515
- (float)nominalFrameRate;	// IMP=0x00000000000ad269
- (double)contentDuration;	// IMP=0x00000000000ad1c3
- (_Bool)hasContent;	// IMP=0x00000000000ad160
- (void)setInspectionSuspended:(_Bool)arg1;	// IMP=0x00000000000ad10e
- (_Bool)isInspectionSuspended;	// IMP=0x00000000000ad105
- (void)toggleMuted:(id)arg1;	// IMP=0x00000000000acff5
- (void)setMuted:(_Bool)arg1;	// IMP=0x00000000000acfa9
- (_Bool)isMuted;	// IMP=0x00000000000acf65
- (void)changeVolumeToMaximum:(id)arg1;	// IMP=0x00000000000acf4b
- (void)changeVolumeToMinimum:(id)arg1;	// IMP=0x00000000000acf36
- (void)decreaseVolume:(id)arg1;	// IMP=0x00000000000acef8
- (void)increaseVolume:(id)arg1;	// IMP=0x00000000000aceba
- (void)setVolume:(double)arg1;	// IMP=0x00000000000acdc8
- (double)volume;	// IMP=0x00000000000acd74
- (void)updateAtMinMaxTime;	// IMP=0x00000000000acce9
- (void)setLooping:(_Bool)arg1;	// IMP=0x00000000000acc26
- (_Bool)isLooping;	// IMP=0x00000000000acc1d
@property(nonatomic) _Bool touchBarRequiresLinearPlayback;
- (void)togglePlayback:(id)arg1;	// IMP=0x00000000000acafa
- (_Bool)canTogglePlayback;	// IMP=0x00000000000acac3
- (_Bool)canPause;	// IMP=0x00000000000acab1
- (void)autoplay:(id)arg1;	// IMP=0x00000000000ac8fb
- (void)play:(id)arg1;	// IMP=0x00000000000ac851
- (void)setPlaying:(_Bool)arg1;	// IMP=0x00000000000ac667
- (_Bool)isPlaying;	// IMP=0x00000000000ac643
- (_Bool)canPlay;	// IMP=0x00000000000ac60c
- (_Bool)canPlayImmediately;	// IMP=0x00000000000ac25a
- (void)_retryPlayImmediatelyIfNeeded;	// IMP=0x00000000000ac1c1
- (void)setDefaultPlaybackRate:(double)arg1;	// IMP=0x00000000000ac13a
- (double)defaultPlaybackRate;	// IMP=0x00000000000ac12c
- (void)setRate:(double)arg1;	// IMP=0x00000000000ac054
- (double)rate;	// IMP=0x00000000000ac000
- (void)_observeValueForKeyPath:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;	// IMP=0x00000000000aa6aa
- (_Bool)isCompletelySeekable;	// IMP=0x00000000000aa471
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isReadyToPlay) _Bool readyToPlay;
@property(readonly, nonatomic) long long status;
- (id)_queuePlayer;	// IMP=0x00000000000aa142
- (void)setObservationInfo:(void *)arg1;	// IMP=0x00000000000aa138
- (void *)observationInfo;	// IMP=0x00000000000aa12e
- (void)startKVO;	// IMP=0x00000000000a9a07
- (void)dealloc;	// IMP=0x00000000000a9857
- (void)startInspectionIfNeeded;	// IMP=0x00000000000a94c3
- (id)initWithPlayer:(id)arg1;	// IMP=0x00000000000a927b
- (id)init;	// IMP=0x00000000000a90f4
- (void)_nukeTVExtras;	// IMP=0x000000000003f4bf
- (id)tvExtras;	// IMP=0x000000000003f467
- (void)_updateNavigationMarkers;	// IMP=0x000000000003f334
- (void)_updatePrimaryNavigationMarkersGroup;	// IMP=0x000000000003f222
- (void)_setPrimaryNavigationMarkersGroup:(id)arg1;	// IMP=0x000000000003f1b0
@property(readonly, nonatomic) AVNavigationMarkersGroup *primaryNavigationMarkersGroup;
- (_Bool)isFirstFilteredNavigationGroupChapters;	// IMP=0x000000000003f0b1
- (_Bool)isFirstUnfilteredNavigationGroupChapters;	// IMP=0x000000000003f045
- (id)externalChapterNavigationMarkersGroup;	// IMP=0x000000000003ef98
@property(readonly, nonatomic) NSArray *externalNavigationMarkerGroups;
@property(readonly, nonatomic) AVNavigationMarkersGroup *embeddedChapterNavigationMarkersGroup;
- (void)_loadEmbeddedChapterNavigationMarkersGroupAsynchronously:(CDUnknownBlockType)arg1;	// IMP=0x000000000003eb5f
- (void)endPlaybackSuspension;	// IMP=0x000000000003eb10
- (void)beginPlaybackSuspension;	// IMP=0x000000000003ead5
- (_Bool)isCoordinatorSuspended;	// IMP=0x000000000003ea72
- (void)_resumePlaybackCoordinator;	// IMP=0x000000000003e8ff
- (void)_suspendPlaybackCoordinatorForReason:(id)arg1;	// IMP=0x000000000003e768
- (void)setLimitReadAheadIfAllowed:(_Bool)arg1;	// IMP=0x000000000003e6d3
- (void)togglePlaybackEvenWhenInBackground:(id)arg1;	// IMP=0x000000000003e549
- (void)requestNavigateToDate:(id)arg1 fromDate:(id)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000003e3ae
- (void)requestSeekToDate:(id)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x000000000003e10b
- (void)requestNavigateToTime:(double)arg1 fromTime:(double)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 seekCompletion:(CDUnknownBlockType)arg6;	// IMP=0x000000000003d910
- (void)requestSeekToTime:(double)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x000000000003d5c7
- (void)requestPauseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d5ad
- (void)requestPauseWithoutAffectingCoordinatedPlaybackWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d596
- (void)requestPauseForAllCoordinatedPlaybackParticipants:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003d3ce
- (void)requestPlayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d142
- (void)requestSeekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003ced1
- (void)requestSeekToTime:(double)arg1 seekReason:(long long)arg2 permissionHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000003cc2c
- (CDStruct_1b6d18a9)timeToSeekAfterUserNavigatedFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x000000000003ca93
- (void)seekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003c8d2
- (void)gotoEndOfSeekableRanges:(id)arg1;	// IMP=0x000000000003c77e
- (void)seekToTime:(double)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003c54b
- (void)_didRequestSeek;	// IMP=0x000000000003c4da
- (void)_willRequestSeek;	// IMP=0x000000000003c469
- (void)_didEndSeek;	// IMP=0x000000000003c3f8
- (void)_willBeginSeek;	// IMP=0x000000000003c387
- (_Bool)playerItem:(id)arg1 shouldSeekToTime:(CDStruct_1b6d18a9 *)arg2 toleranceBefore:(CDStruct_1b6d18a9 *)arg3 toleranceAfter:(CDStruct_1b6d18a9 *)arg4;	// IMP=0x000000000003c2aa
@property(readonly, nonatomic) _Bool isSeekingTV;
@property(readonly, nonatomic) long long currentSeekReason;
- (double)displayTimeFromTime:(double)arg1;	// IMP=0x000000000003c183
- (double)timeFromDisplayTime:(double)arg1;	// IMP=0x000000000003c129
@property(readonly, nonatomic) _Bool shouldContinuePlaybackInBackground;
@property(readonly, nonatomic) long long avkitMediaType;
- (void)loadAspectRatio:(CDUnknownBlockType)arg1;	// IMP=0x000000000003be51
- (double)bounceBackReturningDisplayTime;	// IMP=0x000000000003bdd0
@property(readonly, nonatomic) _Bool shouldBounceBackAfterScanForwardPastEndTime;
- (void)updateStartAndEndDates;	// IMP=0x000000000003b263
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) NSDate *exactEndDate;
@property(readonly, nonatomic) NSDate *exactStartDate;
@property(readonly, nonatomic) _Bool hasStartAndEndDates;
@property(retain, nonatomic) NSDate *programEndDate;
@property(retain, nonatomic) NSDate *programStartDate;
- (void)setEffectiveRateNonZero:(_Bool)arg1;	// IMP=0x000000000003ae5d
@property(readonly, nonatomic, getter=isEffectiveRateNonZero) _Bool effectiveRateNonZero;
@property(readonly, nonatomic) double currentDisplayTime;
- (double)playbackEndTime;	// IMP=0x000000000003ad9b
@property(readonly, nonatomic) double displayedDuration;
@property(readonly, nonatomic) double longestSeekableDurationSeenForCurrentItem;
@property(readonly, nonatomic, getter=isLiveStreamEventModePossible) _Bool liveStreamEventModePossible;
@property(readonly, nonatomic) _Bool isContentDurationIndefinite;
@property(readonly, nonatomic) double contentDurationCached;
@property(readonly, nonatomic) AVTimeRange *displayTimeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNonLivePlayback;
@property(readonly, nonatomic) AVTimeRange *timeRangeSeekable;
@property(readonly, nonatomic) AVPlayerItem *currentItem;
@property(readonly, nonatomic) _Bool hasMoreEnqueuedContent;
- (void)setActivePlaying:(_Bool)arg1;	// IMP=0x000000000003a358
- (_Bool)isActivePlaying;	// IMP=0x000000000003a313
@property(nonatomic) float activeRate;
- (float)_activeRate;	// IMP=0x000000000003a147
@property(readonly, nonatomic) AVPlayer *activePlayer;
- (_Bool)isPrimaryPlayerWaitingForInterstitial;	// IMP=0x000000000003a024
@property(readonly, nonatomic) AVQueuePlayer *queuePlayer;
- (_Bool)linearPlaybackRequiredByInterstitial:(id)arg1;	// IMP=0x0000000000039f1c
@property(readonly, nonatomic) AVInterstitialController *interstitialController;
@property(retain, nonatomic) AVDelegateManager *delegateManager;
- (id)kvoPlayerItem;	// IMP=0x0000000000039d8c
- (id)kvoPlayer;	// IMP=0x0000000000039d3c
- (void)_durationDidChange;	// IMP=0x0000000000039be8
- (void)updateTimeRanges;	// IMP=0x000000000003989b
- (void)invalidateTV;	// IMP=0x0000000000039748
- (id)initWithTVPlayer:(id)arg1;	// IMP=0x0000000000039328
- (void)setClientSpecifiedDate:(id)arg1;	// IMP=0x00000000000392b6
- (id)clientSpecifiedDate;	// IMP=0x0000000000039266
- (void)updateAudioFormats;	// IMP=0x0000000000069c96
- (void)updateVideoResolutionAndRange;	// IMP=0x0000000000069b25
- (void)_updateVideoResolutionAndRange;	// IMP=0x000000000006955c
- (id)_audioAssetTracks;	// IMP=0x00000000000692ca
- (id)_videoAssetTracks;	// IMP=0x0000000000069038
@property(readonly, nonatomic) struct CGSize maximumVideoResolution;
- (id)preferredDisplayCriteria;	// IMP=0x00000000000b8ca3
@property(readonly, nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;
@property(nonatomic) _Bool handlesAudioSessionInterruptions;
- (_Bool)_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup;	// IMP=0x0000000000120cb7
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1;	// IMP=0x0000000000120ba9
- (void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2;	// IMP=0x000000000012086e
- (void)_enableAutoMediaSelection:(id)arg1;	// IMP=0x0000000000120735
- (void)_disableLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x000000000012067f
- (void)_performAutomaticMediaSelectionForUserCaptionDisplayType:(long long)arg1;	// IMP=0x00000000001205b4
- (void)_ensureUserCaptionDisplayType:(long long)arg1;	// IMP=0x00000000001204e2
- (id)legibleOptions;	// IMP=0x000000000011f90c
- (id)audioOptions;	// IMP=0x000000000011f462
- (void)reloadLegibleOptions;	// IMP=0x000000000011f3d0
- (void)reloadAudioOptions;	// IMP=0x000000000011f33e
- (void)reloadOptionsAssumingMediaOptionsMayHaveChanged:(_Bool)arg1;	// IMP=0x000000000011f1df
- (void)reloadOptionsAndCurrentSelections;	// IMP=0x000000000011f1c8
- (void)reloadOptions;	// IMP=0x000000000011f1b4
- (void)selectedMediaOptionMayHaveChanged:(_Bool)arg1;	// IMP=0x000000000011eb3d
- (void)selectedMediaOptionMayHaveChanged;	// IMP=0x000000000011eb29
- (id)_optionsForGroup:(id)arg1;	// IMP=0x000000000011eb14
- (id)mediaSelectionGroupForMediaCharacteristic:(id)arg1;	// IMP=0x000000000011ea91
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;	// IMP=0x000000000011ea1c
- (id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;	// IMP=0x000000000011e9f0
- (id)currentLegibleMediaSelectionOption;	// IMP=0x000000000011e6e6
- (void)setLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x000000000011e611
- (id)legibleMediaSelectionOptions;	// IMP=0x000000000011e603
- (_Bool)hasLegibleMediaSelectionOptions;	// IMP=0x000000000011e5bb
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;	// IMP=0x000000000011e59f
- (id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;	// IMP=0x000000000011e57b
- (id)currentAudioMediaSelectionOption;	// IMP=0x000000000011e465
- (void)setAudioMediaSelectionOptions:(id)arg1;	// IMP=0x000000000011e390
- (id)audioMediaSelectionOptions;	// IMP=0x000000000011e374
- (void)setLegibleMediaSelectionOptions:(id)arg1 audioMediaSelectionOptions:(id)arg2 assumeMediaOptionMayHaveChanged:(_Bool)arg3;	// IMP=0x000000000011e2a3
- (_Bool)hasAudioMediaSelectionOptions;	// IMP=0x000000000011e25a
- (_Bool)hasMediaSelectionOptions;	// IMP=0x000000000011e221

@end

