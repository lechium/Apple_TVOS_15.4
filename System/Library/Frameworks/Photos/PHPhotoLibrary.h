//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Photos/CPLStatusDelegate-Protocol.h>
#import <Photos/PHBatchFetchingArrayDataSource-Protocol.h>
#import <Photos/PHPerformChangesRequest-Protocol.h>

@class CPLStatus, NSError, NSHashTable, NSManagedObjectID, NSMutableDictionary, NSProgress, NSString, NSURL, PAImageConversionServiceClient, PAVideoConversionServiceClient, PHPerformChangesRequest, PHPersistentChangeToken, PHPhotoLibraryAppPrivateData, PLAssetsdClient, PLCacheMetricsCollectorClient, PLFileSystemVolume, PLLazyObject, PLPhotoAnalysisServiceClient, PLPhotoKitVariationCache, PLPhotoLibrary, PLPhotoLibraryBundle;
@protocol OS_dispatch_queue, PLPhotoAnalysisServiceTaxonomyResolver;

@interface PHPhotoLibrary : NSObject <PHBatchFetchingArrayDataSource, CPLStatusDelegate, PHPerformChangesRequest>
{
    PLLazyObject *_lazyPhotoLibrary;	// 8 = 0x8
    PLLazyObject *_lazyMainQueueConcurrencyPhotoLibrary;	// 16 = 0x10
    PLLazyObject *_lazyMainQueuePhotoLibrary;	// 24 = 0x18
    PLLazyObject *_lazyBackgroundQueuePhotoLibrary;	// 32 = 0x20
    PLLazyObject *_lazyUserInitiatedQueuePhotoLibrary;	// 40 = 0x28
    PLLazyObject *_lazyBackgroundQueueObjectFetchingPhotoLibrary;	// 48 = 0x30
    PLLazyObject *_lazyChangeHandlingPhotoLibrary;	// 56 = 0x38
    PLLazyObject *_lazyAlbumRootFolderObjectID;	// 64 = 0x40
    PLLazyObject *_lazyProjectAlbumRootFolderObjectID;	// 72 = 0x48
    PLLazyObject *_lazyAppPrivateData;	// 80 = 0x50
    PLLazyObject *_lazyCacheMetricsCollectorClient;	// 88 = 0x58
    PLLazyObject *_lazyCPLStatus;	// 96 = 0x60
    PLLazyObject *_lazyIsReadyForAnalysis;	// 104 = 0x68
    PLFileSystemVolume *_libraryFileSystemVolume;	// 112 = 0x70
    _Atomic _Bool _isCompletedPostOpenInitialization;	// 120 = 0x78
    long long _wellKnownPhotoLibraryIdentifier;	// 128 = 0x80
    _Bool _postsPersistentHistoryChangedNotifications;	// 136 = 0x88
    _Bool _isChangeHandlingActive;	// 137 = 0x89
    _Bool _isChangeHandlingAuthorized;	// 138 = 0x8a
    _Bool _unknownMergeEvent;	// 139 = 0x8b
    _Bool _isChangeProcessingPending;	// 140 = 0x8c
    _Bool _clearsOIDCacheAfterFetchResultDealloc;	// 141 = 0x8d
    unsigned short _type;	// 142 = 0x8e
    NSError *_unavailabilityReason;	// 144 = 0x90
    NSObject<OS_dispatch_queue> *_isolationQueue;	// 152 = 0x98
    PLPhotoLibrary *_transactionPhotoLibrary;	// 160 = 0xa0
    NSObject<OS_dispatch_queue> *_transactionQueue;	// 168 = 0xa8
    PHPerformChangesRequest *_performChangesRequest;	// 176 = 0xb0
    NSHashTable *_fetchResultsRegisteredForChangeNotifications;	// 184 = 0xb8
    NSHashTable *_internalChangeObservers;	// 192 = 0xc0
    NSHashTable *_externalChangeObservers;	// 200 = 0xc8
    NSMutableDictionary *_changeNotificationInfo;	// 208 = 0xd0
    double _lastChangeProcessingStarted;	// 216 = 0xd8
    NSHashTable *_availabilityObservers;	// 224 = 0xe0
    NSURL *_photoLibraryURL;	// 232 = 0xe8
    PLPhotoLibraryBundle *_photoLibraryBundle;	// 240 = 0xf0
    NSProgress *_postOpenProgress;	// 248 = 0xf8
    PAImageConversionServiceClient *_imageConversionServiceClient;	// 256 = 0x100
    PAVideoConversionServiceClient *_videoConversionServiceClient;	// 264 = 0x108
}

+ (id)sharedContactStore;	// IMP=0x00000000000dfa8a
+ (_Bool)_isInternalObserver:(id)arg1;	// IMP=0x00000000000dfa3f
+ (void)removeAllUniquedOIDs;	// IMP=0x00000000000dfa1c
+ (id)uniquedOIDsFromObjects:(id)arg1;	// IMP=0x00000000000df9ab
+ (id)uniquedOIDs:(id)arg1;	// IMP=0x00000000000df82d
+ (id)uniquedOID:(id)arg1;	// IMP=0x00000000000df796
+ (id)uniqueObjectIDCache;	// IMP=0x00000000000df772
+ (id)_effectiveRootEntity:(id)arg1;	// IMP=0x00000000000df60d
+ (Class)PHObjectClassForOID:(id)arg1;	// IMP=0x00000000000df587
+ (id)PHObjectClasses;	// IMP=0x00000000000df524
+ (Class)PHObjectClassForEntityName:(id)arg1;	// IMP=0x00000000000df4a1
+ (id)PHObjectClassesByEntityName;	// IMP=0x00000000000df471
+ (Class)classForFetchType:(id)arg1;	// IMP=0x00000000000df464
+ (id)fetchTypeForLocalIdentifierCode:(id)arg1;	// IMP=0x00000000000df3f8
+ (long long)collectionListTypeForIdentifierCode:(id)arg1;	// IMP=0x00000000000df379
+ (id)photoLibraryForCurrentTransaction;	// IMP=0x00000000000df368
+ (id)stringFromPHPhotoLibraryType:(unsigned short)arg1;	// IMP=0x00000000000df310
+ (void)assertTransaction;	// IMP=0x00000000000df26b
+ (id)sharedLazyPhotoLibraryForCMM;	// IMP=0x00000000000df215
+ (_Bool)isSystemPhotoLibraryURL:(id)arg1;	// IMP=0x00000000000df1fc
+ (const char *)systemPhotoLibraryAvailableNotificationName;	// IMP=0x00000000000df1ec
+ (const char *)systemPhotoLibraryURLChangeNotificationName;	// IMP=0x00000000000df1dc
+ (_Bool)setSystemPhotoLibraryURL:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000df150
+ (_Bool)createOrUpgradePhotoLibraryWithWellKnownIdentifier:(long long)arg1 error:(id *)arg2;	// IMP=0x00000000000df0bd
+ (id)openPhotoLibraryWithWellKnownIdentifier:(long long)arg1 error:(id *)arg2;	// IMP=0x00000000000defd0
+ (id)wellKnownPhotoLibraryURLForIdentifier:(long long)arg1;	// IMP=0x00000000000defb7
+ (id)systemPhotoLibraryURL;	// IMP=0x00000000000def9e
+ (_Bool)isMultiLibraryModeEnabled;	// IMP=0x00000000000def85
+ (void)enableMultiLibraryMode;	// IMP=0x00000000000def6c
+ (void)_forceUserInterfaceReload;	// IMP=0x00000000000def28
+ (void)_requestAuthorizationForAccessLevel:(long long)arg1 supportsLimited:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000dee1b
+ (void)requestAuthorizationForAccessLevel:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000dee01
+ (void)requestAuthorization:(CDUnknownBlockType)arg1;	// IMP=0x00000000000dede5
+ (long long)authorizationStatusForAccessLevel:(long long)arg1;	// IMP=0x00000000000dedbd
+ (long long)_photosAccessAllowedForAccessLevel:(long long)arg1;	// IMP=0x00000000000ded56
+ (_Bool)_checkAuthorizationStatusForAPIAccessLevel:(long long)arg1 suppressPrompt:(_Bool)arg2;	// IMP=0x00000000000dece0
+ (_Bool)checkAuthorizationStatusForAPIAccessLevel:(long long)arg1;	// IMP=0x00000000000deccc
+ (long long)authorizationStatus;	// IMP=0x00000000000dec38
+ (id)sharedMomentSharePhotoLibrary;	// IMP=0x00000000000debc3
+ (_Bool)setImagePickerPhotoLibrary:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000deaa2
+ (id)imagePickerPhotoLibrary;	// IMP=0x00000000000de9cc
+ (id)_sharedPhotoLibrary;	// IMP=0x00000000000de957
+ (id)sharedPhotoLibrary;	// IMP=0x00000000000de922
+ (void)initialize;	// IMP=0x00000000000de91c
+ (void)setNeedsToRepairKeyCuratedAssetForMemories:(id)arg1;	// IMP=0x00000000000e0c0f
+ (void)setSharedPhotoLibrary:(id)arg1;	// IMP=0x00000000000e11e5
+ (_Bool)hasSharedPhotoLibrary;	// IMP=0x00000000000e11c7
+ (void)assertRunningInExtension;	// IMP=0x00000000000e10fd
+ (double)nextOverrideTimeIntervalForSystemBudgets:(unsigned long long)arg1;	// IMP=0x00000000000e136d
+ (_Bool)shouldDisplayMergeCandidates:(id)arg1 forPerson:(id)arg2;	// IMP=0x00000000001b0092
+ (id)predicateForAssetsAnalyzedForFacesWithAssetObjectIDs:(id)arg1;	// IMP=0x00000000001aff07
+ (unsigned long long)_countOfAssetsAllowedForProcessingInLibrary:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001afdbb
- (void).cxx_destruct;	// IMP=0x00000000000da9a1
@property(retain, nonatomic) PAVideoConversionServiceClient *videoConversionServiceClient; // @synthesize videoConversionServiceClient=_videoConversionServiceClient;
@property(retain, nonatomic) PAImageConversionServiceClient *imageConversionServiceClient; // @synthesize imageConversionServiceClient=_imageConversionServiceClient;
@property(nonatomic) _Bool clearsOIDCacheAfterFetchResultDealloc; // @synthesize clearsOIDCacheAfterFetchResultDealloc=_clearsOIDCacheAfterFetchResultDealloc;
@property(readonly, nonatomic) NSProgress *postOpenProgress; // @synthesize postOpenProgress=_postOpenProgress;
@property(readonly) PLPhotoLibraryBundle *photoLibraryBundle; // @synthesize photoLibraryBundle=_photoLibraryBundle;
@property(readonly, nonatomic) NSURL *photoLibraryURL; // @synthesize photoLibraryURL=_photoLibraryURL;
@property(retain, nonatomic) NSHashTable *availabilityObservers; // @synthesize availabilityObservers=_availabilityObservers;
@property(nonatomic) double lastChangeProcessingStarted; // @synthesize lastChangeProcessingStarted=_lastChangeProcessingStarted;
@property(nonatomic) _Bool isChangeProcessingPending; // @synthesize isChangeProcessingPending=_isChangeProcessingPending;
@property(nonatomic) _Bool unknownMergeEvent; // @synthesize unknownMergeEvent=_unknownMergeEvent;
@property(retain, nonatomic) NSMutableDictionary *changeNotificationInfo; // @synthesize changeNotificationInfo=_changeNotificationInfo;
@property(nonatomic) _Bool isChangeHandlingAuthorized; // @synthesize isChangeHandlingAuthorized=_isChangeHandlingAuthorized;
@property(nonatomic) _Bool isChangeHandlingActive; // @synthesize isChangeHandlingActive=_isChangeHandlingActive;
@property(retain, nonatomic) NSHashTable *externalChangeObservers; // @synthesize externalChangeObservers=_externalChangeObservers;
@property(retain, nonatomic) NSHashTable *internalChangeObservers; // @synthesize internalChangeObservers=_internalChangeObservers;
@property(retain, nonatomic) NSHashTable *fetchResultsRegisteredForChangeNotifications; // @synthesize fetchResultsRegisteredForChangeNotifications=_fetchResultsRegisteredForChangeNotifications;
@property(retain, nonatomic) PHPerformChangesRequest *performChangesRequest; // @synthesize performChangesRequest=_performChangesRequest;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *transactionQueue; // @synthesize transactionQueue=_transactionQueue;
@property(readonly) PLPhotoLibrary *transactionPhotoLibrary; // @synthesize transactionPhotoLibrary=_transactionPhotoLibrary;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *isolationQueue; // @synthesize isolationQueue=_isolationQueue;
@property(retain) NSError *unavailabilityReason; // @synthesize unavailabilityReason=_unavailabilityReason;
@property(readonly, nonatomic) unsigned short type; // @synthesize type=_type;
- (void)legacySaveScreenshotToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void *)arg4;	// IMP=0x00000000000da657
- (void)legacySaveImageToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void *)arg4;	// IMP=0x00000000000da55d
- (void)legacySaveVideoToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void *)arg4;	// IMP=0x00000000000da39f
- (void)legacySaveImageDataToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void *)arg4;	// IMP=0x00000000000da2a5
- (void)_callLegacyCompletionTarget:(id)arg1 completionSelector:(SEL)arg2 contextInfo:(void *)arg3 withSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x00000000000da1b8
- (void)resetLimitedLibraryAccessForApplication:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000da045
- (void)countOfReferencedMediaWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d9fd3
@property(readonly, nonatomic) _Bool isReadyForAnalysis;
- (void)_notifyPersistentChangeObservers;	// IMP=0x00000000000d9e41
@property(readonly, nonatomic) PHPersistentChangeToken *currentToken;
- (id)_fetchPersistentChangesSinceToken:(id)arg1 maximumChangeThreshold:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000d9d05
- (id)fetchPersistentChangesWithRequest:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000d9c62
- (id)fetchPersistentChangesSinceToken:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000d9c4b
- (void)_processPendingChanges;	// IMP=0x00000000000d94ee
- (void)handleMergeNotification:(id)arg1;	// IMP=0x00000000000d8eaf
@property(readonly, nonatomic) NSManagedObjectID *projectAlbumRootFolderObjectID;
@property(readonly, nonatomic) NSManagedObjectID *albumRootFolderObjectID;
- (id)librarySpecificFetchOptions;	// IMP=0x00000000000d8e4b
- (id)allowedEntities;	// IMP=0x00000000000d8de7
- (id)fetchUpdatedObject:(id)arg1;	// IMP=0x00000000000d8d07
- (id)fetchPHObjectsForUUIDs:(id)arg1 entityName:(id)arg2;	// IMP=0x00000000000d8b93
- (id)fetchedObjectsForOIDs:(id)arg1 propertySetClass:(Class)arg2;	// IMP=0x00000000000d82dd
- (id)fetchPHObjectsForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 includeTrash:(_Bool)arg3 overrideResultsWithClass:(Class)arg4;	// IMP=0x00000000000d7f6b
- (id)fetchDictionariesByPHClassForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 includeTrash:(_Bool)arg3 overrideWithPHClass:(Class)arg4;	// IMP=0x00000000000d7b3e
- (id)fetchPHObjectsForOIDs:(id)arg1;	// IMP=0x00000000000d7b1e
- (id)queryForType:(id)arg1 withIdentifiers:(id)arg2 local:(_Bool)arg3;	// IMP=0x00000000000d785c
- (id)urlForApplicationDataFolderIdentifier:(long long)arg1;	// IMP=0x00000000000d75f5
- (void)setChangeRequest:(id)arg1 forUUID:(id)arg2;	// IMP=0x00000000000d743f
- (id)changeRequestForUUID:(id)arg1;	// IMP=0x00000000000d736e
- (void)recordDeleteRequest:(id)arg1;	// IMP=0x00000000000d728b
- (void)recordUpdateRequest:(id)arg1;	// IMP=0x00000000000d71a8
- (void)recordInsertRequest:(id)arg1;	// IMP=0x00000000000d70c5
@property(readonly, copy) NSString *debugDescription;
- (void)assertTransaction;	// IMP=0x00000000000d6e12
- (_Bool)performChangesAndWait:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x00000000000d6d44
- (void)performChanges:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000d6c71
- (_Bool)performCancellableChangesAndWait:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x00000000000d6bf7
- (void)performCancellableChanges:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000d6b71
- (_Bool)_preflightRequest:(id)arg1 withError:(id *)arg2;	// IMP=0x00000000000d678c
- (id)_errorForAuthorizationStatus:(long long)arg1 accessLevel:(long long)arg2;	// IMP=0x00000000000d6694
- (void)_denyTransactionOnExecutionContext:(id)arg1 withInstrumentation:(id)arg2 authorizationStatus:(long long)arg3 accessLevel:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000d616f
- (void)_cancelTransactionOnExecutionContext:(id)arg1 withInstrumentation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000d5d30
- (void)_endTransaction;	// IMP=0x00000000000d5c85
- (void)_sendChangesRequest:(id)arg1 onExecutionContext:(id)arg2 withInstrumentation:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000000000d5adb
- (void)_sendChangesRequest:(id)arg1 onExecutionContext:(id)arg2 withInstrumentation:(id)arg3 remainingRetryCount:(long long)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00000000000d59b6
- (long long)_initialRetryCountForChangesRequest:(id)arg1;	// IMP=0x00000000000d5977
- (id)_popChangesRequest;	// IMP=0x00000000000d5925
- (void)_commitTransactionOnExecutionContext:(id)arg1 withInstrumentation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000d53b7
- (void)_beginTransaction;	// IMP=0x00000000000d530b
@property _Bool postsPersistentHistoryChangedNotifications;
- (_Bool)_hasChangeObservers;	// IMP=0x00000000000d51aa
- (void)_pauseChangeHandlingIfNeeded;	// IMP=0x00000000000d503a
- (void)_resumeChangeHandlingIfNeeded;	// IMP=0x00000000000d4e82
- (void)_removeObserver:(id)arg1;	// IMP=0x00000000000d4df2
- (void)_addObservers:(id)arg1 authorizationStatus:(long long)arg2;	// IMP=0x00000000000d4d56
- (void)unregisterChangeObserver:(id)arg1;	// IMP=0x00000000000d4d3d
- (void)registerChangeObserver:(id)arg1;	// IMP=0x00000000000d4b9d
- (void)appPrivateDataWriteFailedWithError:(id)arg1;	// IMP=0x00000000000d4b28
- (void)_onQueueNotifyAvailabilityObserversWithReason:(id)arg1;	// IMP=0x00000000000d481c
- (void)_notifyAvailabilityObserversWithReason:(id)arg1;	// IMP=0x00000000000d4647
- (_Bool)_setUnavailabilityReason:(id)arg1;	// IMP=0x00000000000d4481
- (void)_handleServiceConnectionClosed:(id)arg1;	// IMP=0x00000000000d436c
- (void)_stopObservingServiceConnectionInvalidated;	// IMP=0x00000000000d430c
- (void)_startObservingServiceConnectionInvalidated;	// IMP=0x00000000000d42a5
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000000000d4130
- (void)_stopWatchingFileSystemVolumeForLibraryAvailability;	// IMP=0x00000000000d3ef6
- (void)_startWatchingFileSystemVolumeForLibraryAvailability;	// IMP=0x00000000000d3cb0
- (void)_stopWatchingForLibraryAvailability;	// IMP=0x00000000000d3c82
- (void)_handleLibraryBecameUnavailable:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000d3abd
- (void)_startWatchingForLibraryAvailability;	// IMP=0x00000000000d39ae
- (void)unregisterAvailabilityObserver:(id)arg1;	// IMP=0x00000000000d391e
- (void)registerAvailabilityObserver:(id)arg1;	// IMP=0x00000000000d388e
- (void)unregisterFetchResult:(id)arg1;	// IMP=0x00000000000d37ee
- (void)registerFetchResult:(id)arg1;	// IMP=0x00000000000d375b
@property(readonly) PLPhotoLibrary *changeHandlingPhotoLibrary;
- (id)objectFetchingManagedObjectContextForObject:(id)arg1 propertySet:(id)arg2;	// IMP=0x00000000000d36fc
- (id)objectFetchingContextForCurrentQueueQoS;	// IMP=0x00000000000d3668
- (id)photoLibraryForCurrentQueueQoS;	// IMP=0x00000000000d35e5
@property(readonly) PLPhotoLibrary *backgroundQueueObjectFetchingPhotoLibrary;
@property(readonly) PLPhotoLibrary *userInitiatedQueuePhotoLibrary;
@property(readonly) PLPhotoLibrary *backgroundQueuePhotoLibrary;
- (id)mainQueueManagedObjectContext;	// IMP=0x00000000000d34aa
@property(readonly) PLPhotoLibrary *mainQueuePhotoLibrary;
@property(readonly, nonatomic) PLPhotoLibrary *mainQueueConcurrencyPhotoLibrary;
@property(readonly, nonatomic) PLPhotoAnalysisServiceClient *photoAnalysisClient;
@property(readonly, nonatomic) PLAssetsdClient *assetsdClient;
- (id)managedObjectContext;	// IMP=0x00000000000d33c1
@property(readonly) PLPhotoLibrary *photoLibrary;
- (id)_lazyPhotoLibrary;	// IMP=0x00000000000d3266
- (id)pl_photoLibraryForCMM;	// IMP=0x00000000000d3154
@property(readonly) PLPhotoKitVariationCache *variationCache;
- (id)pathManager;	// IMP=0x00000000000d3122
- (id)libraryID;	// IMP=0x00000000000d30d4
- (void)accountDidChange:(id)arg1;	// IMP=0x00000000000d3008
- (id)_initializeIsReadyForAnalysis;	// IMP=0x00000000000d2f6b
- (void)statusDidChange:(id)arg1;	// IMP=0x00000000000d2f65
- (id)_initializeCPLStatus;	// IMP=0x00000000000d2e13
- (void)dealloc;	// IMP=0x00000000000d2ce1
- (void)_invalidateEverythingWithReason:(id)arg1;	// IMP=0x00000000000d2b07
- (id)initWithPhotoLibraryBundle:(id)arg1 type:(unsigned short)arg2;	// IMP=0x00000000000d1da7
- (id)initWithPhotoLibraryURL:(id)arg1 type:(unsigned short)arg2;	// IMP=0x00000000000d1cfd
- (id)initWithPLPhotoLibrary:(id)arg1 type:(unsigned short)arg2;	// IMP=0x00000000000d1c30
- (id)initWithPLPhotoLibrary:(id)arg1;	// IMP=0x00000000000d1c1c
- (_Bool)isPHPhotoLibraryForCMM;	// IMP=0x00000000000d1c02
- (void)closeWithReason:(id)arg1;	// IMP=0x00000000000d1bf0
- (void)close;	// IMP=0x00000000000d1b8e
- (void)resetFaceAnalysisWithResetLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000d1a61
- (id)upgradePhotoLibraryUsingOptions:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000d15a3
- (_Bool)openAndWaitWithUpgrade:(_Bool)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000d0c43
- (_Bool)openAndWaitWithUpgrade:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000d0c2c
- (id)plLibraryOptionsFromPHOptions:(id)arg1 createOptions:(unsigned long long *)arg2;	// IMP=0x00000000000d09ef
- (_Bool)shouldMobileSlideShowLaunchWithError:(id *)arg1;	// IMP=0x00000000000d0681
- (_Bool)createOrUpgradeLibraryUsingOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000d03f9
- (_Bool)createPhotoLibraryUsingOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000cff6e
- (_Bool)createPhotoLibraryWithOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000cfe92
- (_Bool)createPhotoLibraryWithError:(id *)arg1;	// IMP=0x00000000000cfe7b
- (_Bool)_postOpenInitializationWithError:(id *)arg1;	// IMP=0x00000000000cfcd7
- (id)_initializeAppPrivateData;	// IMP=0x00000000000cfbc3
@property(readonly, nonatomic) PLCacheMetricsCollectorClient *cacheMetricsCollector;
@property(readonly, nonatomic) PHPhotoLibraryAppPrivateData *appPrivateData;
@property(readonly, nonatomic) CPLStatus *cplStatus;
@property(readonly, nonatomic) _Bool isReadOnlyCloudPhotoLibrary;
@property(readonly, nonatomic, getter=isCloudPhotoLibraryEnabled) _Bool cloudPhotoLibraryEnabled;
@property(readonly, nonatomic) _Bool isCloudPhotoLibrary;
@property(readonly, nonatomic) _Bool isSystemPhotoLibrary;
@property(readonly, nonatomic) long long wellKnownPhotoLibraryIdentifier;
- (id)initWithPhotoLibraryURL:(id)arg1;	// IMP=0x00000000000cf9d8
- (id)initMomentShareLibrary;	// IMP=0x00000000000cf979
- (id)initSharedLibrary;	// IMP=0x00000000000cf91d
- (id)init;	// IMP=0x00000000000cf8d9
- (int)requestProcessingTypes:(unsigned long long)arg1 forAssetsWithLocalIdentifiers:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000023fdd
- (id)sharingSuggestionWithRandomPick:(_Bool)arg1 fallbackToRecentMoments:(_Bool)arg2 needsNotification:(_Bool)arg3;	// IMP=0x00000000000691df
- (id)pl_syncProgressAlbums;	// IMP=0x0000000000073ca1
@property(retain, nonatomic) id <PLPhotoAnalysisServiceTaxonomyResolver> taxonomyResolver;
- (id)sceneTaxonomyDetectorNodeSceneIDsFromSceneID:(unsigned int)arg1 sceneTaxonomy:(id)arg2;	// IMP=0x00000000000e09f8
- (void)setWidgetTimelineGeneratedForDisplaySize:(struct CGSize)arg1;	// IMP=0x00000000000e087d
- (id)migrationDate;	// IMP=0x00000000000e0a54
- (id)managedObjectContextForCurrentQueueQoS;	// IMP=0x00000000000e0a00
- (id)cloudIdentifiersForLocalIdentifiers:(id)arg1;	// IMP=0x000000000013b851
- (id)localIdentifiersForCloudIdentifiers:(id)arg1;	// IMP=0x000000000013b5bd
- (id)cloudIdentifierMappingsForLocalIdentifiers:(id)arg1;	// IMP=0x000000000013b2e9
- (id)localIdentifierMappingsForCloudIdentifiers:(id)arg1;	// IMP=0x000000000013aed6
- (id)_fingerPrintsForAssetUUIDs:(id)arg1;	// IMP=0x000000000013acff
- (id)_computeFingerprintsForAssetsWithObjectIDsByUUID:(id)arg1;	// IMP=0x000000000013ab6a
- (id)_getAssetLocalIdentifiersByFingerPrintForFingerPrints:(id)arg1;	// IMP=0x000000000013aa3e
- (id)lookupCloudIdentifiersForLocalIdentifiers:(id)arg1;	// IMP=0x000000000013a6ed
- (id)lookupLocalIdentifiersForCloudIdentifiers:(id)arg1;	// IMP=0x000000000013a302
- (id)_getCloudClient;	// IMP=0x000000000013a288
- (id)_getPhotoKitClient;	// IMP=0x000000000013a20e
- (id)_cloudIdentifierKeysByFetchType;	// IMP=0x000000000013a201
- (id)bfa_photoLibrary;	// IMP=0x00000000001a4d0d
- (id)bfa_tombstoneObjectForOID:(id)arg1 uuid:(id)arg2 propertyHint:(unsigned long long)arg3 overrideResultsWithClass:(Class)arg4;	// IMP=0x00000000001a4b97
- (id)bfa_fetchObjectsForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 overrideResultsWithClass:(Class)arg3;	// IMP=0x00000000001a4b7c
- (id)bfa_fetchedObjectsForOIDs:(id)arg1 propertySetClass:(Class)arg2;	// IMP=0x00000000001a4b6a
- (id)newUnclusteredFacesFetchOptions;	// IMP=0x00000000001ad048
- (id)newFaceCropsToBeGeneratedFetchOptions;	// IMP=0x00000000001acff9
- (id)newClusteringEligibleFacesFetchOptions;	// IMP=0x00000000001acf50
- (unsigned long long)countOfUnclusteredFaces;	// IMP=0x00000000001acd6f
- (unsigned long long)countOfClusteringEligibleFaces;	// IMP=0x00000000001acb8e
- (unsigned long long)countOfDirtyFaceGroups;	// IMP=0x00000000001ac9d0
- (unsigned long long)countOfFaceCropsToBeGenerated;	// IMP=0x00000000001ac7ef
- (unsigned long long)countOfUnprocessedFaceCrops;	// IMP=0x00000000001ac67b
- (id)faceClusterSequenceNumbersOfFacesWithClusterSequenceNumbers:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ac40d
- (_Bool)isFaceProcessingFinished;	// IMP=0x00000000001ac2ac
- (id)faceClusterSequenceNumbersOfKeyFacesInAlgorithmicFaceGroupsForPerson:(id)arg1 verifiedClusterSequenceNumbers:(id)arg2;	// IMP=0x00000000001ac0c3
- (id)suggestionsForPersonLocalIdentifier:(id)arg1 clusterSequenceNumbers:(id)arg2 excludePersonLocalIdentifiers:(id)arg3 minimumSuggestionFaceCount:(unsigned long long)arg4;	// IMP=0x00000000001abefb
- (id)suggestedContactsForPersonLocalIdentifier:(id)arg1;	// IMP=0x00000000001ab986
- (id)inferredContactForPersonLocalIdentifier:(id)arg1;	// IMP=0x00000000001ab747
- (id)inferredContactByPersonLocalIdentifierForPersonLocalIdentifiers:(id)arg1;	// IMP=0x00000000001ab410
- (void)personPromotionProcessingStatusForUserInterface:(CDUnknownBlockType)arg1;	// IMP=0x00000000001ab39e
- (id)suggestedMePersonIdentifierWithError:(id *)arg1;	// IMP=0x00000000001ab33f
- (id)assetIdentifiersForPersonIdentifiers:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ab2b6
- (id)socialGroupsForPersonIdentifiers:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ab22d
- (id)allSocialGroupsForPersonIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ab1a4
- (id)sortedArrayOfPersonIdentifiers:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ab11b
- (id)requestSearchableAssetUUIDsBySocialGroupForAssetCollectionUUIDs:(id)arg1 ofType:(unsigned long long)arg2 isFullAnalysis:(_Bool)arg3 withOptions:(id)arg4 error:(id *)arg5;	// IMP=0x00000000001ab065
- (id)requestAssetSearchKeywordsForAssetCollectionUUIDs:(id)arg1 ofType:(unsigned long long)arg2 withOptions:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001aafbc
- (id)requestSearchIndexKeywordsForAssetCollectionUUIDs:(id)arg1 ofType:(unsigned long long)arg2 withOptions:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001aaf13
- (id)requestGraphSearchMetadataWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aae8a
- (id)requestSynonymsDictionariesWithError:(id *)arg1;	// IMP=0x00000000001aae2b
- (id)requestZeroKeywordsWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aada2
- (void)requestSearchIndexGraphUpdates:(id)arg1 supportingData:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000001aac9f
- (void)requestSearchIndexUpdates:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aabf9
- (void)requestSyndicationProcessingWithOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aab73
- (void)requestGenerateQuestionsWithOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aaaed
- (void)runPFLWithAttachments:(id)arg1 recipeUserInfo:(id)arg2 resultBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000001aaa53
- (id)requestTextFeaturesForMomentLocalIdentifiers:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa9ca
- (void)simulateMemoriesNotificationWithOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aa935
- (_Bool)requestEnrichmentWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa8b8
- (_Bool)requestAssetRevGeocodingForAssetLocalIdentifiers:(id)arg1 withError:(id *)arg2;	// IMP=0x00000000001aa83b
- (_Bool)requestAssetRevGeocodingWithError:(id *)arg1;	// IMP=0x00000000001aa7e8
- (_Bool)requestHighlightCollectionEnrichmentWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa76b
- (_Bool)requestHighlightEnrichmentWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa6ee
- (void)requestGraphReadyNotificationWithCoalescingIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aa656
- (void)requestGraphRebuildProgressWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001aa5d4
- (void)requestGraphRebuildWithOptions:(id)arg1 progress:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000001aa517
- (void)requestGraphRebuildWithProgress:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001aa4fd
- (_Bool)invalidatePersistentGraphCachesAndReturnError:(id *)arg1;	// IMP=0x00000000001aa4aa
- (_Bool)invalidateTransientGraphCachesAndReturnError:(id *)arg1;	// IMP=0x00000000001aa457
- (id)exportGraphForPurpose:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa3ce
- (void)requestHighlightEstimatesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001aa35c
- (id)graphStatisticsDescription:(id *)arg1;	// IMP=0x00000000001aa2f6
- (id)graphStatusDescription:(id *)arg1;	// IMP=0x00000000001aa297
- (id)sharingMessageSuggestionDebugInformationForAssetCollectionLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa20e
- (id)sharingSuggestionDebugInformationForAssetCollectionLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001aa185
- (id)relatedDebugInformationBetweenReferenceAssetCollectionForLocalIdentifier:(id)arg1 andRelatedAssetCollectionForLocalIdentifier:(id)arg2 options:(id)arg3 precision:(unsigned long long)arg4 relatedType:(unsigned long long)arg5 error:(id *)arg6;	// IMP=0x00000000001aa0b8
- (id)relatedDebugInformationBetweenAssetForLocalIdentifier:(id)arg1 andRelatedAssetCollectionForLocalIdentifier:(id)arg2 options:(id)arg3 precision:(unsigned long long)arg4 relatedType:(unsigned long long)arg5 error:(id *)arg6;	// IMP=0x00000000001a9feb
- (id)curationDebugInformationForAssetCollectionWithLocalIdentifier:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001a9f4c
- (id)curationDebugInformationForAssetLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001a9ec3
- (id)highlightDebugInformationForHighlightWithLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001a9e3a
- (id)memoryDebugInformationForMemoryWithLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001a9db1
- (void)cancelOperationsWithIdentifiers:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000001a9d2b
- (_Bool)photoAnalysisClientAllowed;	// IMP=0x00000000001a9c9c
- (double)_analysisProgressForHighlight:(id)arg1 fetchCountBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001a9b46
- (double)sceneAnalysisProgressForHighlight:(id)arg1 usingSceneVersion:(short)arg2;	// IMP=0x00000000001a9af7
- (double)ratioOfAssetsWithFullAnalysisProcessed;	// IMP=0x00000000001a9862
- (double)ratioOfAssetsWithFacesProcessed;	// IMP=0x00000000001a95b7
- (double)ratioOfAssetsWithScenesProcessed;	// IMP=0x00000000001a9361
- (double)ratioOfAssetsAtOrAboveSceneAnalysisVersion:(short)arg1;	// IMP=0x00000000001a91c0
- (id)analysisProgressCountsForWorkerType:(short)arg1;	// IMP=0x00000000001a9158
- (id)faceAnalysisProgressCounts;	// IMP=0x00000000001a900e
- (_Bool)petVIPModelExists;	// IMP=0x00000000001a8e55
- (id)assetUUIDsAllowedForCurationFromAssets:(id)arg1;	// IMP=0x00000000001a8aa2
- (double)faceAnalysisProgressForHighlight:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001a8895
- (id)_assetOIDsForHighlight:(id)arg1 withContext:(id)arg2;	// IMP=0x00000000001a86e6
- (void)requestAnalysisProgressCountsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001a8566
- (void)_requestAnalysisProgressWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001a82cb
- (void)requestTotalProgressCountsForWorkerType:(short)arg1 states:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000001a805d
- (void)requestTotalProgressCountsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001a8035
- (id)_faceAnalysisProcessingCounts;	// IMP=0x00000000001a7fa0
- (id)_photoLibraryForAnalysisState;	// IMP=0x00000000001a7f8e

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

