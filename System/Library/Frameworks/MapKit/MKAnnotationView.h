//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <MapKit/MKAnnotationRepresentation-Protocol.h>
#import <MapKit/MKLocatableObject-Protocol.h>
#import <MapKit/_MKKVOProxyDelegate-Protocol.h>

@class CALayer, GEORouteMatch, MKCalloutView, MKUsageCounter, MKUserLocationAnnotationViewProxy, NSMutableArray, NSString, UIImage, VKAnchorWrapper, _MKAnnotationViewAnchor, _MKAnnotationViewCustomFeatureAnnotation, _MKKVOProxy, _MKStaticMapView;
@protocol MKAnnotation;

@interface MKAnnotationView : UIView <_MKKVOProxyDelegate, MKAnnotationRepresentation, MKLocatableObject>
{
    struct CLLocationCoordinate2D _presentationCoordinate;	// 8 = 0x8
    double _presentationCourse;	// 24 = 0x18
    CDUnknownBlockType _presentationCoordinateChangedCallback;	// 32 = 0x20
    struct CLLocationCoordinate2D _coordinate;	// 40 = 0x28
    MKUserLocationAnnotationViewProxy *_userLocationProxy;	// 56 = 0x38
    double _rotationRadians;	// 64 = 0x40
    _MKAnnotationViewAnchor *_anchor;	// 72 = 0x48
    GEORouteMatch *_routeMatch;	// 80 = 0x50
    double _mapRotationRadians;	// 88 = 0x58
    unsigned long long _hiddenReasons;	// 96 = 0x60
    NSMutableArray *_hiddenCompletionBlocks;	// 104 = 0x68
    double _realAlpha;	// 112 = 0x70
    struct CGPoint _realOffset;	// 120 = 0x78
    double _mapPitchRadians;	// 136 = 0x88
    CDStruct_80aa614a _mapDisplayStyle;	// 144 = 0x90
    float _selectionPriority;	// 152 = 0x98
    _MKKVOProxy *_annotationObserver;	// 160 = 0xa0
    _MKAnnotationViewCustomFeatureAnnotation *_customFeatureAnnotation;	// 168 = 0xa8
    _Bool _subclassImplementsAlignmentRectInsets;	// 176 = 0xb0
    unsigned long long _allowedCalloutEdges;	// 184 = 0xb8
    _Bool _wantsViewBasedPositioning;	// 192 = 0xc0
    _Bool _shouldKeepCalloutVisible;	// 193 = 0xc1
    id <MKAnnotation> _annotation;	// 200 = 0xc8
    float _displayPriority;	// 208 = 0xd0
    struct CGRect _collisionFrame;	// 216 = 0xd8
    NSString *_clusteringIdentifier;	// 248 = 0xf8
    UIImage *_image;	// 256 = 0x100
    long long _collisionMode;	// 264 = 0x108
    MKCalloutView *_calloutView;	// 272 = 0x110
    UIView *_leftCalloutAccessoryView;	// 280 = 0x118
    UIView *_rightCalloutAccessoryView;	// 288 = 0x120
    UIView *_detailCalloutAccessoryView;	// 296 = 0x128
    NSString *_reuseIdentifier;	// 304 = 0x130
    MKAnnotationView *_clusterAnnotationView;	// 312 = 0x138
    unsigned long long _mapType;	// 320 = 0x140
    unsigned long long _zIndex;	// 328 = 0x148
    struct CGPoint _centerOffset;	// 336 = 0x150
    struct CGPoint _calloutOffset;	// 352 = 0x160
    struct CGPoint _leftCalloutOffset;	// 368 = 0x170
    struct CGPoint _rightCalloutOffset;	// 384 = 0x180
    unsigned long long _dragState;	// 400 = 0x190
    long long _calloutStyle;	// 408 = 0x198
    struct {
        unsigned int pendingSelectionAnimated:1;
        unsigned int disabled:1;
        unsigned int selected:1;
        unsigned int canShowCallout:1;
        unsigned int isHighlighted:1;
        unsigned int canDisplayDisclosureInCallout:1;
        unsigned int canDisplayPlacemarkInCallout:1;
        unsigned int draggable:1;
        unsigned int customTransformApplied:1;
        unsigned int internalTransformApplied:1;
        unsigned int animatingToCoordinate:1;
        unsigned int tracking:1;
        unsigned int pendingOffsetAnimation:1;
        unsigned int pendingHideAnimation:1;
        unsigned int setSelectState:2;
    } _flags;	// 416 = 0x1a0
    CALayer *_imageLayer;	// 424 = 0x1a8
    long long _titleVisibility;	// 432 = 0x1b0
    long long _subtitleVisibility;	// 440 = 0x1b8
    _Bool _animatingToCoordinate;	// 448 = 0x1c0
    _Bool _tracking;	// 449 = 0x1c1
    _Bool _pendingSelectionAnimated;	// 450 = 0x1c2
    _Bool _skipDrawingForSnapshots;	// 451 = 0x1c3
    float _zPriority;	// 452 = 0x1c4
    float _selectedZPriority;	// 456 = 0x1c8
    double _direction;	// 464 = 0x1d0
    _MKStaticMapView *_staticMapView;	// 472 = 0x1d8
    MKUsageCounter *_usageCounter;	// 480 = 0x1e0
    struct CGPoint _bottomCalloutOffset;	// 488 = 0x1e8
    struct UIEdgeInsets _annotationTrackingInsets;	// 504 = 0x1f8
}

+ (_Bool)_followsTerrain;	// IMP=0x00000000000d01bf
+ (_Bool)_isInitiallyHiddenWhenAdded;	// IMP=0x00000000000ce3dc
+ (id)_disclosureCalloutButton;	// IMP=0x00000000000ce149
+ (float)_defaultDisplayPriority;	// IMP=0x00000000000ce13b
+ (unsigned long long)_selectedZIndex;	// IMP=0x00000000000ce130
+ (unsigned long long)_zIndex;	// IMP=0x00000000000ce125
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x00000000000ce0b2
+ (Class)calloutViewClass;	// IMP=0x00000000000cd920
+ (Class)_mapkitLeafClass;	// IMP=0x00000000000cd90f
+ (_Bool)_wantsViewBasedPositioning;	// IMP=0x00000000000cd907
- (void).cxx_destruct;	// IMP=0x00000000000d2427
@property(nonatomic, getter=_annotationTrackingInsets) struct UIEdgeInsets annotationTrackingInsets; // @synthesize annotationTrackingInsets=_annotationTrackingInsets;
@property(nonatomic, getter=_usageCounter, setter=_setUsageCounter:) __weak MKUsageCounter *usageCounter; // @synthesize usageCounter=_usageCounter;
@property(nonatomic) long long collisionMode; // @synthesize collisionMode=_collisionMode;
@property(nonatomic) float selectedZPriority; // @synthesize selectedZPriority=_selectedZPriority;
@property(nonatomic) float zPriority; // @synthesize zPriority=_zPriority;
@property(readonly, nonatomic) __weak MKAnnotationView *clusterAnnotationView; // @synthesize clusterAnnotationView=_clusterAnnotationView;
@property(copy, nonatomic) NSString *clusteringIdentifier; // @synthesize clusteringIdentifier=_clusteringIdentifier;
@property(nonatomic) float displayPriority; // @synthesize displayPriority=_displayPriority;
@property(nonatomic, getter=_skipDrawingForSnapshots, setter=_setSkipDrawingForSnapshots:) _Bool skipDrawingForSnapshots; // @synthesize skipDrawingForSnapshots=_skipDrawingForSnapshots;
@property(nonatomic, getter=_calloutStyle, setter=_setCalloutStyle:) long long calloutStyle; // @synthesize calloutStyle=_calloutStyle;
@property(nonatomic) long long subtitleVisibility; // @synthesize subtitleVisibility=_subtitleVisibility;
@property(nonatomic) long long titleVisibility; // @synthesize titleVisibility=_titleVisibility;
@property(nonatomic, getter=_isPendingSelectionAnimated, setter=_setPendingSelectionAnimated:) _Bool pendingSelectionAnimated; // @synthesize pendingSelectionAnimated=_pendingSelectionAnimated;
@property(nonatomic, getter=_staticMapView, setter=_setStaticMapView:) __weak _MKStaticMapView *staticMapView; // @synthesize staticMapView=_staticMapView;
@property(nonatomic, getter=_selectionPriority, setter=_setSelectionPriority:) float selectionPriority; // @synthesize selectionPriority=_selectionPriority;
@property(nonatomic, getter=_mapDisplayStyle, setter=_setMapDisplayStyle:) CDStruct_80aa614a mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
@property(nonatomic, getter=_mapPitchRadians, setter=_setMapPitchRadians:) double mapPitchRadians; // @synthesize mapPitchRadians=_mapPitchRadians;
@property(nonatomic, getter=_mapRotationRadians, setter=_setMapRotationRadians:) double mapRotationRadians; // @synthesize mapRotationRadians=_mapRotationRadians;
@property(retain, nonatomic, setter=_setRouteMatch:) GEORouteMatch *_routeMatch; // @synthesize _routeMatch;
@property(nonatomic, getter=_allowedCalloutEdges, setter=_setAllowedCalloutEdges:) unsigned long long allowedCalloutEdges; // @synthesize allowedCalloutEdges=_allowedCalloutEdges;
@property(retain, nonatomic) UIView *detailCalloutAccessoryView; // @synthesize detailCalloutAccessoryView=_detailCalloutAccessoryView;
@property(retain, nonatomic) UIView *rightCalloutAccessoryView; // @synthesize rightCalloutAccessoryView=_rightCalloutAccessoryView;
@property(retain, nonatomic) UIView *leftCalloutAccessoryView; // @synthesize leftCalloutAccessoryView=_leftCalloutAccessoryView;
@property(nonatomic, getter=_bottomCalloutOffset, setter=_setBottomCalloutOffset:) struct CGPoint bottomCalloutOffset; // @synthesize bottomCalloutOffset=_bottomCalloutOffset;
@property(nonatomic) struct CGPoint rightCalloutOffset; // @synthesize rightCalloutOffset=_rightCalloutOffset;
@property(nonatomic) struct CGPoint leftCalloutOffset; // @synthesize leftCalloutOffset=_leftCalloutOffset;
@property(readonly, nonatomic, getter=_collisionFrame) struct CGRect collisionFrame; // @synthesize collisionFrame=_collisionFrame;
@property(nonatomic, getter=_shouldKeepCalloutVisible, setter=_setShouldKeepCalloutVisible:) _Bool shouldKeepCalloutVisible; // @synthesize shouldKeepCalloutVisible=_shouldKeepCalloutVisible;
@property(retain, nonatomic, getter=_calloutView, setter=_setCalloutView:) MKCalloutView *_calloutView; // @synthesize _calloutView;
@property(nonatomic, getter=_isTracking, setter=_setTracking:) _Bool _tracking; // @synthesize _tracking;
@property(nonatomic, getter=_isAnimatingToCoordinate, setter=_setAnimatingToCoordinate:) _Bool _animatingToCoordinate; // @synthesize _animatingToCoordinate;
@property(nonatomic, setter=_setPresentationCourse:) double _presentationCourse; // @synthesize _presentationCourse;
@property(copy, nonatomic, setter=_setPresentationCoordinateChangedCallback:) CDUnknownBlockType _presentationCoordinateChangedCallback; // @synthesize _presentationCoordinateChangedCallback;
@property(nonatomic, setter=_setDirection:) double _direction; // @synthesize _direction;
@property(readonly, nonatomic, getter=_defaultCollisionAlignmentRectInsets) struct UIEdgeInsets defaultCollisionAlignmentRectInsets;
@property(readonly, nonatomic, getter=_collisionAlignmentRectInsets) struct UIEdgeInsets collisionAlignmentRectInsets;
- (struct UIEdgeInsets)alignmentRectInsets;	// IMP=0x00000000000d1f51
- (void)prepareForSnapshotting;	// IMP=0x00000000000d1f3f
- (_Bool)isCollidingWithAnnotationView:(id)arg1 previouslyCollided:(_Bool)arg2;	// IMP=0x00000000000d1aac
- (void)_mkObserveValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000000000d19a4
- (void)_removeAnnotationObservation;	// IMP=0x00000000000d1951
- (void)_addAnnotationObservation;	// IMP=0x00000000000d18cc
- (id)_customFeatureAnnotation;	// IMP=0x00000000000d18c4
- (void)_didUpdatePosition;	// IMP=0x00000000000d18be
- (void)_updateFromMap;	// IMP=0x00000000000d18b8
- (double)_pointsForDistance:(double)arg1;	// IMP=0x00000000000d1852
- (id)_vkNavigationPuckMarker;	// IMP=0x00000000000d184a
- (void)_setVKNavigationPuckMarker:(id)arg1;	// IMP=0x00000000000d1844
- (id)_mapView;	// IMP=0x00000000000d17bf
- (id)_containerView;	// IMP=0x00000000000d175f
- (_Bool)_canChangeOrientation;	// IMP=0x00000000000d174d
- (unsigned long long)_orientationCount;	// IMP=0x00000000000d1742
- (_Bool)_hasAlternateOrientation;	// IMP=0x00000000000d1728
- (void)_transitionTo:(long long)arg1;	// IMP=0x00000000000d1722
- (void)_setRotationRadians:(double)arg1 withAnimation:(id)arg2;	// IMP=0x00000000000d15bd
- (void)_userTrackingModeDidChange:(id)arg1;	// IMP=0x00000000000d1508
- (void)_enableRotationForHeadingMode:(double)arg1;	// IMP=0x00000000000d13fb
- (id)_annotationContainer;	// IMP=0x00000000000d13a4
- (struct CGPoint)_offsetToAnnotationView:(id)arg1;	// IMP=0x00000000000d1358
- (void)_setPositionOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000d12af
- (void)_setHidden:(_Bool)arg1 forReason:(unsigned long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000d0f73
- (void)_setHidden:(_Bool)arg1 forReason:(unsigned long long)arg2 animated:(_Bool)arg3;	// IMP=0x00000000000d0f5e
- (void)_performStateUpdatesIfNeeded;	// IMP=0x00000000000d0eda
- (void)_performOffsetAnimationIfNeeded;	// IMP=0x00000000000d0da7
- (void)_performHideAnimationIfNeeded;	// IMP=0x00000000000d0a82
- (_Bool)_isHiddenForReason:(unsigned long long)arg1;	// IMP=0x00000000000d0a61
- (double)alpha;	// IMP=0x00000000000d0a4f
- (void)setAlpha:(double)arg1;	// IMP=0x00000000000d0a14
- (void)_setHiddenForOffscreen:(_Bool)arg1;	// IMP=0x00000000000d09fa
- (_Bool)isHidden;	// IMP=0x00000000000d09e5
- (void)setHidden:(_Bool)arg1;	// IMP=0x00000000000d099b
- (id)snapshotViewAfterScreenUpdates:(_Bool)arg1;	// IMP=0x00000000000d095e
- (void)didMoveToSuperview;	// IMP=0x00000000000d08ff
- (void)_updateEffectiveZPriority;	// IMP=0x00000000000d08b3
- (float)_effectiveZPriority;	// IMP=0x00000000000d07fa
- (void)_setZIndex:(unsigned long long)arg1;	// IMP=0x00000000000d07a4
- (unsigned long long)_zIndex;	// IMP=0x00000000000d0793
- (void)_setMapType:(unsigned long long)arg1;	// IMP=0x00000000000d0782
- (unsigned long long)_mapType;	// IMP=0x00000000000d0771
- (_Bool)isPersistent;	// IMP=0x00000000000d0769
- (void)_setCanDisplayPlacemarkInCallout:(_Bool)arg1;	// IMP=0x00000000000d074d
- (_Bool)_canDisplayPlacemarkInCallout;	// IMP=0x00000000000d0738
- (void)_setCanDisplayDisclosureInCallout:(_Bool)arg1;	// IMP=0x00000000000d071c
- (_Bool)_canDisplayDisclosureInCallout;	// IMP=0x00000000000d0707
- (void)_setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000d05b8
- (void)setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000d05a6
@property(nonatomic) unsigned long long dragState;
@property(nonatomic, getter=isDraggable) _Bool draggable;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(nonatomic, getter=isEnabled) _Bool enabled;
@property(readonly, nonatomic) struct CGRect _significantFrame;
@property(readonly, nonatomic, getter=_significantBounds) struct CGRect significantBounds;
- (struct CGRect)_mapkit_visibleRect;	// IMP=0x00000000000d0344
@property(readonly, nonatomic) MKUserLocationAnnotationViewProxy *_userLocationProxy;
@property(readonly, nonatomic) VKAnchorWrapper *anchor;
- (_Bool)_shouldDeselectWhenDragged;	// IMP=0x00000000000d01b7
- (void)_invalidateCachedCoordinate;	// IMP=0x00000000000d00a1
@property(nonatomic, setter=_setPresentationCoordinate:) struct CLLocationCoordinate2D _presentationCoordinate; // @synthesize _presentationCoordinate;
@property(readonly, nonatomic) struct CLLocationCoordinate2D coordinate;
@property(nonatomic) struct CGPoint calloutOffset;
@property(nonatomic) struct CGPoint centerOffset;
- (void)_didDragWithVelocity:(struct CGPoint)arg1;	// IMP=0x00000000000cfd8f
- (struct CGPoint)_draggingDropOffset;	// IMP=0x00000000000cfd7d
@property(nonatomic) _Bool canShowCallout;
- (void)_dismissCallout:(_Bool)arg1;	// IMP=0x00000000000cfbfe
- (void)_showCallout:(_Bool)arg1;	// IMP=0x00000000000cfa8f
- (_Bool)updateCalloutViewIfNeededAnimated:(_Bool)arg1;	// IMP=0x00000000000cf9c2
@property(readonly, nonatomic, getter=_allowedToShowCallout) _Bool allowedToShowCallout;
- (_Bool)_shouldShowCalloutIfSelected;	// IMP=0x00000000000cf8f1
- (long long)_effectiveCalloutStyle;	// IMP=0x00000000000cf8a2
- (void)_setSelected:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000cf52b
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000cf49f
@property(nonatomic, getter=isSelected) _Bool selected;
- (float)_defaultSelectedZPriority;	// IMP=0x00000000000cf1e5
- (float)_defaultZPriority;	// IMP=0x00000000000cf169
- (void)_setSelectedZPriority:(float)arg1;	// IMP=0x00000000000cf0e6
- (void)_setZPriority:(float)arg1;	// IMP=0x00000000000cf035
- (float)_clampZPriority:(float)arg1;	// IMP=0x00000000000cefea
@property(retain, nonatomic) UIImage *image;
- (id)_contentLayer;	// IMP=0x00000000000cece5
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000000cebf1
@property(retain, nonatomic) id <MKAnnotation> annotation;
- (void)_removePopover;	// IMP=0x00000000000ceaf5
- (id)_getPopover:(id)arg1;	// IMP=0x00000000000ce905
- (void)_unhideForDisplay;	// IMP=0x00000000000ce8e9
- (void)prepareForDisplay;	// IMP=0x00000000000ce8d7
- (void)prepareForReuse;	// IMP=0x00000000000ce78d
@property(readonly, nonatomic) NSString *reuseIdentifier;
- (id)viewRepresentation;	// IMP=0x00000000000ce76f
- (void)dealloc;	// IMP=0x00000000000ce6a7
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;	// IMP=0x00000000000ce59c
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000ce550
- (void)_commonInit;	// IMP=0x00000000000ce436
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000ce328
- (void)layoutSubviews;	// IMP=0x00000000000ce276
- (long long)compareForCollision:(id)arg1;	// IMP=0x00000000000cdfdf
- (long long)compareForClustering:(id)arg1;	// IMP=0x00000000000cdf00
- (void)setClusterAnnotationView:(id)arg1;	// IMP=0x00000000000cdeec
- (void)_mapVisibleCenteringRectChanged;	// IMP=0x00000000000cdec8
- (void)_updateAnchorPosition:(struct CGPoint)arg1 alignToPixels:(_Bool)arg2;	// IMP=0x00000000000cdbfc
- (void)_metricsDidChange;	// IMP=0x00000000000cdb91
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000000cdab9
@property(readonly, nonatomic, getter=_isSelectable) _Bool selectable;
- (_Bool)shouldShowCallout;	// IMP=0x00000000000cd928
- (void)configureCustomFeature:(id)arg1;	// IMP=0x00000000000d2c54
- (id)_effectiveSubtitlesIsCollidable:(_Bool *)arg1;	// IMP=0x00000000000d2b77
- (id)_effectiveTitleIsCollidable:(_Bool *)arg1;	// IMP=0x00000000000d2a6e
- (void)_invalidateCustomFeatureForced:(_Bool)arg1 coordinates:(struct CLLocationCoordinate2D *)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000000d293d
- (void)invalidateCustomFeatureForced:(_Bool)arg1;	// IMP=0x00000000000d291b
- (_Bool)isProvidingCustomFeature;	// IMP=0x00000000000d2897
- (id)customFeatureAnnotation;	// IMP=0x00000000000d2842

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

