//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MapKit/GEOURLSerializable-Protocol.h>
#import <MapKit/NSSecureCoding-Protocol.h>

@class GEOAddress, GEOBusinessHours, GEOEnhancedPlacement, GEOExploreGuides, GEOFeatureStyleAttributes, GEOLabelGeometry, GEOMapItemDetourInfo, GEOMapItemStorage, GEOMapItemStorageUserValues, GEOMapRegion, GEOMiniBrowseCategories, GEOModuleLayoutEntry, GEOPDBusinessClaim, GEOPDFlyover, GEOPlace, GEOViewportFrame, MKMapItemIdentifier, MKMapItemMetadata, MKPlacemark, NSArray, NSData, NSDate, NSDictionary, NSNumber, NSNumberFormatter, NSString, NSTimeZone, NSURL, UIColor, _MKMapItemAttribution, _MKMapItemPhotosAttribution, _MKMapItemPlaceAttribution, _MKMapItemReviewsAttribution, _MKPlaceReservationInfo, geo_isolater;
@protocol GEOAnnotatedItemList, GEOEncyclopedicInfo, GEOMapItem, GEOMapItemPrivate, GEOMapItemTransitInfo, GEOMapItemVenueInfo, GEOTransitAttribution, MKTransitInfoPreload, NSObject;

@interface MKMapItem : NSObject <NSSecureCoding, GEOURLSerializable>
{
    _Bool _isCurrentLocation;	// 8 = 0x8
    _Bool _isPlaceHolder;	// 9 = 0x9
    id <GEOMapItem> _geoMapItem;	// 16 = 0x10
    MKMapItemIdentifier *_identifier;	// 24 = 0x18
    _Bool _isTransitInfoUpdated;	// 32 = 0x20
    NSDate *_transitInfoUpdatedDate;	// 40 = 0x28
    id <GEOMapItemTransitInfo> _updatedTransitInfo;	// 48 = 0x30
    id <GEOMapItemTransitInfo> _defaultTransitInfo;	// 56 = 0x38
    id <GEOTransitAttribution> _updatedTransitAttribution;	// 64 = 0x40
    _MKMapItemPlaceAttribution *_attribution;	// 72 = 0x48
    NSArray *_allPhotoAttributions;	// 80 = 0x50
    _MKMapItemReviewsAttribution *_reviewsAttribution;	// 88 = 0x58
    GEOMapItemStorageUserValues *_userValues;	// 96 = 0x60
    id <NSObject> _didResolveAttributionToken;	// 104 = 0x68
    _Bool _hasLoadedAttribution;	// 112 = 0x70
    NSString *_shortAddress;	// 120 = 0x78
    NSString *_firstLocalizedCategoryName;	// 128 = 0x80
    NSNumberFormatter *_numberFormatterForAdamId;	// 136 = 0x88
    NSString *_localizedSampleSizeForUserRatingScoreString;	// 144 = 0x90
    NSDictionary *_cachedHoursBuilder;	// 152 = 0x98
    geo_isolater *_isolation;	// 160 = 0xa0
    _Bool _isMapItemTypeTransit;	// 168 = 0xa8
    MKMapItemMetadata *_metadata;	// 176 = 0xb0
    GEOPlace *_place;	// 184 = 0xb8
    _MKMapItemPhotosAttribution *_photosAttribution;	// 192 = 0xc0
    _MKMapItemAttribution *_encyclopedicInfoAttribution;	// 200 = 0xc8
    _MKPlaceReservationInfo *_reservationInfo;	// 208 = 0xd0
    NSString *_pointOfInterestCategory;	// 216 = 0xd8
    id <MKTransitInfoPreload> _preloadedTransitInfo;	// 224 = 0xe0
}

+ (id)_launchOptionsWithOptions:(id)arg1;	// IMP=0x00000000000fa42f
+ (id)_urlForLocation:(id)arg1 address:(id)arg2 label:(id)arg3 options:(id)arg4;	// IMP=0x00000000000fa228
+ (id)_urlForMapItemHandles:(id)arg1 options:(id)arg2;	// IMP=0x00000000000fa007
+ (id)urlForMapItems:(id)arg1 options:(id)arg2;	// IMP=0x00000000000f9c36
+ (id)urlForMapItem:(id)arg1 options:(id)arg2;	// IMP=0x00000000000f9b79
+ (id)_mapItemBackedByURL:(id)arg1;	// IMP=0x00000000000f9ac4
+ (id)mapItemsFromURL:(id)arg1 options:(id *)arg2;	// IMP=0x00000000000f9774
+ (id)sanitizeDictionary:(id)arg1;	// IMP=0x00000000000f9510
+ (id)sanitizeArray:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000f92fe
+ (id)sanitizeObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000f91f1
+ (_Bool)valueIsValid:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000f893f
+ (id)launchOptionsFromURL:(id)arg1;	// IMP=0x00000000000f8874
+ (id)_launchOptionsFromResourceOptionsDictionary:(id)arg1;	// IMP=0x00000000000f867a
+ (id)_deserializeResourceOptionsFromURL:(id)arg1 error:(out id *)arg2;	// IMP=0x00000000000f83f0
+ (void)_mapItemsFromHandleURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f7e45
+ (void)_mapItemFromHandle:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f7c99
+ (id)_sourceAppIdFromLaunchUserInfo:(id)arg1;	// IMP=0x00000000000f7c7d
+ (id)_sourceAppIdFromLaunchURL:(id)arg1;	// IMP=0x00000000000f7ab5
+ (id)_sharedSessionUserInfoForPunchoutUserInfo:(id)arg1;	// IMP=0x00000000000f7879
+ (id)_sharedSessionURLForPunchoutURL:(id)arg1;	// IMP=0x00000000000f75c6
+ (id)mapItemWithDictionary:(id)arg1;	// IMP=0x00000000000f6cab
+ (id)standardOptionsFromPlistCompatibleDictionary:(id)arg1;	// IMP=0x00000000000f68c3
+ (id)plistCompatibleDictionaryFromStandardOptions:(id)arg1;	// IMP=0x00000000000f6519
+ (void)openMapsWithItems:(id)arg1 launchOptions:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f6466
+ (_Bool)openMapsWithItems:(id)arg1 launchOptions:(id)arg2;	// IMP=0x00000000000f63a6
+ (id)_localizedNextOpeningDayOftheWeekFormatter;	// IMP=0x00000000000f4f77
+ (id)_localizedNextOpeningHoursFormatter;	// IMP=0x00000000000f4ea4
+ (id)mapItemForCurrentLocation;	// IMP=0x00000000000f1fa3
+ (void)_mapItemsWithSerializedPlaceDataResponse:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000fd4ef
+ (id)mapItemWithSerializedPlaceData:(id)arg1 serializedDetourInfo:(id)arg2 currentLocation:(_Bool)arg3;	// IMP=0x00000000000fd3b2
+ (id)mapItemWithSerializedPlaceData:(id)arg1;	// IMP=0x00000000000fd39b
+ (id)_itemWithContact:(id)arg1 geoMapItem:(id)arg2;	// IMP=0x00000000000fd221
+ (id)_itemWithGeoMapItem:(id)arg1;	// IMP=0x00000000000fd1d2
+ (id)_mapItemWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;	// IMP=0x00000000000fd99c
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000fdf1a
+ (id)ticketForMapsDataString:(id)arg1 name:(id)arg2;	// IMP=0x00000000001f142f
+ (void)_fillOutRequest:(id)arg1 withMapsDataString:(id)arg2;	// IMP=0x00000000001f120d
+ (id)contactsAddressKeysForGeoAddressKeys;	// IMP=0x00000000001f1064
+ (id)contactsAddressDictionaryFromGeoAddressDictionary:(id)arg1;	// IMP=0x00000000001f0de2
- (void).cxx_destruct;	// IMP=0x00000000000fd094
@property(readonly, nonatomic, getter=_preloadedTransitInfo) id <MKTransitInfoPreload> preloadedTransitInfo; // @synthesize preloadedTransitInfo=_preloadedTransitInfo;
@property(copy, nonatomic) NSString *pointOfInterestCategory; // @synthesize pointOfInterestCategory=_pointOfInterestCategory;
@property(retain, nonatomic) _MKPlaceReservationInfo *reservationInfo; // @synthesize reservationInfo=_reservationInfo;
@property(nonatomic, getter=_isMapItemTypeTransit) _Bool isMapItemTypeTransit; // @synthesize isMapItemTypeTransit=_isMapItemTypeTransit;
@property(readonly, nonatomic) _Bool isPlaceHolder; // @synthesize isPlaceHolder=_isPlaceHolder;
@property(nonatomic) _Bool isCurrentLocation; // @synthesize isCurrentLocation=_isCurrentLocation;
@property(readonly, nonatomic, getter=_viewportFrame) GEOViewportFrame *viewportFrame;
@property(readonly, nonatomic, getter=_labelGeometry) GEOLabelGeometry *labelGeometry;
@property(readonly, nonatomic, getter=_enhancedPlacement) GEOEnhancedPlacement *enhancedPlacement;
@property(readonly, nonatomic, getter=_hasCorrectedHomeWorkAddress) _Bool hasCorrectedHomeWorkAddress;
@property(readonly, nonatomic, getter=_hasCorrectedHomeWorkCoordinate) _Bool hasCorrectedHomeWorkCoordinate;
@property(readonly, nonatomic, getter=_externalTransitStationCode) NSData *externalTransitStationCode;
@property(readonly, nonatomic, getter=_detourInfo) GEOMapItemDetourInfo *detourInfo;
@property(readonly, nonatomic, getter=_businessClaim) GEOPDBusinessClaim *businessClaim;
@property(readonly, nonatomic, getter=_hasBusinessClaim) _Bool hasBusinessClaim;
@property(readonly, nonatomic) NSString *reviewsProviderDisplayName;
@property(readonly, nonatomic, getter=_tips) NSArray *tips;
@property(readonly, nonatomic, getter=_reviews) NSArray *reviews;
- (id)_firstRelatedPlaceListForType:(int)arg1;	// IMP=0x00000000000fc8be
- (id)_relatedPlaceListForComponentIdentifier:(int)arg1;	// IMP=0x00000000000fc8a8
@property(readonly, nonatomic, getter=_relatedPlaceLists) NSArray *relatedPlaceLists;
@property(readonly, nonatomic, getter=_placeCollectionIds) NSArray *collectionIds;
@property(readonly, nonatomic, getter=_exploreGuides) GEOExploreGuides *exploreGuides;
@property(readonly, nonatomic, getter=_placeCollections) NSArray *placeCollections;
@property(readonly, nonatomic, getter=_secondaryQuickLinks) NSArray *secondaryQuickLinks;
@property(readonly, nonatomic, getter=_quickLinks) NSArray *quickLinks;
@property(readonly, nonatomic, getter=_navTintBrandColor) UIColor *navTintBrandColor;
@property(readonly, nonatomic, getter=_navBackgroundbrandColor) UIColor *navBackgroundbrandColor;
@property(readonly, nonatomic, getter=_placecardLayout) GEOModuleLayoutEntry *placecardLayout;
@property(readonly, nonatomic, getter=_isMessageIDVerified) _Bool isMessageIDVerified;
@property(readonly, nonatomic, getter=_messageURLString) NSString *messageURLString;
@property(readonly, nonatomic, getter=_messageID) NSString *messageID;
@property(readonly, nonatomic, getter=_brandMUID) unsigned long long brand;
@property(readonly, nonatomic, getter=_hasBrandMUID) _Bool hasBrandMUID;
@property(readonly, nonatomic, getter=_isStandAloneBrand) _Bool isStandAloneBrand;
@property(readonly, nonatomic, getter=_parsecSectionType) int parsecSectionType;
@property(readonly, nonatomic, getter=_isMapItemTypeBrand) _Bool isMapItemTypeBrand;
@property(readonly, nonatomic, getter=_isMapItemTypeAddress) _Bool isMapItemTypeAddress;
@property(readonly, nonatomic, getter=_isMapItemTypeSettlement) _Bool isMapItemTypeSettlement;
@property(readonly, nonatomic, getter=_isMapItemTypeBusiness) _Bool isMapItemTypeBusiness;
@property(readonly, nonatomic, getter=_isMapItemTypeUnknown) _Bool isMapItemTypeUnknown;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
- (id)_attributionFor:(id)arg1 sourceStringFormat:(id)arg2 moreSourceStringFormat:(id)arg3 imageTintColor:(id)arg4;	// IMP=0x00000000000fc123
- (id)_attributionWithDisplayName:(id)arg1 attributionFormat:(id)arg2 logo:(id)arg3 isSnippetLogo:(_Bool)arg4;	// IMP=0x00000000000fc101
@property(readonly, nonatomic, getter=_reviewsDisplayName) NSString *reviewsDisplayName;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_linkedServices) NSArray *linkedServices;
@property(readonly, nonatomic, getter=_hasLinkedServices) _Bool hasLinkedServices;
@property(readonly, nonatomic, getter=_businessHours) NSArray *businessHours;
@property(readonly, nonatomic, getter=_hasBusinessHours) _Bool hasBusinessHours;
@property(readonly, nonatomic, getter=_alternativeAppAdamIds) NSArray *alternativeAppAdamIds;
@property(readonly, nonatomic, getter=_preferedAppAdamID) NSNumber *preferedAppAdamID;
- (id)venueLabelWithContext:(unsigned long long)arg1;	// IMP=0x00000000000fbcbf
- (id)_cnPostalAddress;	// IMP=0x00000000000fbc6b
- (id)_addressFormattedAsLocation;	// IMP=0x00000000000fbc17
- (id)_addressFormattedAsTitlesForMapRect:(CDStruct_02837cd9)arg1;	// IMP=0x00000000000fbb9a
- (id)_addressFormattedAsWeatherLocationName;	// IMP=0x00000000000fbb16
- (id)_addressFormattedAsWeatherDisplayName;	// IMP=0x00000000000fba92
- (id)_addressFormattedAsSinglelineAddress;	// IMP=0x00000000000fb94f
- (id)_addressFormattedAsShortenedAddress;	// IMP=0x00000000000fb7a3
- (id)_addressFormattedAsName;	// IMP=0x00000000000fb662
- (id)_addressFormattedAsMultilineAddress;	// IMP=0x00000000000fb3c2
- (id)_postalAddressFromMeCardUsingAddressIdentifier:(id)arg1;	// IMP=0x00000000000fb111
- (id)_addressFormattedAsStreetOnly;	// IMP=0x00000000000fb066
- (id)_addressFormattedAsCity;	// IMP=0x00000000000fafe0
- (id)_addressOrNil:(id)arg1;	// IMP=0x00000000000faf92
- (id)_bestNavbarBrandIconURLForSize:(struct CGSize)arg1 allowSmaller:(_Bool)arg2;	// IMP=0x00000000000faf7c
- (id)_bestBrandIconURLForSize:(struct CGSize)arg1 allowSmaller:(_Bool)arg2;	// IMP=0x00000000000faf66
- (_Bool)_canGetDirections;	// IMP=0x00000000000fae2d
- (id)_urlExtraStorage;	// IMP=0x00000000000fabe6
- (id)_activityURL;	// IMP=0x00000000000fa965
- (id)_weatherLocationName;	// IMP=0x00000000000fa953
- (id)_weatherDisplayName;	// IMP=0x00000000000fa941
- (id)_fullAddressWithMultiline:(_Bool)arg1;	// IMP=0x00000000000fa90f
- (_Bool)_isEquivalentURLRepresentationTo:(id)arg1;	// IMP=0x00000000000fa7f8
- (id)initWithUrlRepresentation:(id)arg1;	// IMP=0x00000000000f74ca
- (id)urlRepresentation;	// IMP=0x00000000000f73f1
- (id)dictionaryRepresentation;	// IMP=0x00000000000f70aa
@property(readonly, nonatomic, getter=_handle) NSData *handle;
- (void)openInMapsWithLaunchOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f62f3
- (_Bool)openInMapsWithLaunchOptions:(id)arg1;	// IMP=0x00000000000f622d
@property(readonly, nonatomic, getter=_chargerNumberString) NSString *chargerNumberString;
@property(readonly, nonatomic, getter=_hasChargerNumberString) _Bool hasChargerNumberString;
@property(readonly, nonatomic, getter=_poiPinpointURLString) NSString *poiPinpointURLString;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_openingHoursOptions) unsigned long long openingHoursOptions;
@property(readonly, nonatomic, getter=_encyclopedicInfo) id <GEOEncyclopedicInfo> encyclopedicInfo;
@property(readonly, nonatomic, getter=_hasEncyclopedicInfo) _Bool hasEncyclopedicInfo;
@property(readonly, nonatomic, getter=_localizedResponseTime) NSString *localizedResponseTime;
@property(readonly, nonatomic, getter=_messageBusinessHours) GEOBusinessHours *messageBusinessHours;
- (id)_localizedNextOpeningStringShort:(_Bool)arg1;	// IMP=0x00000000000f51fc
- (id)hoursBuilderForSearchResultCellForOptions:(unsigned long long)arg1;	// IMP=0x00000000000f5066
- (id)defaultHoursBuilderForSearchResultCell;	// IMP=0x00000000000f504f
@property(readonly, nonatomic, getter=_hasLocalizedOperatingHours) _Bool hasLocalizedOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_responseStatusIsIncomplete) _Bool responseStatusIncomplete;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_acceptsApplePay) _Bool acceptsApplePay;
@property(readonly, nonatomic, getter=_hasAcceptsApplePayAmenity) _Bool hasAcceptsApplePayAmenity;
- (_Bool)valueForAmenityType:(int)arg1;	// IMP=0x00000000000f4b1f
- (_Bool)hasAmenityType:(int)arg1;	// IMP=0x00000000000f49d1
@property(readonly, nonatomic, getter=_amenities) NSArray *amenities;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
@property(readonly, nonatomic, getter=_firstLocalizedCategoryName) NSString *firstLocalizedCategoryName;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;	// IMP=0x00000000000f4909
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;	// IMP=0x00000000000f48f3
@property(readonly, nonatomic, getter=_shortAddress) NSString *shortAddress;
@property(readonly, nonatomic, getter=_geoAddress) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_priceRangeString) NSString *priceRangeString;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_priceDescription) NSString *priceDescription;
@property(readonly, nonatomic, getter=_hasPriceDescription) _Bool hasPriceDescription;
@property(readonly, nonatomic, getter=_localizedSampleSizeForUserRatingScoreString) NSString *localizedSampleSizeForUserRatingScoreString;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_identifier) MKMapItemIdentifier *identifier;
@property(readonly, nonatomic, getter=_annotatedItemList) id <GEOAnnotatedItemList> annotatedItemList;
@property(readonly, nonatomic, getter=_placeDisplayStyle) int placeDisplayStyle;
@property(readonly, nonatomic, getter=_miniBrowseCategories) GEOMiniBrowseCategories *miniBrowseCategories;
@property(readonly, nonatomic, getter=_browseCategories) NSArray *browseCategories;
@property(readonly, nonatomic, getter=_venueInfo) id <GEOMapItemVenueInfo> venueInfo;
@property(readonly, nonatomic, getter=_venueFeatureType) long long venueFeatureType;
@property(readonly, nonatomic, getter=_hasVenueFeatureType) _Bool hasVenueFeatureType;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncementMessage;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
- (void)preloadTransitInfoWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000f4238
@property(readonly, nonatomic, getter=_transitInfo) id <GEOMapItemTransitInfo> transitInfo;
- (id)_formatterForAdamId;	// IMP=0x00000000000f416d
@property(readonly, nonatomic, getter=_transitAttribution) id <GEOTransitAttribution> transitAttribution;
@property(readonly, nonatomic, getter=_hasTransitLabels) _Bool hasTransitLabels;
@property(readonly, nonatomic, getter=_transitDisplayName) NSString *transitDisplayName;
@property(readonly, nonatomic, getter=_hasTransitDisplayName) _Bool hasTransitDisplayName;
@property(readonly, nonatomic, getter=_hasTransit) _Bool hasTransit;
@property(readonly, nonatomic, getter=_geoFenceMapRegion) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic, getter=_displayMaxZoom) float displayMaxZoom;
@property(readonly, nonatomic, getter=_hasDisplayMaxZoom) _Bool hasDisplayMaxZoom;
@property(readonly, nonatomic, getter=_displayMinZoom) float displayMinZoom;
@property(readonly, nonatomic, getter=_hasDisplayMinZoom) _Bool hasDisplayMinZoom;
@property(readonly, nonatomic, getter=_displayMapRegion) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic, getter=_coordinate) struct CLLocationCoordinate2D coordinate;
@property(readonly, nonatomic) NSString *yelpID;
@property(retain, nonatomic) NSURL *url;
- (id)_getBusiness;	// IMP=0x00000000000f3946
@property(copy, nonatomic) NSTimeZone *timeZone;
@property(readonly, nonatomic, getter=_phoneNumberOptsOutOfAds) _Bool phoneNumberOptsOutOfAds;
@property(copy, nonatomic) NSString *phoneNumber;
@property(readonly, nonatomic, getter=_secondarySpokenName) NSString *secondarySpokenName;
@property(readonly, nonatomic, getter=_secondaryName) NSString *secondaryName;
@property(copy, nonatomic) NSString *name;
@property(readonly, nonatomic) GEOMapItemStorageUserValues *userValues;
@property(readonly, nonatomic, getter=_geoMapItemStorageForDragAndDrop) GEOMapItemStorage *geoMapItemStorageForDragAndDrop;
@property(readonly, nonatomic, getter=_geoMapItemStorageForPersistence) GEOMapItemStorage *geoMapItemStorageForPersistence;
@property(readonly, nonatomic, getter=_geoMapItem) id <GEOMapItemPrivate> geoMapItem;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000f2e55
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)_refreshAttribution;	// IMP=0x00000000000f287b
@property(readonly, nonatomic, getter=_encyclopedicInfoAttribution) _MKMapItemAttribution *encyclopedicInfoAttribution; // @synthesize encyclopedicInfoAttribution=_encyclopedicInfoAttribution;
@property(readonly, nonatomic, getter=_reviewsAttribution) _MKMapItemReviewsAttribution *reviewsAttribution; // @synthesize reviewsAttribution=_reviewsAttribution;
@property(readonly, nonatomic, getter=_allPhotoAttributions) NSArray *allPhotoAttributions; // @synthesize allPhotoAttributions=_allPhotoAttributions;
@property(readonly, nonatomic, getter=_photosAttribution) _MKMapItemPhotosAttribution *photosAttribution; // @synthesize photosAttribution=_photosAttribution;
@property(readonly, nonatomic, getter=_attribution) _MKMapItemPlaceAttribution *attribution; // @synthesize attribution=_attribution;
@property(readonly, nonatomic) MKPlacemark *placemark;
@property(readonly, nonatomic) MKMapItemMetadata *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) GEOPlace *place; // @synthesize place=_place;
- (id)_isolatedPlace;	// IMP=0x00000000000f202e
- (void)dealloc;	// IMP=0x00000000000f1f26
- (id)initWithPlacemark:(id)arg1;	// IMP=0x00000000000f1e0c
- (id)initWithCLLocation:(id)arg1;	// IMP=0x00000000000f1df8
- (id)initWithCLLocation:(id)arg1 placeType:(int)arg2;	// IMP=0x00000000000f1d42
- (id)initWithAddressDictionary:(id)arg1;	// IMP=0x00000000000f1cb4
- (id)initWithPlace:(id)arg1 isPlaceHolderPlace:(_Bool)arg2;	// IMP=0x00000000000f1c55
- (id)initWithPlace:(id)arg1;	// IMP=0x00000000000f1c41
- (id)initWithGeoMapItem:(id)arg1 isPlaceHolderPlace:(_Bool)arg2;	// IMP=0x00000000000f185e
- (id)initWithGeoMapItemAsCurrentLocation:(id)arg1;	// IMP=0x00000000000f1827
- (id)init;	// IMP=0x00000000000f17b9
- (int)_browseCategory_placeCardType;	// IMP=0x0000000000095e48
- (_Bool)_browseCategory_isVenueItem;	// IMP=0x0000000000095dfb
- (_Bool)_browseCategory_canDisplayBrowseCategoriesForPlace;	// IMP=0x0000000000095db3
- (_Bool)_browseCategory_canDisplayBrowseCategoriesForVenue;	// IMP=0x0000000000095d00
- (id)formattedNumberOfReviewsIncludingProvider:(_Bool)arg1 formatter:(id)arg2;	// IMP=0x00000000000fd5a8
@property(readonly, nonatomic) NSString *formattedNumberOfReviewsIncludingProvider;
@property(readonly, nonatomic) NSString *formattedNumberOfReviews;
- (id)_reviewForIdentifier:(id)arg1;	// IMP=0x00000000000fdb34
- (void)_updateTransitInfoWithMapItem:(id)arg1;	// IMP=0x00000000000fdd98
- (void)_markTransitInfoUpdated;	// IMP=0x00000000000fdd5f
@property(readonly, nonatomic, getter=_transitInfoUpdatedDate) NSDate *transitInfoUpdatedDate;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000fe16c
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000fdf22
- (void)_getHasAvailableSecondaryAppClipWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000104b8b
- (void)_getHasAvailableAppClipWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000104add
- (void)_getFirstAvailableAppClipLinkFromQuickLinks:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000104287
- (void)_getFirstAvailableSecondaryAppClipLinkWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000104212
- (void)_getFirstAvailableAppClipLinkWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000010419d
- (_Bool)_mapkit_canAtLeastOneAttributionShowAddPhotosLocally;	// IMP=0x000000000017111e
- (_Bool)_mapkit_canAtLeastOneAttributionShowPhotosLocally;	// IMP=0x0000000000170fe5
- (unsigned long long)_mapkit_numberOfPhotosAvailableForFlatList;	// IMP=0x0000000000170dc5
- (id)_mapkit_resolvedFlatPhotoList;	// IMP=0x0000000000170b53
- (id)_mapkit_preferredFirstPhotoVendor;	// IMP=0x0000000000170ab5
- (_Bool)_mapkit_hasMultiplePhotoVendors;	// IMP=0x0000000000170a6c
- (_Bool)_mapkit_hasSinglePhotoVendor;	// IMP=0x0000000000170a23
- (_Bool)_mapkit_hasFlatListOfPhotos;	// IMP=0x00000000001709db
- (_Bool)_mapkit_supportsFullScreenExperience;	// IMP=0x000000000017085a
- (id)_restaurantLink_overridenBundleIDsForVendorIDs;	// IMP=0x00000000001e6338
- (id)_restaurantLink_firstProviderDisplayName;	// IMP=0x00000000001e6281
- (id)_restaurantLink_firstProviderPlaceIdentifier;	// IMP=0x00000000001e617e
- (id)_restaurantLink_firstVendorID;	// IMP=0x00000000001e609d
- (id)_restaurantLink_firstProviderIdentifier;	// IMP=0x00000000001e5f09
- (unsigned long long)_restaurantExtensionModeForFirstProvider;	// IMP=0x00000000001e5e6e
- (_Bool)_restaurantLink_hasFeatureType:(unsigned long long)arg1;	// IMP=0x00000000001e5dac
- (_Bool)_hasRestaurantExtensionInfo;	// IMP=0x00000000001e5cf9
- (id)_mapsDataString;	// IMP=0x00000000001f161d
- (id)_initWithLabelMarker:(id)arg1;	// IMP=0x00000000001f115a
- (id)_placeCardContact;	// IMP=0x00000000001f09c3
@property(readonly, getter=_isEmptyContactMapItem) _Bool isEmptyContactMapItem;
- (id)initWithContact:(id)arg1;	// IMP=0x00000000001f070c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

