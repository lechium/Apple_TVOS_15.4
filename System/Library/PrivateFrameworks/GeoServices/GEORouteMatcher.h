//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GEOComposedRoute, GEOPathMatcher, NSArray;

@interface GEORouteMatcher : NSObject
{
    GEOComposedRoute *_route;	// 8 = 0x8
    unsigned long long _targetLegIndex;	// 16 = 0x10
    _Bool _useStrictInitialOnRouteCriteria;	// 24 = 0x18
    double _maxMatchDistanceFromPreviousRouteMatch;	// 32 = 0x20
    _Bool _shouldSnapRouteMatchToRoute;	// 40 = 0x28
    _Bool _useMatchedCoordinateForMatching;	// 41 = 0x29
    GEOPathMatcher *_pathMatcher;	// 48 = 0x30
    NSArray *_snappedSegments;	// 56 = 0x38
}

- (void).cxx_destruct;	// IMP=0x0000000000c52bf3
@property(nonatomic) _Bool useMatchedCoordinateForMatching; // @synthesize useMatchedCoordinateForMatching=_useMatchedCoordinateForMatching;
@property(nonatomic) _Bool shouldSnapRouteMatchToRoute; // @synthesize shouldSnapRouteMatchToRoute=_shouldSnapRouteMatchToRoute;
@property(nonatomic) double maxMatchDistanceFromPreviousRouteMatch; // @synthesize maxMatchDistanceFromPreviousRouteMatch=_maxMatchDistanceFromPreviousRouteMatch;
@property(nonatomic) _Bool useStrictInitialOnRouteCriteria; // @synthesize useStrictInitialOnRouteCriteria=_useStrictInitialOnRouteCriteria;
@property(nonatomic) unsigned long long targetLegIndex; // @synthesize targetLegIndex=_targetLegIndex;
- (_Bool)_supportsSnapping;	// IMP=0x0000000000c52b9e
- (_Bool)_shouldConsiderCourseForLocation:(id)arg1;	// IMP=0x0000000000c52b89
- (double)_scoreModifierForStep:(id)arg1 previousStep:(id)arg2;	// IMP=0x0000000000c52b80
- (void)_finishRouteMatch:(id)arg1 previousRouteMatch:(id)arg2 forLocation:(id)arg3;	// IMP=0x0000000000c52acb
- (void)_considerCandidateMatch:(id)arg1;	// IMP=0x0000000000c52ac5
- (id)_candidateForSegment:(id)arg1 location:(id)arg2 previousRouteMatch:(id)arg3;	// IMP=0x0000000000c526a3
- (id)_startStepForPreviousRouteMatch:(id)arg1;	// IMP=0x0000000000c525a2
- (void)_startRouteMatch;	// IMP=0x0000000000c5259c
- (id)snappedSegmentForRouteCoordinate:(struct PolylineCoordinate)arg1;	// IMP=0x0000000000c523e2
- (id)snappedSegments;	// IMP=0x0000000000c523d4
- (void)_snapRouteMatchToRoad:(id)arg1;	// IMP=0x0000000000c52109
- (id)_stepForRouteCoordinate:(struct PolylineCoordinate)arg1 stepHint:(id)arg2;	// IMP=0x0000000000c5201c
- (void)_forEachSegmentNearLocation:(id)arg1 previousRouteMatch:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c51334
- (struct PolylineCoordinate)_guaranteedRouteCoordinateForLocationCoordinate:(CDStruct_c3b9c2ee)arg1;	// IMP=0x0000000000c51106
- (double)distanceToRouteFrom:(CDStruct_c3b9c2ee)arg1 startDistance:(double)arg2 endDistance:(double)arg3;	// IMP=0x0000000000c50df5
- (double)distanceToRouteFrom:(CDStruct_c3b9c2ee)arg1;	// IMP=0x0000000000c50dd8
- (struct PolylineCoordinate)closestRouteCoordinateForLocationCoordinate:(CDStruct_c3b9c2ee)arg1;	// IMP=0x0000000000c506c7
- (id)matchToClosestPointOnRouteWithLocation:(id)arg1;	// IMP=0x0000000000c504e5
- (id)matchToRouteWithLocation:(id)arg1 previousRouteMatch:(id)arg2;	// IMP=0x0000000000c4fc5b
- (id)matchToRouteWithLocation:(id)arg1;	// IMP=0x0000000000c4fc37
- (id)initWithRoute:(id)arg1;	// IMP=0x0000000000c4fb81

@end

