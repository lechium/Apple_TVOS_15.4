//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSMutableDictionary, NSMutableSet, NSUUID;
@protocol OS_dispatch_queue, OS_os_log, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface NIServerConnection : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    _Bool _resumed;	// 16 = 0x10
    _Bool _invalidated;	// 17 = 0x11
    NSObject<OS_xpc_object> *_conn;	// 24 = 0x18
    NSObject<OS_os_log> *_log;	// 32 = 0x20
    NSData *_tokenData;	// 40 = 0x28
    NSMutableSet *_peerTokens;	// 48 = 0x30
    NSMutableDictionary *_simulators;	// 56 = 0x38
    _Bool _xpcActive;	// 64 = 0x40
    _Bool _shouldInvalidateSessionOnXPCError;	// 65 = 0x41
    _Bool _isInterruptionReason_ApplicationNotVisible;	// 66 = 0x42
    _Bool _isDistanceUpdateRequestScheduled;	// 67 = 0x43
    _Bool _isAllowedToSimulateDirection;	// 68 = 0x44
    CDUnknownBlockType _interruptionHandler;	// 72 = 0x48
    CDUnknownBlockType _invalidationHandler;	// 80 = 0x50
    NSUUID *_sessionID;	// 88 = 0x58
    id _exportedObject;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x0000000000017681
@property(retain) id exportedObject; // @synthesize exportedObject=_exportedObject;
@property(readonly) NSUUID *sessionID; // @synthesize sessionID=_sessionID;
@property(copy) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
- (void)stopAllowingTasksToFinishWhileInBackground;	// IMP=0x00000000000175fe
- (id)allowTasksToFinishWhileInBackground;	// IMP=0x00000000000175f6
- (double)simulateErrorWithMaximum:(double)arg1 sigma:(double)arg2 maximum:(double)arg3;	// IMP=0x000000000001759b
- (double)randomUnivariateGaussian:(double)arg1 sigma:(double)arg2;	// IMP=0x000000000001750f
- (double)simulateAngleError;	// IMP=0x0000000000017506
- (double)simulateRangeError;	// IMP=0x00000000000174fd
- (void)setRangingPriorityPolicy:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000000174a2
- (void)getRangingPriorityPolicy:(CDUnknownBlockType)arg1;	// IMP=0x0000000000017445
- (void)processBluetoothEventWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000000000173ea
- (void)processDCKMessage:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001738d
- (void)_removeObject:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001737d
- (void)_addObject:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001736d
- (void)notifySystemShutdownWithReason:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001735d
- (void)pause:(CDUnknownBlockType)arg1;	// IMP=0x0000000000017236
- (void)runWithConfiguration:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016c71
- (void)activate:(CDUnknownBlockType)arg1;	// IMP=0x0000000000016720
- (void)_createAndActivateXPCConnectionToSimulatorIfNeededWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015ee3
- (id)generateDiscoveryTokenData;	// IMP=0x0000000000015e4a
- (void)queryDeviceCapabilities:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015be9
- (_Bool)_internalIsAllowedToSimulateDirection;	// IMP=0x0000000000015abf
- (_Bool)_internalIsSupported;	// IMP=0x000000000001584f
- (void)handleMessageFromSimulator:(id)arg1;	// IMP=0x0000000000015559
- (void)handleErrorMessageFromSimulator:(id)arg1;	// IMP=0x00000000000154e2
- (void)handleEventFromSimulatorOnQueue:(id)arg1;	// IMP=0x000000000001528e
- (void)handleDeviceShutdown:(id)arg1;	// IMP=0x000000000001500b
- (void)handleNewToken:(id)arg1;	// IMP=0x0000000000014e25
- (void)handleNewDevice:(id)arg1;	// IMP=0x0000000000014c3f
- (void)handleCancelToken:(id)arg1;	// IMP=0x0000000000014b2d
- (void)removeFromPeerTokensAndNotifyIfNecessary:(id)arg1;	// IMP=0x000000000001495f
- (id)nearbyObjectFromBase64EncodedString:(id)arg1;	// IMP=0x00000000000148d0
- (id)discoveryTokenFromBase64EncodedString:(id)arg1;	// IMP=0x0000000000014840
- (void)requestDistanceUpdate;	// IMP=0x00000000000145ec
- (void)handleDistanceUpdate:(id)arg1;	// IMP=0x00000000000142c8
- (void)_sendDistanceUpdateForRequestedPeer:(id)arg1 forPeer:(id)arg2;	// IMP=0x0000000000013a75
- (id)_findRequestedPeerDevicesInUpdates:(id)arg1;	// IMP=0x0000000000013716
- (id)_findSelfDeviceInUpdates:(id)arg1;	// IMP=0x0000000000013302
- (_Bool)areContinuousUpdatesRequired;	// IMP=0x0000000000013079
- (void)handleXPCConnectionInvalid;	// IMP=0x0000000000013042
- (void)handleXPCConnectionTermination;	// IMP=0x0000000000013028
- (void)handleXPCConnectionInterrupted;	// IMP=0x000000000001300e
- (void)handleXPCConnectionError;	// IMP=0x0000000000012ff4
- (CDStruct_6ad76789)auditTokenForConnection;	// IMP=0x0000000000012fe1
- (void)invalidate;	// IMP=0x0000000000012dec
- (void)resume;	// IMP=0x0000000000012dd6
- (id)findUDIDForToken:(id)arg1;	// IMP=0x0000000000012ba6
- (void)_simXPCCancelAndInvalidateSessionOnError:(_Bool)arg1;	// IMP=0x0000000000012b4d
- (void)_simXPCActivateIfAllowed;	// IMP=0x0000000000012af5
- (void)_simXPCResumeIfAllowed;	// IMP=0x0000000000012a9d
- (void)_simXPCSuspendIfAllowed;	// IMP=0x0000000000012a45
- (id)synchronousRemoteObjectProxy;	// IMP=0x0000000000012a3c
- (id)remoteObjectProxy;	// IMP=0x0000000000012a33
- (void)dealloc;	// IMP=0x00000000000129f3
- (id)initWithSessionID:(id)arg1 queue:(id)arg2 exportedObject:(id)arg3 options:(unsigned long long)arg4;	// IMP=0x000000000001283e

@end

