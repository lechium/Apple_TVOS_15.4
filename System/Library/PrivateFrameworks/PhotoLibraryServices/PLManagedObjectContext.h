//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreData/NSManagedObjectContext.h>

@class NSError, NSMutableDictionary, NSMutableSet, PLChangeHandlingContainer, PLDelayedFiledSystemDeletions, PLDelayedSaveActions, PLPhotoLibrary, PLPhotoLibraryPathManager;
@protocol PLManagedObjectContextPTPNotificationDelegate;

@interface PLManagedObjectContext : NSManagedObjectContext
{
    _Bool _hasMetadataChanges;	// 8 = 0x8
    _Bool _isConnectedToChangeHandling;	// 9 = 0x9
    _Bool _mergingChanges;	// 10 = 0xa
    _Bool _savingDuringMerge;	// 11 = 0xb
    _Bool _isInitializingSingletons;	// 12 = 0xc
    _Bool _isBackingALAssetsLibrary;	// 13 = 0xd
    _Bool _isObservingChangesForPTPNotificationDelegate;	// 14 = 0xe
    _Bool _needsBackgroundJobProcessing;	// 15 = 0xf
    PLDelayedFiledSystemDeletions *_delayedDeletions;	// 16 = 0x10
    NSMutableSet *_avalancheUUIDsForUpdate;	// 24 = 0x18
    NSMutableDictionary *_uuidsForCloudDeletion;	// 32 = 0x20
    _Bool _syncChangeMarker;	// 40 = 0x28
    NSMutableDictionary *_updatedObjectsAttributes;	// 48 = 0x30
    NSMutableDictionary *_updatedObjectsRelationships;	// 56 = 0x38
    PLPhotoLibrary *_photoLibrary;	// 64 = 0x40
    PLPhotoLibraryPathManager *_pathManager;	// 72 = 0x48
    PLDelayedSaveActions *_delayedSaveActions;	// 80 = 0x50
    PLChangeHandlingContainer *_changeHandlingContainer;	// 88 = 0x58
    struct os_unfair_lock_s _invalidationStateLock;	// 96 = 0x60
    NSError *_invalidationReason;	// 104 = 0x68
    double _lastResetTimestamp;	// 112 = 0x70
    _Bool _regenerateVideoThumbnails;	// 120 = 0x78
    int _changeSource;	// 124 = 0x7c
    id <PLManagedObjectContextPTPNotificationDelegate> _ptpNotificationDelegate;	// 128 = 0x80
}

+ (id)sanitizedErrorFromError:(id)arg1;	// IMP=0x0000000000166ebe
+ (_Bool)assetsLibraryLoggingEnabled;	// IMP=0x0000000000166e9f
+ (_Bool)_isAssetLibraryFetchingAlbum:(id)arg1;	// IMP=0x0000000000166e77
+ (id)changeNotificationObjectIDKeys;	// IMP=0x0000000000166e53
+ (id)changeNotificationObjectIDMutationKeys;	// IMP=0x0000000000166e2f
+ (id)changeNotificationObjectKeys;	// IMP=0x0000000000166e0b
+ (id)changeNotificationObjectMutationKeys;	// IMP=0x0000000000166de7
+ (void)recordChangedKeys:(id)arg1 forObjectID:(id)arg2 inAttributesByOID:(id)arg3 relationshipsByOID:(id)arg4;	// IMP=0x0000000000166b6a
+ (void)recordChangedProperties:(id)arg1 forObjectID:(id)arg2 inAttributesByOID:(id)arg3 relationshipsByOID:(id)arg4;	// IMP=0x0000000000166a92
+ (id)relationshipNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2;	// IMP=0x0000000000166a06
+ (unsigned long long)indexValueForRelationshipNames:(id)arg1 entity:(id)arg2;	// IMP=0x0000000000166978
+ (id)attributeNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2;	// IMP=0x00000000001668ec
+ (unsigned long long)indexValueForAttributeNames:(id)arg1 entity:(id)arg2;	// IMP=0x000000000016685e
+ (id)_propertyNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2 propertyNamesByIndexByEntityNames:(id)arg3;	// IMP=0x0000000000166713
+ (unsigned long long)_indexValueForPropertyNames:(id)arg1 entityName:(id)arg2 indexesByPropertyNamesByEntityNames:(id)arg3;	// IMP=0x0000000000166549
+ (id)_indexesByRelationshipNamesByEntityNames;	// IMP=0x000000000016652b
+ (id)_relationshipNamesByIndexByEntityNames;	// IMP=0x000000000016650d
+ (id)_indexesByAttributeNamesByEntityNames;	// IMP=0x00000000001664ef
+ (id)_attributeNamesByIndexByEntityNames;	// IMP=0x00000000001664d1
+ (void)__prepareEntityPropertyLookups;	// IMP=0x00000000001664b9
+ (id)__processSubEntityByName:(id)arg1 entity:(id)arg2 withEntityData:(id)arg3;	// IMP=0x0000000000165646
+ (id)__processEntityByName:(id)arg1 obj:(id)arg2;	// IMP=0x0000000000165516
+ (id)managedObjectModel;	// IMP=0x00000000001654fd
+ (id)managedObjectModelURL;	// IMP=0x00000000001654e4
+ (void)getPersistentStoreURL:(id *)arg1 options:(id *)arg2 forDatabasePath:(id)arg3;	// IMP=0x0000000000165487
+ (_Bool)hasConfiguredPhotoLibrary;	// IMP=0x000000000016546e
+ (_Bool)isInPLMocPerform;	// IMP=0x0000000000165437
+ (_Bool)shouldHavePhotoLibrary;	// IMP=0x000000000016542f
+ (void)removePhotosDatabaseWithPathManager:(id)arg1;	// IMP=0x0000000000165416
+ (_Bool)canMergeRemoteChanges;	// IMP=0x000000000016540e
+ (id)contextForRepairingSingletonObjects:(const char *)arg1 libraryURL:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000165043
+ (id)contextForPhotoLibrary:(id)arg1 automaticallyMerges:(_Bool)arg2 automaticallyPinToFirstFetch:(_Bool)arg3 name:(const char *)arg4;	// IMP=0x0000000000164b98
- (void).cxx_destruct;	// IMP=0x0000000000164017
@property(nonatomic) _Bool isBackingALAssetsLibrary; // @synthesize isBackingALAssetsLibrary=_isBackingALAssetsLibrary;
@property(nonatomic) _Bool isInitializingSingletons; // @synthesize isInitializingSingletons=_isInitializingSingletons;
@property(nonatomic) int changeSource; // @synthesize changeSource=_changeSource;
@property(nonatomic) _Bool regenerateVideoThumbnails; // @synthesize regenerateVideoThumbnails=_regenerateVideoThumbnails;
@property(nonatomic) _Bool hasMetadataChanges; // @synthesize hasMetadataChanges=_hasMetadataChanges;
@property(retain, nonatomic) PLDelayedFiledSystemDeletions *delayedDeletions; // @synthesize delayedDeletions=_delayedDeletions;
@property(readonly, nonatomic) _Bool savingDuringMerge; // @synthesize savingDuringMerge=_savingDuringMerge;
@property(readonly, nonatomic) _Bool mergingChanges; // @synthesize mergingChanges=_mergingChanges;
- (_Bool)shouldMergeFromRemoteContextWithChanges:(id)arg1;	// IMP=0x0000000000163f3a
- (void)tearDownLocalChangeNotifications;	// IMP=0x0000000000163f34
- (void)setupLocalChangeNotifications;	// IMP=0x0000000000163f2e
- (void)appendDelayedDeletionsToXPCMessage:(id)arg1;	// IMP=0x0000000000163eaa
- (void)_informPTPDelegateAboutChangesFromRemoteContextSaveNotification:(id)arg1;	// IMP=0x0000000000163bd0
- (void)_getInsertedIDs:(id)arg1 deletedIDs:(id)arg2 changedIDs:(id)arg3 adjustedIDs:(id)arg4 ofEntityKind:(id)arg5 fromRemoteContextDidSaveObjectIDsNotification:(id)arg6;	// IMP=0x00000000001636f3
- (_Bool)_adjustmentTimestampChangedChangedAttribute:(id)arg1 from:(id)arg2;	// IMP=0x0000000000163517
- (void)_mergeChangesFromDidSaveDictionary:(id)arg1 usingObjectIDs:(_Bool)arg2;	// IMP=0x00000000001631dc
- (void)resetAllFetchingAlbums;	// IMP=0x000000000016305d
- (void)_notifyALAssetsLibraryWithChanges:(id)arg1 usingObjectIDs:(_Bool)arg2;	// IMP=0x0000000000161b9b
- (id)pl_fetchObjectsWithIDs:(id)arg1;	// IMP=0x0000000000161523
- (id)pl_fetchObjectsWithIDs:(id)arg1 rootEntity:(id)arg2;	// IMP=0x0000000000161353
- (void)recordNeedsBackgroundJobProcessing;	// IMP=0x0000000000161342
- (_Bool)_tooManyAssetChangesToHandle:(unsigned long long)arg1;	// IMP=0x0000000000161301
- (void)updateTransactionAuthor;	// IMP=0x00000000001611e7
- (_Bool)getAndClearSyncChangeMarker;	// IMP=0x00000000001611a1
- (void)recordSyncChangeMarker;	// IMP=0x0000000000161184
- (id)getAndClearRecordedObjectsForCloudDeletion;	// IMP=0x0000000000161139
- (void)_addCloudUUID:(id)arg1 forDeletionType:(long long)arg2;	// IMP=0x0000000000160fb7
- (void)recordCloudDeletionForObject:(id)arg1;	// IMP=0x0000000000160d91
- (id)getAndClearRecordedAvalancheUUIDsForUpdate;	// IMP=0x0000000000160d46
- (void)recordAvalancheUUIDForUpdate:(id)arg1;	// IMP=0x0000000000160c2f
- (void)registerFilesystemDeletionInfo:(id)arg1;	// IMP=0x0000000000160ba0
- (_Bool)hasPreviouslyMergedDeleteForObject:(id)arg1;	// IMP=0x0000000000160ae6
- (void)_destroyDelayedSaveActions;	// IMP=0x0000000000160ac5
- (void)_createDelayedSaveActionsWithTransaction:(id)arg1;	// IMP=0x0000000000160a5d
@property(readonly, nonatomic) PLDelayedSaveActions *delayedSaveActions;
- (void)getAndClearUpdatedObjectsAttributes:(id *)arg1 relationships:(id *)arg2;	// IMP=0x000000000016099f
- (void)_recordChangedKeys:(id)arg1 forObjectID:(id)arg2;	// IMP=0x000000000016096d
- (void)recordChangesFromTriggerModifiedObjectIDs:(id)arg1;	// IMP=0x0000000000160685
- (void)recordManagedObjectWillSave:(id)arg1;	// IMP=0x0000000000160500
- (void)disconnectFromChangeHandling;	// IMP=0x00000000001604cd
- (void)connectToChangeHandling;	// IMP=0x0000000000160461
- (double)lastResetTimestamp;	// IMP=0x000000000016044f
- (_Bool)pl_performWithOptions:(unsigned long long)arg1 andBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001603ea
- (void)setName:(id)arg1;	// IMP=0x00000000001602f9
- (void)breakRetainCycles;	// IMP=0x00000000001601f1
- (void)performWithOptions:(unsigned long long)arg1 andBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000160146
- (void)performBlockAndWait:(CDUnknownBlockType)arg1;	// IMP=0x00000000001600a7
- (void)performBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000160008
- (void)refreshAllObjects;	// IMP=0x000000000015ffb7
- (void)reset;	// IMP=0x000000000015ff66
- (_Bool)obtainPermanentIDsForObjects:(id)arg1 error:(id *)arg2;	// IMP=0x000000000015feac
- (_Bool)save:(id *)arg1;	// IMP=0x000000000015f9d8
- (unsigned long long)countForFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000015f8c8
- (id)executeRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000015f7c2
- (id)pl_executeFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000015f5e5
- (id)executeFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000015f4f0
- (id)existingObjectWithID:(id)arg1 error:(id *)arg2;	// IMP=0x000000000015f3ea
- (void)invalidateWithReason:(id)arg1;	// IMP=0x000000000015f21b
- (_Bool)isValidForSelector:(SEL)arg1 error:(id *)arg2;	// IMP=0x000000000015f0ee
- (id)libraryBundle;	// IMP=0x000000000015f02b
- (id)pathManager;	// IMP=0x000000000015ef92
- (_Bool)isReadOnly;	// IMP=0x000000000015eefd
- (void)withDispatchGroup:(id)arg1 performBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000015ee36
- (id)storeUUID;	// IMP=0x000000000015ed6b
- (_Bool)isDatabaseCreationContext;	// IMP=0x000000000015ed63
@property(readonly, nonatomic) _Bool isUserInterfaceContext;
@property(nonatomic) __weak id <PLManagedObjectContextPTPNotificationDelegate> ptpNotificationDelegate; // @synthesize ptpNotificationDelegate=_ptpNotificationDelegate;
@property(nonatomic) __weak PLPhotoLibrary *photoLibrary;
- (void)dealloc;	// IMP=0x000000000015ea27
- (id)initWithConcurrencyType:(unsigned long long)arg1 pathManager:(id)arg2 changeHandlingContainer:(id)arg3 coordinator:(id)arg4;	// IMP=0x000000000015e73f
- (id)initWithConcurrencyType:(unsigned long long)arg1 libraryBundle:(id)arg2;	// IMP=0x000000000015e651

@end

