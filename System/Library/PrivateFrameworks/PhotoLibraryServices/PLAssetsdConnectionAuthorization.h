//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PhotoLibraryServices/PLClientAuthorization-Protocol.h>

@class NSNumber, NSSet, NSString, PLSandboxedURL;

@interface PLAssetsdConnectionAuthorization : NSObject <PLClientAuthorization>
{
    CDStruct_4c969caf _auditToken;	// 8 = 0x8
    NSSet *_photoKitEntitlements;	// 40 = 0x28
    NSNumber *_photosAccessAllowed;	// 48 = 0x30
    NSNumber *_photosAddAccessAllowed;	// 56 = 0x38
    _Bool _libraryUpgradeAuthorized;	// 64 = 0x40
    _Bool _directDatabaseAccessAuthorized;	// 65 = 0x41
    _Bool _directDatabaseWriteAuthorized;	// 66 = 0x42
    _Bool _isEntitledForPhotoKitOrPrivatePhotosTCC;	// 67 = 0x43
    NSString *_fetchFilterIdentifier;	// 72 = 0x48
    PLSandboxedURL *_clientMainBundleSandboxedURL;	// 80 = 0x50
    _Bool _photoKitEntitled;	// 88 = 0x58
    _Bool _cloudInternalEntitled;	// 89 = 0x59
    _Bool _analyticsCacheReadEntitled;	// 90 = 0x5a
    _Bool _analyticsCacheWriteEntitled;	// 91 = 0x5b
    _Bool _clientLimitedLibraryCapable;	// 92 = 0x5c
    _Bool _clientIsSandboxed;	// 93 = 0x5d
    _Bool _photosDataVaultEntitled;	// 94 = 0x5e
    _Bool _internalDataReadWriteAuthorized;	// 95 = 0x5f
    int _clientProcessIdentifier;	// 96 = 0x60
    NSString *_trustedCallerBundleID;	// 104 = 0x68
    NSString *_trustedCallerDisplayName;	// 112 = 0x70
    NSString *_trustedCallerPhotoLibraryUsageDescription;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x000000000048a578
@property(readonly, nonatomic) _Bool internalDataReadWriteAuthorized; // @synthesize internalDataReadWriteAuthorized=_internalDataReadWriteAuthorized;
@property(readonly, nonatomic) _Bool photosDataVaultEntitled; // @synthesize photosDataVaultEntitled=_photosDataVaultEntitled;
@property(readonly, nonatomic) _Bool clientIsSandboxed; // @synthesize clientIsSandboxed=_clientIsSandboxed;
@property(readonly, nonatomic, getter=isClientLimitedLibraryCapable) _Bool clientLimitedLibraryCapable; // @synthesize clientLimitedLibraryCapable=_clientLimitedLibraryCapable;
@property(readonly, nonatomic) _Bool analyticsCacheWriteEntitled; // @synthesize analyticsCacheWriteEntitled=_analyticsCacheWriteEntitled;
@property(readonly, nonatomic) _Bool analyticsCacheReadEntitled; // @synthesize analyticsCacheReadEntitled=_analyticsCacheReadEntitled;
@property(readonly, nonatomic) _Bool cloudInternalEntitled; // @synthesize cloudInternalEntitled=_cloudInternalEntitled;
@property(readonly, nonatomic) _Bool photoKitEntitled; // @synthesize photoKitEntitled=_photoKitEntitled;
@property(readonly, nonatomic) NSString *trustedCallerBundleID; // @synthesize trustedCallerBundleID=_trustedCallerBundleID;
@property(readonly, nonatomic) int clientProcessIdentifier; // @synthesize clientProcessIdentifier=_clientProcessIdentifier;
- (void)handleInvalidation;	// IMP=0x000000000048a517
- (_Bool)photoKitEntitledFor:(id)arg1;	// IMP=0x000000000048a501
@property(readonly, nonatomic) NSString *fetchFilterIdentifier; // @synthesize fetchFilterIdentifier=_fetchFilterIdentifier;
@property(readonly, nonatomic) NSString *trustedCallerPhotoLibraryUsageDescription; // @synthesize trustedCallerPhotoLibraryUsageDescription=_trustedCallerPhotoLibraryUsageDescription;
@property(readonly, nonatomic) NSString *trustedCallerDisplayName; // @synthesize trustedCallerDisplayName=_trustedCallerDisplayName;
- (_Bool)_shouldTrackEventForBundle:(id)arg1;	// IMP=0x000000000048a018
- (void)_trackCAConnectionEvent;	// IMP=0x0000000000489c8d
- (void)setupFromConnection:(id)arg1;	// IMP=0x00000000004896e3
@property(readonly, nonatomic) CDStruct_4c969caf clientAuditToken;
- (_Bool)isClientAuthorizedForSandboxExtensions;	// IMP=0x000000000048967b
- (_Bool)isPhotosClient;	// IMP=0x000000000048965e
@property(readonly, nonatomic) _Bool directDatabaseWriteAuthorized;
@property(readonly, nonatomic) _Bool directDatabaseAccessAuthorized;
- (_Bool)isClientAuthorizedForLibraryUpgrade;	// IMP=0x0000000000489643
- (void)setClientMainBundleSandboxedURL:(id)arg1;	// IMP=0x0000000000489632
- (void)setClientLimitedLibraryCapable:(_Bool)arg1;	// IMP=0x0000000000489629
- (_Bool)isClientInRestrictedMode;	// IMP=0x00000000004895a2
- (_Bool)isClientInFullLibraryMode;	// IMP=0x000000000048951c
- (_Bool)isClientInLimitedLibraryMode;	// IMP=0x0000000000489495
@property(readonly, nonatomic) _Bool limitedLibraryMode;
- (_Bool)isClientEntitledForPhotoKitOrPrivatePhotosTCC;	// IMP=0x000000000048947a
- (void)invalidateClientAuthorizationCache;	// IMP=0x0000000000489441
@property(readonly, nonatomic, getter=isClientAuthorizedForTCCServicePhotosAdd) _Bool clientAuthorizedForTCCServicePhotosAdd;
@property(readonly, nonatomic, getter=isClientAuthorizedForTCCServicePhotos) _Bool clientAuthorizedForTCCServicePhotos;
@property(readonly, copy) NSString *description;
- (id)initWithConnection:(id)arg1;	// IMP=0x00000000004891f6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

