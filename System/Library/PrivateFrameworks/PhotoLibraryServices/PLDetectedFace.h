//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotoLibraryServices/PLSyncableDetectedFace-Protocol.h>

@class NSDate, NSSet, NSString, PLDetectedFaceGroup, PLDetectedFaceprint, PLFaceCrop, PLManagedAsset, PLPerson;

@interface PLDetectedFace <PLSyncableDetectedFace>
{
}

+ (id)predicateToExcludeBodyOnlyDetection;	// IMP=0x0000000000239d46
+ (id)predicateForIncludedDetectionTypes:(id)arg1;	// IMP=0x0000000000239c6d
+ (id)predicateForFaceCountTrigger;	// IMP=0x0000000000239c32
+ (id)predicateForArchival;	// IMP=0x0000000000239beb
+ (id)predicatesForFacesNeedingFaceCropGeneration;	// IMP=0x0000000000239a53
+ (id)predicatesToExcludeNonVisibleFaces;	// IMP=0x0000000000239880
+ (void)batchFetchKeyFaceByPersonObjectIDWithPersonObjectIDs:(id)arg1 library:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002396ab
+ (void)batchFetchDetectedFacesByAssetUUIDWithAssetUUIDs:(id)arg1 predicate:(id)arg2 library:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000002394ae
+ (unsigned long long)countOfHiddenFacesOnAssetsWithObjectIDs:(id)arg1 inManagedObjectContext:(id)arg2;	// IMP=0x00000000002392f9
+ (id)detectedFaceWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;	// IMP=0x0000000000239158
+ (id)entityName;	// IMP=0x000000000023914b
+ (void)enumerateAssetUUIDsForSearchIndexingWithDetctedFaceUUIDs:(id)arg1 managedObjectContext:(id)arg2 assetUUIDHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000112a65
+ (void)resetCloudStateInPhotoLibrary:(id)arg1;	// IMP=0x00000000004d9163
+ (long long)resetAssetForAllSyncableFacesInManagedObjectContext:(id)arg1 error:(id *)arg2;	// IMP=0x00000000004d8fc7
+ (id)syncableFacesToUploadInitiallyInLibrary:(id)arg1 limit:(unsigned long long)arg2;	// IMP=0x00000000004d8f3b
+ (id)_syncableFacesToUploadInitiallyPredicate;	// IMP=0x00000000004d8e1d
+ (id)syncableFacesPredicate;	// IMP=0x00000000004d8df9
+ (id)_facesMatchingPredicate:(id)arg1 limit:(unsigned long long)arg2 inPhotoLibrary:(id)arg3;	// IMP=0x00000000004d8c01
+ (id)findExistingFaceMatchingDimension:(id)arg1 inFaces:(id)arg2 ignoreSourceAssetDimensions:(_Bool)arg3;	// IMP=0x00000000004d8a95
@property(nonatomic) int effectiveNameSource;
- (void)addClusterRejectedPerson:(id)arg1;	// IMP=0x000000000023905d
- (void)addRejectedPersonNeedingFaceCrops:(id)arg1;	// IMP=0x0000000000238f85
- (void)addRejectedPerson:(id)arg1;	// IMP=0x0000000000238ee8
- (id)namingDescription;	// IMP=0x0000000000238e28
- (id)debugLogDescription;	// IMP=0x0000000000238825
- (void)removeFaceprint;	// IMP=0x00000000002387a9
- (void)_verifyAssetRelationship;	// IMP=0x00000000002385c0
- (_Bool)isTorsoOnly;	// IMP=0x000000000023859c
@property(readonly, nonatomic) _Bool isTrainingFace;
- (void)_updateFaceGroupIfNeeded;	// IMP=0x0000000000238395
- (void)_touchPersonForPersistenceIfNeeded;	// IMP=0x0000000000238286
- (void)willSave;	// IMP=0x0000000000237c02
- (void)delete;	// IMP=0x0000000000237bb6
- (void)awakeFromInsert;	// IMP=0x0000000000237b41
- (_Bool)validForPersistenceChangedForChangedKeys:(id)arg1;	// IMP=0x00000000003c498e
- (id)payloadIDForTombstone:(id)arg1;	// IMP=0x00000000003c4921
- (id)payloadForChangedKeys:(id)arg1;	// IMP=0x00000000003c48b9
- (id)payloadID;	// IMP=0x00000000003c4856
- (_Bool)isValidForJournalPersistence;	// IMP=0x00000000003c47cf
- (double)photosFaceRepresentationQuality;	// IMP=0x00000000004d8a83
- (double)photosFaceRepresentationRoll;	// IMP=0x00000000004d8a71
- (id)photosFaceRepresentationLocalIdentifier;	// IMP=0x00000000004d8994
- (long long)photosFaceRepresentationClusterSequenceNumber;	// IMP=0x00000000004d897f
- (long long)photosFaceRepresentationQualityMeasure;	// IMP=0x00000000004d896a
- (_Bool)photosFaceRepresentationIsRightEyeClosed;	// IMP=0x00000000004d8958
- (_Bool)photosFaceRepresentationIsLeftEyeClosed;	// IMP=0x00000000004d8946
- (_Bool)photosFaceRepresentationHasSmile;	// IMP=0x00000000004d8934
- (double)photosFaceRepresentationBlurScore;	// IMP=0x00000000004d8922
- (double)photosFaceRepresentationSize;	// IMP=0x00000000004d8910
- (double)photosFaceRepresentationCenterY;	// IMP=0x00000000004d88fe
- (double)photosFaceRepresentationCenterX;	// IMP=0x00000000004d88ec
- (long long)photosFaceRepresentationSourceHeight;	// IMP=0x00000000004d88da
- (long long)photosFaceRepresentationSourceWidth;	// IMP=0x00000000004d88c8
- (id)syncDescription;	// IMP=0x00000000004d87bb
- (id)momentShare;	// IMP=0x00000000004d87b3
- (id)cplFullRecord;	// IMP=0x00000000004d8736
@property(readonly, retain, nonatomic) id localID;
- (_Bool)isSyncableChange;	// IMP=0x00000000004d84b4
- (_Bool)supportsCloudUpload;	// IMP=0x00000000004d8476

// Remaining properties
@property(retain, nonatomic) NSDate *adjustmentVersion; // @dynamic adjustmentVersion;
@property(nonatomic) unsigned short ageType; // @dynamic ageType;
@property(retain, nonatomic) PLManagedAsset *asset; // @dynamic asset;
@property(readonly, nonatomic) _Bool assetVisible; // @dynamic assetVisible;
@property(nonatomic) double blurScore; // @dynamic blurScore;
@property(nonatomic) double bodyCenterX; // @dynamic bodyCenterX;
@property(nonatomic) double bodyCenterY; // @dynamic bodyCenterY;
@property(nonatomic) double bodyHeight; // @dynamic bodyHeight;
@property(nonatomic) double bodyWidth; // @dynamic bodyWidth;
@property(nonatomic) double centerX; // @dynamic centerX;
@property(nonatomic) double centerY; // @dynamic centerY;
@property(nonatomic) short cloudLocalState; // @dynamic cloudLocalState;
@property(nonatomic) int cloudNameSource; // @dynamic cloudNameSource;
@property(retain, nonatomic) NSSet *clusterRejectedPersons; // @dynamic clusterRejectedPersons;
@property(nonatomic) int clusterSequenceNumber; // @dynamic clusterSequenceNumber;
@property(nonatomic) short confirmedFaceCropGenerationState; // @dynamic confirmedFaceCropGenerationState;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSSet *detectionTraits; // @dynamic detectionTraits;
@property(nonatomic) short detectionType; // @dynamic detectionType;
@property(nonatomic) unsigned short ethnicityType; // @dynamic ethnicityType;
@property(nonatomic) unsigned short eyeMakeupType; // @dynamic eyeMakeupType;
@property(nonatomic) unsigned short eyesState; // @dynamic eyesState;
@property(nonatomic) int faceAlgorithmVersion; // @dynamic faceAlgorithmVersion;
@property(retain, nonatomic) PLFaceCrop *faceCrop; // @dynamic faceCrop;
@property(nonatomic) unsigned short faceExpressionType; // @dynamic faceExpressionType;
@property(retain, nonatomic) PLDetectedFaceGroup *faceGroup; // @dynamic faceGroup;
@property(retain, nonatomic) PLDetectedFaceGroup *faceGroupBeingKeyFace; // @dynamic faceGroupBeingKeyFace;
@property(retain, nonatomic) PLDetectedFaceprint *faceprint; // @dynamic faceprint;
@property(nonatomic) unsigned short facialHairType; // @dynamic facialHairType;
@property(nonatomic) double gazeCenterX; // @dynamic gazeCenterX;
@property(nonatomic) double gazeCenterY; // @dynamic gazeCenterY;
@property(nonatomic) unsigned short gazeType; // @dynamic gazeType;
@property(nonatomic) unsigned short genderType; // @dynamic genderType;
@property(nonatomic) unsigned short glassesType; // @dynamic glassesType;
@property(retain, nonatomic) NSString *groupingIdentifier; // @dynamic groupingIdentifier;
@property(nonatomic) unsigned short hairColorType; // @dynamic hairColorType;
@property(nonatomic) unsigned short hairType; // @dynamic hairType;
@property(nonatomic) _Bool hasFaceMask; // @dynamic hasFaceMask;
@property(nonatomic) _Bool hasSmile; // @dynamic hasSmile;
@property(readonly) unsigned long long hash;
@property(nonatomic) unsigned short headgearType; // @dynamic headgearType;
@property(nonatomic) _Bool hidden; // @dynamic hidden;
@property(nonatomic) _Bool isInTrash; // @dynamic isInTrash;
@property(nonatomic) _Bool isLeftEyeClosed; // @dynamic isLeftEyeClosed;
@property(nonatomic) _Bool isRightEyeClosed; // @dynamic isRightEyeClosed;
@property(nonatomic) double leftEyeX; // @dynamic leftEyeX;
@property(nonatomic) double leftEyeY; // @dynamic leftEyeY;
@property(nonatomic) unsigned short lipMakeupType; // @dynamic lipMakeupType;
@property(nonatomic) _Bool manual; // @dynamic manual;
@property(retain, nonatomic) NSString *masterIdentifier; // @dynamic masterIdentifier;
@property(nonatomic) double mouthX; // @dynamic mouthX;
@property(nonatomic) double mouthY; // @dynamic mouthY;
@property(nonatomic) int nameSource; // @dynamic nameSource;
@property(retain, nonatomic) PLPerson *person; // @dynamic person;
@property(retain, nonatomic) PLPerson *personBeingKeyFace; // @dynamic personBeingKeyFace;
@property(nonatomic) unsigned short poseType; // @dynamic poseType;
@property(nonatomic) double poseYaw; // @dynamic poseYaw;
@property(nonatomic) double quality; // @dynamic quality;
@property(nonatomic) int qualityMeasure; // @dynamic qualityMeasure;
@property(retain, nonatomic) NSSet *rejectedPersons; // @dynamic rejectedPersons;
@property(retain, nonatomic) NSSet *rejectedPersonsNeedingFaceCrops; // @dynamic rejectedPersonsNeedingFaceCrops;
@property(nonatomic) double rightEyeX; // @dynamic rightEyeX;
@property(nonatomic) double rightEyeY; // @dynamic rightEyeY;
@property(nonatomic) double roll; // @dynamic roll;
@property(nonatomic) double size; // @dynamic size;
@property(nonatomic) unsigned short skintoneType; // @dynamic skintoneType;
@property(nonatomic) unsigned short smileType; // @dynamic smileType;
@property(nonatomic) long long sourceHeight; // @dynamic sourceHeight;
@property(nonatomic) long long sourceWidth; // @dynamic sourceWidth;
@property(readonly) Class superclass;
@property(nonatomic) int trainingType; // @dynamic trainingType;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;
@property(nonatomic) short vipModelType; // @dynamic vipModelType;
@property(nonatomic) double yaw; // @dynamic yaw;

@end

