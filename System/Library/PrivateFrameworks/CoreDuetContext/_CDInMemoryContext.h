//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreDuetContext/_CDContextInternal-Protocol.h>
#import <CoreDuetContext/_CDLocalContext-Protocol.h>

@class NSMutableDictionary, NSString, _CDContextualLocationRegistrationMonitor, _CDDevice, _CDSystemTimeCallbackScheduler;
@protocol OS_dispatch_queue, OS_dispatch_workloop;

@interface _CDInMemoryContext : NSObject <_CDLocalContext, _CDContextInternal>
{
    NSString *_deviceID;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_syncQueue;	// 16 = 0x10
    NSObject<OS_dispatch_workloop> *_callbackWorkloop;	// 24 = 0x18
    NSMutableDictionary *_context;	// 32 = 0x20
    _CDContextualLocationRegistrationMonitor *_locationRegistrationMonitor;	// 40 = 0x28
    NSMutableDictionary *_registrations;	// 48 = 0x30
    _CDSystemTimeCallbackScheduler *_systemTimeCallbackScheduler;	// 56 = 0x38
    _CDDevice *_device;	// 64 = 0x40
}

+ (id)contextWithDeviceID:(id)arg1;	// IMP=0x00000000000140f4
+ (id)context;	// IMP=0x00000000000140db
- (void).cxx_destruct;	// IMP=0x00000000000199b7
@property(retain, nonatomic) _CDDevice *device; // @synthesize device=_device;
@property(retain, nonatomic) _CDSystemTimeCallbackScheduler *systemTimeCallbackScheduler; // @synthesize systemTimeCallbackScheduler=_systemTimeCallbackScheduler;
@property(retain, nonatomic) NSMutableDictionary *registrations; // @synthesize registrations=_registrations;
@property(retain, nonatomic) _CDContextualLocationRegistrationMonitor *locationRegistrationMonitor; // @synthesize locationRegistrationMonitor=_locationRegistrationMonitor;
@property(retain, nonatomic) NSMutableDictionary *context; // @synthesize context=_context;
@property(retain, nonatomic) NSObject<OS_dispatch_workloop> *callbackWorkloop; // @synthesize callbackWorkloop=_callbackWorkloop;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
- (id)description;	// IMP=0x00000000000198b2
- (id)allRegistrations;	// IMP=0x000000000001960e
- (id)unsafe_evaluatedContextWithRegistration:(id)arg1 date:(id)arg2;	// IMP=0x000000000001940f
- (void)unsafe_deregisterForSystemTimeBasedCallbacksForRegistration:(id)arg1;	// IMP=0x0000000000019131
- (void)unsafe_registerFutureSystemTimeBasedCallbacksForRegistration:(id)arg1 date:(id)arg2;	// IMP=0x0000000000018c75
- (void)unsafe_registerFutureSystemTimeBasedCallbacksForRegistrations:(id)arg1 date:(id)arg2;	// IMP=0x0000000000018a05
- (void)unsafe_evalutateRegistrationPredicate:(id)arg1 previousContextValue:(id)arg2 date:(id)arg3 keyPath:(id)arg4;	// IMP=0x0000000000017872
- (void)unsafe_evalutateRegistrationPredicatesWithPreviousContextValue:(id)arg1 date:(id)arg2 keyPath:(id)arg3;	// IMP=0x0000000000017669
- (void)evalutateRegistrationPredicatesWithPreviousContextValue:(id)arg1 date:(id)arg2 keyPath:(id)arg3;	// IMP=0x000000000001755e
- (_Bool)evaluatePredicate:(id)arg1 date:(id)arg2;	// IMP=0x00000000000173f5
- (void)deregisterCallback:(id)arg1;	// IMP=0x0000000000017309
- (void)unsafe_deregisterCallback:(id)arg1;	// IMP=0x0000000000016dfa
- (void)registerCallback:(id)arg1;	// IMP=0x0000000000016c70
- (void)addCallback:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x0000000000016692
- (_Bool)removeObjects:(id)arg1 fromArrayAtKeyPath:(id)arg2;	// IMP=0x00000000000165fb
- (_Bool)addObjects:(id)arg1 toArrayAtKeyPath:(id)arg2;	// IMP=0x0000000000016564
- (_Bool)addObjects:(id)arg1 andRemoveObjects:(id)arg2 fromArrayAtKeyPath:(id)arg3;	// IMP=0x00000000000164a1
- (id)unsafe_addObjects:(id)arg1 andRemoveObjects:(id)arg2 fromArrayAtKeyPath:(id)arg3 valueDidChange:(_Bool *)arg4;	// IMP=0x0000000000015f99
- (id)addObjects:(id)arg1 andRemoveObjects:(id)arg2 fromArrayAtKeyPath:(id)arg3 valueDidChange:(_Bool *)arg4;	// IMP=0x0000000000015cea
- (id)removeObjectsMatchingPredicate:(id)arg1 fromArrayAtKeyPath:(id)arg2 removedObjects:(id *)arg3;	// IMP=0x000000000001593b
- (id)removeObjectsMatchingPredicate:(id)arg1 fromArrayAtKeyPath:(id)arg2;	// IMP=0x00000000000158fb
- (_Bool)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x00000000000158e9
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x00000000000158d7
- (id)propertiesForContextualKeyPath:(id)arg1;	// IMP=0x000000000001576f
- (id)lastModifiedDateForContextualKeyPath:(id)arg1;	// IMP=0x00000000000155ff
- (_Bool)setObject:(id)arg1 forContextualKeyPath:(id)arg2;	// IMP=0x0000000000015494
- (id)setObject:(id)arg1 returningMetadataForContextualKeyPath:(id)arg2;	// IMP=0x0000000000015325
- (id)unsafe_setObject:(id)arg1 returningMetadataForContextualKeyPath:(id)arg2;	// IMP=0x0000000000014ee5
- (void)setContextValue:(id)arg1 forContextualKeyPath:(id)arg2;	// IMP=0x0000000000014dc3
- (id)objectForContextualKeyPath:(id)arg1;	// IMP=0x0000000000014bcc
- (_Bool)hasKnowledgeOfContextualKeyPath:(id)arg1;	// IMP=0x0000000000014a66
- (void)receiveSystemTimeCallback:(id)arg1;	// IMP=0x0000000000014982
- (void)locationCoordinatorCircularRegionsDidChange:(id)arg1;	// IMP=0x000000000001414a
- (void)dealloc;	// IMP=0x000000000001400d
- (id)init;	// IMP=0x0000000000013e53

@end

