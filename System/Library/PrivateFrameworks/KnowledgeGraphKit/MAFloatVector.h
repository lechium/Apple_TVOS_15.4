//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <KnowledgeGraphKit/NSCopying-Protocol.h>
#import <KnowledgeGraphKit/NSMutableCopying-Protocol.h>

@class _TtC17KnowledgeGraphKit20MAFloatVectorWrapper;

@interface MAFloatVector : NSObject <NSCopying, NSMutableCopying>
{
    _TtC17KnowledgeGraphKit20MAFloatVectorWrapper *_wrapper;	// 8 = 0x8
}

+ (id)meanVectorWithFloatVectors:(id)arg1;	// IMP=0x0000000000117fa8
+ (id)vectorRepeatingFloat:(float)arg1 count:(long long)arg2;	// IMP=0x0000000000117f22
+ (id)onesOfCount:(long long)arg1;	// IMP=0x0000000000117eae
+ (id)zerosOfCount:(long long)arg1;	// IMP=0x0000000000117e3a
+ (Class)wrapperClass;	// IMP=0x0000000000117e29
- (void).cxx_destruct;	// IMP=0x0000000000117811
@property(readonly, nonatomic) _TtC17KnowledgeGraphKit20MAFloatVectorWrapper *wrapper; // @synthesize wrapper=_wrapper;
- (_Bool)_isArrayOfFloats:(id)arg1;	// IMP=0x0000000000117773
- (id)debugDescription;	// IMP=0x0000000000117723
- (id)description;	// IMP=0x00000000001176d3
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000117650
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000117645
- (unsigned long long)hash;	// IMP=0x0000000000117601
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000011752e
- (_Bool)isApproximatelyEqualTo:(id)arg1 epsilon:(float)arg2;	// IMP=0x000000000011744e
- (_Bool)isApproximatelyEqualTo:(id)arg1;	// IMP=0x000000000011737b
- (id)sliceFromStart:(long long)arg1 toEnd:(long long)arg2;	// IMP=0x00000000001172ee
- (id)vectorByAppendingArray:(id)arg1;	// IMP=0x0000000000117241
- (id)vectorByAppendingVector:(id)arg1;	// IMP=0x0000000000117176
- (id)vectorByAppendingDoubles:(const double *)arg1 count:(long long)arg2;	// IMP=0x00000000001170d9
- (id)vectorByAppendingFloats:(const float *)arg1 count:(long long)arg2;	// IMP=0x000000000011703c
- (id)vectorByAppendingFloat:(float)arg1;	// IMP=0x0000000000116fa4
- (id)vectorByElementwiseNaturalLogarithmIfPositive;	// IMP=0x0000000000116f1a
- (id)vectorByElementwiseNaturalLogarithm;	// IMP=0x0000000000116e90
- (id)vectorByElementwiseRaisingToExponent:(float)arg1;	// IMP=0x0000000000116df4
- (float)dotProductWithVector:(id)arg1;	// IMP=0x0000000000116d5f
- (id)vectorByElementwiseMultiplyingByVector:(id)arg1;	// IMP=0x0000000000116c95
- (id)vectorByDividingByScalar:(float)arg1;	// IMP=0x0000000000116bf9
- (id)vectorByMultiplyingByScalar:(float)arg1;	// IMP=0x0000000000116b5d
- (id)vectorByAddingScalar:(float)arg1;	// IMP=0x0000000000116ac1
- (id)vectorBySubtractingScalar:(float)arg1;	// IMP=0x0000000000116a25
- (id)vectorByAddingVector:(id)arg1;	// IMP=0x000000000011695b
- (id)vectorBySubtractingVector:(id)arg1;	// IMP=0x0000000000116891
- (id)data;	// IMP=0x0000000000116841
- (id)array;	// IMP=0x00000000001167f1
- (float)floatAtIndex:(long long)arg1;	// IMP=0x000000000011679a
- (float)standardDeviation;	// IMP=0x000000000011674a
- (float)mean;	// IMP=0x00000000001166fa
- (float)sumOfSquares;	// IMP=0x00000000001166aa
- (float)sum;	// IMP=0x000000000011665a
@property(readonly, nonatomic) long long count;
- (id)initWithData:(id)arg1;	// IMP=0x0000000000116597
- (id)initWithArray:(id)arg1;	// IMP=0x00000000001164fc
- (id)initWithFloats:(const float *)arg1 count:(long long)arg2;	// IMP=0x0000000000116469
- (id)initWithWrapper:(id)arg1;	// IMP=0x00000000001163fe
- (id)init;	// IMP=0x0000000000116394

@end

