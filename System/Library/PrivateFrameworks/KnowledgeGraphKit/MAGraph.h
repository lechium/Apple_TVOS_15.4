//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class KGStoredGraph, NSMutableDictionary;

@interface MAGraph
{
    KGStoredGraph *_graph;	// 8 = 0x8
    NSMutableDictionary *_labelByDomain;	// 16 = 0x10
    NSMutableDictionary *_domainByLabel;	// 24 = 0x18
}

+ (_Bool)destroyPersistentStoreAtURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000114387
+ (_Bool)migratePersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;	// IMP=0x000000000011436e
+ (_Bool)copyPersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000114355
+ (id)persistentStoreURLWithPath:(id)arg1 andName:(id)arg2;	// IMP=0x000000000011426a
+ (id)persistentStoreFileExtension;	// IMP=0x0000000000114251
- (void).cxx_destruct;	// IMP=0x00000000000cedf0
@property(readonly, nonatomic) KGStoredGraph *graph; // @synthesize graph=_graph;
- (void)waitUntilQuiescentUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cedce
- (void)readUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cedbd
- (void)writeUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cedac
- (_Bool)hasPendingWrite;	// IMP=0x00000000000ceda4
- (_Bool)hasPendingRead;	// IMP=0x00000000000ced9c
- (id)nodeIdentifiersOfEdgeIdentifiers:(id)arg1 ofType:(unsigned long long)arg2;	// IMP=0x00000000000ced7f
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 betweenNodesForIdentifiers:(id)arg2 andNodesForIdentifiers:(id)arg3 matchingFilter:(id)arg4;	// IMP=0x00000000000ceb72
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 onNodesForIdentifiers:(id)arg2 matchingFilter:(id)arg3;	// IMP=0x00000000000ceaa8
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 sourceNodeIdentifier:(unsigned long long)arg2 targetNodeIdentifier:(unsigned long long)arg3;	// IMP=0x00000000000ce936
- (unsigned long long)memoryFootprint:(id)arg1;	// IMP=0x00000000000ce92b
- (id)sourcesByTargetWithEdgeIdentifiers:(id)arg1;	// IMP=0x00000000000ce90e
- (id)targetsBySourceWithEdgeIdentifiers:(id)arg1;	// IMP=0x00000000000ce8f1
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce811
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce731
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce651
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce571
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce491
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce3b1
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce2d1
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce1f1
- (id)abstractEdges;	// IMP=0x00000000000ce138
- (id)allEdges;	// IMP=0x00000000000ce11b
- (void)enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000ce0fb
- (void)enumerateEdgesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ce0db
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000ce025
- (void)enumerateEdgesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cdfaa
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000cdf8e
- (void)enumerateEdgesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cdeee
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cdeaa
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000000cde91
- (id)edgesDomains;	// IMP=0x00000000000cdc4b
- (id)edgesLabels;	// IMP=0x00000000000cdbb6
- (unsigned long long)edgesCountForLabel:(id)arg1;	// IMP=0x00000000000cdb9b
- (unsigned long long)edgesCount;	// IMP=0x00000000000cdb7e
- (id)addUniqueEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cda49
- (id)_anyEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cd79a
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cd712
- (id)_edgeIdentifiersWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cd64b
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000000cd632
- (id)edgesForLabel:(id)arg1;	// IMP=0x00000000000cd617
- (unsigned long long)numberOfEdgesMatchingFilter:(id)arg1;	// IMP=0x00000000000cd5d3
- (id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;	// IMP=0x00000000000cd542
- (id)edgeIdentifiersMatchingFilter:(id)arg1;	// IMP=0x00000000000cd4c7
- (id)edgesForIdentifiers:(id)arg1;	// IMP=0x00000000000cd46c
- (id)edgeForIdentifier:(unsigned long long)arg1;	// IMP=0x00000000000cd44f
- (void)legacyRemoveEdges:(id)arg1;	// IMP=0x00000000000cd3ae
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cd2a9
- (id)_addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cd074
- (_Bool)edgesStoreWeakReferencesToNodes;	// IMP=0x00000000000cd06c
- (id)orphanNodes;	// IMP=0x00000000000cd03a
- (id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeType:(unsigned long long)arg2 edgeFilter:(id)arg3;	// IMP=0x00000000000ccfa4
- (id)allNodes;	// IMP=0x00000000000ccf87
- (void)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000ccf67
- (void)enumerateNodesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ccf47
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000cce91
- (void)enumerateNodesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cce16
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ccdfa
- (void)enumerateNodesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ccd5a
- (id)nodesDomains;	// IMP=0x00000000000ccbbc
- (id)nodesLabels;	// IMP=0x00000000000cca23
- (unsigned long long)nodesCount;	// IMP=0x00000000000cca06
- (unsigned long long)nodesCountForDomain:(unsigned short)arg1;	// IMP=0x00000000000cc9e9
- (id)nodesForDomain:(unsigned short)arg1 properties:(id)arg2;	// IMP=0x00000000000cc9d0
- (id)nodesForDomain:(unsigned short)arg1;	// IMP=0x00000000000cc9b3
- (unsigned long long)nodesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc96f
- (unsigned long long)numberOfNodesMatchingFilter:(id)arg1;	// IMP=0x00000000000cc92b
- (id)nodesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc8a3
- (id)anyNodeForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc7fa
- (id)anyNodeMatchingFilter:(id)arg1;	// IMP=0x00000000000cc786
- (id)_nodeIdentifiersWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc6bf
- (unsigned long long)nodesCountForLabel:(id)arg1;	// IMP=0x00000000000cc6a4
- (id)anyNodeForLabel:(id)arg1;	// IMP=0x00000000000cc689
- (id)nodesForLabel:(id)arg1;	// IMP=0x00000000000cc66e
- (id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;	// IMP=0x00000000000cc5dd
- (id)nodeIdentifiersMatchingFilter:(id)arg1;	// IMP=0x00000000000cc562
- (id)nodesForIdentifiers:(id)arg1;	// IMP=0x00000000000cc507
- (id)nodeForIdentifier:(unsigned long long)arg1;	// IMP=0x00000000000cc4ea
- (void)legacyRemoveNodes:(id)arg1;	// IMP=0x00000000000cc449
- (id)addUniquelyIdentifiedNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;	// IMP=0x00000000000cc0ae
- (id)addUniqueNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;	// IMP=0x00000000000cbf97
- (id)addNodeFromBase:(id)arg1;	// IMP=0x00000000000cbebe
- (id)addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;	// IMP=0x00000000000cbea0
- (id)addNodeWithLabel:(id)arg1;	// IMP=0x00000000000cbe7a
- (id)_addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;	// IMP=0x00000000000cbd52
- (Class)nodeClass;	// IMP=0x00000000000cbd41
- (void)executeGraphChangeRequest:(id)arg1;	// IMP=0x00000000000cb873
- (void)invalidateMemoryCaches;	// IMP=0x00000000000cb86d
- (void)rollbackBatch;	// IMP=0x00000000000cb825
- (void)leaveBatch;	// IMP=0x00000000000cb7dd
- (void)enterBatch;	// IMP=0x00000000000cb795
- (id)identifier;	// IMP=0x00000000000cb73a
- (void)setVersion:(unsigned long long)arg1;	// IMP=0x00000000000cb6e3
- (unsigned long long)version;	// IMP=0x00000000000cb694
- (id)description;	// IMP=0x00000000000cb677
- (void)labelAndDomainFromLabels:(id)arg1 outLabel:(id *)arg2 outDomain:(unsigned short *)arg3;	// IMP=0x00000000000cb35c
- (id)labelsForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000000cb1e8
- (id)initWithSpecification:(id)arg1;	// IMP=0x00000000000cb098
- (void)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3 saveToDatabase:(_Bool)arg4 createdNodes:(out id *)arg5 createdEdges:(out id *)arg6;	// IMP=0x0000000000105e95
- (void)persistWeight:(float)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;	// IMP=0x00000000001140ce
- (void)persistWeight:(float)arg1 forNodeWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000000113f4b
- (void)removeModelPropertiesForEdgeWithIdentifier:(unsigned long long)arg1;	// IMP=0x0000000000113e26
- (void)removeModelPropertyForKey:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000000113c82
- (void)persistModelProperties:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;	// IMP=0x0000000000113ad1
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forEdgeWithIdentifier:(unsigned long long)arg3;	// IMP=0x0000000000113922
- (void)removeModelPropertiesForNodeWithIdentifier:(unsigned long long)arg1;	// IMP=0x00000000001137fd
- (void)removeModelPropertyForKey:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000000113659
- (void)persistModelProperties:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;	// IMP=0x00000000001134a8
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forNodeWithIdentifier:(unsigned long long)arg3;	// IMP=0x00000000001132f9
- (_Bool)compareWithPersistedState;	// IMP=0x00000000001132f1
- (_Bool)copyPersistentStoreToURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000011326c
- (void)closePersistentStore;	// IMP=0x0000000000113204
- (_Bool)migratePersistentStoreToURL:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001130d9
- (_Bool)savePersistentStore;	// IMP=0x00000000001130d1
- (void)savePersistentStoreWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001130cb
- (void)unloadDomains:(id)arg1;	// IMP=0x0000000000113085
- (void)unloadEdge:(id)arg1;	// IMP=0x000000000011303f
- (void)loadDomains:(id)arg1;	// IMP=0x0000000000112ff9
- (id)databaseURL;	// IMP=0x0000000000112f9e
- (id)initWithSpecification:(id)arg1 persistenceStoreURL:(id)arg2 progressReporter:(id)arg3;	// IMP=0x0000000000112f0e
- (id)_instantiateGraphWithStoreAtURL:(id)arg1;	// IMP=0x0000000000112cdf
- (id)edgeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5 sourceNodeIdentifier:(int)arg6 targetNodeIdentifier:(int)arg7;	// IMP=0x0000000000112c8f
- (id)nodeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5;	// IMP=0x0000000000112c3f
- (id)initWithGraphJSONURL:(id)arg1;	// IMP=0x00000000001376aa
- (id)initWithGraphMLURL:(id)arg1;	// IMP=0x0000000000137664
- (id)initWithSpecification:(id)arg1 dataURL:(id)arg2;	// IMP=0x0000000000137488
- (void)_loadWithGraphDictionary:(id)arg1;	// IMP=0x0000000000136a96

@end

