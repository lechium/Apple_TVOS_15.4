//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AMSMetrics, NSDate, NSNumber, NSTimer;

@interface GKReporter : NSObject
{
    double _authenticateResponseTimestamp;	// 8 = 0x8
    double _inviteeUILaunchTimestamp;	// 16 = 0x10
    double _connectingDevicesTimestamp;	// 24 = 0x18
    double _programaticInviteTimestamp;	// 32 = 0x20
    double _appLaunchTimestamp;	// 40 = 0x28
    double _totalInviteReceivedTimestamp;	// 48 = 0x30
    double _messageInviteProcessingTimestamp;	// 56 = 0x38
    double _currentRealtimeMatchPersistenceTimestamp;	// 64 = 0x40
    AMSMetrics *_metrics;	// 72 = 0x48
    NSNumber *_metricsThrottlePercentage;	// 80 = 0x50
    double _randomMetricsCollection;	// 88 = 0x58
    NSDate *_lastBagCheck;	// 96 = 0x60
    NSTimer *_flushTimer;	// 104 = 0x68
}

+ (id)appendAMSPropertiesForEventType:(id)arg1;	// IMP=0x00000000000e4bee
+ (_Bool)shouldCollectAMSMetricForDomain:(id)arg1 event:(id)arg2;	// IMP=0x00000000000e49ec
+ (id)gameCenterBag;	// IMP=0x00000000000e1cdc
+ (id)reporter;	// IMP=0x00000000000e1294
- (void).cxx_destruct;	// IMP=0x00000000000e5558
@property(retain, nonatomic) NSTimer *flushTimer; // @synthesize flushTimer=_flushTimer;
@property(retain, nonatomic) NSDate *lastBagCheck; // @synthesize lastBagCheck=_lastBagCheck;
@property(nonatomic) double randomMetricsCollection; // @synthesize randomMetricsCollection=_randomMetricsCollection;
@property(retain) NSNumber *metricsThrottlePercentage; // @synthesize metricsThrottlePercentage=_metricsThrottlePercentage;
@property(retain, nonatomic) AMSMetrics *metrics; // @synthesize metrics=_metrics;
@property(nonatomic) double currentRealtimeMatchPersistenceTimestamp; // @synthesize currentRealtimeMatchPersistenceTimestamp=_currentRealtimeMatchPersistenceTimestamp;
@property(nonatomic) double messageInviteProcessingTimestamp; // @synthesize messageInviteProcessingTimestamp=_messageInviteProcessingTimestamp;
@property(nonatomic) double totalInviteReceivedTimestamp; // @synthesize totalInviteReceivedTimestamp=_totalInviteReceivedTimestamp;
@property(nonatomic) double appLaunchTimestamp; // @synthesize appLaunchTimestamp=_appLaunchTimestamp;
@property(nonatomic) double programaticInviteTimestamp; // @synthesize programaticInviteTimestamp=_programaticInviteTimestamp;
@property(nonatomic) double connectingDevicesTimestamp; // @synthesize connectingDevicesTimestamp=_connectingDevicesTimestamp;
@property(nonatomic) double inviteeUILaunchTimestamp; // @synthesize inviteeUILaunchTimestamp=_inviteeUILaunchTimestamp;
@property(nonatomic) double authenticateResponseTimestamp; // @synthesize authenticateResponseTimestamp=_authenticateResponseTimestamp;
- (void)reportPlayerAuthenticationFailure:(id)arg1;	// IMP=0x00000000000e4302
- (void)reportDurationForEvent:(id)arg1 eventType:(id)arg2 withStartTimestamp:(double)arg3;	// IMP=0x00000000000e41be
- (void)reportOnboardingEventForType:(id)arg1 withStartTimestamp:(double)arg2;	// IMP=0x00000000000e408d
- (void)reportScreenTimeEventForType:(id)arg1 withStartTimestamp:(double)arg2;	// IMP=0x00000000000e3f5c
- (void)reportCurrentRealtimeMatchPersistenceDuration;	// IMP=0x00000000000e3ede
- (void)recordCurrentRealtimeMatchPersistenceTimestamp;	// IMP=0x00000000000e3eba
- (void)reportTotalInviteReceivedDuration;	// IMP=0x00000000000e3e3c
- (void)reportAppLaunchDuration;	// IMP=0x00000000000e3dbe
- (void)recordAppLaunchAndTotalTimestamp;	// IMP=0x00000000000e3d83
- (void)reportProgramaticInviteDuration;	// IMP=0x00000000000e3d05
- (void)recordProgramaticInviteTimestamp;	// IMP=0x00000000000e3ce1
- (void)reportConnectingDevicesDuration;	// IMP=0x00000000000e3c63
- (void)recordConnectingDevicesTimestamp;	// IMP=0x00000000000e3c3f
- (void)reportMessageInviteProcessingDuration;	// IMP=0x00000000000e3bc1
- (void)recordMessageInviteProcessingTimestamp;	// IMP=0x00000000000e3b9d
- (void)reportInviteeUILaunchDuration;	// IMP=0x00000000000e3b1f
- (void)recordInviteeUILaunchTimestamp;	// IMP=0x00000000000e3afb
- (void)reportAuthenticateResponseDuration;	// IMP=0x00000000000e3a7d
- (void)recordAuthenticateResponseTimestamp;	// IMP=0x00000000000e3a59
- (void)reportTournamentAnalyticsWithDomain:(id)arg1 type:(id)arg2 tournamentType:(id)arg3 replayCount:(id)arg4 friendCount:(id)arg5 tournamentID:(id)arg6 bundleID:(id)arg7 inviteeCount:(id)arg8;	// IMP=0x00000000000e3820
- (_Bool)isTimeSpanValid:(double)arg1 maxDuration:(double)arg2;	// IMP=0x00000000000e3806
- (void)reportEvent:(id)arg1 reportable:(id)arg2;	// IMP=0x00000000000e362a
- (void)reportEvent:(id)arg1 target:(id)arg2 keyPath:(id)arg3;	// IMP=0x00000000000e3519
- (void)reportEvent:(id)arg1 type:(id)arg2 scoreRank:(id)arg3;	// IMP=0x00000000000e341f
- (void)reportEvent:(id)arg1 type:(id)arg2 inboxFriendRequestCount:(long long)arg3;	// IMP=0x00000000000e330f
- (void)reportEvent:(id)arg1 type:(id)arg2 count:(long long)arg3;	// IMP=0x00000000000e31ff
- (void)reportEvent:(id)arg1 type:(id)arg2 friendsPlayedThisGame:(id)arg3;	// IMP=0x00000000000e3105
- (void)reportEvent:(id)arg1 type:(id)arg2 payload:(id)arg3;	// IMP=0x00000000000e2fed
- (void)reportEvent:(id)arg1 type:(id)arg2 adamID:(id)arg3;	// IMP=0x00000000000e2e68
- (void)reportEvent:(id)arg1 type:(id)arg2 bundleID:(id)arg3;	// IMP=0x00000000000e2d6e
- (void)reportEvent:(id)arg1 type:(id)arg2 startTime:(id)arg3;	// IMP=0x00000000000e2be1
- (void)reportEvent:(id)arg1 type:(id)arg2;	// IMP=0x00000000000e2b08
- (void)reportEvent:(id)arg1 payload:(id)arg2;	// IMP=0x00000000000e27d9
- (void)reportAMSMetricsForTask:(id)arg1 session:(id)arg2 metrics:(id)arg3;	// IMP=0x00000000000e243d
- (void)reportAMSMetricDomain:(id)arg1 properties:(id)arg2;	// IMP=0x00000000000e22e4
- (void)reportAMSMetricEvent:(id)arg1;	// IMP=0x00000000000e1d6e
- (void)spinupAMSMetricsFlusher;	// IMP=0x00000000000e1d68
- (void)_getThrottlePercentage:(id)arg1;	// IMP=0x00000000000e1420

@end

