//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSString.h>

@interface NSString (TIExtras)
+ (id)stringWithUnichar:(unsigned int)arg1;	// IMP=0x000000000000b424
+ (_Bool)_ti_string:(id)arg1 matchesStringIgnoringNullity:(id)arg2;	// IMP=0x000000000000b390
+ (_Bool)_string:(id)arg1 matchesString:(id)arg2;	// IMP=0x000000000000b31f
+ (struct USet *)_fullwidthLettersAndSymbolsSet;	// IMP=0x000000000000b2c0
+ (struct USet *)_nonFullwidthLettersAndNumbersSet;	// IMP=0x000000000000b261
+ (struct USet *)_fullwidthLettersAndNumbersSet;	// IMP=0x000000000000b202
+ (struct USet *)_bopomofoWithoutToneSet;	// IMP=0x000000000000b1a3
+ (struct USet *)_bopomofoToneSet;	// IMP=0x000000000000b144
+ (struct USet *)_bopomofoSet;	// IMP=0x000000000000b0e5
+ (struct USet *)_ideographSet;	// IMP=0x000000000000b086
+ (struct USet *)_nonJapaneseLetterSet;	// IMP=0x000000000000b027
+ (struct USet *)_japaneseLetterSet;	// IMP=0x000000000000afc8
+ (struct USet *)_hiraganaSet;	// IMP=0x000000000000af69
+ (struct USet *)_nonHiraganaKatakanaOrBopomofoSet;	// IMP=0x000000000000af0a
+ (struct USet *)_nonKatakanaOrKanjiSet;	// IMP=0x000000000000aeab
+ (struct USet *)_nonHiraganaOrKatakanaSet;	// IMP=0x000000000000ae4c
+ (struct USet *)_nonIdeographicCharacterSet;	// IMP=0x000000000000aded
+ (struct USet *)_characterSetWithPattern:(id)arg1;	// IMP=0x000000000000aceb
+ (id)_stringWithUnichar:(unsigned int)arg1;	// IMP=0x000000000000ac7e
- (unsigned long long)_indexFromStartingIndex:(unsigned long long)arg1 byIncrementingComposedCharacterSequenceCount:(unsigned long long)arg2;	// IMP=0x000000000000a1a7
- (unsigned long long)editDistanceFrom:(id)arg1;	// IMP=0x000000000000a195
- (_Bool)containsSubstring:(id)arg1;	// IMP=0x000000000000a183
- (_Bool)isNaturallyRTL;	// IMP=0x000000000000a171
- (_Bool)looksLikeURL;	// IMP=0x000000000000a15f
- (_Bool)looksLikeNumberInput;	// IMP=0x000000000000a14d
- (_Bool)looksLikeEmailAddress;	// IMP=0x000000000000a13b
- (_Bool)isTripledPunctuation;	// IMP=0x000000000000a129
- (_Bool)isDelete;	// IMP=0x000000000000a117
- (_Bool)isNewlineOrReturn;	// IMP=0x000000000000a105
- (_Bool)isSpaceOrReturn;	// IMP=0x000000000000a0f3
- (_Bool)isSpace;	// IMP=0x000000000000a0e1
- (_Bool)isPlainSpace;	// IMP=0x000000000000a0cf
- (_Bool)isLeftAssociative;	// IMP=0x000000000000a0bd
- (_Bool)endsSentence;	// IMP=0x000000000000a0ab
- (id)stringByReplacingCharacter:(unsigned int)arg1 withCharacter:(unsigned int)arg2;	// IMP=0x000000000000a099
- (id)stringByReplacingCharactersInSet:(struct __CFCharacterSet *)arg1 withCharacter:(unsigned int)arg2;	// IMP=0x000000000000a087
- (id)stringByTrimmingLastCharacter;	// IMP=0x000000000000a075
- (id)stringByTrimmingCharactersInCFCharacterSet:(struct __CFCharacterSet *)arg1;	// IMP=0x000000000000a063
- (id)_stringByComposingDiacriticsLogicalOrder:(_Bool)arg1 allowedCharacters:(CDUnknownBlockType)arg2;	// IMP=0x0000000000009f09
- (unsigned long long)_editDistanceFrom:(id)arg1;	// IMP=0x0000000000009a92
- (_Bool)_containsSubstring:(id)arg1;	// IMP=0x0000000000009a6a
- (id)_stringByTransliteratingToZhuyinAsFamilyName;	// IMP=0x0000000000009a53
- (id)_stringByTransliteratingToZhuyin;	// IMP=0x0000000000009a3f
- (id)_stringByTransliteratingToZhuyin:(_Bool)arg1;	// IMP=0x0000000000009740
- (id)_stringByTransliteratingToPinyinAsFamilyName;	// IMP=0x0000000000009729
- (id)_stringByTransliteratingToPinyin;	// IMP=0x0000000000009715
- (id)_stringByTransliteratingToPinyin:(_Bool)arg1;	// IMP=0x00000000000096ab
- (id)_stringByApplyingTransform:(id)arg1;	// IMP=0x00000000000095e7
- (id)_stringByTranscribingUsingTokenizer:(struct __CFStringTokenizer *)arg1;	// IMP=0x0000000000009512
- (id)_stringByTranscribingFromLanguage:(id)arg1;	// IMP=0x0000000000009451
- (id)_stringByConvertingFromFullWidthToHalfWidth;	// IMP=0x00000000000093f0
- (id)_stringByConvertingFromHalfWidthToFullWidth;	// IMP=0x000000000000938c
- (_Bool)_shouldBePaddedWithSpaces;	// IMP=0x0000000000009377
- (_Bool)_containsFullwidthLettersAndSymbolsOnly;	// IMP=0x000000000000933e
- (_Bool)_containsFullwidthLettersAndNumbers;	// IMP=0x0000000000009304
- (_Bool)_containsFullwidthLettersAndNumbersOnly;	// IMP=0x00000000000092cb
- (_Bool)_containsSymbolsAndPunctuationOnly;	// IMP=0x0000000000009258
- (_Bool)_containsCJKSymbolsAndPunctuation;	// IMP=0x00000000000091e2
- (_Bool)_containsCJKScriptsOnly;	// IMP=0x000000000000916f
- (_Bool)_containsCJScriptsOnly;	// IMP=0x00000000000090fc
- (_Bool)_containsIdeographsOrBopomofoOnly;	// IMP=0x0000000000009089
- (_Bool)_containsBopomofoWithoutToneOnly;	// IMP=0x0000000000009050
- (_Bool)_containsBopomofoToneOnly;	// IMP=0x0000000000009017
- (_Bool)_containsBopomofoOnly;	// IMP=0x0000000000008fde
- (_Bool)_containsEmojiOnly;	// IMP=0x0000000000008f06
- (_Bool)_containsEmoji;	// IMP=0x0000000000008ea7
- (id)_ti_keyEquivalentMirroring;	// IMP=0x0000000000008e5a
- (_Bool)_ti_isKeyEquivalentMirroringCandidate;	// IMP=0x0000000000008dfa
- (_Bool)_containsHiraganaKatakanaOrBopomofo;	// IMP=0x0000000000008dc0
- (_Bool)_containsKatakanaOrKanji;	// IMP=0x0000000000008d86
- (_Bool)_containsHiraganaOrKatakana;	// IMP=0x0000000000008d4c
- (_Bool)_containsHiraganaOnly;	// IMP=0x0000000000008d13
- (_Bool)_containsJapaneseOnly;	// IMP=0x0000000000008cda
- (_Bool)_containsJapanese;	// IMP=0x0000000000008ca0
- (_Bool)_containsIdeographicCharacters;	// IMP=0x0000000000008c66
- (unsigned long long)_graphemeCount;	// IMP=0x0000000000008bba
- (id)_graphemeAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000008a9b
- (id)_lastGrapheme;	// IMP=0x0000000000008a1f
- (id)_firstGrapheme;	// IMP=0x0000000000008927
- (_Bool)_endsWithHalfwidth;	// IMP=0x00000000000088fd
- (_Bool)_isOnlyIdeographs;	// IMP=0x00000000000088c4
- (_Bool)_isIdeographicGlyphs;	// IMP=0x00000000000087ec
- (_Bool)_containsCJScripts;	// IMP=0x0000000000008772
- (_Bool)_isNaturallyRTL;	// IMP=0x00000000000086a4
- (_Bool)_looksLikeURL;	// IMP=0x0000000000008615
- (_Bool)_looksLikeNumberInput;	// IMP=0x00000000000085bf
- (_Bool)_looksLikeEmailAddress;	// IMP=0x0000000000008588
- (_Bool)_isBasicLatin;	// IMP=0x0000000000008545
- (_Bool)_isNewlineOrReturn;	// IMP=0x00000000000084fc
- (_Bool)_isDelete;	// IMP=0x00000000000084b3
- (_Bool)_isSpace;	// IMP=0x000000000000845e
- (_Bool)_isPlainSpace;	// IMP=0x000000000000841e
- (_Bool)_isSpaceOrReturn;	// IMP=0x00000000000083c9
- (_Bool)_isTripledPunctuation;	// IMP=0x000000000000836f
- (_Bool)_isLeftAssociative;	// IMP=0x0000000000008301
- (_Bool)_isModifierSymbol;	// IMP=0x00000000000082bf
- (_Bool)_endsSentence;	// IMP=0x0000000000008248
- (unsigned long long)_UTF8SizeOfRange:(struct _NSRange)arg1;	// IMP=0x000000000000817a
- (struct _NSRange)_rangeOfString:(id)arg1 fromLocation:(unsigned long long)arg2;	// IMP=0x00000000000080eb
- (struct _NSRange)_rangeOfCharacterClusterAtIndex:(unsigned long long)arg1 withClusterOffset:(long long)arg2;	// IMP=0x0000000000008006
- (struct _NSRange)_rangeOfBackwardDeletionClusterAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000007ff4
- (id)_stringByReplacingCharacter:(unsigned int)arg1 withCharacter:(unsigned int)arg2;	// IMP=0x0000000000007f2e
- (id)_stringByReplacingCharactersInSet:(struct __CFCharacterSet *)arg1 withCharacter:(unsigned int)arg2;	// IMP=0x0000000000007dd2
- (id)_stringByTrimmingLastCharacter;	// IMP=0x0000000000007d1c
- (id)_stringByTrimmingCharactersInCFCharacterSet:(struct __CFCharacterSet *)arg1;	// IMP=0x0000000000007ced
- (_Bool)_contentsExclusivelyInCharacterSet:(struct USet *)arg1;	// IMP=0x0000000000007c20
- (void)_reverseEnumerateLongCharactersInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000007b5a
- (void)_enumerateLongCharactersInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000007aa2
- (struct _NSRange)_rangeOfLongCharacterAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000007a1a
- (unsigned int)_lastLongCharacter;	// IMP=0x000000000000796b
- (unsigned int)_firstLongCharacter;	// IMP=0x00000000000078cb
- (unsigned short)_ti_supplementalPrefixOfLastToken:(id)arg1;	// IMP=0x00000000000076cb
- (unsigned short)_firstChar;	// IMP=0x000000000000768f
@end

