//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlaybackCore/MPMediaRemoteEntityArtworkGenerator-Protocol.h>
#import <MediaPlaybackCore/MSVLRUDictionaryDelegate-Protocol.h>

@class MPCFuture, MPCPlayerPath, MSVLRUDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSString;
@protocol MPArtworkDataSource, OS_dispatch_queue;

@interface MPCMediaRemoteController : NSObject <MSVLRUDictionaryDelegate, MPMediaRemoteEntityArtworkGenerator>
{
    NSObject<OS_dispatch_queue> *_accessQueue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_calloutQueue;	// 16 = 0x10
    MPCFuture *_playbackStateFuture;	// 24 = 0x18
    long long _playbackStateCacheState;	// 32 = 0x20
    MPCFuture *_supportedCommandsFuture;	// 40 = 0x28
    long long _supportedCommandsCacheState;	// 48 = 0x30
    MPCFuture *_playingItemIdentifierFuture;	// 56 = 0x38
    long long _playingIdentifierCacheState;	// 64 = 0x40
    NSString *_playingItemIdentifier;	// 72 = 0x48
    MPCFuture *_queueIdentifierFuture;	// 80 = 0x50
    long long _queueIdentifierCacheState;	// 88 = 0x58
    NSString *_queueIdentifier;	// 96 = 0x60
    struct _MSVSignedRange _loadedContentItemsRange;	// 104 = 0x68
    struct _MSVSignedRange _requestedContentItemsRange;	// 120 = 0x78
    NSMutableArray *_contentItemIDs;	// 136 = 0x88
    MSVLRUDictionary *_contentItems;	// 144 = 0x90
    NSMutableDictionary *_optimisticStateContentItems;	// 152 = 0x98
    NSMutableDictionary *_contentItemChanges;	// 160 = 0xa0
    MSVLRUDictionary *_contentItemArtwork;	// 168 = 0xa8
    NSMutableDictionary *_contentItemArtworkIdentifiers;	// 176 = 0xb0
    NSMapTable *_contentItemIDsFutures;	// 184 = 0xb8
    NSMapTable *_contentItemFutures;	// 192 = 0xc0
    NSMutableDictionary *_contentItemArtworkFutures;	// 200 = 0xc8
    unsigned long long _stateHandle;	// 208 = 0xd0
    id <MPArtworkDataSource> _mediaRemoteArtworkDataSource;	// 216 = 0xd8
    MPCPlayerPath *_resolvedPlayerPath;	// 224 = 0xe0
    id _invalidationToken;	// 232 = 0xe8
}

+ (_Bool)_shouldRegisterForNotifications;	// IMP=0x000000000015111f
+ (void)_sendRemoteCommand:(unsigned int)arg1 playbackIntent:(id)arg2 options:(id)arg3 toPlayerPath:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000150f7b
+ (void)_sendLocalCommand:(unsigned int)arg1 playbackIntent:(id)arg2 options:(id)arg3 toPlayerPath:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000150de0
+ (void)_sendCommand:(unsigned int)arg1 options:(id)arg2 appOptions:(unsigned int)arg3 toPlayerPath:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000150a40
+ (void)sendCommand:(unsigned int)arg1 options:(id)arg2 toPlayerPath:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000150941
+ (id)controllerForPlayerPath:(id)arg1;	// IMP=0x000000000015081e
+ (id)mediaRemoteReplyQueue;	// IMP=0x00000000001507ee
- (void).cxx_destruct;	// IMP=0x000000000014c809
@property(retain, nonatomic) id invalidationToken; // @synthesize invalidationToken=_invalidationToken;
@property(retain, nonatomic) MPCPlayerPath *resolvedPlayerPath; // @synthesize resolvedPlayerPath=_resolvedPlayerPath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *calloutQueue; // @synthesize calloutQueue=_calloutQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
- (void)_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:(id)arg1 beforeContentItemIdentifier:(id)arg2;	// IMP=0x000000000014c584
- (void)_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:(id)arg1 afterContentItemIdentifier:(id)arg2;	// IMP=0x000000000014c377
- (CDUnknownBlockType)_onQueue_setOptimisticPlayingItemIdentifier:(id)arg1;	// IMP=0x000000000014c248
- (CDUnknownBlockType)_onQueue_setOptimisticPlaybackState:(unsigned int)arg1 withOptions:(id)arg2;	// IMP=0x000000000014c0d8
- (CDUnknownBlockType)_onQueue_setOptimisticElapsedTimeForContentItem:(id)arg1 elapsedTime:(double)arg2 rate:(float)arg3;	// IMP=0x000000000014be25
- (CDUnknownBlockType)_onQueue_updateOptimisticStateForCommand:(unsigned int)arg1 options:(id)arg2;	// IMP=0x000000000014b984
@property(readonly, nonatomic) long long queueIdentifierCacheState; // @synthesize queueIdentifierCacheState=_queueIdentifierCacheState;
@property(readonly, nonatomic) long long playingIdentifierCacheState; // @synthesize playingIdentifierCacheState=_playingIdentifierCacheState;
@property(readonly, nonatomic) long long supportedCommandsCacheState; // @synthesize supportedCommandsCacheState=_supportedCommandsCacheState;
@property(readonly, nonatomic) long long playbackStateCacheState; // @synthesize playbackStateCacheState=_playbackStateCacheState;
- (id)_onQueue_stateDictionary;	// IMP=0x000000000014b356
- (void)_onQueue_invalidateArtworkFuturesForContentItemID:(id)arg1;	// IMP=0x000000000014b175
- (void)_onQueue_purgeArtworkForContentItemIdentifier:(id)arg1;	// IMP=0x000000000014b161
- (void)_onQueue_purgeArtworkForContentItemIdentifier:(id)arg1 artworkIdentifier:(id)arg2;	// IMP=0x000000000014af8c
- (void)_onQueue_mergeContentItems:(id)arg1 queueRange:(struct _MSVSignedRange)arg2 requestRange:(struct _MSVSignedRange)arg3;	// IMP=0x000000000014ac68
- (id)_onQueue_identifiersForRange:(struct _MSVSignedRange)arg1;	// IMP=0x000000000014abf0
- (id)_legacyCommands;	// IMP=0x000000000014aa13
- (id)_createExportableArtworkPropertiesForContentItem:(id)arg1;	// IMP=0x000000000014a922
- (CDUnknownBlockType)_artworkCatalogBlockForContentItem:(id)arg1;	// IMP=0x000000000014a75d
- (CDUnknownBlockType)artworkCatalogBlockForContentItem:(id)arg1;	// IMP=0x000000000014a6d3
- (void)invalidateAllTokens;	// IMP=0x000000000014a688
- (void)dictionary:(id)arg1 willRemoveObject:(id)arg2 forKey:(id)arg3;	// IMP=0x000000000014a587
- (void)_contentItemArtworkChangedNotification:(id)arg1;	// IMP=0x000000000014a412
- (void)_supportedCommandsDidChangedNotification:(id)arg1;	// IMP=0x000000000014a323
- (void)_playbackStateDidChangeNotification:(id)arg1;	// IMP=0x000000000014a1ae
- (void)_playbackQueueContentItemsChangedNotification:(id)arg1;	// IMP=0x000000000014a039
- (void)_playbackQueueChangedNotification:(id)arg1;	// IMP=0x0000000000149f4a
- (id)contentItemArtworkForContentItemIdentifier:(id)arg1 artworkIdentifier:(id)arg2 size:(struct CGSize)arg3;	// IMP=0x0000000000149dfd
- (long long)contentItemArtworkCacheStateForArtworkIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x0000000000149d11
- (id)contentItemForIdentifier:(id)arg1;	// IMP=0x0000000000149c16
- (long long)contentItemCacheStateForIdentifier:(id)arg1;	// IMP=0x0000000000149b4b
@property(readonly, nonatomic) MPCFuture *queueIdentifier;
@property(readonly, nonatomic) MPCFuture *playingIdentifier;
- (id)playQueueIdentifiersForRange:(struct _MSVSignedRange)arg1;	// IMP=0x000000000014998f
- (id)playQueueIdentifiersForRequest:(void *)arg1;	// IMP=0x0000000000149898
- (long long)playQueueIdentifiersCacheStateForRange:(struct _MSVSignedRange)arg1;	// IMP=0x0000000000149804
- (void)sendCommand:(unsigned int)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000149589
@property(readonly, nonatomic) MPCFuture *supportedCommands;
@property(readonly, nonatomic) id <MPArtworkDataSource> mediaRemoteArtworkDataSource; // @synthesize mediaRemoteArtworkDataSource=_mediaRemoteArtworkDataSource;
@property(readonly, nonatomic) id <MPArtworkDataSource> remotePlayerArtworkDataSource;
@property(readonly, nonatomic) MPCFuture *playbackState;
- (void)dealloc;	// IMP=0x00000000001492b8
- (id)_init;	// IMP=0x0000000000148eea

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

