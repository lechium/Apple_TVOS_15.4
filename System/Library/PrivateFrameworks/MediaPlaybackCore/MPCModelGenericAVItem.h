//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MediaPlayer/MPAVItem.h>

#import <MediaPlaybackCore/AVAssetResourceLoaderDelegate-Protocol.h>
#import <MediaPlaybackCore/AVPlayerItemMetadataOutputPushDelegate-Protocol.h>
#import <MediaPlaybackCore/ICEnvironmentMonitorObserver-Protocol.h>
#import <MediaPlaybackCore/MPRTCReportingItemSessionCreating-Protocol.h>

@class ICAVAssetDownloadURLSession, ICContentKeySession, ICMusicSubscriptionLeaseSession, ICMusicSubscriptionLeaseStatus, ICStoreRequestContext, ICURLRequest, MPCAudioAssetTypeSelection, MPCModelGenericAVItemTimedMetadataRequest, MPCModelGenericAVItemTimedMetadataResponse, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackEngineEventStream, MPCPlaybackRequestEnvironment, MPCPlayerAudioFormat, MPCPlayerAudioRoute, MPCSuzeLeaseSession, MPMediaLibrary, MPModelGenericObject, MPPropertySet, MPSubscriptionStatusPlaybackInformation, NSArray, NSData, NSDictionary, NSNumber, NSObject, NSOperationQueue, NSString, NSURL;
@protocol MPCModelPlaybackAssetCacheProviding, MPCReportingIdentityPropertiesLoading, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MPCModelGenericAVItem : MPAVItem <MPRTCReportingItemSessionCreating, AVAssetResourceLoaderDelegate, AVPlayerItemMetadataOutputPushDelegate, ICEnvironmentMonitorObserver>
{
    NSObject<OS_dispatch_queue> *_accessQueue;	// 112 = 0x70
    _Bool _allowsAirPlayFromCloud;	// 120 = 0x78
    NSNumber *_bookmarkTime;	// 128 = 0x80
    _Bool _hasLoadedSubscriptionLeaseSession;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_subscriptionLeaseSessionLoadQueue;	// 144 = 0x90
    ICMusicSubscriptionLeaseSession *_subscriptionLeaseSession;	// 152 = 0x98
    _Bool _hasLoadedSubscriptionPlaybackInformation;	// 160 = 0xa0
    MPSubscriptionStatusPlaybackInformation *_subscriptionPlaybackInformation;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_subscriptionPlaybackInformationLoadQueue;	// 176 = 0xb0
    _Bool _shouldAutomaticallyRefreshSubscriptionLease;	// 184 = 0xb8
    _Bool _isSubscriptionPolicyContent;	// 185 = 0xb9
    _Bool _lastPreparedForNonZeroRate;	// 186 = 0xba
    long long _subscriptionLeaseRequestCount;	// 192 = 0xc0
    _Bool _didDeferPreventionStatusUpdate;	// 200 = 0xc8
    MPCSuzeLeaseSession *_suzeLeaseSession;	// 208 = 0xd0
    _Bool _isAutomaticallyRefreshingSuzeLeaseSession;	// 216 = 0xd8
    CDUnknownBlockType _firstBecomeActivePlayerItemBlock;	// 224 = 0xe0
    NSArray *_currentGlobalTimedMetadataGroups;	// 232 = 0xe8
    MPModelGenericObject *_flattenedGenericObject;	// 240 = 0xf0
    MPModelGenericObject *_flattenedMetadataGenericObject;	// 248 = 0xf8
    MPModelGenericObject *_metadataGenericObject;	// 256 = 0x100
    MPPropertySet *_itemProperties;	// 264 = 0x108
    id <MPCReportingIdentityPropertiesLoading> _identityPropertiesLoader;	// 272 = 0x110
    MPCModelGenericAVItemTimedMetadataRequest *_timedMetadataRequest;	// 280 = 0x118
    MPCModelGenericAVItemTimedMetadataResponse *_timedMetadataResponse;	// 288 = 0x120
    NSOperationQueue *_timedMetadataOperationQueue;	// 296 = 0x128
    _Bool _isMusicCellularStreamingAllowed;	// 304 = 0x130
    _Bool _didReceiveHLSTimedMetadata;	// 305 = 0x131
    NSString *_hlsStreamIdentifier;	// 312 = 0x138
    _Bool _isiTunesStoreStream;	// 320 = 0x140
    ICStoreRequestContext *_storeRequestContext;	// 328 = 0x148
    NSURL *_streamingKeyCertificateURL;	// 336 = 0x150
    NSURL *_streamingKeyServerURL;	// 344 = 0x158
    NSString *_rtcReportingServiceIdentifier;	// 352 = 0x160
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;	// 360 = 0x168
    ICContentKeySession *_contentKeySession;	// 368 = 0x170
    ICAVAssetDownloadURLSession *_hlsDownloadURLSession;	// 376 = 0x178
    ICURLRequest *_hlsDownloadURLRequest;	// 384 = 0x180
    struct os_unfair_lock_s _genericObjectLock;	// 392 = 0x188
    _Bool _radioPlayback;	// 396 = 0x18c
    _Bool _radioStreamPlayback;	// 397 = 0x18d
    _Bool _subscriptionRequired;	// 398 = 0x18e
    _Bool _hlsAsset;	// 399 = 0x18f
    _Bool _downloadedAsset;	// 400 = 0x190
    long long _leasePlaybackPreventionState;	// 408 = 0x198
    ICMusicSubscriptionLeaseStatus *_leaseStatus;	// 416 = 0x1a0
    NSDictionary *_audioFormatsDictionary;	// 424 = 0x1a8
    long long _preferredAudioAssetType;	// 432 = 0x1b0
    MPCAudioAssetTypeSelection *_preferredAudioAssetTypeSelection;	// 440 = 0x1b8
    id <MPCModelPlaybackAssetCacheProviding> _assetCacheProvider;	// 448 = 0x1c0
    NSString *_assetSourceStoreFrontID;	// 456 = 0x1c8
    long long _equivalencySourceAdamID;	// 464 = 0x1d0
    MPModelGenericObject *_genericObject;	// 472 = 0x1d8
    NSData *_jingleTimedMetadata;	// 480 = 0x1e0
    MPMediaLibrary *_mediaLibrary;	// 488 = 0x1e8
    NSNumber *_siriInitiated;	// 496 = 0x1f0
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;	// 504 = 0x1f8
    long long _stationItemLikedState;	// 512 = 0x200
    NSDictionary *_trackInfo;	// 520 = 0x208
    MPCPlaybackEngineEventStream *_eventStream;	// 528 = 0x210
    MPCPlayerAudioFormat *_preferredFormat;	// 536 = 0x218
    MPCPlayerAudioFormat *_activeFormat;	// 544 = 0x220
    long long _activeFormatJustification;	// 552 = 0x228
    NSArray *_alternateFormats;	// 560 = 0x230
    NSArray *_availableSortedFormats;	// 568 = 0x238
    MPCPlayerAudioRoute *_audioRoute;	// 576 = 0x240
    long long _loadedAudioAssetType;	// 584 = 0x248
}

+ (id)_utilitySerialQueue;	// IMP=0x0000000000038340
+ (_Bool)_prefersHighQualityVideoContentForNetworkType:(long long)arg1;	// IMP=0x0000000000038200
+ (_Bool)_prefersHighQualityAudioContentForNetworkType:(long long)arg1;	// IMP=0x000000000003806d
- (void).cxx_destruct;	// IMP=0x00000000000303c3
@property(readonly, nonatomic, getter=isDownloadedAsset) _Bool downloadedAsset; // @synthesize downloadedAsset=_downloadedAsset;
@property(readonly, nonatomic, getter=isHLSAsset) _Bool hlsAsset; // @synthesize hlsAsset=_hlsAsset;
@property(readonly, nonatomic) long long loadedAudioAssetType; // @synthesize loadedAudioAssetType=_loadedAudioAssetType;
@property(retain, nonatomic) MPCPlayerAudioRoute *audioRoute; // @synthesize audioRoute=_audioRoute;
@property(retain, nonatomic) NSArray *availableSortedFormats; // @synthesize availableSortedFormats=_availableSortedFormats;
@property(retain, nonatomic) NSArray *alternateFormats; // @synthesize alternateFormats=_alternateFormats;
@property(nonatomic) long long activeFormatJustification; // @synthesize activeFormatJustification=_activeFormatJustification;
@property(retain, nonatomic) MPCPlayerAudioFormat *activeFormat; // @synthesize activeFormat=_activeFormat;
@property(retain, nonatomic) MPCPlayerAudioFormat *preferredFormat; // @synthesize preferredFormat=_preferredFormat;
@property(nonatomic) __weak MPCPlaybackEngineEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(retain, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(nonatomic) long long stationItemLikedState; // @synthesize stationItemLikedState=_stationItemLikedState;
@property(readonly, copy, nonatomic) MPCPlaybackRequestEnvironment *playbackRequestEnvironment; // @synthesize playbackRequestEnvironment=_playbackRequestEnvironment;
@property(nonatomic, getter=isSubscriptionRequired) _Bool subscriptionRequired; // @synthesize subscriptionRequired=_subscriptionRequired;
@property(nonatomic, getter=isRadioStreamPlayback) _Bool radioStreamPlayback; // @synthesize radioStreamPlayback=_radioStreamPlayback;
@property(nonatomic, getter=isRadioPlayback) _Bool radioPlayback; // @synthesize radioPlayback=_radioPlayback;
@property(copy, nonatomic, getter=isSiriInitiated) NSNumber *siriInitiated; // @synthesize siriInitiated=_siriInitiated;
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary; // @synthesize mediaLibrary=_mediaLibrary;
@property(readonly, copy, nonatomic) NSData *jingleTimedMetadata; // @synthesize jingleTimedMetadata=_jingleTimedMetadata;
@property(retain, nonatomic) MPModelGenericObject *genericObject; // @synthesize genericObject=_genericObject;
@property(nonatomic) long long equivalencySourceAdamID; // @synthesize equivalencySourceAdamID=_equivalencySourceAdamID;
@property(copy, nonatomic) NSString *assetSourceStoreFrontID; // @synthesize assetSourceStoreFrontID=_assetSourceStoreFrontID;
@property(retain, nonatomic) id <MPCModelPlaybackAssetCacheProviding> assetCacheProvider; // @synthesize assetCacheProvider=_assetCacheProvider;
@property(readonly, nonatomic) MPCAudioAssetTypeSelection *preferredAudioAssetTypeSelection; // @synthesize preferredAudioAssetTypeSelection=_preferredAudioAssetTypeSelection;
@property(readonly, nonatomic) long long preferredAudioAssetType; // @synthesize preferredAudioAssetType=_preferredAudioAssetType;
@property(copy, nonatomic) NSDictionary *audioFormatsDictionary; // @synthesize audioFormatsDictionary=_audioFormatsDictionary;
- (id)leaseStatus;	// IMP=0x00000000000300d0
- (long long)leasePlaybackPreventionState;	// IMP=0x00000000000300bf
- (void)resumeContentKeySession;	// IMP=0x000000000003009b
- (void)pauseContentKeySession;	// IMP=0x0000000000030077
- (id)analyticsFormatType;	// IMP=0x000000000002fe50
- (id)analyticsContentType;	// IMP=0x000000000002fdfc
- (void)_updatePreventionStatusWithLeaseSession:(id)arg1;	// IMP=0x000000000002fa94
- (void)_updateJingleTimedMetadata;	// IMP=0x000000000002f5ce
- (void)_updateBookmarkTime:(double)arg1 isCheckpoint:(_Bool)arg2;	// IMP=0x000000000002f38e
- (void)_updateAutomaticSubscriptionLeaseRefresh;	// IMP=0x000000000002f335
- (id)_storeUbiquitousIdentifier;	// IMP=0x000000000002f2e5
- (id)_stopTime;	// IMP=0x000000000002f295
- (double)_startTime;	// IMP=0x000000000002f245
- (id)_storeRequestContext;	// IMP=0x000000000002f230
- (_Bool)_shouldRememberBookmarkTime;	// IMP=0x000000000002f1db
- (id)_rtcReportingServiceIdentifierWithAssetURL:(id)arg1;	// IMP=0x000000000002ef01
- (id)_rtcReportingMediaIdentifierWithAssetLoadProperties:(id)arg1;	// IMP=0x000000000002ed3b
- (id)_radioStation;	// IMP=0x000000000002ecd0
- (void)_postInvalidationNotifications;	// IMP=0x000000000002ebf6
- (id)_modelPlaybackPosition;	// IMP=0x000000000002eb36
- (id)_isPrivateListeningEnabled;	// IMP=0x000000000002eadb
- (void)_invalidateContentItem;	// IMP=0x000000000002eab7
- (void)_updateHasBeenPlayedWithElapsedTime:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002e880
- (void)_handlePlaybackFinishedTime:(double)arg1 didFinishByHittingEnd:(_Bool)arg2;	// IMP=0x000000000002dd3e
- (void)_getUnverifiedSubscriptionLeaseSessionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002dab9
- (void)_getSubscriptionLeasePropertiesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d7c9
- (id)_bookmarkTime;	// IMP=0x000000000002d72d
- (unsigned long long)_audioFormatPreference;	// IMP=0x000000000002d6e2
- (void)_applyPreferredPeakBitRateToPlayerItem:(id)arg1 withItemType:(long long)arg2;	// IMP=0x000000000002d1a2
- (void)_applyLoudnessInfo;	// IMP=0x000000000002cd03
- (_Bool)_allowsStreamingPlayback;	// IMP=0x000000000002ccfb
- (_Bool)_allowsAssetCaching;	// IMP=0x000000000002cc26
- (CDStruct_c6d350ec)_timeoutValues;	// IMP=0x000000000002ca32
- (void)_timedMetadataResponseDidInvalidateNotification:(id)arg1;	// IMP=0x000000000002c9eb
- (void)_suzeLeaseSessionRenewDidFailNotification:(id)arg1;	// IMP=0x000000000002c8cd
- (void)_subscriptionLeaseStatusDidChangeNotification:(id)arg1;	// IMP=0x000000000002c823
- (void)_contentTasteControllerDidChangeNotification:(id)arg1;	// IMP=0x000000000002c7c4
- (void)_ageVerificationStateDidChangeNotification:(id)arg1;	// IMP=0x000000000002c765
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;	// IMP=0x000000000002c706
- (void)environmentMonitorDidChangeNetworkType:(id)arg1;	// IMP=0x000000000002c6a7
- (void)nowPlayingInfoCenter:(id)arg1 lyricsForContentItem:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c1d6
- (void)_reloadTimedMetadataRequest;	// IMP=0x000000000002bdc5
- (void)metadataOutput:(id)arg1 didOutputTimedMetadataGroups:(id)arg2 fromPlayerItemTrack:(id)arg3;	// IMP=0x000000000002bbe1
- (_Bool)resourceLoader:(id)arg1 shouldWaitForRenewalOfRequestedResource:(id)arg2;	// IMP=0x000000000002bbcf
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;	// IMP=0x000000000002b770
- (id)rtcReportingServiceIdentifier;	// IMP=0x000000000002b703
@property(readonly, nonatomic) NSData *trackInfoData;
- (id)mpcReporting_trackInfo;	// IMP=0x000000000002b56f
- (id)mpcReporting_siriInitiated;	// IMP=0x000000000002b55d
- (id)mpcReporting_privateListeningEnabled;	// IMP=0x000000000002b54b
- (_Bool)mpcReporting_shouldReportPlayEventsToStore;	// IMP=0x000000000002b539
- (_Bool)mpcReporting_shouldUseRelativeTimePositions;	// IMP=0x000000000002b527
- (id)mpcReporting_requestingBundleVersion;	// IMP=0x000000000002b50a
- (id)mpcReporting_requestingBundleIdentifier;	// IMP=0x000000000002b4ed
- (id)mpcReporting_jingleTimedMetadata;	// IMP=0x000000000002b4db
- (id)mpcReporting_identityPropertiesLoader;	// IMP=0x000000000002b47f
- (unsigned long long)mpcReporting_itemType;	// IMP=0x000000000002b436
- (long long)mpcReporting_equivalencySourceAdamID;	// IMP=0x000000000002b424
- (CDUnknownBlockType)artworkCatalogBlock;	// IMP=0x000000000002b2e8
- (long long)_keyServerAdamID;	// IMP=0x000000000002b0b7
- (void)_didBecomeActivePlayerItem;	// IMP=0x000000000002aeb4
- (void)_didResignActivePlayerItem;	// IMP=0x000000000002ac16
- (void)_willResignActivePlayerItem;	// IMP=0x000000000002aaef
- (void)_willBecomeActivePlayerItem;	// IMP=0x000000000002aa74
- (long long)_persistedLikedState;	// IMP=0x000000000002a97a
- (void)_handleUpdatedLikedState:(long long)arg1 forUserIdentity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002a84b
- (void)_currentPlaybackRateDidChange:(float)arg1;	// IMP=0x000000000002a80a
- (_Bool)usesSubscriptionLease;	// IMP=0x000000000002a72f
- (id)useListeningHistory;	// IMP=0x000000000002a643
- (id)storeFrontIdentifier;	// IMP=0x000000000002a5e8
- (id)storeAccountID;	// IMP=0x000000000002a561
- (_Bool)shouldPreventPlayback;	// IMP=0x000000000002a54c
- (void)setPlaybackStoppedTime:(double)arg1;	// IMP=0x000000000002a2a8
- (void)setPlaybackFinishedTime:(double)arg1;	// IMP=0x000000000002a246
- (void)setPlaybackCheckpointCurrentTime:(double)arg1;	// IMP=0x000000000002a1f9
- (void)resolvePlaybackError:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002a1e7
- (_Bool)requiresLoadedAssetForAirPlayProperties;	// IMP=0x000000000002a1df
- (id)bookmarkTime;	// IMP=0x000000000002a1cd
- (_Bool)allowsExternalPlayback;	// IMP=0x000000000002a1c5
- (_Bool)allowsAirPlayFromCloud;	// IMP=0x000000000002a1b5
- (_Bool)canUseLoadedAsset;	// IMP=0x000000000002a148
- (void)_updateAudioFormatInfoForContentItem:(id)arg1;	// IMP=0x0000000000029a1f
- (float)userRating;	// IMP=0x0000000000029987
- (_Bool)useEmbeddedChapterData;	// IMP=0x000000000002997f
- (id)urlTimeMarkers;	// IMP=0x0000000000029977
- (long long)type;	// IMP=0x00000000000298a3
- (void)setupWithPlaybackInfo;	// IMP=0x0000000000029637
- (id)playbackInfo;	// IMP=0x00000000000290ab
- (id)containerUniqueID;	// IMP=0x000000000002902a
- (_Bool)hasTimeSyncedLyrics;	// IMP=0x0000000000028f6f
- (_Bool)hasStoreLyrics;	// IMP=0x0000000000028eb4
- (id)libraryLyrics;	// IMP=0x0000000000028ded
- (_Bool)supportsRateChange;	// IMP=0x0000000000028dd8
- (_Bool)supportsLikedState;	// IMP=0x0000000000028dd0
- (long long)storeSubscriptionAdamID;	// IMP=0x0000000000028cd2
- (long long)storeItemInt64ID;	// IMP=0x0000000000028b65
- (long long)stationProviderID;	// IMP=0x0000000000028af9
- (id)stationStringID;	// IMP=0x0000000000028a58
- (id)stationName;	// IMP=0x000000000002891e
- (id)stationHash;	// IMP=0x000000000002887d
- (long long)stationID;	// IMP=0x00000000000287e8
@property(readonly, nonatomic) _Bool shouldReportPlayEventsToStore;
- (void)setRating:(float)arg1;	// IMP=0x0000000000028570
- (void)prepareForRate:(float)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002827e
- (_Bool)prefersSeekOverSkip;	// IMP=0x0000000000028169
- (_Bool)shouldShowComposer;	// IMP=0x00000000000280dd
- (id)playbackError;	// IMP=0x0000000000027ce5
- (void)notePlaybackFinishedByHittingEnd;	// IMP=0x0000000000027c8a
- (long long)storePurchasedAdamID;	// IMP=0x0000000000027beb
- (unsigned long long)composerPersistentID;	// IMP=0x0000000000027ae2
- (unsigned long long)genrePersistentID;	// IMP=0x00000000000279d9
- (unsigned long long)artistPersistentID;	// IMP=0x00000000000278a6
- (unsigned long long)albumArtistPersistentID;	// IMP=0x0000000000027788
- (unsigned long long)albumPersistentID;	// IMP=0x0000000000027655
- (id)cloudAlbumID;	// IMP=0x0000000000027544
- (id)cloudUniversalLibraryID;	// IMP=0x0000000000027499
- (id)personID;	// IMP=0x00000000000273ee
- (unsigned long long)cloudID;	// IMP=0x000000000002734f
- (id)databaseID;	// IMP=0x00000000000272a4
- (unsigned long long)persistentID;	// IMP=0x0000000000027205
- (unsigned long long)mediaType;	// IMP=0x000000000002714a
- (id)modelGenericObject;	// IMP=0x0000000000027106
- (id)mediaItem;	// IMP=0x0000000000027047
- (id)mainTitle;	// IMP=0x0000000000026f87
- (void)updatePlayerItemMetadata;	// IMP=0x000000000002661c
- (void)_emitAudioAssetTypeSelection:(id)arg1;	// IMP=0x0000000000026329
- (void)_emitAudioFormatChangeEvent;	// IMP=0x0000000000025f1f
- (void)_updateActiveFormatJustification:(long long)arg1;	// IMP=0x0000000000025e62
- (void)configureAVPlayerItemWithAudioFormat:(id)arg1 forceSpatial:(_Bool)arg2;	// IMP=0x0000000000025dca
- (_Bool)updateActiveFormat:(id)arg1 justification:(long long)arg2;	// IMP=0x0000000000025b9b
- (_Bool)updatePreferredFormat:(id)arg1;	// IMP=0x0000000000025a1e
- (_Bool)updateAudioFormatsDictionary:(id)arg1;	// IMP=0x00000000000258e8
- (id)audioFormatForStableVariantID:(id)arg1;	// IMP=0x0000000000025865
- (id)currentPlayerAudioFormat;	// IMP=0x00000000000257d8
- (void)loadAssetAndPlayerItem;	// IMP=0x000000000001d77a
- (float)_volumeAdjustment;	// IMP=0x000000000001d6db
- (id)_loudnessInfoMediaKind;	// IMP=0x000000000001d602
- (id)_gaplessInfo;	// IMP=0x000000000001d568
- (id)_iTunesStorePurchasedMediaKind;	// IMP=0x000000000001d478
- (long long)_suzeLeaseMediaType;	// IMP=0x000000000001d3c0
- (id)_assetLoadPropertiesWithUserIdentityProperties:(id)arg1 delegatedUserIdentityProperties:(id)arg2;	// IMP=0x000000000001cbf1
@property(readonly, nonatomic) _Bool hasVideo;
- (_Bool)_prefersHighQualityContent;	// IMP=0x000000000001c95f
- (id)_delegatedUserIdentityProperties:(id *)arg1;	// IMP=0x000000000001c798
- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;	// IMP=0x000000000001c6a6
- (_Bool)isStreamable;	// IMP=0x000000000001c69e
- (_Bool)isRadioItem;	// IMP=0x000000000001c68c
- (_Bool)isLikedStateEnabled;	// IMP=0x000000000001c684
- (id)explicitBadge;	// IMP=0x000000000001c587
- (_Bool)isExplicitTrack;	// IMP=0x000000000001c49d
- (_Bool)isAssetURLValid;	// IMP=0x000000000001c495
- (_Bool)isAlwaysLive;	// IMP=0x000000000001c303
- (id)genre;	// IMP=0x000000000001c23c
- (id)externalContentIdentifier;	// IMP=0x000000000001c172
- (double)durationFromExternalMetadata;	// IMP=0x000000000001c0b6
- (id)copyrightText;	// IMP=0x000000000001c01c
- (id)chapterTimeMarkers;	// IMP=0x000000000001c014
- (id)composer;	// IMP=0x000000000001bf4d
- (id)artworkTimeMarkers;	// IMP=0x000000000001bf45
- (_Bool)isArtistUploadedContent;	// IMP=0x000000000001beb9
- (id)artist;	// IMP=0x000000000001bdae
- (void)applyVolumeNormalizationWithSoundCheckEnabled:(_Bool)arg1;	// IMP=0x000000000001bc93
- (_Bool)allowsEQ;	// IMP=0x000000000001bc8b
- (unsigned long long)albumTrackCount;	// IMP=0x000000000001bbf6
- (unsigned long long)albumTrackNumber;	// IMP=0x000000000001bb61
- (long long)artistStoreID;	// IMP=0x000000000001b9c9
- (long long)albumStoreID;	// IMP=0x000000000001b831
- (id)albumArtist;	// IMP=0x000000000001b6e6
- (long long)albumYear;	// IMP=0x000000000001b62b
- (id)album;	// IMP=0x000000000001b564
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x000000000001b02d
- (id)initWithGenericObject:(id)arg1 itemProperties:(id)arg2 playbackRequestEnvironment:(id)arg3 identityPropertySet:(id)arg4;	// IMP=0x000000000001ad95
@property(readonly, nonatomic) long long rtcReportingAssetType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

