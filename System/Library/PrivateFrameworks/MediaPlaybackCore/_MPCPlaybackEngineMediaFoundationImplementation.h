//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlaybackCore/MFPlaybackStackControllerDelegate-Protocol.h>
#import <MediaPlaybackCore/MPAVQueueControllerDelegate-Protocol.h>
#import <MediaPlaybackCore/MPCAssetLoaderDelegate-Protocol.h>
#import <MediaPlaybackCore/MPCPlaybackEngineImplementation-Protocol.h>

@class AVPlayerViewController, MPAVItem, MPCAVItemTrace, MPCErrorControllerImplementation, MPCExternalPlaybackControllerImplementation, MPCItemBookmarker, MPCLeaseController, MPCMediaFoundationTranslator, MPCPlayPerfAnalytics, MPCPlaybackEngine, MPCPlayerItemConfigurator, NSDictionary, NSString, _MPCAudioSessionController;
@protocol MFAssetLoading, MFPlaybackStackController><MFQueueManagement, MPAVQueueController;

__attribute__((visibility("hidden")))
@interface _MPCPlaybackEngineMediaFoundationImplementation : NSObject <MFPlaybackStackControllerDelegate, MPAVQueueControllerDelegate, MPCAssetLoaderDelegate, MPCPlaybackEngineImplementation>
{
    _Bool _autoPlayWhenLikelyToKeepUp;	// 8 = 0x8
    _Bool _reloadingPlaybackContext;	// 9 = 0x9
    MPCPlaybackEngine *_playbackEngine;	// 16 = 0x10
    id <MPAVQueueController> _queueController;	// 24 = 0x18
    long long _actionAtQueueEnd;	// 32 = 0x20
    id <MFPlaybackStackController><MFQueueManagement> _playbackStackController;	// 40 = 0x28
    MPCItemBookmarker *_bookmarker;	// 48 = 0x30
    MPCMediaFoundationTranslator *_translator;	// 56 = 0x38
    MPCErrorControllerImplementation *_errorController;	// 64 = 0x40
    MPCExternalPlaybackControllerImplementation *_externalPlaybackController;	// 72 = 0x48
    id <MFAssetLoading> _assetLoader;	// 80 = 0x50
    MPCLeaseController *_leaseController;	// 88 = 0x58
    MPCPlayerItemConfigurator *_configurator;	// 96 = 0x60
    unsigned long long _stateHandle;	// 104 = 0x68
    MPCAVItemTrace *_playbackStartTrace;	// 112 = 0x70
    MPCPlayPerfAnalytics *_playPerfAnalytics;	// 120 = 0x78
    _MPCAudioSessionController *_transientAudioSessionController;	// 128 = 0x80
}

+ (id)describePlayer:(id)arg1;	// IMP=0x000000000005765a
- (void).cxx_destruct;	// IMP=0x0000000000014c9d
@property(retain, nonatomic) _MPCAudioSessionController *transientAudioSessionController; // @synthesize transientAudioSessionController=_transientAudioSessionController;
@property(retain, nonatomic) MPCPlayPerfAnalytics *playPerfAnalytics; // @synthesize playPerfAnalytics=_playPerfAnalytics;
@property(retain, nonatomic) MPCAVItemTrace *playbackStartTrace; // @synthesize playbackStartTrace=_playbackStartTrace;
@property(nonatomic) unsigned long long stateHandle; // @synthesize stateHandle=_stateHandle;
@property(retain, nonatomic) MPCPlayerItemConfigurator *configurator; // @synthesize configurator=_configurator;
@property(retain, nonatomic) MPCLeaseController *leaseController; // @synthesize leaseController=_leaseController;
@property(retain, nonatomic) id <MFAssetLoading> assetLoader; // @synthesize assetLoader=_assetLoader;
@property(retain, nonatomic) MPCExternalPlaybackControllerImplementation *externalPlaybackController; // @synthesize externalPlaybackController=_externalPlaybackController;
@property(retain, nonatomic) MPCErrorControllerImplementation *errorController; // @synthesize errorController=_errorController;
@property(retain, nonatomic) MPCMediaFoundationTranslator *translator; // @synthesize translator=_translator;
@property(retain, nonatomic) MPCItemBookmarker *bookmarker; // @synthesize bookmarker=_bookmarker;
@property(retain, nonatomic) id <MFPlaybackStackController><MFQueueManagement> playbackStackController; // @synthesize playbackStackController=_playbackStackController;
@property(readonly, nonatomic, getter=isReloadingPlaybackContext) _Bool reloadingPlaybackContext; // @synthesize reloadingPlaybackContext=_reloadingPlaybackContext;
@property(nonatomic) long long actionAtQueueEnd; // @synthesize actionAtQueueEnd=_actionAtQueueEnd;
@property(nonatomic) _Bool autoPlayWhenLikelyToKeepUp; // @synthesize autoPlayWhenLikelyToKeepUp=_autoPlayWhenLikelyToKeepUp;
@property(retain, nonatomic) id <MPAVQueueController> queueController; // @synthesize queueController=_queueController;
@property(readonly, nonatomic) __weak MPCPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
- (void)assetLoadingDidStartForItem:(id)arg1;	// IMP=0x0000000000014834
- (void)assetLoadingDidCompleteForItem:(id)arg1 error:(id)arg2;	// IMP=0x0000000000013d07
- (void)errorResolutionDidEndForItem:(id)arg1 error:(id)arg2 resolution:(long long)arg3;	// IMP=0x0000000000013b88
- (void)errorResolutionDidStartForItem:(id)arg1 error:(id)arg2;	// IMP=0x0000000000013a59
- (void)didReportSignpostWithType:(long long)arg1;	// IMP=0x00000000000139ca
- (void)relativeVolumeDidChangeTo:(float)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000013814
- (void)firstVideoFrameWasRenderedForItem:(id)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000013288
- (void)playbackIsBlockedOnNonPlayableItem:(id)arg1;	// IMP=0x0000000000013124
- (void)mediaServicesInterruptionDidEndWithTimeStamp:(id)arg1;	// IMP=0x0000000000012d91
- (void)mediaServicesInterruptionDidBeginWithItemAtDeath:(id)arg1 timeAtDeath:(double)arg2 timeStamp:(id)arg3;	// IMP=0x00000000000126dc
- (void)userActionDidEnd:(id)arg1 error:(id)arg2;	// IMP=0x000000000001243c
- (void)userActionDidBegin:(id)arg1;	// IMP=0x0000000000011fe0
- (void)didReachEndOfQueueWithReason:(id)arg1;	// IMP=0x0000000000011d6e
- (void)screenRecordingDidChange:(_Bool)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000011b47
- (void)tracksDidChangeForItem:(id)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000011966
- (void)playbackIsLikelyToKeepUp:(_Bool)arg1 forItem:(id)arg2 timeStamp:(id)arg3;	// IMP=0x0000000000011076
- (void)playbackBufferStateDidChangeToState:(long long)arg1 forItem:(id)arg2 timeStamp:(id)arg3;	// IMP=0x00000000000107c2
- (void)interruptionDidFinishForInterruptor:(id)arg1 shouldResume:(_Bool)arg2 timeStamp:(id)arg3;	// IMP=0x00000000000104d5
- (void)interruptionDidBeginWithInterruptor:(id)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000010268
- (void)stateDidChangeFromState:(long long)arg1 toState:(long long)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000fd10
- (void)routeDidChange:(_Bool)arg1 metadata:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000f83d
- (void)playbackWaitingToPlayForItem:(id)arg1 reason:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000f5ce
- (void)timeControlStatusDidChange:(long long)arg1 waitingReason:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000f297
- (void)firstFrameWillRenderForItem:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000000ec61
- (void)playbackRateDidChangeNotifiedForItem:(id)arg1 newRate:(float)arg2 reason:(id)arg3 participantIdentifier:(id)arg4 timeStamp:(id)arg5;	// IMP=0x000000000000e56f
- (void)playbackRateDidChangeToRate:(float)arg1 forItem:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000e2ed
- (void)playbackDidStopForItem:(id)arg1 source:(id)arg2 reason:(id)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000dfd1
- (void)playbackDidStartForItem:(id)arg1 rate:(float)arg2 fromStalling:(_Bool)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000d777
- (void)_logPlayerEventsForQueueItem:(id)arg1;	// IMP=0x000000000000d359
- (void)_updateActiveFormatForQueueItem:(id)arg1;	// IMP=0x000000000000cefa
- (void)itemIsReadyToPlay:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000000ca58
- (void)itemDidPlayToEnd:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000000c7b3
- (void)itemDidFailToPlayToEnd:(id)arg1 error:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000c1a4
- (void)itemDidFailToLoad:(id)arg1 error:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000bf60
- (void)userSeekCompletedForItem:(id)arg1 fromTime:(double)arg2 toTime:(double)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000bc05
- (void)playbackTimeDidChangeTo:(double)arg1 forItem:(id)arg2 reason:(long long)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000b2fa
- (void)playbackDidReachQueueEndWithTimeStamp:(id)arg1;	// IMP=0x000000000000b168
- (void)itemDidResignCurrent:(id)arg1 source:(long long)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000ad8e
- (void)itemDidBecomeCurrent:(id)arg1 source:(long long)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000a77b
- (void)currentItemWillChangeFromItem:(id)arg1 toItem:(id)arg2 source:(long long)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000a1db
- (void)queueController:(id)arg1 didIncrementVersionForSegment:(id)arg2;	// IMP=0x000000000000a19e
- (void)queueController:(id)arg1 didChangeActionAtQueueEnd:(long long)arg2;	// IMP=0x000000000000a12c
- (void)queueController:(id)arg1 didChangeShuffleType:(long long)arg2;	// IMP=0x000000000000a0ba
- (void)queueController:(id)arg1 didChangeRepeatType:(long long)arg2;	// IMP=0x000000000000a048
- (void)queueController:(id)arg1 didChangeContentsWithReplacementPlaybackContext:(id)arg2;	// IMP=0x000000000000a042
- (void)queueController:(id)arg1 failedToLoadItem:(id)arg2;	// IMP=0x0000000000009eb6
- (void)queueControllerDidChangeContents:(id)arg1;	// IMP=0x0000000000009d41
- (void)_performSkipForUserAction:(id)arg1;	// IMP=0x0000000000009ac6
- (_Bool)_isAVKitSkipAction:(id)arg1;	// IMP=0x0000000000009a3b
- (void)_playbackDidStopForItem:(id)arg1 source:(id)arg2 reason:(id)arg3 time:(double)arg4;	// IMP=0x000000000000966b
- (id)_MPAVItemForMFQueuePlayerItem:(id)arg1;	// IMP=0x0000000000009551
- (void)_logTimeJumpForItem:(id)arg1 fromTime:(double)arg2 toTime:(double)arg3 userInitiated:(_Bool)arg4 timeStamp:(id)arg5;	// IMP=0x00000000000090a1
@property(readonly, nonatomic) NSDictionary *_stateDictionary;
- (void)_setupPlaybackStackWithPlaybackEngine:(id)arg1 queueController:(id)arg2;	// IMP=0x00000000000086d1
- (void)_resetPlaybackStack;	// IMP=0x000000000000865b
- (void)setRelativeVolume:(float)arg1;	// IMP=0x000000000000860c
- (void)jumpToTime:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000008492
- (void)setRate:(float)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000082d5
- (void)endScanningWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000816f
- (void)beginScanningWithDirection:(long long)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007ff1
- (void)skipWithDirection:(long long)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007cef
- (_Bool)skipWithDirectionShouldJumpToItemStart:(long long)arg1;	// IMP=0x0000000000007c9c
- (void)togglePlaybackWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000007908
- (void)pauseForLeasePreventionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000077a2
- (void)pauseWithFadeout:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007632
- (void)pauseWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000074cc
- (void)playWithRate:(float)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007329
- (void)endPlaybackWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000007050
- (void)endPlayback;	// IMP=0x0000000000006fa4
@property(readonly, nonatomic) _Bool hasPlayedSuccessfully;
@property(readonly, nonatomic) AVPlayerViewController *playerViewController;
@property(readonly, nonatomic) long long stateBeforeInterruption;
@property(readonly, nonatomic) long long state;
@property(readonly, nonatomic) float currentRate;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) MPAVItem *currentItem;
- (void)updateAudioSession;	// IMP=0x0000000000006bdd
- (void)endUsingVideoLayer;	// IMP=0x0000000000006bd7
- (void)beginUsingVideoLayer;	// IMP=0x0000000000006bd1
- (void)playWithOptions:(unsigned long long)arg1;	// IMP=0x0000000000006bbf
- (void)pauseWithFadeout:(float)arg1;	// IMP=0x0000000000006a8c
- (void)pause;	// IMP=0x0000000000006a77
- (_Bool)changePlaybackIndexBy:(long long)arg1 deltaType:(long long)arg2 ignoreElapsedTime:(_Bool)arg3 force:(_Bool)arg4 error:(id *)arg5;	// IMP=0x00000000000066c7
- (void)becomeActiveWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000065d6
- (void)setQueueWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000000607f
- (void)loadSessionWithQueueController:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000005f75
- (void)replaceCurrentItemWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000005c6a
- (void)reloadWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000005672
- (void)dealloc;	// IMP=0x0000000000005638
- (id)initWithPlaybackEngine:(id)arg1;	// IMP=0x000000000000554f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

