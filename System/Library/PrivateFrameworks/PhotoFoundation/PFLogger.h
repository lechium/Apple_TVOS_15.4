//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSSet, NSString;
@protocol OS_dispatch_queue, PFLoggerBackend;

@interface PFLogger : NSObject
{
    _Bool _shouldLogToCrashReporter;	// 8 = 0x8
    _Bool _backendAllowsConcurrentAccess;	// 9 = 0x9
    int _logLevel;	// 12 = 0xc
    NSObject<PFLoggerBackend> *_backend;	// 16 = 0x10
    NSArray *_tracedSubsystems;	// 24 = 0x18
    NSArray *_debuggedSubsystems;	// 32 = 0x20
    NSString *_facilityPrefix;	// 40 = 0x28
    NSDictionary *_options;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_backendAccessSerializationQueue;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_recordedSubsystemsQueue;	// 64 = 0x40
    NSSet *_recordedSubsystems;	// 72 = 0x48
}

+ (_Bool)traceEnabledForSubsystem:(id)arg1;	// IMP=0x000000000001e461
+ (void)logCrashReporterMessageFromCodeLocation:(CDStruct_98c8119d)arg1 format:(id)arg2;	// IMP=0x000000000001e2d7
+ (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;	// IMP=0x000000000001e20f
+ (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4;	// IMP=0x000000000001e15f
+ (void)setupCrashReporter;	// IMP=0x000000000001e0f5
+ (void)logCrashReporterMessage:(id)arg1 fromCodeLocation:(CDStruct_98c8119d)arg2;	// IMP=0x000000000001df3c
+ (_Bool)enabledForSubsystem:(id)arg1 level:(int)arg2;	// IMP=0x000000000001de66
+ (id)backendsFromUserDefaultsWithLogLevel:(int)arg1;	// IMP=0x000000000001dc42
+ (id)createDefaultLogger;	// IMP=0x000000000001d7e5
+ (int)defaultLoggerLogLevel;	// IMP=0x000000000001d787
+ (void)recreateDefaultLogger;	// IMP=0x000000000001d73b
+ (void)setDefaultLogger:(id)arg1;	// IMP=0x000000000001d6b6
+ (void)flushDefaultLoggerIfPresent;	// IMP=0x000000000001d696
+ (id)defaultLogger;	// IMP=0x000000000001d633
+ (id)loggerWithBackend:(id)arg1 logLevel:(int)arg2 options:(id)arg3;	// IMP=0x000000000001d5b8
+ (void)initialize;	// IMP=0x000000000001d53c
- (void).cxx_destruct;	// IMP=0x000000000001d33f
@property(retain) NSSet *recordedSubsystems; // @synthesize recordedSubsystems=_recordedSubsystems;
@property(retain) NSObject<OS_dispatch_queue> *recordedSubsystemsQueue; // @synthesize recordedSubsystemsQueue=_recordedSubsystemsQueue;
@property _Bool backendAllowsConcurrentAccess; // @synthesize backendAllowsConcurrentAccess=_backendAllowsConcurrentAccess;
@property(retain) NSObject<OS_dispatch_queue> *backendAccessSerializationQueue; // @synthesize backendAccessSerializationQueue=_backendAccessSerializationQueue;
@property(retain) NSDictionary *options; // @synthesize options=_options;
@property(retain) NSString *facilityPrefix; // @synthesize facilityPrefix=_facilityPrefix;
@property(retain) NSArray *debuggedSubsystems; // @synthesize debuggedSubsystems=_debuggedSubsystems;
@property(retain) NSArray *tracedSubsystems; // @synthesize tracedSubsystems=_tracedSubsystems;
@property(retain) NSObject<PFLoggerBackend> *backend; // @synthesize backend=_backend;
@property _Bool shouldLogToCrashReporter; // @synthesize shouldLogToCrashReporter=_shouldLogToCrashReporter;
@property int logLevel; // @synthesize logLevel=_logLevel;
- (void)_recordSubsystem:(id)arg1;	// IMP=0x000000000001d125
- (id)description;	// IMP=0x000000000001d067
- (void)flush;	// IMP=0x000000000001cfa4
- (_Bool)enabledForSubsystem:(id)arg1 subsystems:(id)arg2;	// IMP=0x000000000001cea7
- (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;	// IMP=0x000000000001cab0
- (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4;	// IMP=0x000000000001ca00
- (void)processOptions;	// IMP=0x000000000001c93f
- (id)initWithBackend:(id)arg1 logLevel:(int)arg2 options:(id)arg3;	// IMP=0x000000000001c806

@end

