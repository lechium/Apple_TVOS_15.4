//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreUtils/HMAccessoryDelegatePrivate-Protocol.h>
#import <CoreUtils/HMHomeDelegate-Protocol.h>
#import <CoreUtils/HMHomeDelegatePrivate-Protocol.h>
#import <CoreUtils/HMHomeManagerDelegate-Protocol.h>
#import <CoreUtils/HMHomeManagerDelegatePrivate-Protocol.h>
#import <CoreUtils/HMMediaSystemDelegate-Protocol.h>
#import <CoreUtils/HMUserDelegatePrivate-Protocol.h>

@class HMAccessory, HMHomeManager, HMMediaSystem, HMMediaSystemRole, HMUser, NSArray, NSDictionary, NSMutableDictionary, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface CUHomeKitManager : NSObject <HMAccessoryDelegatePrivate, HMHomeDelegate, HMHomeDelegatePrivate, HMHomeManagerDelegate, HMHomeManagerDelegatePrivate, HMMediaSystemDelegate, HMUserDelegatePrivate>
{
    int _homeKitPrefsNotifyToken;	// 8 = 0x8
    HMHomeManager *_homeManager;	// 16 = 0x10
    _Bool _homeManagerDidUpdateHomes;	// 24 = 0x18
    NSMutableDictionary *_homes;	// 32 = 0x20
    NSMutableDictionary *_resolvableAccessoriesMap;	// 40 = 0x28
    _Bool _selfAccessoryEnabled;	// 48 = 0x30
    NSUUID *_selfAccessoryRoomID;	// 56 = 0x38
    _Bool _selfAccessoryMediaAccessEnabled;	// 64 = 0x40
    _Bool _selfAccessoryMediaSystemEnabled;	// 65 = 0x41
    _Bool _selfAccessorySiriAccessEnabled;	// 66 = 0x42
    HMUser *_selfAccessoryUser;	// 72 = 0x48
    NSMutableDictionary *_users;	// 80 = 0x50
    _Bool _invalidateCalled;	// 88 = 0x58
    _Bool _invalidateDone;	// 89 = 0x59
    struct LogCategory *_ucat;	// 96 = 0x60
    _Bool _selfAccessorySiriEnabled;	// 104 = 0x68
    unsigned int _flags;	// 108 = 0x6c
    unsigned int _state;	// 112 = 0x70
    unsigned int _selfAccessoryMediaAccessFlags;	// 116 = 0x74
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 120 = 0x78
    NSString *_label;	// 128 = 0x80
    CDUnknownBlockType _interruptionHandler;	// 136 = 0x88
    CDUnknownBlockType _invalidationHandler;	// 144 = 0x90
    CDUnknownBlockType _stateChangedHandler;	// 152 = 0x98
    NSArray *_resolvableAccessories;	// 160 = 0xa0
    CDUnknownBlockType _resolvableAccessoriesChangedHandler;	// 168 = 0xa8
    HMAccessory *_selfAccessory;	// 176 = 0xb0
    NSDictionary *_selfAccessoryAppData;	// 184 = 0xb8
    CDUnknownBlockType _selfAccessoryAppDataChangedHandler;	// 192 = 0xc0
    CDUnknownBlockType _selfAccessoryUpdatedHandler;	// 200 = 0xc8
    NSString *_selfAccessoryMediaAccessPassword;	// 208 = 0xd0
    CDUnknownBlockType _selfAccessoryMediaAccessUpdatedHandler;	// 216 = 0xd8
    HMMediaSystem *_selfAccessoryMediaSystem;	// 224 = 0xe0
    HMAccessory *_selfAccessoryMediaSystemCounterpart;	// 232 = 0xe8
    NSString *_selfAccessoryMediaSystemName;	// 240 = 0xf0
    HMMediaSystemRole *_selfAccessoryMediaSystemRole;	// 248 = 0xf8
    CDUnknownBlockType _selfAccessoryMediaSystemUpdatedHandler;	// 256 = 0x100
    CDUnknownBlockType _selfAccessorySiriAccessUpdatedHandler;	// 264 = 0x108
}

- (void).cxx_destruct;	// IMP=0x0000000000057fa3
@property(copy, nonatomic) CDUnknownBlockType selfAccessorySiriAccessUpdatedHandler; // @synthesize selfAccessorySiriAccessUpdatedHandler=_selfAccessorySiriAccessUpdatedHandler;
@property(readonly, nonatomic) _Bool selfAccessorySiriEnabled; // @synthesize selfAccessorySiriEnabled=_selfAccessorySiriEnabled;
@property(copy, nonatomic) CDUnknownBlockType selfAccessoryMediaSystemUpdatedHandler; // @synthesize selfAccessoryMediaSystemUpdatedHandler=_selfAccessoryMediaSystemUpdatedHandler;
@property(readonly, nonatomic) HMMediaSystemRole *selfAccessoryMediaSystemRole; // @synthesize selfAccessoryMediaSystemRole=_selfAccessoryMediaSystemRole;
@property(copy, nonatomic) NSString *selfAccessoryMediaSystemName; // @synthesize selfAccessoryMediaSystemName=_selfAccessoryMediaSystemName;
@property(readonly, nonatomic) HMAccessory *selfAccessoryMediaSystemCounterpart; // @synthesize selfAccessoryMediaSystemCounterpart=_selfAccessoryMediaSystemCounterpart;
@property(readonly, nonatomic) HMMediaSystem *selfAccessoryMediaSystem; // @synthesize selfAccessoryMediaSystem=_selfAccessoryMediaSystem;
@property(copy, nonatomic) CDUnknownBlockType selfAccessoryMediaAccessUpdatedHandler; // @synthesize selfAccessoryMediaAccessUpdatedHandler=_selfAccessoryMediaAccessUpdatedHandler;
@property(readonly, copy, nonatomic) NSString *selfAccessoryMediaAccessPassword; // @synthesize selfAccessoryMediaAccessPassword=_selfAccessoryMediaAccessPassword;
@property(readonly, nonatomic) unsigned int selfAccessoryMediaAccessFlags; // @synthesize selfAccessoryMediaAccessFlags=_selfAccessoryMediaAccessFlags;
@property(copy, nonatomic) CDUnknownBlockType selfAccessoryUpdatedHandler; // @synthesize selfAccessoryUpdatedHandler=_selfAccessoryUpdatedHandler;
@property(copy, nonatomic) CDUnknownBlockType selfAccessoryAppDataChangedHandler; // @synthesize selfAccessoryAppDataChangedHandler=_selfAccessoryAppDataChangedHandler;
@property(readonly, copy, nonatomic) NSDictionary *selfAccessoryAppData; // @synthesize selfAccessoryAppData=_selfAccessoryAppData;
@property(readonly, nonatomic) HMAccessory *selfAccessory; // @synthesize selfAccessory=_selfAccessory;
@property(copy, nonatomic) CDUnknownBlockType resolvableAccessoriesChangedHandler; // @synthesize resolvableAccessoriesChangedHandler=_resolvableAccessoriesChangedHandler;
@property(readonly, copy, nonatomic) NSArray *resolvableAccessories; // @synthesize resolvableAccessories=_resolvableAccessories;
@property(copy, nonatomic) CDUnknownBlockType stateChangedHandler; // @synthesize stateChangedHandler=_stateChangedHandler;
@property(readonly, nonatomic) unsigned int state; // @synthesize state=_state;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) unsigned int flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void)user:(id)arg1 didUpdateAssistantAccessControl:(id)arg2 forHome:(id)arg3;	// IMP=0x0000000000057d23
- (void)accessory:(id)arg1 didUpdateDevice:(id)arg2;	// IMP=0x0000000000057c6b
- (void)accessoryDidUpdatePairingIdentity:(id)arg1;	// IMP=0x0000000000057be0
- (void)accessoryDidUpdateApplicationData:(id)arg1;	// IMP=0x0000000000057b55
- (void)mediaSystem:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x0000000000057aca
- (void)mediaSystem:(id)arg1 didUpdateComponents:(id)arg2;	// IMP=0x0000000000057a3f
- (void)home:(id)arg1 didRemoveMediaSystem:(id)arg2;	// IMP=0x0000000000057980
- (void)home:(id)arg1 didAddMediaSystem:(id)arg2;	// IMP=0x00000000000578c1
- (void)home:(id)arg1 didUpdateMediaPassword:(id)arg2;	// IMP=0x0000000000057802
- (void)home:(id)arg1 didUpdateMediaPeerToPeerEnabled:(_Bool)arg2;	// IMP=0x000000000005776b
- (void)home:(id)arg1 didUpdateMinimumMediaUserPrivilege:(long long)arg2;	// IMP=0x00000000000576d4
- (void)home:(id)arg1 didRemoveUser:(id)arg2;	// IMP=0x0000000000057615
- (void)home:(id)arg1 didAddUser:(id)arg2;	// IMP=0x0000000000057556
- (void)home:(id)arg1 didUpdateRoom:(id)arg2 forAccessory:(id)arg3;	// IMP=0x000000000005746f
- (void)home:(id)arg1 didRemoveAccessory:(id)arg2;	// IMP=0x00000000000573b0
- (void)home:(id)arg1 didAddAccessory:(id)arg2;	// IMP=0x00000000000572f1
- (void)homeManager:(id)arg1 didRemoveHome:(id)arg2;	// IMP=0x0000000000057266
- (void)homeManager:(id)arg1 didAddHome:(id)arg2;	// IMP=0x00000000000571db
- (void)homeManager:(id)arg1 didUpdateStatus:(unsigned long long)arg2;	// IMP=0x000000000005718c
- (void)homeManagerDidUpdateHomes:(id)arg1;	// IMP=0x0000000000057141
- (void)homeManagerDidUpdateDataSyncState:(id)arg1;	// IMP=0x00000000000570f6
- (id)_selfAccessoryMediaSystemUncached:(id *)arg1;	// IMP=0x0000000000056d05
- (_Bool)_isOwnerOfHome:(id)arg1;	// IMP=0x0000000000056c6f
- (id)_cuPairingIdentityWithHMFPairingIdentity:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000569d1
- (id)_bestUserAndLabel:(id *)arg1;	// IMP=0x0000000000056657
- (void)_findPairedPeerWithContext:(id)arg1 label:(id)arg2 pairingIdentity:(id)arg3 error:(id)arg4;	// IMP=0x00000000000560c5
- (void)_findPairedPeerWithContext:(id)arg1;	// IMP=0x000000000005582d
- (void)_findPairedPeer:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000055334
- (void)findPairedPeer:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000055271
- (void)_getPairingIdentityCompleted:(id)arg1 options:(unsigned long long)arg2 error:(id)arg3 label:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000054f91
- (void)_getPairingIdentityForUserWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000054d09
- (void)_getPairingIdentityForAccessoryWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000054b75
- (void)getPairingIdentityWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000054ade
- (void)_updateUsers;	// IMP=0x00000000000542a0
- (void)_updateState;	// IMP=0x00000000000541c7
- (void)_updateSelfAccessorySiriAccess;	// IMP=0x0000000000053e2a
- (void)_updateSelfAccessoryMediaSystem;	// IMP=0x0000000000053492
- (void)_updateSelfAccessoryMediaAccess;	// IMP=0x000000000005316c
- (void)_updateSelfAccessoryIfNeeded;	// IMP=0x00000000000529cd
- (void)_updateHomes;	// IMP=0x00000000000522e7
- (void)_updateAccessories;	// IMP=0x00000000000514e6
- (void)_clearHomeKitState;	// IMP=0x0000000000050c62
- (void)_invalidated;	// IMP=0x0000000000050afd
- (void)invalidate;	// IMP=0x0000000000050ab2
- (void)_interrupted;	// IMP=0x0000000000050a88
- (void)_activateIfNeeded;	// IMP=0x00000000000507c4
- (void)activate;	// IMP=0x0000000000050779
- (void)dealloc;	// IMP=0x00000000000506b4
- (id)init;	// IMP=0x0000000000050634

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

