//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <IMDaemonCore/IMSystemMonitorListener-Protocol.h>

@class IDSKVStore, IMNickname, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet;

@interface IMDNicknameController : NSObject <IMSystemMonitorListener>
{
    _Bool _needToLoadMapsInfoFromDisk;	// 8 = 0x8
    _Bool _nicknameIsUploadingToCK;	// 9 = 0x9
    IMNickname *_personalNickname;	// 16 = 0x10
    IDSKVStore *_kvStore;	// 24 = 0x18
    double _lastMeContactStoreSync;	// 32 = 0x20
    IDSKVStore *_handledNicknamesKVStore;	// 40 = 0x28
    IDSKVStore *_pendingNicknameUpdatesKVStore;	// 48 = 0x30
    IDSKVStore *_handleSharingKVStore;	// 56 = 0x38
    NSMutableDictionary *_handledNicknames;	// 64 = 0x40
    NSMutableDictionary *_pendingNicknameUpdates;	// 72 = 0x48
    NSMutableSet *_handleAllowList;	// 80 = 0x50
    NSMutableSet *_handleDenyList;	// 88 = 0x58
    NSMutableArray *_chatsToSendNicknameInfoTo;	// 96 = 0x60
}

+ (id)sharedInstance;	// IMP=0x000000000004b59c
@property(nonatomic) _Bool nicknameIsUploadingToCK; // @synthesize nicknameIsUploadingToCK=_nicknameIsUploadingToCK;
@property(retain, nonatomic) NSMutableArray *chatsToSendNicknameInfoTo; // @synthesize chatsToSendNicknameInfoTo=_chatsToSendNicknameInfoTo;
@property(nonatomic) _Bool needToLoadMapsInfoFromDisk; // @synthesize needToLoadMapsInfoFromDisk=_needToLoadMapsInfoFromDisk;
@property(retain, nonatomic) NSMutableSet *handleDenyList; // @synthesize handleDenyList=_handleDenyList;
@property(retain, nonatomic) NSMutableSet *handleAllowList; // @synthesize handleAllowList=_handleAllowList;
@property(retain, nonatomic) NSMutableDictionary *pendingNicknameUpdates; // @synthesize pendingNicknameUpdates=_pendingNicknameUpdates;
@property(retain, nonatomic) NSMutableDictionary *handledNicknames; // @synthesize handledNicknames=_handledNicknames;
@property(retain, nonatomic) IDSKVStore *handleSharingKVStore; // @synthesize handleSharingKVStore=_handleSharingKVStore;
@property(retain, nonatomic) IDSKVStore *pendingNicknameUpdatesKVStore; // @synthesize pendingNicknameUpdatesKVStore=_pendingNicknameUpdatesKVStore;
@property(retain, nonatomic) IDSKVStore *handledNicknamesKVStore; // @synthesize handledNicknamesKVStore=_handledNicknamesKVStore;
@property(nonatomic) double lastMeContactStoreSync; // @synthesize lastMeContactStoreSync=_lastMeContactStoreSync;
@property(retain, nonatomic) IDSKVStore *kvStore; // @synthesize kvStore=_kvStore;
@property(retain, nonatomic) IMNickname *personalNickname; // @synthesize personalNickname=_personalNickname;
- (void)markAllNicknamesAsPending;	// IMP=0x00000000000525de
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x0000000000052598
- (id)transferServicesController;	// IMP=0x000000000005257f
- (id)substringRecordIDForNickname:(id)arg1;	// IMP=0x0000000000052511
- (id)nicknameForHandle:(id)arg1;	// IMP=0x000000000005246a
- (id)nicknameForHandleURI:(id)arg1;	// IMP=0x0000000000052400
- (id)nicknameForRecordID:(id)arg1 handle:(id)arg2;	// IMP=0x0000000000052310
- (id)nicknameForRecordID:(id)arg1;	// IMP=0x00000000000520ec
- (id)allNicknames;	// IMP=0x000000000005208a
- (void)_deleteAvatarForNickname:(id)arg1;	// IMP=0x0000000000051ff1
- (id)pendingPersonalNickname;	// IMP=0x0000000000051ecc
- (id)storedPersonalNickname;	// IMP=0x0000000000051c6b
- (id)nickNameRecordID;	// IMP=0x0000000000051bb0
- (id)nickNameDecryptionKey;	// IMP=0x0000000000051b2c
- (void)_deletePublicNicknameLocationAndKey;	// IMP=0x0000000000051a64
- (void)_deletePendingNicknameForUpload;	// IMP=0x00000000000519ea
- (id)_getPendingNicknameForUpload;	// IMP=0x000000000005187e
- (void)_storePendingNicknameForUpload:(id)arg1;	// IMP=0x0000000000051784
- (void)_storePublicNickname:(id)arg1 nicknameLocation:(id)arg2 encryptionKey:(id)arg3;	// IMP=0x0000000000051518
- (void)_makeAllNicknameContentsClassC;	// IMP=0x0000000000051326
- (_Bool)_populateNicknameDictionary:(id)arg1 forKVStore:(id)arg2 limitToLoad:(unsigned long long)arg3;	// IMP=0x00000000000510d5
- (void)loadSharingHandlesPrefs;	// IMP=0x0000000000050e05
- (void)loadHandledNicknamesAndPendingUpdates;	// IMP=0x0000000000050bf6
- (void)loadPersonalNicknameIfNeeded;	// IMP=0x0000000000050b1a
- (void)_loadAllInfoFromDiskIfAble;	// IMP=0x00000000000509ed
- (void)_deleteDataUnderScrutiny;	// IMP=0x00000000000508e7
- (void)_setUnderScrutiny:(_Bool)arg1;	// IMP=0x0000000000050884
- (_Bool)_isUnderScrutiny;	// IMP=0x0000000000050839
- (_Bool)_deviceUnderFirstUnlock;	// IMP=0x0000000000050807
- (void)cleanUpNicknameForID:(id)arg1;	// IMP=0x00000000000504e8
- (void)_deleteHandleIDFromHandledMap:(id)arg1;	// IMP=0x0000000000050486
- (void)_deleteHandleIDFromPendingMap:(id)arg1;	// IMP=0x0000000000050424
- (void)_deleteNicknameFromPendingMap:(id)arg1;	// IMP=0x00000000000503f0
- (void)_writeNicknameToKVStore:(id)arg1 nickname:(id)arg2;	// IMP=0x00000000000502fe
- (void)markNicknameAsUpdated:(id)arg1;	// IMP=0x00000000000502e7
- (void)_updateNicknameInHandledMap:(id)arg1;	// IMP=0x00000000000500b3
- (void)_markNicknameAsUpdated:(id)arg1 incrementPendingNicknameVersion:(_Bool)arg2;	// IMP=0x000000000004ffc6
- (_Bool)replacedNicknameForHandleIDInHandledMapIfNeeded:(id)arg1 nickname:(id)arg2;	// IMP=0x000000000004feb9
- (void)addNicknameToPendingUpdates:(id)arg1;	// IMP=0x000000000004fbfc
- (void)_broadcastPendingMapChanged;	// IMP=0x000000000004fbb3
- (void)ignorePendingNicknameForHandleID:(id)arg1;	// IMP=0x000000000004fa43
- (void)clearPendingNicknameForHandleID:(id)arg1;	// IMP=0x000000000004f936
- (void)saveNicknameForRecordID:(id)arg1 handleID:(id)arg2 userNickname:(id)arg3;	// IMP=0x000000000004f877
- (void)_updatePendingNicknameVersion;	// IMP=0x000000000004f7d2
- (void)_updateHandleList:(id)arg1 withHandles:(id)arg2 forKey:(id)arg3 broadcastUpdates:(_Bool)arg4;	// IMP=0x000000000004f6e2
- (void)denyHandlesForSharing:(id)arg1;	// IMP=0x000000000004f5f9
- (void)allowHandlesForSharing:(id)arg1 onChatGUIDs:(id)arg2;	// IMP=0x000000000004f398
- (void)broadcastHandlesSharingNicknamesDidChange;	// IMP=0x000000000004f34f
@property(readonly, nonatomic) NSSet *denyListedHandlesForSharing;
@property(readonly, nonatomic) NSSet *allowListedHandlesForSharing;
- (void)sendPersonalNicknameToChat:(id)arg1;	// IMP=0x000000000004f224
- (void)queueChatToSendNicknamePostUploadIfNeeded:(id)arg1;	// IMP=0x000000000004f163
- (_Bool)_sendMessageDictionary:(id)arg1 toDevice:(id)arg2;	// IMP=0x000000000004f018
- (void)sendPersonalNicknameRecordIDAndVersionToAllPeers;	// IMP=0x000000000004efbe
- (void)sendPersonalNicknameRecordIDAndVersionRequestedByDevice:(id)arg1;	// IMP=0x000000000004ef7e
- (void)sendNicknamePreferencesDidChange;	// IMP=0x000000000004ee77
- (_Bool)_isNicknamesSharingEnabled;	// IMP=0x000000000004ee0f
- (void)sendPendingNicknameUpdatesDidChange;	// IMP=0x000000000004edb7
- (void)handleNicknameUpdatesFromPeerDevice:(id)arg1 fromPeerDevice:(id)arg2;	// IMP=0x000000000004ec92
- (_Bool)_requestingToSendLocalNicknameInfo:(id)arg1;	// IMP=0x000000000004ec5d
- (void)_syncHandleAllowDenyListToOtherDevices;	// IMP=0x000000000004eaeb
- (void)_updateDenyAllowListHandlesVersion;	// IMP=0x000000000004ea46
- (void)_updateHandleDenyAllowListIfNeeded:(id)arg1;	// IMP=0x000000000004e3de
- (void)_updateCloudKitRecordIDAndDecryptionKeyIfNeededFromMadridMessage:(id)arg1;	// IMP=0x000000000004e279
- (void)_showDebugAlertWithHeader:(id)arg1 message:(id)arg2;	// IMP=0x000000000004e1e1
- (void)_updateHandledNicknamesIfNeeded:(id)arg1;	// IMP=0x000000000004deb5
- (void)_markNicknameAsUpdatedForHandleID:(id)arg1;	// IMP=0x000000000004ddfd
- (id)messageDictionaryWithPersonalRecordIDAndVersion;	// IMP=0x000000000004db62
- (void)_updateMessageDictionaryWithPendingNicknameUpdates:(id)arg1;	// IMP=0x000000000004da8d
- (void)_updateSharingPreferencesIfNeededFromMadridMessage:(id)arg1;	// IMP=0x000000000004d7dc
- (void)deleteAllPersonalNicknames:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000004d61f
- (void)NicknameWithRecordID:(id)arg1 URI:(id)arg2 decryptionKey:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000004d216
- (void)getNicknameWithRecordID:(id)arg1 decryptionKey:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000004d0a3
- (void)currentPersonalNicknameWithRecordID:(id)arg1 decryptionKey:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000004ce4c
- (void)currentPersonalNicknamewithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000004cdfa
- (void)_clearSharingLists;	// IMP=0x000000000004cd90
- (void)_resetHandleSharingList;	// IMP=0x000000000004ccf5
- (void)_uploadPendingNicknameIfNecessary;	// IMP=0x000000000004cc30
- (void)setPersonalNickname:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000004c846
- (void)_endNicknameUpload;	// IMP=0x000000000004c5d3
- (void)_beginNicknameUpload:(id)arg1;	// IMP=0x000000000004c506
- (void)verifyTruncatedRecordIDMatchesPersonalNickname:(id)arg1 forChat:(id)arg2;	// IMP=0x000000000004c3ab
- (void)deviceSignedOutOfiMessage;	// IMP=0x000000000004c2ca
- (void)_newDeviceDidSignIntoiMessageWithRetryCount:(unsigned long long)arg1;	// IMP=0x000000000004c0d8
- (void)_retryPeerRequestWithRetry:(unsigned long long)arg1;	// IMP=0x000000000004c068
- (void)newDeviceDidSignIntoiMessage;	// IMP=0x000000000004c054
- (void)reuploadProfileIfNeeded;	// IMP=0x000000000004bfb5
- (void)_tryToReuploadPersonalNicknameWithRetryCount:(unsigned long long)arg1 reuploadVersion:(unsigned long long)arg2;	// IMP=0x000000000004bdec
- (unsigned long long)_reuploadLocalProfileVersionNumber;	// IMP=0x000000000004bd58
- (void)_evaluateIfAccountHasMultiplePhoneNumbers;	// IMP=0x000000000004bb7e
- (void)aliasesDidChange:(_Bool)arg1;	// IMP=0x000000000004ba5a
- (void)evaluateAccountStateForFeatureEligibility;	// IMP=0x000000000004b936
- (void)_ckAccountChanged:(id)arg1;	// IMP=0x000000000004b924
- (_Bool)_nicknameFeatureEnabled;	// IMP=0x000000000004b91a
- (id)defaults;	// IMP=0x000000000004b901
- (void)dealloc;	// IMP=0x000000000004b82d
- (id)init;	// IMP=0x000000000004b5e1

@end

