//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/_UIKBRTRecognizerDelegate-Protocol.h>
#import <UIKitCore/_UIKBRTTouchDriftingDelegate-Protocol.h>
#import <UIKitCore/_UIScreenEdgePanRecognizerDelegate-Protocol.h>
#import <UIKitCore/_UIViewRepresentingKeyboardLayout-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSUUID, UIEvent, UIKBCadenceMonitor, UIKBScreenTraits, UIKBTextEditingTraits, UIKeyboardTaskQueue, UIKeyboardTypingStyleEstimator, UITextInputTraits, _UIKBRTFingerDetection, _UIKBRTRecognizer, _UIKBRTTouchDrifting, _UIKBRTTouchVelocities, _UIScreenEdgePanRecognizer;
@protocol OS_dispatch_queue, UIKeyboardLayoutSizeDelegate;

@interface UIKeyboardLayout <_UIKBRTRecognizerDelegate, _UIKBRTTouchDriftingDelegate, _UIViewRepresentingKeyboardLayout, _UIScreenEdgePanRecognizerDelegate>
{
    UITextInputTraits *_inputTraits;	// 8 = 0x8
    UIKBScreenTraits *_screenTraits;	// 16 = 0x10
    UIKBTextEditingTraits *_textEditingTraits;	// 24 = 0x18
    NSMutableArray *_uncommittedTouchUUIDs;	// 32 = 0x20
    NSUUID *_activeTouchUUID;	// 40 = 0x28
    NSUUID *_shiftKeyTouchUUID;	// 48 = 0x30
    unsigned long long _cursorLocation;	// 56 = 0x38
    _Bool _disableInteraction;	// 64 = 0x40
    UIKeyboardTaskQueue *_taskQueue;	// 72 = 0x48
    UIKeyboardTypingStyleEstimator *_typingStyleEstimator;	// 80 = 0x50
    UIEvent *_currentTouchDownEvent;	// 88 = 0x58
    _Bool hideKeysUnderIndicator;	// 96 = 0x60
    _Bool _ignoringKeyplaneChange;	// 97 = 0x61
    _Bool _hasPreferredHeight;	// 98 = 0x62
    _Bool _isExecutingDeferredTouchTasks;	// 99 = 0x63
    _Bool _listeningForWillChange;	// 100 = 0x64
    _Bool _listeningForDidChange;	// 101 = 0x65
    double _preferredHeight;	// 104 = 0x68
    _UIScreenEdgePanRecognizer *_screenEdgePanRecognizer;	// 112 = 0x70
    CDUnknownBlockType _deferredTouchDownTask;	// 120 = 0x78
    CDUnknownBlockType _deferredTouchMovedTask;	// 128 = 0x80
    _UIKBRTRecognizer *_handRestRecognizer;	// 136 = 0x88
    _UIKBRTFingerDetection *_fingerDetection;	// 144 = 0x90
    UIKBCadenceMonitor *_cadenceMonitor;	// 152 = 0x98
    _UIKBRTTouchVelocities *_touchVelocities;	// 160 = 0xa0
    double lastTouchUpTime;	// 168 = 0xa8
    id <UIKeyboardLayoutSizeDelegate> _sizeDelegate;	// 176 = 0xb0
    double _timestampOfLastTouchesEnded;	// 184 = 0xb8
    CDUnknownBlockType _deferredTaskForActiveTouch;	// 192 = 0xc0
    _UIKBRTTouchDrifting *_touchDrifting;	// 200 = 0xc8
    NSMutableDictionary *_deferredTouchTaskLists;	// 208 = 0xd0
    NSObject<OS_dispatch_queue> *_deferredTouchTaskListsQueue;	// 216 = 0xd8
    NSMutableSet *_touchIgnoredUUIDSet;	// 224 = 0xe0
}

+ (_Bool)_showSmallDisplayKeyplane;	// IMP=0x00000000009a23d4
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x00000000009a23be
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x00000000009a23b5
@property(nonatomic) _Bool listeningForDidChange; // @synthesize listeningForDidChange=_listeningForDidChange;
@property(nonatomic) _Bool listeningForWillChange; // @synthesize listeningForWillChange=_listeningForWillChange;
@property(nonatomic) _Bool isExecutingDeferredTouchTasks; // @synthesize isExecutingDeferredTouchTasks=_isExecutingDeferredTouchTasks;
@property(retain, nonatomic) NSMutableSet *touchIgnoredUUIDSet; // @synthesize touchIgnoredUUIDSet=_touchIgnoredUUIDSet;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *deferredTouchTaskListsQueue; // @synthesize deferredTouchTaskListsQueue=_deferredTouchTaskListsQueue;
@property(retain, nonatomic) NSMutableDictionary *deferredTouchTaskLists; // @synthesize deferredTouchTaskLists=_deferredTouchTaskLists;
@property(retain, nonatomic) _UIKBRTTouchDrifting *touchDrifting; // @synthesize touchDrifting=_touchDrifting;
@property(readonly, nonatomic) _Bool hasPreferredHeight; // @synthesize hasPreferredHeight=_hasPreferredHeight;
@property(nonatomic) _Bool ignoringKeyplaneChange; // @synthesize ignoringKeyplaneChange=_ignoringKeyplaneChange;
@property(copy, nonatomic) CDUnknownBlockType deferredTaskForActiveTouch; // @synthesize deferredTaskForActiveTouch=_deferredTaskForActiveTouch;
@property(readonly, nonatomic) double timestampOfLastTouchesEnded; // @synthesize timestampOfLastTouchesEnded=_timestampOfLastTouchesEnded;
@property(retain, nonatomic) UIKBScreenTraits *screenTraits; // @synthesize screenTraits=_screenTraits;
@property(nonatomic) id <UIKeyboardLayoutSizeDelegate> sizeDelegate; // @synthesize sizeDelegate=_sizeDelegate;
@property(nonatomic) double lastTouchUpTime; // @synthesize lastTouchUpTime;
@property(retain, nonatomic) _UIKBRTTouchVelocities *touchVelocities; // @synthesize touchVelocities=_touchVelocities;
@property(retain, nonatomic) UIKBCadenceMonitor *cadenceMonitor; // @synthesize cadenceMonitor=_cadenceMonitor;
@property(retain, nonatomic) _UIKBRTFingerDetection *fingerDetection; // @synthesize fingerDetection=_fingerDetection;
@property(retain, nonatomic) _UIKBRTRecognizer *handRestRecognizer; // @synthesize handRestRecognizer=_handRestRecognizer;
@property(copy, nonatomic) CDUnknownBlockType deferredTouchMovedTask; // @synthesize deferredTouchMovedTask=_deferredTouchMovedTask;
@property(copy, nonatomic) CDUnknownBlockType deferredTouchDownTask; // @synthesize deferredTouchDownTask=_deferredTouchDownTask;
@property(retain, nonatomic) _UIScreenEdgePanRecognizer *screenEdgePanRecognizer; // @synthesize screenEdgePanRecognizer=_screenEdgePanRecognizer;
@property(nonatomic) _Bool hideKeysUnderIndicator; // @synthesize hideKeysUnderIndicator;
@property(nonatomic) double preferredHeight; // @synthesize preferredHeight=_preferredHeight;
@property(nonatomic) _Bool disableInteraction; // @synthesize disableInteraction=_disableInteraction;
@property(nonatomic) unsigned long long cursorLocation; // @synthesize cursorLocation=_cursorLocation;
@property(retain, nonatomic) NSUUID *shiftKeyTouchUUID; // @synthesize shiftKeyTouchUUID=_shiftKeyTouchUUID;
@property(retain, nonatomic) NSUUID *activeTouchUUID; // @synthesize activeTouchUUID=_activeTouchUUID;
- (id)getRomanAccentVariantsForString:(id)arg1 inputMode:(id)arg2 keyboardVariantIndludes:(int)arg3;	// IMP=0x00000000009ac8df
- (_Bool)isHandwritingPlane;	// IMP=0x00000000009ac8d7
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x00000000009ac8cf
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x00000000009ac8c2
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x00000000009ac8b5
- (void)changeToKeyplane:(id)arg1;	// IMP=0x00000000009ac8af
- (id)keyplaneNamed:(id)arg1;	// IMP=0x00000000009ac8a7
- (id)keyplaneForKey:(id)arg1;	// IMP=0x00000000009ac89f
- (id)baseKeyForString:(id)arg1;	// IMP=0x00000000009ac897
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x00000000009ac88f
- (struct CGSize)stretchFactor;	// IMP=0x00000000009ac87e
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x00000000009ac878
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x00000000009ac18f
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x00000000009ac187
- (void)updateUndoKeyState;	// IMP=0x00000000009ac181
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x00000000009ac179
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x00000000009ac171
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x00000000009ac16b
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x00000000009ac165
- (_Bool)isPossibleToTypeFast;	// IMP=0x00000000009ac15d
- (_Bool)isResized;	// IMP=0x00000000009ac155
- (_Bool)isResizing;	// IMP=0x00000000009ac14d
- (_Bool)supportsEmoji;	// IMP=0x00000000009ac145
- (_Bool)isEmojiKeyplane;	// IMP=0x00000000009ac13d
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x00000000009ac135
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x00000000009ac12d
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x00000000009ac127
- (_Bool)_allowContinuousPathUI;	// IMP=0x00000000009ac11f
- (id)currentKeyplane;	// IMP=0x00000000009ac117
- (void)traitCollectionDidChange;	// IMP=0x00000000009ac111
- (double)biasedKeyboardWidthRatio;	// IMP=0x00000000009ac103
- (long long)currentHandBias;	// IMP=0x00000000009ac0fb
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x00000000009abcfb
- (void)didEndIndirectSelectionGesture;	// IMP=0x00000000009abcbd
- (void)willBeginIndirectSelectionGesture;	// IMP=0x00000000009abc7f
- (void)setDisableTouchInput:(_Bool)arg1;	// IMP=0x00000000009abc79
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x00000000009abc73
- (_Bool)shouldFadeToLayout;	// IMP=0x00000000009abc6b
- (_Bool)shouldFadeFromLayout;	// IMP=0x00000000009abc63
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x00000000009abc4e
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x00000000009abc46
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x00000000009abc28
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x00000000009abb36
- (double)flickDistance;	// IMP=0x00000000009abb28
- (double)hitBuffer;	// IMP=0x00000000009abb1f
- (_Bool)canHandleEvent:(id)arg1;	// IMP=0x00000000009abac4
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x00000000009ababc
- (unsigned long long)fingerIDForTouchUUID:(id)arg1;	// IMP=0x00000000009aba53
- (struct CGPoint)_uikbrtTouchDrifting:(id)arg1 touchCenterForFingerID:(unsigned long long)arg2;	// IMP=0x00000000009ab9ed
- (id)_uikbrtTouchDrifting:(id)arg1 touchIdentifiersForFingerID:(unsigned long long)arg2;	// IMP=0x00000000009ab98b
- (unsigned long long)_uikbrtTouchDrifting:(id)arg1 fingerIDFortouchIdentifier:(id)arg2;	// IMP=0x00000000009ab929
- (void)_uikbrtTouchDriftingStateChanged:(id)arg1;	// IMP=0x00000000009ab8f1
- (struct CGPoint)rightVirtualDriftOffset;	// IMP=0x00000000009ab895
- (struct CGPoint)leftVirtualDriftOffset;	// IMP=0x00000000009ab839
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x00000000009ab833
- (_Bool)supportsVirtualDrift;	// IMP=0x00000000009ab81a
- (_Bool)isReachableDevice;	// IMP=0x00000000009ab7f6
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x00000000009ab7ee
- (_Bool)_hasRelatedTouchesForTouchState:(id)arg1;	// IMP=0x00000000009ab792
- (void)_ignoreTouchState:(id)arg1;	// IMP=0x00000000009ab72d
- (void)_updateTouchState:(id)arg1 errorVector:(struct CGPoint)arg2 rowOffsetFromHomeRow:(long long)arg3;	// IMP=0x00000000009ab69c
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x00000000009ab694
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x00000000009ab67e
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x00000000009ab668
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x00000000009ab653
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x00000000009ab64b
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x00000000009ab63f
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x00000000009ab637
- (unsigned char)getHandRestRecognizerState;	// IMP=0x00000000009ab62f
- (void)screenEdgePanRecognizerStateDidChange:(id)arg1;	// IMP=0x00000000009ab5c3
- (_Bool)_canAddTouchesToScreenGestureRecognizer:(id)arg1;	// IMP=0x00000000009ab4c7
- (void)resetTouchProcessingForKeyboardChange;	// IMP=0x00000000009ab4b5
- (void)updateTouchProcessingForKeyplaneChange;	// IMP=0x00000000009ab080
- (void)updateTouchProcessingForKeyboardChange;	// IMP=0x00000000009aa938
- (void)reloadKeyboardGestureRecognition;	// IMP=0x00000000009aa784
- (void)didMoveToWindow;	// IMP=0x00000000009aa6ee
- (void)_resetFingerDetectionFromLayout;	// IMP=0x00000000009aa539
- (_Bool)_shouldAllowKeyboardHandlingForTouchesEndedOrCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009aa4d3
- (_Bool)_shouldAllowKeyboardHandlingForTouchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009aa2d2
- (_Bool)_shouldAllowKeyboardHandlingForTouchesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009aa0ba
- (void)assertSavedLocation:(struct CGPoint)arg1 onTouch:(id)arg2 inWindow:(id)arg3 resetPrevious:(_Bool)arg4;	// IMP=0x00000000009aa01a
- (void)_addTouchToScreenEdgePanRecognizer:(id)arg1;	// IMP=0x00000000009a9f20
- (void)_executeDeferredTouchTasks;	// IMP=0x00000000009a9e63
- (void)_clearDeferredTouchTasks;	// IMP=0x00000000009a9e31
- (_Bool)_shouldAllowKeyboardHandlingIfNecessaryForTouch:(id)arg1 phase:(long long)arg2 withTouchState:(id)arg3 task:(CDUnknownBlockType)arg4;	// IMP=0x00000000009a97a6
- (void)resetHRRLayoutState;	// IMP=0x00000000009a92fb
- (void)recognizer:(id)arg1 cancelTouchOnLayoutWithId:(id)arg2 startPoint:(struct CGPoint)arg3 endPoint:(struct CGPoint)arg4 whenReady:(CDUnknownBlockType)arg5;	// IMP=0x00000000009a882b
- (void)recognizer:(id)arg1 releaseTouchToLayoutWithId:(id)arg2 startPoint:(struct CGPoint)arg3 endPoint:(struct CGPoint)arg4 whenReady:(CDUnknownBlockType)arg5;	// IMP=0x00000000009a7f97
- (void)recognizer:(id)arg1 continueTrackingIgnoredTouchWithId:(id)arg2 currentPoint:(struct CGPoint)arg3 whenReady:(CDUnknownBlockType)arg4;	// IMP=0x00000000009a7a59
- (void)recognizer:(id)arg1 willIgnoreTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 whenReady:(CDUnknownBlockType)arg6;	// IMP=0x00000000009a72d3
- (_Bool)queryShouldNeverIgnoreTouchStateWithIdentifier:(id)arg1 touchState:(id)arg2 startPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4;	// IMP=0x00000000009a6fbc
- (void)recognizer:(id)arg1 shouldContinueTrackingTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 forContinueState:(unsigned long long)arg6 whenStateReady:(CDUnknownBlockType)arg7;	// IMP=0x00000000009a6ad7
- (void)recognizer:(id)arg1 restartTouchDownForTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 whenStateReady:(CDUnknownBlockType)arg6;	// IMP=0x00000000009a623e
- (void)recognizer:(id)arg1 beginTouchDownForTouchWithId:(id)arg2 atPoint:(struct CGPoint)arg3 forBeginState:(unsigned long long)arg4 whenStateReady:(CDUnknownBlockType)arg5;	// IMP=0x00000000009a5898
- (void)recognizerBlockUntilTaskQueueReadyForceUsingDeferredTask:(_Bool)arg1;	// IMP=0x00000000009a574e
- (void)_enumerateDeferredTouchUUIDs:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000009a5473
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x00000000009a546b
- (void)commitTouches:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009a5266
- (void)forceUpdatesForCommittedTouch;	// IMP=0x00000000009a5234
- (void)commitTouchUUIDs:(id)arg1;	// IMP=0x00000000009a5220
- (void)commitTouchUUIDs:(id)arg1 cancelInsteadOfUp:(_Bool)arg2;	// IMP=0x00000000009a50a7
- (id)touchUUIDsToCommitBeforeTouchUUID:(id)arg1;	// IMP=0x00000000009a4f72
- (void)_removeTouchesFromProcessing:(id)arg1;	// IMP=0x00000000009a4c25
- (void)touchesEstimatedPropertiesUpdated:(id)arg1;	// IMP=0x00000000009a4b00
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009a4610
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009a4447
- (void)clearShiftIfNecessaryForEndedTouchState:(id)arg1;	// IMP=0x00000000009a43ac
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009a4262
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000009a3f91
- (void)touchChanged:(id)arg1;	// IMP=0x00000000009a3f30
- (CDUnknownBlockType)touchChangedTaskForTouchState:(id)arg1;	// IMP=0x00000000009a3e49
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009a3e34
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x00000000009a3e1f
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009a3e08
- (void)touchCancelled:(id)arg1;	// IMP=0x00000000009a3d67
- (CDUnknownBlockType)touchCancelledTaskForTouchState:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x00000000009a3bd4
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009a3bbf
- (void)didCommitTouchState:(id)arg1;	// IMP=0x00000000009a3a6b
- (void)touchUp:(id)arg1;	// IMP=0x00000000009a3949
- (CDUnknownBlockType)touchUpTaskForTouchState:(id)arg1;	// IMP=0x00000000009a3778
- (void)_touchEndedProcessingForTouches:(id)arg1;	// IMP=0x00000000009a34e0
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009a34cb
- (void)touchDragged:(id)arg1;	// IMP=0x00000000009a33a9
- (CDUnknownBlockType)touchDraggedTaskForTouchState:(id)arg1;	// IMP=0x00000000009a3282
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009a326d
- (void)touchDown:(id)arg1;	// IMP=0x00000000009a314e
- (CDUnknownBlockType)touchDownTaskForTouchState:(id)arg1;	// IMP=0x00000000009a2f20
- (void)_setRequiresExclusiveTouch:(_Bool)arg1;	// IMP=0x00000000009a2ef1
- (_Bool)canProduceString:(id)arg1;	// IMP=0x00000000009a2ee9
- (_Bool)shouldShowIndicator;	// IMP=0x00000000009a2ee1
- (id)activationIndicatorView;	// IMP=0x00000000009a2ed9
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x00000000009a2ed3
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x00000000009a2ecd
- (void)restoreDefaultsForAllKeys;	// IMP=0x00000000009a2ec7
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x00000000009a2ec1
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x00000000009a2ebb
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x00000000009a2eb5
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000009a2eaf
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000009a2ea9
@property(retain, nonatomic) NSString *layoutTag;
- (void)setRenderConfig:(id)arg1;	// IMP=0x00000000009a2e95
- (void)updateBackgroundCorners;	// IMP=0x00000000009a2e8f
- (_Bool)canMultitap;	// IMP=0x00000000009a2e87
- (_Bool)hasAccentKey;	// IMP=0x00000000009a2e7f
- (_Bool)hasCandidateKeys;	// IMP=0x00000000009a2e77
- (id)candidateList;	// IMP=0x00000000009a2e6f
- (_Bool)performSpaceAction;	// IMP=0x00000000009a2e67
- (_Bool)performReturnAction;	// IMP=0x00000000009a2e5f
- (void)didClearInput;	// IMP=0x00000000009a2e59
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x00000000009a2e51
- (id)_keyboardLayoutView;	// IMP=0x00000000009a2e48
- (void)longPressAction;	// IMP=0x00000000009a2e42
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x00000000009a2e3a
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x00000000009a2e32
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x00000000009a2e2a
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x00000000009a2e24
- (void)setShift:(_Bool)arg1;	// IMP=0x00000000009a2e1e
- (_Bool)diacriticForwardCompose;	// IMP=0x00000000009a2e16
- (_Bool)isKanaPlane;	// IMP=0x00000000009a2e0e
- (_Bool)isAlphabeticPlane;	// IMP=0x00000000009a2e06
- (_Bool)ignoresShiftState;	// IMP=0x00000000009a2dfe
- (_Bool)usesAutoShift;	// IMP=0x00000000009a2df6
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x00000000009a2df0
- (void)deactivateActiveKeys;	// IMP=0x00000000009a2a11
- (void)clearTransientState;	// IMP=0x00000000009a2a0b
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x00000000009a2a05
- (void)setRecentInputs:(id)arg1;	// IMP=0x00000000009a29ff
- (void)acceptRecentInputIfNecessary;	// IMP=0x00000000009a29f9
- (unsigned long long)textEditingKeyMask;	// IMP=0x00000000009a29f1
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x00000000009a29b8
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x00000000009a2955
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x00000000009a2943
@property(readonly, nonatomic) _Bool isFloating;
@property(readonly, nonatomic) long long idiom;
@property(readonly, nonatomic) long long orientation;
@property(retain, nonatomic) UIKeyboardTaskQueue *taskQueue;
@property(readonly, nonatomic) UIEvent *currentTouchDownEvent;
@property(readonly, nonatomic) UIKeyboardTypingStyleEstimator *typingStyleEstimator;
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000009a2684
- (void)dealloc;	// IMP=0x00000000009a24c2
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000009a23e4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

