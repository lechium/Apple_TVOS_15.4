//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UIKitCore/UIAdaptivePresentationControllerDelegate-Protocol.h>
#import <UIKitCore/UIDictationConnectionDelegate-Protocol.h>
#import <UIKitCore/UIDictationConnectionTokenFilterProtocol-Protocol.h>
#import <UIKitCore/_UIDictationPrivacySheetControllerDelegate-Protocol.h>
#import <UIKitCore/_UITouchPhaseChangeDelegate-Protocol.h>

@class AFAnalyticsTurnBasedInstrumentationContext, CADisplayLink, NSArray, NSDictionary, NSMutableArray, NSNumber, NSString, NSTimer, UIDictationConnection, UIDictationConnectionPreferences, UIDictationInputModeOptions, UIDictationStreamingOperations, UIKeyboardInputMode, UIWindow, _UIDictationPrivacySheetController, _UIDictationTelephonyMonitor, _UITapTapHoldGestureRecognizer, _UIVoiceCommandButtonTapGestureRecognizer;

__attribute__((visibility("hidden")))
@interface UIDictationController : NSObject <UIDictationConnectionDelegate, UIDictationConnectionTokenFilterProtocol, UIAdaptivePresentationControllerDelegate, _UIDictationPrivacySheetControllerDelegate, _UITouchPhaseChangeDelegate>
{
    UIDictationConnection *_dictationConnection;	// 8 = 0x8
    UIDictationConnectionPreferences *_preferences;	// 16 = 0x10
    NSTimer *_recordingLimitTimer;	// 24 = 0x18
    _Bool _connectionWasAlreadyAliveForStatisticsLogging;	// 32 = 0x20
    UIDictationStreamingOperations *_streamingOperations;	// 40 = 0x28
    NSString *_language;	// 48 = 0x30
    _Bool _recievingResults;	// 56 = 0x38
    _Bool _streamingAnimationActive;	// 57 = 0x39
    double _lastAnimationUpdateTimeStamp;	// 64 = 0x40
    CDUnknownBlockType _finalResultsOperation;	// 72 = 0x48
    CADisplayLink *_streamingAnimationDisplayLink;	// 80 = 0x50
    _Bool cancelledByWaitingForLocalResults;	// 88 = 0x58
    long long _updatingDocument;	// 96 = 0x60
    _Bool _deferredCancellationRequested;	// 104 = 0x68
    _Bool _isOfflineMetricsSessionActive;	// 105 = 0x69
    _Bool _didUseOfflineDictation;	// 106 = 0x6a
    long long _lastOfflineDictationMetricEvent;	// 112 = 0x70
    _UIDictationTelephonyMonitor *_monitor;	// 120 = 0x78
    NSString *_prefixTextForStart;	// 128 = 0x80
    NSString *_selectionTextForStart;	// 136 = 0x88
    NSString *_postfixTextForStart;	// 144 = 0x90
    _Bool _hasDictated;	// 152 = 0x98
    NSDictionary *_selectedAttributesForDictation;	// 160 = 0xa0
    CDUnknownBlockType _privacySheetDismissalHandler;	// 168 = 0xa8
    int _dictationInputModeNotifierToken;	// 176 = 0xb0
    long long _currentShortcutType;	// 184 = 0xb8
    _UITapTapHoldGestureRecognizer *_hardwareShortcutRecognizer;	// 192 = 0xc0
    _UIVoiceCommandButtonTapGestureRecognizer *_hardwareVoiceCommandKeyRecognizer;	// 200 = 0xc8
    _Bool _prevForceDisplayOverridePlaceholder;	// 208 = 0xd0
    _Bool _performingStreamingEditingOperation;	// 209 = 0xd1
    _Bool _discardNextHypothesis;	// 210 = 0xd2
    _Bool _hasPreheated;	// 211 = 0xd3
    _Bool _logAppEnterBackground;	// 212 = 0xd4
    _Bool _shouldStayInDictationInputMode;	// 213 = 0xd5
    _Bool _sendButtonPressedDuringDictation;	// 214 = 0xd6
    _Bool _hasInsertedAtLeastOneSerializedDictationResult;	// 215 = 0xd7
    _Bool _didToggleSoftwareKeyboardVisibleForDictation;	// 216 = 0xd8
    _Bool _wantsAvailabilityMonitoringWhenAppActive;	// 217 = 0xd9
    _Bool _selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate;	// 218 = 0xda
    _Bool _selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate;	// 219 = 0xdb
    _Bool _localSpeechRecognitionForced;	// 220 = 0xdc
    _Bool _secureOfflineOnlySpeechRecognition;	// 221 = 0xdd
    _Bool _ignoreFinalizePhrases;	// 222 = 0xde
    _Bool _detectingUtterances;	// 223 = 0xdf
    _Bool _finalizingRecognizedUtterance;	// 224 = 0xe0
    _Bool _hasCheckedForLeadingSpaceOnce;	// 225 = 0xe1
    _Bool _selectionStartIsStartOfParagraph;	// 226 = 0xe2
    unsigned short _initialPreviousCharacterForAsyncDelegate;	// 228 = 0xe4
    unsigned short _initialCharacterAfterSelectionForAsyncDelegate;	// 230 = 0xe6
    unsigned short _previousCharacter;	// 232 = 0xe8
    NSString *_activationIdentifier;	// 240 = 0xf0
    NSString *_smartLanguageSelectionOverrideLanguage;	// 248 = 0xf8
    NSMutableArray *_pendingEdits;	// 256 = 0x100
    NSString *_previousHypothesis;	// 264 = 0x108
    NSString *_lastHypothesis;	// 272 = 0x110
    NSString *_targetHypothesis;	// 280 = 0x118
    UIWindow *_dictationPresenterWindow;	// 288 = 0x120
    unsigned long long _reasonType;	// 296 = 0x128
    NSString *_lastRecognitionText;	// 304 = 0x130
    id _lastCorrectionIdentifier;	// 312 = 0x138
    NSString *_interactionIdentifier;	// 320 = 0x140
    NSString *_lastMessageKeyboardLanguage;	// 328 = 0x148
    UIKeyboardInputMode *_currentInputModeForDictation;	// 336 = 0x150
    UIKeyboardInputMode *_keyboardInputModeToReturn;	// 344 = 0x158
    NSTimer *_idleTimerResetTimer;	// 352 = 0x160
    _UIDictationPrivacySheetController *_dictationPrivacySheetController;	// 360 = 0x168
    UIDictationInputModeOptions *_inputModeOptions;	// 368 = 0x170
    NSString *_detectedLanguage;	// 376 = 0x178
    NSArray *_dictationLanguages;	// 384 = 0x180
    NSString *_initialDictationLanguage;	// 392 = 0x188
    NSString *_fallbackDictationLanguage;	// 400 = 0x190
    unsigned long long _dictationSourceType;	// 408 = 0x198
    NSString *_currentKeyboardPrimaryLanguage;	// 416 = 0x1a0
    unsigned long long _stateHandler;	// 424 = 0x1a8
    NSString *_modelInfo;	// 432 = 0x1b0
    AFAnalyticsTurnBasedInstrumentationContext *_currentInstrumentationContext;	// 440 = 0x1b8
    struct _NSRange _insertionRange;	// 448 = 0x1c0
}

+ (unsigned long long)specificReasonTypeMicButtonOnKeyboardWithInputSwitcher;	// IMP=0x00000000008fdd3f
+ (unsigned long long)specificReasonTypeMicButtonOnKeyboard;	// IMP=0x00000000008fdcfd
+ (_Bool)isInputDelegateSafariAddressBar;	// IMP=0x00000000008fd863
+ (_Bool)shouldPreferOnDeviceRecognition;	// IMP=0x00000000008fd76b
+ (_Bool)shouldPreferOnlineRecognition;	// IMP=0x00000000008fd6f6
+ (void)instrumentationDictationAlternativeSelectedWithInstrumentationContext:(id)arg1 originalText:(id)arg2 replacementText:(id)arg3 replacementIndex:(unsigned long long)arg4 alternativesAvailableCount:(unsigned long long)arg5 dictationLanguage:(id)arg6;	// IMP=0x00000000008fd4b6
+ (void)instrumentationDictationAlternativesViewedWithInstrumentationContext:(id)arg1 alternatives:(id)arg2 dictationLanguage:(id)arg3;	// IMP=0x00000000008fd245
+ (int)UIDictationStartStopReasonToInstrumentationDictationEndPointType:(unsigned long long)arg1;	// IMP=0x00000000008fd228
+ (int)UIDictationStartStopReasonToInstrumentationInvocationSourceType:(unsigned long long)arg1;	// IMP=0x00000000008fd20b
+ (id)UIDictationInstrumentaionLocalIdentifierWithLocalString:(id)arg1;	// IMP=0x00000000008fd0cd
+ (id)activeSLSDictationLanguages;	// IMP=0x00000000008fb8a4
+ (id)whitelistedDictationDictionariesFromMetadataDictionaries:(id)arg1;	// IMP=0x00000000008fb608
+ (id)removeTextIfNeeded:(id)arg1 metadata:(id)arg2;	// IMP=0x00000000008fb587
+ (id)removeTextIfNeeded:(id)arg1;	// IMP=0x00000000008fb522
+ (_Bool)shouldRemoveTextEntries;	// IMP=0x00000000008fb50d
+ (_Bool)canShareDictationData;	// IMP=0x00000000008fb42c
+ (_Bool)shouldRemoveTextEntries:(id)arg1;	// IMP=0x00000000008fb38d
+ (id)whitelistedDictationDictionaryFromMetadata:(id)arg1;	// IMP=0x00000000008fb16c
+ (id)whitelistedDictationMetadataKeys;	// IMP=0x00000000008fb088
+ (id)dictionaryWithTextEntriesRemoved:(id)arg1;	// IMP=0x00000000008fae8e
+ (id)arrayWithTextEntriesRemoved:(id)arg1;	// IMP=0x00000000008fac5f
+ (id)textRelatedMetadataKeys;	// IMP=0x00000000008fabc4
+ (_Bool)isDictationSearchBarButtonVisible;	// IMP=0x00000000008fab0e
+ (void)poppedLastStreamingOperation;	// IMP=0x00000000008f987c
+ (_Bool)usingTypeAndTalk;	// IMP=0x00000000008f9874
+ (id)stringForViewMode:(int)arg1;	// IMP=0x00000000008f97f0
+ (id)stringForState:(int)arg1;	// IMP=0x00000000008f9777
+ (void)logDictationString:(id)arg1;	// IMP=0x00000000008f9771
+ (void)didBeginEditingInTextView:(id)arg1;	// IMP=0x00000000008f96c6
+ (id)streamingHypothesisForPhrases:(id)arg1;	// IMP=0x00000000008f403e
+ (_Bool)dictationInfoIsOnScreen;	// IMP=0x00000000008f03e2
+ (id)slsDictationLanguages;	// IMP=0x00000000008edbfc
+ (_Bool)_applicationIsActive;	// IMP=0x00000000008edbb1
+ (id)activeConnection;	// IMP=0x00000000008ed0ce
+ (int)viewMode;	// IMP=0x00000000008eabd6
+ (_Bool)starkScreenExists;	// IMP=0x00000000008eab5c
+ (_Bool)remoteCanDictateCurrentInputMode;	// IMP=0x00000000008eaa99
+ (void)updateLandingView;	// IMP=0x00000000008ea99f
+ (void)performOperations:(CDUnknownBlockType)arg1 keyboardShifted:(_Bool)arg2;	// IMP=0x00000000008ea97a
+ (id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(_Bool)arg3 autocapitalizationType:(long long)arg4 useServerCapitalization:(_Bool)arg5;	// IMP=0x00000000008ea657
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2;	// IMP=0x00000000008ea482
+ (void)remoteMicrophoneCapabilityChanged;	// IMP=0x00000000008ea42b
+ (void)siriPreferencesChanged;	// IMP=0x00000000008ea39a
+ (void)applicationDidEnterBackgroundNotification;	// IMP=0x00000000008ea142
+ (void)viewServiceWillResignActive;	// IMP=0x00000000008ea130
+ (void)applicationWillResignActive;	// IMP=0x00000000008ea11e
+ (void)onWillResignActive;	// IMP=0x00000000008e9fed
+ (void)applicationDidBecomeActive;	// IMP=0x00000000008e9fdb
+ (void)viewServiceDidBecomeActive;	// IMP=0x00000000008e9fc9
+ (void)onDidBecomeActive;	// IMP=0x00000000008e9ecf
+ (id)bestInterpretationForDictationResult:(id)arg1;	// IMP=0x00000000008e9e54
+ (id)serializedDictationPhrases:(id)arg1;	// IMP=0x00000000008e9dfd
+ (_Bool)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;	// IMP=0x00000000008e9d3d
+ (_Bool)shouldDeleteBackwardInInputDelegate:(id)arg1;	// IMP=0x00000000008e9c3e
+ (_Bool)takesPressesEnded:(id)arg1 forTextView:(id)arg2;	// IMP=0x00000000008e9b71
+ (_Bool)takesPressesChanged:(id)arg1 forTextView:(id)arg2;	// IMP=0x00000000008e9b69
+ (_Bool)takesPressesBegan:(id)arg1 forTextView:(id)arg2;	// IMP=0x00000000008e9afa
+ (_Bool)shouldHideCursorForTextView:(id)arg1;	// IMP=0x00000000008e9a03
+ (_Bool)shouldHideSelectionUIForTextView:(id)arg1;	// IMP=0x00000000008e99ce
+ (_Bool)isTextViewOnStarkScreen:(id)arg1;	// IMP=0x00000000008e9921
+ (void)keyboardDidUpdateOnScreenStatus;	// IMP=0x00000000008e976c
+ (void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2;	// IMP=0x00000000008e92c9
+ (id)UIDictationLanguageSourceType:(unsigned long long)arg1;	// IMP=0x00000000008e9128
+ (id)UIDictationStartStopReasonTypeDescription:(unsigned long long)arg1;	// IMP=0x00000000008e8fd5
+ (void)logCorrectionStatisticsForDelegate:(id)arg1 reason:(unsigned long long)arg2;	// IMP=0x00000000008e8329
+ (_Bool)canPerformDictation;	// IMP=0x00000000008e82b4
+ (_Bool)dictationIsFunctional;	// IMP=0x00000000008e80b9
+ (_Bool)fetchCurrentInputModeSupportsDictation;	// IMP=0x00000000008e7f4d
+ (_Bool)checkTraitsSupportDictation:(id)arg1;	// IMP=0x00000000008e7eee
+ (_Bool)_checkTraitsSupportDictation:(id)arg1;	// IMP=0x00000000008e7e7d
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 autocapitalization:(long long)arg3 capitalization:(unsigned long long)arg4;	// IMP=0x00000000008e77bb
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 capitalization:(unsigned long long)arg3;	// IMP=0x00000000008e76e5
+ (_Bool)isRunning;	// IMP=0x00000000008e7592
+ (_Bool)skipUndo;	// IMP=0x00000000008e7586
+ (id)sharedInstance;	// IMP=0x00000000008e7540
+ (id)activeInstance;	// IMP=0x00000000008e752f
+ (double)serverManualEndpointingThreshold;	// IMP=0x00000000008e6faa
+ (_Bool)usingServerManualEndpointingThreshold;	// IMP=0x00000000008e6f60
+ (id)_dictationLog;	// IMP=0x00000000008e6ee6
- (void).cxx_destruct;	// IMP=0x00000000008fe295
@property(retain, nonatomic) AFAnalyticsTurnBasedInstrumentationContext *currentInstrumentationContext; // @synthesize currentInstrumentationContext=_currentInstrumentationContext;
@property(nonatomic) _Bool selectionStartIsStartOfParagraph; // @synthesize selectionStartIsStartOfParagraph=_selectionStartIsStartOfParagraph;
@property(nonatomic) unsigned short previousCharacter; // @synthesize previousCharacter=_previousCharacter;
@property(nonatomic) _Bool hasCheckedForLeadingSpaceOnce; // @synthesize hasCheckedForLeadingSpaceOnce=_hasCheckedForLeadingSpaceOnce;
@property(nonatomic, getter=isFinalizingRecognizedUtterance) _Bool finalizingRecognizedUtterance; // @synthesize finalizingRecognizedUtterance=_finalizingRecognizedUtterance;
@property(nonatomic, getter=isDetectingUtterances) _Bool detectingUtterances; // @synthesize detectingUtterances=_detectingUtterances;
@property(nonatomic) _Bool ignoreFinalizePhrases; // @synthesize ignoreFinalizePhrases=_ignoreFinalizePhrases;
@property(copy, nonatomic) NSString *modelInfo; // @synthesize modelInfo=_modelInfo;
@property(nonatomic) _Bool secureOfflineOnlySpeechRecognition; // @synthesize secureOfflineOnlySpeechRecognition=_secureOfflineOnlySpeechRecognition;
@property(nonatomic) _Bool localSpeechRecognitionForced; // @synthesize localSpeechRecognitionForced=_localSpeechRecognitionForced;
@property(nonatomic) unsigned long long stateHandler; // @synthesize stateHandler=_stateHandler;
@property(nonatomic) unsigned short initialCharacterAfterSelectionForAsyncDelegate; // @synthesize initialCharacterAfterSelectionForAsyncDelegate=_initialCharacterAfterSelectionForAsyncDelegate;
@property(nonatomic) unsigned short initialPreviousCharacterForAsyncDelegate; // @synthesize initialPreviousCharacterForAsyncDelegate=_initialPreviousCharacterForAsyncDelegate;
@property(nonatomic) _Bool selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate; // @synthesize selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate=_selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate;
@property(nonatomic) _Bool selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate; // @synthesize selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate=_selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate;
@property(copy, nonatomic) NSString *currentKeyboardPrimaryLanguage; // @synthesize currentKeyboardPrimaryLanguage=_currentKeyboardPrimaryLanguage;
@property(nonatomic) unsigned long long dictationSourceType; // @synthesize dictationSourceType=_dictationSourceType;
@property(copy, nonatomic) NSString *fallbackDictationLanguage; // @synthesize fallbackDictationLanguage=_fallbackDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
@property(retain, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *detectedLanguage; // @synthesize detectedLanguage=_detectedLanguage;
@property(nonatomic) _Bool wantsAvailabilityMonitoringWhenAppActive; // @synthesize wantsAvailabilityMonitoringWhenAppActive=_wantsAvailabilityMonitoringWhenAppActive;
@property(retain, nonatomic) UIDictationInputModeOptions *inputModeOptions; // @synthesize inputModeOptions=_inputModeOptions;
@property(nonatomic) _Bool didToggleSoftwareKeyboardVisibleForDictation; // @synthesize didToggleSoftwareKeyboardVisibleForDictation=_didToggleSoftwareKeyboardVisibleForDictation;
@property(retain, nonatomic) _UIDictationPrivacySheetController *dictationPrivacySheetController; // @synthesize dictationPrivacySheetController=_dictationPrivacySheetController;
@property(retain, nonatomic) NSTimer *idleTimerResetTimer; // @synthesize idleTimerResetTimer=_idleTimerResetTimer;
@property(nonatomic) _Bool hasInsertedAtLeastOneSerializedDictationResult; // @synthesize hasInsertedAtLeastOneSerializedDictationResult=_hasInsertedAtLeastOneSerializedDictationResult;
@property(nonatomic, getter=isSendButtonPressedDuringDictation) _Bool sendButtonPressedDuringDictation; // @synthesize sendButtonPressedDuringDictation=_sendButtonPressedDuringDictation;
@property(nonatomic) _Bool shouldStayInDictationInputMode; // @synthesize shouldStayInDictationInputMode=_shouldStayInDictationInputMode;
@property(retain, nonatomic) UIKeyboardInputMode *keyboardInputModeToReturn; // @synthesize keyboardInputModeToReturn=_keyboardInputModeToReturn;
@property(retain, nonatomic) UIKeyboardInputMode *currentInputModeForDictation; // @synthesize currentInputModeForDictation=_currentInputModeForDictation;
@property(nonatomic) _Bool logAppEnterBackground; // @synthesize logAppEnterBackground=_logAppEnterBackground;
@property(copy, nonatomic) NSString *lastMessageKeyboardLanguage; // @synthesize lastMessageKeyboardLanguage=_lastMessageKeyboardLanguage;
@property(copy, nonatomic) NSString *interactionIdentifier; // @synthesize interactionIdentifier=_interactionIdentifier;
@property(copy, nonatomic) id lastCorrectionIdentifier; // @synthesize lastCorrectionIdentifier=_lastCorrectionIdentifier;
@property(copy, nonatomic) NSString *lastRecognitionText; // @synthesize lastRecognitionText=_lastRecognitionText;
@property(nonatomic) unsigned long long reasonType; // @synthesize reasonType=_reasonType;
@property(retain, nonatomic) UIWindow *dictationPresenterWindow; // @synthesize dictationPresenterWindow=_dictationPresenterWindow;
@property(nonatomic) _Bool hasPreheated; // @synthesize hasPreheated=_hasPreheated;
@property(nonatomic) struct _NSRange insertionRange; // @synthesize insertionRange=_insertionRange;
@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;
@property(copy, nonatomic) NSString *targetHypothesis; // @synthesize targetHypothesis=_targetHypothesis;
@property(copy, nonatomic) NSString *lastHypothesis; // @synthesize lastHypothesis=_lastHypothesis;
@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;
@property(nonatomic) _Bool performingStreamingEditingOperation; // @synthesize performingStreamingEditingOperation=_performingStreamingEditingOperation;
@property(retain, nonatomic) NSMutableArray *pendingEdits; // @synthesize pendingEdits=_pendingEdits;
@property(copy) NSString *smartLanguageSelectionOverrideLanguage; // @synthesize smartLanguageSelectionOverrideLanguage=_smartLanguageSelectionOverrideLanguage;
@property(copy, nonatomic) NSString *activationIdentifier; // @synthesize activationIdentifier=_activationIdentifier;
- (unsigned long long)specificReasonTypeFromApplicationDuringDictation;	// IMP=0x00000000008fdcdf
- (void)sendButtonPressedInMessages:(id)arg1;	// IMP=0x00000000008fdab2
- (void)keyboardInputModeChanged:(id)arg1;	// IMP=0x00000000008fd920
- (void)instrumentationDictationTranscriptionMetadataEmitInstrumentationWithDictationResult:(id)arg1;	// IMP=0x00000000008fca0b
- (void)instrumentationDictationContextEmitInstrumentation;	// IMP=0x00000000008fc41e
- (id)dictationUIState;	// IMP=0x00000000008fbfc9
- (void)keyboardDidHide:(id)arg1;	// IMP=0x00000000008faa2c
- (void)keyboardWillHide:(id)arg1;	// IMP=0x00000000008faa1a
- (_Bool)smartLanguageSelectionOverridden;	// IMP=0x00000000008faa12
- (void)endSmartLanguageSelectionOverride;	// IMP=0x00000000008faa0c
- (void)overrideSmartLanguageSelection:(id)arg1;	// IMP=0x00000000008faa06
- (void)markKeyboardDidReset;	// IMP=0x00000000008fa9ee
- (void)markKeyboardDeleteMetricEvent;	// IMP=0x00000000008fa982
- (void)markKeyboardInputMetricEvent;	// IMP=0x00000000008fa916
- (void)_markOfflineDictationInputMetricEvent;	// IMP=0x00000000008fa8fe
- (id)_currentLanguageForOfflineDictationMetrics;	// IMP=0x00000000008fa87e
- (id)_assistantCompatibleLanguageCodeForInputMode:(id)arg1;	// IMP=0x00000000008fa78e
- (void)_endOfflineMetricsSession;	// IMP=0x00000000008fa631
- (void)_beginOfflineMetricsSession;	// IMP=0x00000000008fa617
- (void)preferencesChanged:(id)arg1;	// IMP=0x00000000008fa4e5
- (void)voiceCommandSingleTapKey:(id)arg1;	// IMP=0x00000000008fa339
- (void)dictationShortCutKey:(id)arg1;	// IMP=0x00000000008fa1e9
- (void)handleHardwareKeyboardGesture;	// IMP=0x00000000008fa0eb
- (void)updateDoubleTapShortcutWithPreference:(long long)arg1;	// IMP=0x00000000008fa033
- (void)removeStartDictationKeyboardGestures;	// IMP=0x00000000008f9f53
- (void)prepareStartDictationKeyboardGesturesForDelegate:(id)arg1;	// IMP=0x00000000008f9eb1
- (void)prepareVoiceCommandSingleTapGesture:(id)arg1;	// IMP=0x00000000008f9cf0
- (void)prepareDoubleTapShortcutGesture:(id)arg1;	// IMP=0x00000000008f9b07
- (void)prepareStartDictationKeyboardGestures;	// IMP=0x00000000008f9a31
- (void)setLanguage:(id)arg1;	// IMP=0x00000000008f99e6
- (id)language;	// IMP=0x00000000008f9992
- (void)preheatIfNecessary;	// IMP=0x00000000008f9916
- (_Bool)isRecievingResults;	// IMP=0x00000000008f990d
- (void)dictationConnectionDidFinish:(id)arg1;	// IMP=0x00000000008f94f9
- (void)dictationConnectionDidCancel:(id)arg1;	// IMP=0x00000000008f94a9
- (void)dictationConnection:(id)arg1 didDetectLanguage:(id)arg2;	// IMP=0x00000000008f9494
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;	// IMP=0x00000000008f9447
- (void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(_Bool)arg4 final:(_Bool)arg5;	// IMP=0x00000000008f92f4
- (id)_containingSearchBarForView:(id)arg1;	// IMP=0x00000000008f9252
- (void)dictationConnectionDidCancelIncompatibleLocalRecognizer:(id)arg1;	// IMP=0x00000000008f921f
- (void)dictationConnection:(id)arg1 didBeginLocalRecognitionWithModelInfo:(id)arg2;	// IMP=0x00000000008f91d5
- (void)dictationConnection:(id)arg1 didFailRecognitionWithError:(id)arg2;	// IMP=0x00000000008f890c
- (void)dictationConnection:(id)arg1 didFailRecordingWithError:(id)arg2;	// IMP=0x00000000008f872a
- (void)dictationConnectionDidCancelRecording:(id)arg1;	// IMP=0x00000000008f8701
- (void)dictationConnectionDidEndRecording:(id)arg1;	// IMP=0x00000000008f867b
- (void)dictationConnection:(id)arg1 didStartRecordingWithOptions:(id)arg2;	// IMP=0x00000000008f8470
- (void)dictationConnectionDidStartRecording:(id)arg1;	// IMP=0x00000000008f8463
- (void)dictationConnectionWillStartRecording:(id)arg1;	// IMP=0x00000000008f827a
- (void)dictationConnection:(id)arg1 didFilterTokensWithFilterState:(id)arg2 forFinalize:(_Bool)arg3;	// IMP=0x00000000008f81ca
- (void)dictationConnection:(id)arg1 filterState:(id)arg2 processFilteredToken:(id)arg3 forFinalize:(_Bool)arg4;	// IMP=0x00000000008f80c1
- (_Bool)dictationConnection:(id)arg1 filterState:(id)arg2 shouldCheckpointAtToken:(id)arg3;	// IMP=0x00000000008f802b
- (CDUnknownBlockType)dictationBlockForToken:(id)arg1;	// IMP=0x00000000008f7e74
- (id)dictationConnection:(id)arg1 willFilterTokensWithLanguageModel:(id)arg2 forFinalize:(_Bool)arg3;	// IMP=0x00000000008f7e05
- (void)dictationConnection:(id)arg1 receivedInterpretation:(id)arg2 languageModel:(id)arg3 secureInput:(_Bool)arg4;	// IMP=0x00000000008f7a4b
- (void)setupToInsertResultForNewHypothesis:(id)arg1;	// IMP=0x00000000008f7910
- (void)_updateFromSelectedTextRange:(id)arg1 withNewHypothesis:(id)arg2;	// IMP=0x00000000008f7376
- (id)_getBestHypothesisRangeGivenHintRange:(id)arg1 inputDelegate:(id)arg2 hypothesisRange:(struct _NSRange *)arg3 documentTextInRange:(id *)arg4;	// IMP=0x00000000008f6c2b
- (id)_hypothesisRangeFromSelectionRange:(id)arg1 inputDelegate:(id)arg2;	// IMP=0x00000000008f6aa8
- (id)_rangeByExtendingRange:(id)arg1 backward:(long long)arg2 forward:(long long)arg3 inputDelegate:(id)arg4;	// IMP=0x00000000008f68e4
- (void)_displayLinkFired:(id)arg1;	// IMP=0x00000000008f5d60
- (void)_startStreamingAnimations;	// IMP=0x00000000008f5c7b
- (void)_stopStreamingAnimation;	// IMP=0x00000000008f5c44
- (void)dictationConnection:(id)arg1 finalizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4 secureInput:(_Bool)arg5;	// IMP=0x00000000008f59ab
- (void)finishDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4;	// IMP=0x00000000008f5453
- (void)finalizeDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4 finalResult:(_Bool)arg5;	// IMP=0x00000000008f4c1a
- (void)_clearExistingText;	// IMP=0x00000000008f4af2
- (void)_deleteBackwardIntoText;	// IMP=0x00000000008f4a57
- (void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000008f4564
- (id)resultWithTrailingSpace:(id)arg1;	// IMP=0x00000000008f4548
- (void)logAlternativeSelected:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;	// IMP=0x00000000008f44ae
- (void)didShowAlternatives:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3 instrumentationContext:(id)arg4 dictationLanguage:(id)arg5;	// IMP=0x00000000008f43b3
- (void)logDidAcceptReplacement:(id)arg1 replacementLanguageCode:(id)arg2 originalText:(id)arg3 correctionIdentifier:(id)arg4 interactionIdentifier:(id)arg5;	// IMP=0x00000000008f42d0
- (void)logDidAcceptDictationResult:(id)arg1 reasonType:(unsigned long long)arg2;	// IMP=0x00000000008f4227
- (struct __CFString *)resultTransformForLanguageModel:(id)arg1;	// IMP=0x00000000008f40b9
- (void)restartDictationForTypeAndTalk;	// IMP=0x00000000008f3fd3
- (_Bool)dictationIsModifyingText;	// IMP=0x00000000008f3fc1
- (void)performIgnoringDocumentChanges:(CDUnknownBlockType)arg1;	// IMP=0x00000000008f3fa3
- (_Bool)isIgnoringDocumentChanges;	// IMP=0x00000000008f3f95
- (void)forceDictationReturnToKeyboardInputMode;	// IMP=0x00000000008f3eb3
- (void)stopDictationAndResignFirstResponder;	// IMP=0x00000000008f3db9
- (void)stopDictation;	// IMP=0x00000000008f3da2
- (void)stopAndCancelDictationIfNeededWithReasonType:(unsigned long long)arg1;	// IMP=0x00000000008f3ca8
- (void)stopAndCancelDictationWithReasonType:(unsigned long long)arg1;	// IMP=0x00000000008f3bd9
- (void)stopDictationIgnoreFinalizePhrases;	// IMP=0x00000000008f39d5
- (void)stopDictation:(_Bool)arg1;	// IMP=0x00000000008f31f4
- (void)cancelDictationForTextStoreChangesInResponder:(id)arg1;	// IMP=0x00000000008f3120
- (void)cancelDictation;	// IMP=0x00000000008f25a5
- (struct _NSRange)_getRangeOfString:(id)arg1 inDocumentText:(id)arg2;	// IMP=0x00000000008f22f5
- (void)switchToDictationInputModeWithOptions:(id)arg1;	// IMP=0x00000000008f22de
- (void)switchToDictationInputMode;	// IMP=0x00000000008f22c8
- (void)_touchPhaseChangedForTouch:(id)arg1;	// IMP=0x00000000008f2200
- (void)_handleDataSharingSheetDecision;	// IMP=0x00000000008f218c
- (void)_handlePrivacySheetDismissal;	// IMP=0x00000000008f1ff2
- (void)dictationPrivacySheetControllerDidFinish:(id)arg1;	// IMP=0x00000000008f1ed0
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x00000000008f1ebe
- (void)_presentPrivacySheetForType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000008f1b46
- (void)_presentAlertForDictationInputModeOfType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008f1a34
- (void)_presentDataSharingOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000008f1883
- (void)_presentOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000008f1688
- (_Bool)shouldPresentOptInAlert;	// IMP=0x00000000008f163e
- (void)presentAlertOfType:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000008f0e38
- (void)_endEnableDictationPromptAnimated:(_Bool)arg1;	// IMP=0x00000000008f0d86
- (void)_beginEnableDictationPrompt;	// IMP=0x00000000008f0716
- (void)_createDictationPresenterWindowIfNecessary;	// IMP=0x00000000008f0486
- (void)setDictationInfoOnScreenNotifyKey:(_Bool)arg1;	// IMP=0x00000000008f0422
- (void)stopHelpMessageDisplay;	// IMP=0x00000000008f02e9
- (_Bool)_systemLanguageSupportsDictation;	// IMP=0x00000000008f025a
- (void)startHelpMessageDisplay;	// IMP=0x00000000008efbd2
- (void)restoreTextFieldPlaceholder;	// IMP=0x00000000008efadd
- (void)clearTextFieldPlaceholder;	// IMP=0x00000000008ef9ab
- (void)_displaySecureContentsAsPlainText:(_Bool)arg1 afterDelay:(double)arg2;	// IMP=0x00000000008ef8cf
- (void)dismissSoftwareKeyboardIfNeeded;	// IMP=0x00000000008ef81b
- (void)showSoftwareKeyboardIfNeeded;	// IMP=0x00000000008ef762
- (void)switchToDictationInputModeWithTouch:(id)arg1 options:(id)arg2;	// IMP=0x00000000008ef6b0
- (void)switchToDictationInputModeWithTouch:(id)arg1;	// IMP=0x00000000008ef613
- (void)switchToDictationInputModeWithTouch:(id)arg1 withKeyboardInputMode:(id)arg2 options:(id)arg3;	// IMP=0x00000000008ef382
- (void)switchToDictationLanguage:(id)arg1;	// IMP=0x00000000008eedf4
- (void)startDictation;	// IMP=0x00000000008ee07d
- (_Bool)isFallingBackToMonolingualDictation;	// IMP=0x00000000008edf68
- (void)_startDictation;	// IMP=0x00000000008edbbd
- (void)setupForDictationStart;	// IMP=0x00000000008ed78e
- (void)setupForStreamingDictationStart;	// IMP=0x00000000008ed6c6
- (void)dismissDictationView:(id)arg1;	// IMP=0x00000000008ed6b2
- (_Bool)dictationSearchFieldUISupportsTraitCollection:(id)arg1;	// IMP=0x00000000008ed656
- (_Bool)_allowsMicsInSearchFieldForLanguageIdentifiers:(id)arg1;	// IMP=0x00000000008ed5bf
- (_Bool)dictationSearchFieldUIEnabled;	// IMP=0x00000000008ed432
- (_Bool)currentViewModeSupportsDictationMics;	// IMP=0x00000000008ed40b
- (_Bool)dataSharingDecided;	// IMP=0x00000000008ed403
- (_Bool)dictationEnabled;	// IMP=0x00000000008ed204
- (id)connectionForStatisticsLogging;	// IMP=0x00000000008ed1e7
- (void)releaseConnectionAfterStatisticsLogging;	// IMP=0x00000000008ed1e1
- (void)releaseConnectionAfterDictationRequest;	// IMP=0x00000000008ed1db
- (void)releaseConnection;	// IMP=0x00000000008ed196
- (id)dictationConnection;	// IMP=0x00000000008ed125
- (void)stopIdleTimerResetTimer;	// IMP=0x00000000008ed087
- (void)resetIdleTimer;	// IMP=0x00000000008ecfa8
- (void)startRecordingLimitTimer;	// IMP=0x00000000008ecec7
- (void)stopDictationByTimer;	// IMP=0x00000000008ece05
- (void)cancelRecordingLimitTimer;	// IMP=0x00000000008ecdbe
- (void)dealloc;	// IMP=0x00000000008eccf1
- (int)state;	// IMP=0x00000000008ecce5
- (void)errorAnimationDidFinish;	// IMP=0x00000000008ecca0
- (void)setState:(int)arg1;	// IMP=0x00000000008ec73b
- (void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2;	// IMP=0x00000000008ec6ba
- (void)_runFinalizeOperation:(_Bool)arg1;	// IMP=0x00000000008ec631
- (void)_runFinalizeOperation;	// IMP=0x00000000008ec61d
- (void)_setupHypothesisAsFinalResults;	// IMP=0x00000000008ec458
- (void)_setFinalResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008ec38a
- (void)_completeStartDictationWithContinuation:(CDUnknownBlockType)arg1;	// IMP=0x00000000008ec01e
- (void)completeStartConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000008ebf56
- (void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000008ebe7a
- (void)startConnection;	// IMP=0x00000000008ebdfe
- (void)completeStartConnection;	// IMP=0x00000000008ebda9
- (void)dictationConnection:(id)arg1 updateOptions:(id)arg2;	// IMP=0x00000000008eb8f2
- (id)selectedTextForInputDelegate:(id)arg1;	// IMP=0x00000000008eb7d8
- (id)postfixTextForInputDelegate:(id)arg1;	// IMP=0x00000000008eb59a
- (id)prefixTextForInputDelegate:(id)arg1;	// IMP=0x00000000008eb359
- (id)fieldIdentifierInputDelegate:(id)arg1;	// IMP=0x00000000008eb179
@property(readonly, retain, nonatomic) NSNumber *dictationRequestOrigin;
- (_Bool)shouldOverrideManualEndpointing;	// IMP=0x00000000008eb10e
- (_Bool)shouldUseDictationSearchFieldBehavior;	// IMP=0x00000000008eb076
- (float)audioLevel;	// IMP=0x00000000008eb026
- (_Bool)supportsInputMode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000008eae3f
- (_Bool)supportsDictationLanguage:(id)arg1 error:(id *)arg2;	// IMP=0x00000000008ead84
- (id)languageCodeForAssistantLanguageCode:(id)arg1;	// IMP=0x00000000008eabe1
- (_Bool)remoteHasMicrophone;	// IMP=0x00000000008eaa4e
- (_Bool)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;	// IMP=0x00000000008e9cda
- (_Bool)_shouldDeleteBackwardInInputDelegate:(id)arg1;	// IMP=0x00000000008e9bc4
- (void)_restartDictation;	// IMP=0x00000000008e9b79
- (void)setDictationInputMode:(id)arg1;	// IMP=0x00000000008e9180
- (_Bool)_resolvedIsDictationPossible;	// IMP=0x00000000008e75a2
- (_Bool)dictationDisabledDueToTelephonyActivity;	// IMP=0x00000000008e7519
- (id)streamingOperations;	// IMP=0x00000000008e74de
- (id)init;	// IMP=0x00000000008e702f
- (float)maxRecordingLength;	// IMP=0x00000000008e6f42

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

