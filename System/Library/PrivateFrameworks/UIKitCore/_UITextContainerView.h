//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/NSUITextViewCommonMethods-Protocol.h>
#import <UIKitCore/_UITextViewCanvasViewContext-Protocol.h>

@class NSDictionary, NSLayoutManager, NSString, NSTextContainer, UIColor, UITextView, _UITextLayoutController, _UITextViewCanvasView;
@protocol _UITextContainerViewDelegate;

__attribute__((visibility("hidden")))
@interface _UITextContainerView <NSUITextViewCommonMethods, _UITextViewCanvasViewContext>
{
    struct UIEdgeInsets _textContainerInset;	// 112 = 0x70
    struct CGPoint _textContainerOrigin;	// 144 = 0x90
    struct CGSize _minSize;	// 160 = 0xa0
    struct CGSize _maxSize;	// 176 = 0xb0
    NSTextContainer *_textContainer;	// 192 = 0xc0
    NSDictionary *_linkTextAttributes;	// 200 = 0xc8
    unsigned long long _invalidationSeqNo;	// 208 = 0xd0
    long long _invalidationSeqClipsToBounds;	// 216 = 0xd8
    struct {
        unsigned int textContainerOriginInvalid:1;
        unsigned int verticalLayout:2;
        unsigned int horizontallyResizable:1;
        unsigned int verticallyResizable:1;
        unsigned int freezeTextContainerSize:1;
        unsigned int usesStandardTextScaling:1;
    } _tcvFlags;	// 224 = 0xe0
    UITextView *_textView;	// 232 = 0xe8
    _UITextViewCanvasView *_canvasView;	// 240 = 0xf0
    _UITextLayoutController *_textLayoutController;	// 248 = 0xf8
    id <_UITextContainerViewDelegate> _delegate;	// 256 = 0x100
}

- (void).cxx_destruct;	// IMP=0x0000000000ec2a5f
@property(readonly, nonatomic) _UITextViewCanvasView *canvasView; // @synthesize canvasView=_canvasView;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) __weak id <_UITextContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(readonly, nonatomic) _UITextLayoutController *textLayoutController; // @synthesize textLayoutController=_textLayoutController;
- (void)removeAllGhostedRanges;	// IMP=0x0000000000ec2966
- (void)addGhostedRange:(struct _NSRange)arg1;	// IMP=0x0000000000ec2949
@property(nonatomic) double maxTileHeight;
@property(nonatomic) _Bool usesTiledViews;
- (struct CGRect)visibleRect;	// IMP=0x0000000000ec2803
@property(readonly, copy) NSString *description;
- (id)attributedSubstringForMarkedRange;	// IMP=0x0000000000ec2672
@property(readonly, nonatomic) NSDictionary *markedTextStyle;
@property(nonatomic) struct _NSRange markedRange;
- (void)setLayoutOrientation:(long long)arg1;	// IMP=0x0000000000ec23ac
@property(readonly, nonatomic) long long layoutOrientation;
- (id)layoutManager:(id)arg1 effectiveCUICatalogForTextEffect:(id)arg2;	// IMP=0x0000000000ec2324
- (void)_ensureLayoutCompleteForRect:(struct CGRect)arg1;	// IMP=0x0000000000ec2119
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange)arg1;	// IMP=0x0000000000ec2026
- (void)layoutSubviews;	// IMP=0x0000000000ec1dd9
@property(readonly, nonatomic) struct CGPoint drawingScale;
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
@property(readonly, nonatomic) UIColor *textColor;
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x0000000000ec1c75
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;	// IMP=0x0000000000ec1b65
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;	// IMP=0x0000000000ec1a0e
@property(nonatomic) _Bool usesStandardTextScaling;
- (_Bool)_shouldCapSizeToFitLayoutRange:(out struct _NSRange *)arg1;	// IMP=0x0000000000ec14ec
- (void)sizeToFit;	// IMP=0x0000000000ec142d
- (void)_sizeToConstrainedContainerUsedRect;	// IMP=0x0000000000ec1312
@property(nonatomic, getter=isVerticallyResizable) _Bool verticallyResizable;
@property(nonatomic, getter=isHorizontallyResizable) _Bool horizontallyResizable;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;	// IMP=0x0000000000ec10bc
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000ec0fcb
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000ec0edd
- (void)_setNeedsContentsFormatUpdate;	// IMP=0x0000000000ec0ec0
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x0000000000ec0e40
- (void)setNeedsDisplay;	// IMP=0x0000000000ec0e23
- (void)_setFrameOrBounds:(struct CGRect)arg1 oldRect:(struct CGRect)arg2 isFrameRect:(_Bool)arg3 settingAction:(CDUnknownBlockType)arg4;	// IMP=0x0000000000ec0925
- (void)_ensureMinAndMaxSizesConsistentWithBounds;	// IMP=0x0000000000ec08b5
- (void)invalidateTextContainerOrigin;	// IMP=0x0000000000ec08a4
@property(readonly, nonatomic) struct CGPoint textContainerOrigin;
@property(nonatomic) struct UIEdgeInsets textContainerInset;
@property(nonatomic, getter=_freezeTextContainerSize, setter=_setFreezeTextContainerSize:) _Bool freezeTextContainerSize;
- (void)setBackgroundColor:(id)arg1;	// IMP=0x0000000000ec02aa
- (void)tintColorDidChange;	// IMP=0x0000000000ec0249
- (id)linkAttributesForLink:(id)arg1 forCharacterAtIndex:(unsigned long long)arg2;	// IMP=0x0000000000ec01d0
- (id)linkTextAttributes;	// IMP=0x0000000000ec0181
- (id)textStorage;	// IMP=0x0000000000ec010d
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000ec0092
- (id)initWithFrame:(struct CGRect)arg1 textLayoutController:(id)arg2 textContainer:(id)arg3 delegate:(id)arg4;	// IMP=0x0000000000ebfda8

// Remaining properties
@property(readonly, nonatomic) struct CGRect _clipRectForFadedEdges;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

