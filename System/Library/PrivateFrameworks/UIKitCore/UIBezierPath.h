//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UIKitCore/NSCopying-Protocol.h>
#import <UIKitCore/NSSecureCoding-Protocol.h>

@interface UIBezierPath : NSObject <NSCopying, NSSecureCoding>
{
    struct CGPath *_path;	// 8 = 0x8
    double *_lineDashPattern;	// 16 = 0x10
    unsigned long long _lineDashPatternCount;	// 24 = 0x18
    double _lineWidth;	// 32 = 0x20
    double _miterLimit;	// 40 = 0x28
    double _flatness;	// 48 = 0x30
    double _lineDashPhase;	// 56 = 0x38
    int _lineCapStyle;	// 64 = 0x40
    int _lineJoinStyle;	// 68 = 0x44
    _Bool _usesEvenOddFillRule;	// 72 = 0x48
    struct CGPath *_immutablePath;	// 80 = 0x50
    _Bool _immutablePathIsValid;	// 88 = 0x58
    _Bool _isRoundedRect;	// 89 = 0x59
    double _cornerRadius;	// 96 = 0x60
    _Bool _hasContinuousCorners;	// 104 = 0x68
    unsigned long long _cornerMask;	// 112 = 0x70
}

+ (id)_continuousRoundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(unsigned long long)arg2 cornerRadii:(id)arg3 segments:(int)arg4 smoothPillShapes:(_Bool)arg5;	// IMP=0x0000000000707f98
+ (id)_continuousRoundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(unsigned long long)arg2 cornerRadius:(struct CGSize)arg3 segments:(int)arg4;	// IMP=0x0000000000707ea5
+ (id)_bezierPathWithPillRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0000000000707db0
+ (id)_roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(unsigned long long)arg2 cornerRadius:(double)arg3 segments:(int)arg4 legacyCorners:(_Bool)arg5;	// IMP=0x0000000000707763
+ (id)_roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(unsigned long long)arg2 cornerRadius:(double)arg3 segments:(int)arg4;	// IMP=0x000000000070774e
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(unsigned long long)arg2 withCornerRadii:(id)arg3;	// IMP=0x000000000070772c
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(unsigned long long)arg2 withCornerRadius:(double)arg3;	// IMP=0x000000000070771a
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedEdges:(unsigned long long)arg2;	// IMP=0x00000000007076ae
+ (id)_bezierPathWithRoundedRect:(struct CGRect)arg1 byRoundingCorners:(unsigned long long)arg2 cornerRadius:(double)arg3;	// IMP=0x0000000000706227
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withTopCornerRadius:(double)arg2 withBottomCornerRadius:(double)arg3;	// IMP=0x000000000070612d
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x00000000007056b0
+ (id)bezierPathWithArcCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x000000000070561c
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 byRoundingCorners:(unsigned long long)arg2 cornerRadii:(struct CGSize)arg3;	// IMP=0x000000000070560a
+ (id)_bezierPathWithArcRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x00000000007055e6
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x00000000007055cd
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x00000000007054e3
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000705478
+ (id)bezierPath;	// IMP=0x0000000000705434
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000704b71
+ (id)shadowBezierPath:(struct CGRect)arg1 withRoundedEdges:(unsigned long long)arg2;	// IMP=0x00000000007cf7a5
@property(nonatomic) _Bool usesEvenOddFillRule; // @synthesize usesEvenOddFillRule=_usesEvenOddFillRule;
@property(nonatomic) double flatness; // @synthesize flatness=_flatness;
@property(nonatomic) double miterLimit; // @synthesize miterLimit=_miterLimit;
@property(nonatomic) int lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;
@property(nonatomic) int lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
- (unsigned long long)_cornerMask;	// IMP=0x0000000000708db5
- (_Bool)_hasContinuousCorners;	// IMP=0x0000000000708dac
- (double)_cornerRadius;	// IMP=0x0000000000708da1
- (_Bool)_isRoundedRect;	// IMP=0x0000000000708d98
- (id)_bezierPathConvertedFromCoordinateSpace:(id)arg1 toCoordinateSpace:(id)arg2;	// IMP=0x0000000000708ad1
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x000000000070767e
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1 transform:(struct CGAffineTransform)arg2;	// IMP=0x000000000070763d
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x00000000007075ff
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x00000000007075c1
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000707576
- (void)clip;	// IMP=0x0000000000707564
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000707552
- (struct CGPath *)_pathRef;	// IMP=0x0000000000707548
- (id)_objcCodeDescription;	// IMP=0x00000000007070b8
- (id)description;	// IMP=0x0000000000706cbf
- (void)_addRoundedCornerWithTrueCorner:(struct CGPoint)arg1 radius:(struct CGSize)arg2 corner:(unsigned long long)arg3 clockwise:(_Bool)arg4 leadInIsContinuous:(_Bool)arg5 leadOutIsContinuous:(_Bool)arg6;	// IMP=0x0000000000706c48
- (void)_addRoundedCornerWithTrueCorner:(struct CGPoint)arg1 radius:(struct CGSize)arg2 corner:(unsigned long long)arg3 clockwise:(_Bool)arg4;	// IMP=0x0000000000706678
- (struct CGPath *)_createMutablePathByDecodingData:(id)arg1;	// IMP=0x0000000000706241
- (struct CGPath *)_mutablePath;	// IMP=0x0000000000706123
- (void)addClip;	// IMP=0x00000000007060d4
- (void)strokeWithBlendMode:(int)arg1 alpha:(double)arg2;	// IMP=0x0000000000706002
- (void)fillWithBlendMode:(int)arg1 alpha:(double)arg2;	// IMP=0x0000000000705f6e
- (void)stroke;	// IMP=0x0000000000705ec5
- (void)fill;	// IMP=0x0000000000705e5a
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x0000000000705e0e
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x0000000000705d88
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x0000000000705d71
@property(readonly, nonatomic) struct CGPoint currentPoint;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, getter=isEmpty) _Bool empty;
@property(nonatomic) const struct CGPath *CGPath;
- (id)bezierPathByReversingPath;	// IMP=0x00000000007058ea
- (void)_invalidatePathMetadata;	// IMP=0x00000000007058d0
- (void)removeAllPoints;	// IMP=0x000000000070589f
- (void)closePath;	// IMP=0x0000000000705882
- (void)applyTransform:(struct CGAffineTransform)arg1;	// IMP=0x000000000070583e
- (void)appendPath:(id)arg1;	// IMP=0x00000000007057f3
- (void)addArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x00000000007057ce
- (void)addQuadCurveToPoint:(struct CGPoint)arg1 controlPoint:(struct CGPoint)arg2;	// IMP=0x000000000070579d
- (void)addCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000705766
- (void)addLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000705747
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000705728
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000705255
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000705160
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000704e5f
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000704b79
- (void)dealloc;	// IMP=0x0000000000704b16
- (id)_initWithCGMutablePath:(struct CGPath *)arg1;	// IMP=0x0000000000704a9c
- (id)init;	// IMP=0x00000000007049fc

@end

