//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/TIKeyboardInputManagerToImplProtocol-Protocol.h>
#import <UIKitCore/UIKBRTIPartnerDelegate-Protocol.h>
#import <UIKitCore/UIKeyboardCandidateControllerDelegate-Protocol.h>
#import <UIKitCore/UIKeyboardCandidateListDelegate-Protocol.h>
#import <UIKitCore/UIKeyboardImplStateProtocol-Protocol.h>
#import <UIKitCore/UIKeyboardLayoutSizeDelegate-Protocol.h>
#import <UIKitCore/UIPopoverPresentationControllerDelegate-Protocol.h>
#import <UIKitCore/UITextInputDelegatePrivate-Protocol.h>
#import <UIKitCore/UITextInputSuggestionDelegate-Protocol.h>
#import <UIKitCore/_UIIVCResponseDelegateImpl-Protocol.h>
#import <UIKitCore/_UIKeyboardTextSelectionGestureControllerDelegate-Protocol.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, TICandidateRequestToken, TIKeyboardCandidate, TIKeyboardCandidateResultSet, TIKeyboardInputManagerState, TIKeyboardInputManagerStub, TIKeyboardLayout, TIKeyboardState, TIKeyboardTouchEvent, TISmartPunctuationController, TUIKeyboardBackendController, UIAutocorrectBubbleContainer, UIAutocorrectInlinePrompt, UIContinuousPathIntroductionView, UIDelayedAction, UIKBAutofillController, UIKBEditingGesturesIntroduction, UIKBInputDelegateManager, UIKBRTIPartner, UIKeyboardAutocorrectionController, UIKeyboardCandidateController, UIKeyboardLayout, UIKeyboardPopoverController, UIKeyboardScheduledTask, UIKeyboardTaskQueue, UILexicon, UIPhysicalKeyboardEvent, UIResponder, UITextInputArrowKeyHistory, UITextInputTraits, UITextInteractionAssistant, UITextInteractionSelectableInputDelegate, UITextSelectionView, UIView, _UIActionWhenIdle, _UIKeyboardImplProxy, _UIKeyboardTextSelectionController, _UIStringAndPositionPair;
@protocol UIKeyInput, UIKeyboardCandidateList, UIKeyboardImplGeometryDelegate, UITextCursorAssertion;

@interface UIKeyboardImpl <_UIIVCResponseDelegateImpl, _UIKeyboardTextSelectionGestureControllerDelegate, UITextInputSuggestionDelegate, UIKeyboardCandidateControllerDelegate, TIKeyboardInputManagerToImplProtocol, UIPopoverPresentationControllerDelegate, UIKeyboardImplStateProtocol, UIKBRTIPartnerDelegate, UITextInputDelegatePrivate, UIKeyboardCandidateListDelegate, UIKeyboardLayoutSizeDelegate>
{
    id <UIKeyInput> m_delegate;	// 112 = 0x70
    UITextInteractionSelectableInputDelegate *m_selectableDelegate;	// 120 = 0x78
    UIKeyboardTaskQueue *m_taskQueue;	// 128 = 0x80
    CDUnknownBlockType m_externalTask;	// 136 = 0x88
    TIKeyboardState *m_keyboardState;	// 144 = 0x90
    TIKeyboardInputManagerState *m_inputManagerState;	// 152 = 0x98
    _Bool m_keyboardDelegateStateNeedsRefresh;	// 160 = 0xa0
    long long m_textInputSource;	// 168 = 0xa8
    UIView *m_languageIndicator;	// 176 = 0xb0
    NSString *m_previousInputString;	// 184 = 0xb8
    UIKeyboardAutocorrectionController *m_autocorrectionController;	// 192 = 0xc0
    UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 200 = 0xc8
    TIKeyboardCandidateResultSet *m_candidateResultSet;	// 208 = 0xd0
    id <UIKeyboardCandidateList> m_candidateList;	// 216 = 0xd8
    UIView *m_markedTextOverlay;	// 224 = 0xe0
    id <UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 232 = 0xe8
    UIKeyboardLayout *m_layout;	// 240 = 0xf0
    NSMutableDictionary *m_keyedLayouts;	// 248 = 0xf8
    UIKeyboardScheduledTask *m_autoDeleteTask;	// 256 = 0x100
    unsigned int m_autoDeleteCount;	// 264 = 0x108
    double m_autoDeleteLastDelete;	// 272 = 0x110
    double m_autoDeleteInterval;	// 280 = 0x118
    unsigned int m_autoDeleteShiftCharacter;	// 288 = 0x120
    double m_autoDeleteCurrentForceMultipler;	// 296 = 0x128
    double m_autoDeleteCurrentForce;	// 304 = 0x130
    _Bool m_autoDeleteUseForce;	// 312 = 0x138
    UIDelayedAction *m_longPressAction;	// 320 = 0x140
    long long m_originalOrientation;	// 328 = 0x148
    struct CGPoint m_inputPoint;	// 336 = 0x150
    int m_changeCount;	// 352 = 0x160
    double m_changeTime;	// 360 = 0x168
    id m_changedDelegate;	// 368 = 0x170
    struct __CFRunLoopObserver *m_observer;	// 376 = 0x178
    unsigned long long m_textInputChangingCount;	// 384 = 0x180
    _Bool m_textInputChangingText;	// 392 = 0x188
    _Bool m_textInputChangingDirection;	// 393 = 0x189
    _Bool m_textInputChangesIgnored;	// 394 = 0x18a
    _Bool m_textInputUpdatingSelection;	// 395 = 0x18b
    _Bool m_disableSyncTextChanged;	// 396 = 0x18c
    _Bool m_disableClearingTextSuggestions;	// 397 = 0x18d
    UITextInputTraits *m_defaultTraits;	// 400 = 0x190
    UITextInputTraits *m_traits;	// 408 = 0x198
    UITextInputTraits *m_overrideTraits;	// 416 = 0x1a0
    int m_returnKeyState;	// 424 = 0x1a8
    _Bool m_returnKeyEnabledInLayout;	// 428 = 0x1ac
    long long m_currentDirection;	// 432 = 0x1b0
    UILexicon *m_recentInputs;	// 440 = 0x1b8
    _Bool m_autoDeleteOK;	// 448 = 0x1c0
    _Bool m_autocapitalizationPreference;	// 449 = 0x1c1
    _Bool m_autocorrectionPreference;	// 450 = 0x1c2
    _Bool m_autoshift;	// 451 = 0x1c3
    _Bool m_caretShowingNow;	// 452 = 0x1c4
    _Bool m_changeNotificationDisabled;	// 453 = 0x1c5
    _Bool m_correctionLearningAllowed;	// 454 = 0x1c6
    _Bool m_delegateIsSMSTextView;	// 455 = 0x1c7
    _Bool m_delegateRequiresKeyEvents;	// 456 = 0x1c8
    _Bool m_doubleSpacePeriodWasAppliedInCurrentContext;	// 457 = 0x1c9
    _Bool m_doubleSpacePeriodPreference;	// 458 = 0x1ca
    _Bool m_hardwareKeyboardAttached;	// 459 = 0x1cb
    _Bool m_inDealloc;	// 460 = 0x1cc
    _Bool m_initializationDone;	// 461 = 0x1cd
    _Bool m_selecting;	// 462 = 0x1ce
    _Bool m_shift;	// 463 = 0x1cf
    _Bool m_shiftLocked;	// 464 = 0x1d0
    _Bool m_shiftLockedEnabled;	// 465 = 0x1d1
    _Bool m_settingShift;	// 466 = 0x1d2
    _Bool m_suggestionsShownForCurrentDeletion;	// 467 = 0x1d3
    _Bool m_originalShouldSkipCandidateSelection;	// 468 = 0x1d4
    _Bool m_updatingPreferences;	// 469 = 0x1d5
    _Bool m_suppressGeometryChangeNotifications;	// 470 = 0x1d6
    _Bool m_acceptingCandidate;	// 471 = 0x1d7
    _Bool m_didAutomaticallyInsertSpace;	// 472 = 0x1d8
    _Bool m_didSyncDocumentStateToInputDelegate;	// 473 = 0x1d9
    _Bool m_userChangedSelection;	// 474 = 0x1da
    _Bool m_shouldChargeKeys;	// 475 = 0x1db
    _Bool m_longPress;	// 476 = 0x1dc
    _Bool m_replacingWord;	// 477 = 0x1dd
    _Bool m_shiftNeedsUpdate;	// 478 = 0x1de
    _Bool m_shiftPreventAutoshift;	// 479 = 0x1df
    _Bool m_shiftHeldDownNeedsUpdated;	// 480 = 0x1e0
    _Bool m_clientVariantSupportEnabled;	// 481 = 0x1e1
    _Bool m_clientVariantSupportEnabledEver;	// 482 = 0x1e2
    NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 488 = 0x1e8
    NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 496 = 0x1f0
    UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 504 = 0x1f8
    _Bool m_isRotating;	// 512 = 0x200
    _Bool m_preRotateShift;	// 513 = 0x201
    _Bool m_preRotateShiftLocked;	// 514 = 0x202
    _Bool m_showInputModeIndicator;	// 515 = 0x203
    _Bool m_suppressUpdateCandidateView;	// 516 = 0x204
    _Bool m_shouldUpdateCacheOnInputModesChange;	// 517 = 0x205
    _Bool m_rivenCenterFilled;	// 518 = 0x206
    double m_splitProgress;	// 520 = 0x208
    _Bool m_needsCandidates;	// 528 = 0x210
    _Bool m_shouldSkipCandidateGeneration;	// 529 = 0x211
    _Bool m_updateLayoutOnShowKeyboard;	// 530 = 0x212
    _Bool m_receivedCandidatesInCurrentInputMode;	// 531 = 0x213
    int _currentAlertReason;	// 532 = 0x214
    _Bool m_layoutAllowsCP;	// 536 = 0x218
    _Bool m_needsPasteSupportUpdate;	// 537 = 0x219
    _Bool m_delegateSupportsImagePaste;	// 538 = 0x21a
    _Bool m_didUpdateCapsLockLanguageSwitchSetting;	// 539 = 0x21b
    _Bool m_shouldEnableCapsLockLanguageSwitchByDefault;	// 540 = 0x21c
    UIPhysicalKeyboardEvent *m_previousGlobeKeyEvent;	// 544 = 0x220
    _Bool m_delegateAdoptsKeyboardInput;	// 552 = 0x228
    _Bool m_delegateAdoptsTextInput;	// 553 = 0x229
    _Bool m_delegateAdoptsTextInputPrivate;	// 554 = 0x22a
    _Bool m_delegateAdoptsWebTextInputPrivate;	// 555 = 0x22b
    _Bool m_delegateAdoptsWKInteraction;	// 556 = 0x22c
    _Bool m_delegateAdoptsKeyInputPrivate;	// 557 = 0x22d
    _Bool m_delegateAdoptsRTISourceSession;	// 558 = 0x22e
    _Bool m_firstResponderAdoptsTextInput;	// 559 = 0x22f
    UIResponder<UIKeyInput> *_forwardingInputDelegate;	// 560 = 0x230
    _Bool _forwardingInputDelegateConformsToWKInteraction;	// 568 = 0x238
    _Bool _shouldRespectForwardingInputDelegate;	// 569 = 0x239
    _Bool m_scrolling;	// 570 = 0x23a
    _Bool m_hasInputOnAcceptCandidate;	// 571 = 0x23b
    _Bool m_maximizing;	// 572 = 0x23c
    _Bool m_usesAutoShiftFor3PK;	// 573 = 0x23d
    unsigned long long m_previousSpaceKeyBehavior;	// 576 = 0x240
    unsigned long long m_previousReturnKeyBehavior;	// 584 = 0x248
    _Bool m_usesCandidateSelection;	// 592 = 0x250
    _Bool m_UsedCandidateSelection;	// 593 = 0x251
    _Bool m_hasEditedMarkedTextInExtendedView;	// 594 = 0x252
    _Bool m_updatingLayout;	// 595 = 0x253
    _Bool m_suppressUpdateLayout;	// 596 = 0x254
    _Bool m_suppressUpdateShiftState;	// 597 = 0x255
    _Bool m_animateUpdateBars;	// 598 = 0x256
    _Bool m_needsToRecomputeDesirableModes;	// 599 = 0x257
    _Bool m_isCapsLocked;	// 600 = 0x258
    UITextInputTraits *m_traitsForPreviousDelegate;	// 608 = 0x260
    UIDelayedAction *m_detachHardwareKeyboardAction;	// 616 = 0x268
    UIDelayedAction *m_updateLastUsedInputModeAction;	// 624 = 0x270
    UIView *m_capsLockSign;	// 632 = 0x278
    _Bool m_didAutomaticallyInsertSpaceBeforeChangingInputMode;	// 640 = 0x280
    _Bool m_disableSmartInsertDelete;	// 641 = 0x281
    _Bool m_didExtendLongPressDelayForContinuousPath;	// 642 = 0x282
    _Bool m_inHandleKeyTextCommandForCurrentEvent;	// 643 = 0x283
    _Bool m_inHandleKeyAppCommandForCurrentEvent;	// 644 = 0x284
    _Bool m_webEventWasHandledAsKeyCommand;	// 645 = 0x285
    _Bool m_webEventWasHandledByInputManager;	// 646 = 0x286
    _Bool m_webEventIsKeyDown;	// 647 = 0x287
    _Bool m_needsOneShotGenerateCandidatesAfterStoppingAutoDelete;	// 648 = 0x288
    _Bool m_disableAutocapitalization;	// 649 = 0x289
    int m_predictionType;	// 652 = 0x28c
    _Bool m_repeatDeleteFromHardwareKeyboard;	// 656 = 0x290
    UIKBAutofillController *m_autofillController;	// 664 = 0x298
    long long m_cachedAutofillMode;	// 672 = 0x2a0
    _Bool m_isAutofilling;	// 680 = 0x2a8
    long long m_pendingAutofillIndex;	// 688 = 0x2b0
    _Bool m_ignoreSelectionChange;	// 696 = 0x2b8
    _Bool m_repeatDeleteWord;	// 697 = 0x2b9
    struct _NSRange m_textAlternativesRange;	// 704 = 0x2c0
    NSDictionary *m_autofillCustomInfo;	// 720 = 0x2d0
    unsigned long long m_numCPwords;	// 728 = 0x2d8
    _UIKeyboardImplProxy *m_implProxy;	// 736 = 0x2e0
    UIKeyboardScheduledTask *m_delayDeleteTask;	// 744 = 0x2e8
    CDUnknownBlockType _deferredUpdateTask;	// 752 = 0x2f0
    UIContinuousPathIntroductionView *_continuousPathIntroductionView;	// 760 = 0x2f8
    UIKBEditingGesturesIntroduction *_editingGestureIntroductionView;	// 768 = 0x300
    _Bool m_editingTraitsMarkedDirty;	// 776 = 0x308
    _Bool m_selectionIsEmpty;	// 777 = 0x309
    NSMutableDictionary *m_hardwareKeyDownCodeToEventMap;	// 784 = 0x310
    UIKeyboardPopoverController *_keyboardPopoverController;	// 792 = 0x318
    NSString *_inputModeForKeyboardPopoverToRestoreAfterRotation;	// 800 = 0x320
    _Bool _isSettingDelegate;	// 808 = 0x328
    double m_bottomPadding;	// 816 = 0x330
    unsigned long long _serviceRole;	// 824 = 0x338
    UIKBRTIPartner *_remoteTextInputPartner;	// 832 = 0x340
    _Bool m_showsCandidateBar;	// 840 = 0x348
    _Bool m_showsCandidateInline;	// 841 = 0x349
    _Bool committingCandidate;	// 842 = 0x34a
    _Bool geometryIsChanging;	// 843 = 0x34b
    _Bool m_automaticMinimizationEnabled;	// 844 = 0x34c
    _Bool _mimicShiftBeingHeld;	// 845 = 0x34d
    _Bool floatingForced;	// 846 = 0x34e
    _Bool _forCustomInputView;	// 847 = 0x34f
    _Bool _suppressUpdateAssistantView;	// 848 = 0x350
    _Bool _shouldUpdateLayoutAutomatically;	// 849 = 0x351
    _Bool _lockFloating;	// 850 = 0x352
    _Bool _handlingKeyCommandFromHardwareKeyboard;	// 851 = 0x353
    UIPhysicalKeyboardEvent *m_currentEventForKeyCommand;	// 856 = 0x358
    UIKeyboardCandidateController *m_candidateController;	// 864 = 0x360
    TISmartPunctuationController *m_smartPunctuationController;	// 872 = 0x368
    TIKeyboardTouchEvent *m_touchEventWaitingForKeyInputEvent;	// 880 = 0x370
    _UIActionWhenIdle *m_delayedCandidateRequest;	// 888 = 0x378
    _UIActionWhenIdle *m_deferredDidSetDelegateAction;	// 896 = 0x380
    UIView *m_internationalKeyIntroductionView;	// 904 = 0x388
    UIDelayedAction *m_updateCapsLockDelayOverrideForNonTyping;	// 912 = 0x390
    UIKBInputDelegateManager *_inputDelegateManager;	// 920 = 0x398
    _UIStringAndPositionPair *m_lastMatchedSupplementalCandidate;	// 928 = 0x3a0
    _UIStringAndPositionPair *m_pendingSupplementalCandidateToInsert;	// 936 = 0x3a8
    unsigned long long m_lastChooseSupplementalItemToInsertCallbackIdentifier;	// 944 = 0x3b0
    double _deleteWordLastDelete;	// 952 = 0x3b8
    _UIKeyboardTextSelectionController *_textSelectionController;	// 960 = 0x3c0
    unsigned long long _requestedInteractionModel;	// 968 = 0x3c8
    UIKeyboardScheduledTask *_autocorrectPromptTask;	// 976 = 0x3d0
    id <UITextCursorAssertion> _cursorAssertion;	// 984 = 0x3d8
    TICandidateRequestToken *_currentCandidateRequest;	// 992 = 0x3e0
    TIKeyboardCandidate *_autocorrectionToAcceptBeforeProgressiveCandidates;	// 1000 = 0x3e8
    NSArray *_alternativePredictions;	// 1008 = 0x3f0
    long long _candidateViewOffset;	// 1016 = 0x3f8
    NSString *_deletedString;	// 1024 = 0x400
    NSArray *_characterRectsForCharacterRange;	// 1032 = 0x408
    NSNumber *_isAttachedHardwareKeyboard;	// 1040 = 0x410
    UIAutocorrectBubbleContainer *_autocorrectBubbleContainer;	// 1048 = 0x418
}

+ (id)uniqueNumberPadInputModesFromInputModes:(id)arg1 forKeyboardType:(long long)arg2;	// IMP=0x0000000000980b6e
+ (Class)layoutClassForInputMode:(id)arg1 keyboardType:(long long)arg2 screenTraits:(id)arg3;	// IMP=0x0000000000977078
+ (_Bool)smartInsertDeleteIsEnabled;	// IMP=0x0000000000969038
+ (void)setFloatingPersistentOffset:(struct CGPoint)arg1;	// IMP=0x000000000096887b
+ (struct CGPoint)floatingPersistentOffset;	// IMP=0x000000000096882f
+ (struct CGPoint)floatingNormalizedPersistentOffset;	// IMP=0x00000000009687a2
+ (struct CGPoint)defaultUndockedOffsetForFloating:(_Bool)arg1;	// IMP=0x0000000000968783
+ (struct CGPoint)persistentOffset;	// IMP=0x0000000000968688
+ (struct CGPoint)normalizedPersistentOffsetIgnoringState;	// IMP=0x0000000000968635
+ (struct CGPoint)normalizedPersistentOffset;	// IMP=0x0000000000968578
+ (void)setPersistentOffset:(struct CGPoint)arg1;	// IMP=0x0000000000968380
+ (struct CGPoint)_screenPointFromNormalizedPoint:(struct CGPoint)arg1;	// IMP=0x00000000009682b6
+ (struct CGPoint)_normalizedScreenPoint:(struct CGPoint)arg1;	// IMP=0x00000000009681e9
+ (void)suppressSetPersistentOffset:(_Bool)arg1;	// IMP=0x00000000009681dd
+ (void)setPersistentSplitProgress:(double)arg1;	// IMP=0x00000000009680fb
+ (double)splitProgress;	// IMP=0x00000000009680e9
+ (double)persistentSplitProgress;	// IMP=0x0000000000968085
+ (double)keyboardWidthForScreen:(id)arg1 withOrientation:(long long)arg2;	// IMP=0x0000000000967e4a
+ (double)floatingScreenWidthToEmulate;	// IMP=0x0000000000967dd9
+ (double)floatingHeight;	// IMP=0x0000000000967d56
+ (double)floatingWidth;	// IMP=0x0000000000967cd3
+ (long long)floatingIdiom;	// IMP=0x0000000000967ccb
+ (void)setFloating:(_Bool)arg1 positionedAtOffset:(struct CGPoint)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000967c68
+ (void)setFloating:(_Bool)arg1 positionedAtDefaultOffsetAnimated:(_Bool)arg2;	// IMP=0x0000000000967c0b
+ (void)setFloating:(_Bool)arg1;	// IMP=0x00000000009679f5
+ (_Bool)isFloating;	// IMP=0x000000000096797e
+ (void)performWithoutFloatingLock:(CDUnknownBlockType)arg1;	// IMP=0x000000000096791e
+ (_Bool)isFloatingForced;	// IMP=0x00000000009678ec
+ (struct UIEdgeInsets)requestedFloatingInsets;	// IMP=0x00000000009678ce
+ (_Bool)supportsFloating;	// IMP=0x00000000009678c6
+ (_Bool)supportsSplit;	// IMP=0x000000000096783b
+ (_Bool)isSplit;	// IMP=0x0000000000967817
+ (_Bool)rivenShouldUndock;	// IMP=0x00000000009676dd
+ (_Bool)rivenTranslationPreference;	// IMP=0x00000000009676d1
+ (_Bool)rivenPreference;	// IMP=0x00000000009676c5
+ (_Bool)rivenInstalled;	// IMP=0x00000000009676b9
+ (void)refreshRivenStateWithTraits:(id)arg1 isKeyboard:(_Bool)arg2;	// IMP=0x0000000000967680
+ (_Bool)showsGlobeAndDictationKeysExternally;	// IMP=0x0000000000963699
+ (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x0000000000963667
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1;	// IMP=0x0000000000963653
+ (double)additionalInstanceHeight;	// IMP=0x000000000096360e
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1 hasInputView:(_Bool)arg2;	// IMP=0x0000000000963586
+ (double)topMarginForInterfaceOrientation:(long long)arg1;	// IMP=0x00000000009634b8
+ (id)normalizedInputModesFromPreference;	// IMP=0x0000000000963486
+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;	// IMP=0x00000000009632b7
+ (_Bool)keyboardOrientation:(long long)arg1 isEquivalentToOrientation:(long long)arg2;	// IMP=0x0000000000963287
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1 ignoreInputView:(_Bool)arg2;	// IMP=0x00000000009630a2
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;	// IMP=0x000000000096308e
+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;	// IMP=0x0000000000962e56
+ (struct UIEdgeInsets)deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;	// IMP=0x0000000000962c7a
+ (struct UIEdgeInsets)deviceSpecificPaddingForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;	// IMP=0x0000000000962a51
+ (Class)layoutClassForCurrentInputMode;	// IMP=0x0000000000962a25
+ (_Bool)isActivatingForeground;	// IMP=0x00000000009629ab
+ (void)switchControlStatusDidChange:(id)arg1;	// IMP=0x0000000000962979
+ (void)applicationDidReceiveMemoryWarning:(id)arg1;	// IMP=0x0000000000962960
+ (void)applicationWillEnterForeground:(id)arg1;	// IMP=0x00000000009628c3
+ (void)applicationDidEnterBackground:(id)arg1;	// IMP=0x0000000000962804
+ (void)applicationDidBecomeActive:(id)arg1;	// IMP=0x0000000000962793
+ (void)applicationWillResignActive:(id)arg1;	// IMP=0x0000000000962618
+ (void)applicationWillSuspend:(id)arg1;	// IMP=0x000000000096251d
+ (void)purgeImageCache;	// IMP=0x00000000009624eb
+ (void)releaseSharedInstance;	// IMP=0x000000000096243f
+ (id)activeInstance;	// IMP=0x0000000000962432
+ (id)sharedInstanceForCustomInputView:(_Bool)arg1;	// IMP=0x000000000096222a
+ (id)sharedInstance;	// IMP=0x0000000000962216
+ (void)sendPerformanceNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000000099cd18
+ (void)sendPerformanceNotification:(id)arg1;	// IMP=0x000000000099cd04
+ (void)setParentTestForProfiling:(id)arg1;	// IMP=0x000000000099ccd8
+ (void)_clearHardwareKeyboardMinimizationPreference;	// IMP=0x000000000099cf2a
+ (_Bool)isHardwareCommandKeyBeingHeld;	// IMP=0x000000000099e7bd
+ (_Bool)isHardwareShiftKeyBeingHeld;	// IMP=0x000000000099e78e
+ (_Bool)overrideNativeScreen;	// IMP=0x000000000099d2f4
+ (id)keyboardScreen;	// IMP=0x000000000099d271
+ (id)keyboardWindow;	// IMP=0x000000000099d1fe
@property(retain, nonatomic) UIAutocorrectBubbleContainer *autocorrectBubbleContainer; // @synthesize autocorrectBubbleContainer=_autocorrectBubbleContainer;
@property(retain, nonatomic) NSNumber *isAttachedHardwareKeyboard; // @synthesize isAttachedHardwareKeyboard=_isAttachedHardwareKeyboard;
@property(copy, nonatomic) NSArray *characterRectsForCharacterRange; // @synthesize characterRectsForCharacterRange=_characterRectsForCharacterRange;
@property(retain, nonatomic) NSString *deletedString; // @synthesize deletedString=_deletedString;
@property(nonatomic) long long candidateViewOffset; // @synthesize candidateViewOffset=_candidateViewOffset;
@property(retain, nonatomic) NSArray *alternativePredictions; // @synthesize alternativePredictions=_alternativePredictions;
@property(retain, nonatomic) TIKeyboardCandidate *autocorrectionToAcceptBeforeProgressiveCandidates; // @synthesize autocorrectionToAcceptBeforeProgressiveCandidates=_autocorrectionToAcceptBeforeProgressiveCandidates;
@property(retain, nonatomic) TICandidateRequestToken *currentCandidateRequest; // @synthesize currentCandidateRequest=_currentCandidateRequest;
@property(nonatomic) _Bool handlingKeyCommandFromHardwareKeyboard; // @synthesize handlingKeyCommandFromHardwareKeyboard=_handlingKeyCommandFromHardwareKeyboard;
@property(retain, nonatomic) id <UITextCursorAssertion> cursorAssertion; // @synthesize cursorAssertion=_cursorAssertion;
@property(retain, nonatomic) UIKeyboardScheduledTask *autocorrectPromptTask; // @synthesize autocorrectPromptTask=_autocorrectPromptTask;
@property(nonatomic) unsigned long long requestedInteractionModel; // @synthesize requestedInteractionModel=_requestedInteractionModel;
@property(getter=isFloatingLocked) _Bool lockFloating; // @synthesize lockFloating=_lockFloating;
@property(nonatomic) _Bool shouldUpdateLayoutAutomatically; // @synthesize shouldUpdateLayoutAutomatically=_shouldUpdateLayoutAutomatically;
@property(nonatomic) _Bool suppressUpdateAssistantView; // @synthesize suppressUpdateAssistantView=_suppressUpdateAssistantView;
@property(retain, nonatomic) _UIKeyboardTextSelectionController *textSelectionController; // @synthesize textSelectionController=_textSelectionController;
@property(nonatomic) double deleteWordLastDelete; // @synthesize deleteWordLastDelete=_deleteWordLastDelete;
@property(nonatomic) _Bool forCustomInputView; // @synthesize forCustomInputView=_forCustomInputView;
@property(nonatomic) unsigned long long lastChooseSupplementalItemToInsertCallbackIdentifier; // @synthesize lastChooseSupplementalItemToInsertCallbackIdentifier=m_lastChooseSupplementalItemToInsertCallbackIdentifier;
@property(retain, nonatomic) _UIStringAndPositionPair *pendingSupplementalCandidateToInsert; // @synthesize pendingSupplementalCandidateToInsert=m_pendingSupplementalCandidateToInsert;
@property(retain, nonatomic) _UIStringAndPositionPair *lastMatchedSupplementalCandidate; // @synthesize lastMatchedSupplementalCandidate=m_lastMatchedSupplementalCandidate;
@property(nonatomic) _Bool shouldIgnoreTextInputChanges; // @synthesize shouldIgnoreTextInputChanges=m_textInputChangesIgnored;
@property(retain, nonatomic) UIKBInputDelegateManager *inputDelegateManager; // @synthesize inputDelegateManager=_inputDelegateManager;
@property(readonly, nonatomic) TIKeyboardState *keyboardState; // @synthesize keyboardState=m_keyboardState;
@property(readonly, nonatomic) _Bool updatingPreferences; // @synthesize updatingPreferences=m_updatingPreferences;
@property(nonatomic) _Bool floatingForced; // @synthesize floatingForced;
@property(readonly, nonatomic) _Bool delegateRequiresKeyEvents; // @synthesize delegateRequiresKeyEvents=m_delegateRequiresKeyEvents;
@property(nonatomic) _Bool _mimicShiftBeingHeld; // @synthesize _mimicShiftBeingHeld;
@property(retain, nonatomic) UIDelayedAction *updateCapsLockDelayOverrideForNonTyping; // @synthesize updateCapsLockDelayOverrideForNonTyping=m_updateCapsLockDelayOverrideForNonTyping;
@property(retain, nonatomic) UIKBAutofillController *autofillController; // @synthesize autofillController=m_autofillController;
@property(nonatomic) _Bool animateUpdateBars; // @synthesize animateUpdateBars=m_animateUpdateBars;
@property(nonatomic) _Bool suppressUpdateShiftState; // @synthesize suppressUpdateShiftState=m_suppressUpdateShiftState;
@property(nonatomic) _Bool suppressUpdateLayout; // @synthesize suppressUpdateLayout=m_suppressUpdateLayout;
@property(nonatomic) _Bool disableSmartInsertDelete; // @synthesize disableSmartInsertDelete=m_disableSmartInsertDelete;
@property(nonatomic) _Bool geometryIsChanging; // @synthesize geometryIsChanging;
@property(nonatomic) _Bool committingCandidate; // @synthesize committingCandidate;
@property(retain, nonatomic) UIView *internationalKeyIntroductionView; // @synthesize internationalKeyIntroductionView=m_internationalKeyIntroductionView;
@property(nonatomic) _Bool showsCandidateInline; // @synthesize showsCandidateInline=m_showsCandidateInline;
@property(nonatomic) _Bool receivedCandidatesInCurrentInputMode; // @synthesize receivedCandidatesInCurrentInputMode=m_receivedCandidatesInCurrentInputMode;
@property(nonatomic) _Bool showsCandidateBar; // @synthesize showsCandidateBar=m_showsCandidateBar;
@property(nonatomic) _Bool showInputModeIndicator; // @synthesize showInputModeIndicator=m_showInputModeIndicator;
@property(retain, nonatomic) id changedDelegate; // @synthesize changedDelegate=m_changedDelegate;
@property(retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction; // @synthesize deferredDidSetDelegateAction=m_deferredDidSetDelegateAction;
@property(retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest; // @synthesize delayedCandidateRequest=m_delayedCandidateRequest;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent; // @synthesize touchEventWaitingForKeyInputEvent=m_touchEventWaitingForKeyInputEvent;
@property(readonly, nonatomic) UIKeyboardCandidateController *candidateController; // @synthesize candidateController=m_candidateController;
@property(readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController; // @synthesize autocorrectionController=m_autocorrectionController;
@property(retain, nonatomic) TIKeyboardInputManagerState *inputManagerState; // @synthesize inputManagerState=m_inputManagerState;
@property(retain, nonatomic) UIPhysicalKeyboardEvent *eventForCurrentWebEvent; // @synthesize eventForCurrentWebEvent=m_currentEventForKeyCommand;
@property(copy, nonatomic) CDUnknownBlockType externalTask; // @synthesize externalTask=m_externalTask;
@property(nonatomic) id <UIKeyboardImplGeometryDelegate> geometryDelegate; // @synthesize geometryDelegate=m_geometryDelegate;
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory; // @synthesize arrowKeyHistory=m_arrowKeyHistory;
- (id)markedText;	// IMP=0x000000000099c66d
- (_Bool)hasMarkedText;	// IMP=0x000000000099c642
- (void)unmarkText:(id)arg1;	// IMP=0x000000000099c611
- (void)insertAttributedText:(id)arg1;	// IMP=0x000000000099c5e0
- (id)asynchronousInputDelegate;	// IMP=0x000000000099c5b5
- (void)assertTextForRemoteDocument:(id)arg1 withSelectionRange:(struct _NSRange)arg2 updatingSelection:(_Bool)arg3;	// IMP=0x000000000099c3d3
- (void)updateInputDelegateForRemoteDocumentStateChange:(id)arg1 selectedTextRange:(struct _NSRange)arg2 forceSync:(_Bool)arg3;	// IMP=0x000000000099c2d8
- (void)updateInputDelegateForRemoteTraitChange:(id)arg1 forceSync:(_Bool)arg2;	// IMP=0x000000000099bfd6
- (id)inputSystemSourceSession;	// IMP=0x000000000099bfab
- (void)resetInputDelegate;	// IMP=0x000000000099bf50
- (id)remoteTextEditingMetadata;	// IMP=0x000000000099be92
@property(readonly, nonatomic) UIKBRTIPartner *remoteTextInputPartner;
- (void)_ensureRTIConnection;	// IMP=0x000000000099bdf0
- (void)_performKeyboardOutput:(CDUnknownBlockType)arg1 respectingForwardingDelegate:(_Bool)arg2;	// IMP=0x000000000099bd4e
- (void)_setTransientSelectionModeEnabled:(_Bool)arg1 forInputDelegate:(id)arg2;	// IMP=0x000000000099bcbc
- (void)didChangeForwardingInputDelegate:(id)arg1;	// IMP=0x000000000099bb92
- (void)clearForwardingInputDelegateAndResign:(_Bool)arg1;	// IMP=0x000000000099bb63
- (void)enableTransientInputDelegateSelectionMode;	// IMP=0x000000000099baad
- (void)performSendCurrentLocation;	// IMP=0x000000000099ba3e
- (id)responderForSendCurrentLocation;	// IMP=0x000000000099b9c9
- (void)trackUsageForCandidateAcceptedAction:(id)arg1;	// IMP=0x000000000099b8af
- (void)trackUsageForPromptedCorrection:(id)arg1 inputString:(id)arg2 previousPrompt:(id)arg3;	// IMP=0x000000000099b7c9
- (void)trackUsageForAcceptedAutocorrection:(id)arg1 promptWasShowing:(_Bool)arg2;	// IMP=0x000000000099b6e3
- (_Bool)isAutoFillMode;	// IMP=0x000000000099b659
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000099b323
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;	// IMP=0x000000000099b0bb
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000099b030
- (_Bool)canHandleKeyHitTest;	// IMP=0x000000000099b005
- (void)updateNoContentViews;	// IMP=0x000000000099af99
- (id)dynamicCaretList;	// IMP=0x000000000099af6e
- (void)clearSelection;	// IMP=0x000000000099aec9
- (_Bool)caretVisible;	// IMP=0x000000000099ae9e
- (_Bool)caretBlinks;	// IMP=0x000000000099ae73
- (void)setCaretVisible:(_Bool)arg1;	// IMP=0x000000000099ae44
- (void)setCaretBlinks:(_Bool)arg1;	// IMP=0x000000000099ae15
- (id)_activeAssertionController;	// IMP=0x000000000099adea
- (_Bool)canHandleEvent:(id)arg1;	// IMP=0x000000000099adc4
- (void)_moveWithEvent:(id)arg1;	// IMP=0x000000000099ad56
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x000000000099ad0f
- (void)remoteControlReceivedWithEvent:(id)arg1;	// IMP=0x000000000099acc8
- (void)showKeyboardIfNeeded;	// IMP=0x000000000099ac14
- (void)updateIsAttachedHardwareKeyboard;	// IMP=0x000000000099a824
- (void)ejectKeyDown;	// IMP=0x000000000099a7f1
- (void)toggleSoftwareKeyboard;	// IMP=0x000000000099a74e
- (void)completeHandleKeyEvent:(id)arg1;	// IMP=0x000000000099a615
- (void)handleKeyWithString:(id)arg1 forKeyEvent:(id)arg2 executionContext:(id)arg3;	// IMP=0x000000000099a173
- (void)handleModifiersChangeForKeyEvent:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000999efd
- (void)handleKeyEvent:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009993e3
- (_Bool)_shouldEmitString:(id)arg1 forKeyEvent:(id)arg2;	// IMP=0x00000000009992bb
- (unsigned long long)_handleKeyCommandCommon:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000999236
- (_Bool)_handleKeyCommand:(id)arg1;	// IMP=0x000000000099921b
- (_Bool)_handlesKeyCommandForEvent:(id)arg1;	// IMP=0x00000000009991fd
- (_Bool)_isKeyCommand:(id)arg1;	// IMP=0x00000000009991df
- (void)handleKeyEvent:(id)arg1;	// IMP=0x0000000000998fc8
- (void)_handleKeyEvent:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000998e87
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;	// IMP=0x0000000000998e1f
- (void)_remapKeyEvent:(id)arg1 withKeyEventMap:(id)arg2;	// IMP=0x0000000000998d57
- (void)_handleWebKeyEvent:(id)arg1 withInputString:(id)arg2 executionContext:(id)arg3;	// IMP=0x0000000000998c89
- (void)_handleWebKeyEvent:(id)arg1 withIndex:(unsigned long long)arg2 inInputString:(id)arg3 executionContext:(id)arg4;	// IMP=0x0000000000997f6a
- (void)_handleWebKeyEvent:(id)arg1 withEventType:(int)arg2 withInputString:(id)arg3 withInputStringIgnoringModifiers:(id)arg4 executionContext:(id)arg5;	// IMP=0x0000000000997b1c
- (void)updateKeyboardEventsLagging:(id)arg1;	// IMP=0x0000000000997a93
- (_Bool)_isValidKeyInput:(id)arg1;	// IMP=0x00000000009979c5
- (void)cancelAllKeyEvents;	// IMP=0x00000000009979a8
- (void)_attemptAuthenticationWithMessage:(id)arg1;	// IMP=0x0000000000997953
- (void)dismissKeyboard;	// IMP=0x00000000009976f5
- (void)proceedShouldReturnIfNeededForASP;	// IMP=0x00000000009975f7
@property(nonatomic, getter=isInHardwareKeyboardMode) _Bool inHardwareKeyboardMode;
- (void)setInHardwareKeyboardMode:(_Bool)arg1 forceRebuild:(_Bool)arg2;	// IMP=0x00000000009973fe
- (void)_showKeyboardIgnoringPolicyDelegate:(_Bool)arg1;	// IMP=0x00000000009971a8
- (void)showKeyboardWithoutSuppressionPolicy;	// IMP=0x0000000000997161
- (void)showKeyboard;	// IMP=0x000000000099714d
- (void)hideKeyboardIgnoringHardwareLayouts:(_Bool)arg1;	// IMP=0x00000000009970f0
- (void)hideKeyboard;	// IMP=0x00000000009970dc
- (void)hideKeyboardWithoutPreflightChecks;	// IMP=0x0000000000996fb3
- (void)hardwareKeyboardAvailabilityChanged;	// IMP=0x0000000000996d38
- (void)hardwareKeyboardAvailabilityDidChange:(id)arg1;	// IMP=0x0000000000996ce1
- (void)detachHardwareKeyboard;	// IMP=0x0000000000996c4e
- (void)clearDetachHardwareKeyboardAction;	// IMP=0x0000000000996bf8
- (void)updateHardwareKeyboardLayout:(_Bool)arg1;	// IMP=0x0000000000996b79
- (void)updateHardwareKeyboardLayout;	// IMP=0x0000000000996b65
- (int)changeCount;	// IMP=0x0000000000996b55
- (void)updateChangeTimeAndIncrementCount;	// IMP=0x0000000000996b2a
- (void)clearChangeTimeAndCount;	// IMP=0x0000000000996b07
- (void)clearTimers;	// IMP=0x0000000000996a7a
- (_Bool)isLongPress;	// IMP=0x0000000000996a6a
- (void)longPressAction;	// IMP=0x0000000000996a56
- (void)longPressAction:(id)arg1;	// IMP=0x0000000000996a1d
- (void)handleDelayedActionLongPress:(id)arg1;	// IMP=0x0000000000996917
- (double)shouldExtendLongPressAction:(id)arg1;	// IMP=0x0000000000996656
- (void)clearLongPressTimer;	// IMP=0x0000000000996610
- (void)touchLongPressTimer;	// IMP=0x00000000009965f6
- (void)touchLongPressTimerWithDelay:(double)arg1;	// IMP=0x00000000009965e2
- (void)touchLongPressTimerWithDelay:(double)arg1 userInfo:(id)arg2;	// IMP=0x000000000099653b
- (void)handleUpdateLastUsedInputModeAction:(id)arg1;	// IMP=0x00000000009964ae
- (void)clearUpdateLastUsedInputModeAction;	// IMP=0x0000000000996475
- (void)touchUpdateLastUsedInputModeAction;	// IMP=0x0000000000996357
- (void)stopAutoDelete;	// IMP=0x000000000099622e
- (void)adjustAutoDeleteTimerForForce:(double)arg1;	// IMP=0x00000000009961b7
- (void)startAutoDeleteTimerForForce:(double)arg1;	// IMP=0x0000000000996149
- (double)timeoutForCurrentForce;	// IMP=0x00000000009960f4
- (double)scaleCurrentForceFrom:(double)arg1 to:(double)arg2;	// IMP=0x0000000000996097
- (double)convertForceToGrams:(double)arg1;	// IMP=0x000000000099607d
- (void)startAutoDeleteTimer;	// IMP=0x0000000000995f7a
- (void)completeHandleAutoDelete;	// IMP=0x0000000000995dcd
- (void)handleAutoDeleteWithExecutionContext:(id)arg1;	// IMP=0x0000000000995bec
- (void)touchAutoDeleteTimerWithThreshold:(double)arg1 adjustForPartialCompletion:(_Bool)arg2;	// IMP=0x0000000000995ad3
- (void)clearAutoDeleteTimer;	// IMP=0x0000000000995a9a
- (id)generateAutocorrectionListForSelectedText;	// IMP=0x0000000000995827
- (id)generateAutocorrectionReplacements:(id)arg1;	// IMP=0x0000000000995660
- (void)generateCandidatesFromReplacements;	// IMP=0x00000000009953df
- (id)replacementsFromSelectedText;	// IMP=0x0000000000995253
- (void)_generateTextSuggestionForKeyboardCamera;	// IMP=0x0000000000995160
- (_Bool)_isShowingSuggestionForKeyboardCamera;	// IMP=0x0000000000995129
- (void)generateCandidatesWithOptions:(int)arg1;	// IMP=0x0000000000994b3b
- (void)generateCandidates;	// IMP=0x0000000000994b27
- (_Bool)canShowAppConnections;	// IMP=0x0000000000994a84
- (_Bool)delegateSuggestionsForCurrentInput;	// IMP=0x0000000000994630
- (id)autocorrectionRecordForWord:(id)arg1;	// IMP=0x00000000009945bf
- (void)autocorrectionAnimationDidStopWithAutocorrectionView:(id)arg1;	// IMP=0x0000000000994550
- (void)fadeAutocorrectPrompt;	// IMP=0x000000000099438b
- (void)animateAutocorrectionToRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2;	// IMP=0x000000000099407d
- (void)animateAutocorrectionToText:(id)arg1 fromRect:(struct CGRect)arg2;	// IMP=0x0000000000993ee6
- (_Bool)applyAutocorrection:(id)arg1;	// IMP=0x0000000000993b96
- (void)insertText:(id)arg1 withAlternativePredictions:(id)arg2;	// IMP=0x00000000009939f8
- (void)updateAutocorrectContainerWithAutocorrection:(id)arg1 parentView:(id)arg2 correctionRects:(id)arg3;	// IMP=0x00000000009936ab
- (void)updateLegacyAutocorrectPromptWithAutocorrection:(id)arg1 parentView:(id)arg2 correctionRects:(id)arg3;	// IMP=0x000000000099336b
- (void)updateAutocorrectPrompt:(id)arg1 correctionRects:(id)arg2;	// IMP=0x0000000000993175
- (id)autocorrectPromptRectsForInput:(id)arg1;	// IMP=0x0000000000993082
- (void)updateAutocorrectPrompt:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000992c1b
- (void)updateAutocorrectPrompt:(id)arg1;	// IMP=0x0000000000992b8a
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect)arg1 lastDelegateRect:(struct CGRect)arg2;	// IMP=0x000000000099295b
- (id)_rangeForAutocorrectionText:(id)arg1;	// IMP=0x00000000009928aa
- (void)clearAutocorrectPromptTimer;	// IMP=0x0000000000992860
- (void)touchDelayDeleteTimerWithThreshold:(double)arg1;	// IMP=0x0000000000992743
- (void)clearDelayDeleteTimer;	// IMP=0x000000000099270a
- (void)touchAutocorrectPromptTimer;	// IMP=0x000000000099258a
- (void)sendCallbacksForPostCorrectionsRemoval;	// IMP=0x000000000099252a
- (void)sendCallbacksForPreCorrectionsDisplay;	// IMP=0x00000000009924ca
- (struct CGRect)convertRectToAutocorrectRect:(struct CGRect)arg1 delegateView:(id)arg2 container:(id)arg3;	// IMP=0x0000000000992338
- (void)updateTextCandidateView;	// IMP=0x0000000000991a17
- (struct CGRect)getCorrectionRectIsVertical:(_Bool *)arg1;	// IMP=0x000000000099114d
- (struct CGRect)correctionRect;	// IMP=0x0000000000991118
- (id)inputOverlayContainerForCandidateView:(_Bool)arg1;	// IMP=0x0000000000990eea
- (id)inputOverlayContainer;	// IMP=0x0000000000990ed6
- (_Bool)callLayoutIsGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x0000000000990e84
- (void)callLayoutUpdateRecentInputs;	// IMP=0x0000000000990d8b
- (void)callLayoutUpdateAllLocalizedKeys;	// IMP=0x0000000000990d39
- (void)callLayoutUpdateLocalizedKeys;	// IMP=0x0000000000990cea
- (void)callLayoutLongPressAction;	// IMP=0x0000000000990c8a
- (void)callLayoutSetAutoshift:(_Bool)arg1;	// IMP=0x0000000000990c39
- (void)callLayoutSetShift:(_Bool)arg1;	// IMP=0x0000000000990be8
- (_Bool)callLayoutIsShiftKeyBeingHeld;	// IMP=0x0000000000990b99
- (_Bool)callLayoutIsShiftKeyPlaneChooser;	// IMP=0x0000000000990b41
- (_Bool)callLayoutIgnoresShiftState;	// IMP=0x0000000000990aed
- (_Bool)callLayoutUsesAutoShift;	// IMP=0x0000000000990a54
- (void)callLayoutUpdateReturnKey;	// IMP=0x00000000009909ae
@property(readonly, nonatomic) UIKeyboardLayout *activeLayout;
- (void)_updateKeyboardConfigurations;	// IMP=0x0000000000990959
- (id)updatedKeyBehaviors;	// IMP=0x00000000009908c8
- (id)updateKeyBehaviors:(id)arg1 withBehaviors:(id)arg2 forState:(id)arg3;	// IMP=0x00000000009907ee
- (id)_keyboardBehaviorState;	// IMP=0x0000000000990450
- (void)performKeyBehaviorCommitInline;	// IMP=0x000000000099043e
- (void)performKeyBehaviorConfirmFirstCandidate;	// IMP=0x00000000009903ea
- (void)performKeyBehaviorConfirm;	// IMP=0x00000000009902f4
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(id)arg2;	// IMP=0x000000000098fde7
- (void)_nop;	// IMP=0x000000000098fde1
- (_Bool)shouldShowDictationKey;	// IMP=0x000000000098fd97
- (_Bool)shouldShowInternationalKey;	// IMP=0x000000000098fcd1
- (void)updateReturnKey:(_Bool)arg1;	// IMP=0x000000000098f9fe
- (void)updateReturnKey;	// IMP=0x000000000098f9ea
- (void)setReturnKeyEnabled:(_Bool)arg1;	// IMP=0x000000000098f9cb
- (_Bool)returnKeyEnabled;	// IMP=0x000000000098f927
- (id)returnKeyDisplayName;	// IMP=0x000000000098f8b6
- (int)returnKeyType;	// IMP=0x000000000098f825
- (_Bool)noContent;	// IMP=0x000000000098f7a5
- (void)setCandidates:(id)arg1;	// IMP=0x000000000098f41f
- (void)removeAutocorrectPromptAndCandidateList;	// IMP=0x000000000098f3f1
- (void)removeCandidateList;	// IMP=0x000000000098f30a
- (void)removeAutocorrectPrompt;	// IMP=0x000000000098f218
- (id)autocorrectPrompt;	// IMP=0x000000000098f1fa
- (void)setAutocorrectionList:(id)arg1;	// IMP=0x000000000098ed3b
- (id)_supplementalCandidateIcon:(id)arg1;	// IMP=0x000000000098ec49
- (void)setAutocorrection:(id)arg1;	// IMP=0x000000000098ebe3
- (void)responseContextDidChange;	// IMP=0x000000000098ea2b
- (void)layoutDidResize;	// IMP=0x000000000098e9c7
- (_Bool)layoutIsResizing;	// IMP=0x000000000098e99c
- (_Bool)maximizing;	// IMP=0x000000000098e98c
- (_Bool)isMinimized;	// IMP=0x000000000098e8ee
- (void)candidateBarDidExtendWithGesture;	// IMP=0x000000000098e887
- (_Bool)canUseCandidateBarAsSupplementToInlineView;	// IMP=0x000000000098e63c
- (void)updateCandidateDisplay;	// IMP=0x000000000098e3e5
- (_Bool)needsToDeferUpdateTextCandidateView;	// IMP=0x000000000098e324
- (void)assertIntermediateText:(id)arg1;	// IMP=0x000000000098e1a6
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)arg1;	// IMP=0x000000000098daf7
- (void)_conditionallyNotifyPredictionsAreAvailableForCandidates:(id)arg1 containingProactiveTriggers:(_Bool)arg2;	// IMP=0x000000000098d8e3
- (_Bool)displaysCandidates;	// IMP=0x000000000098d8d1
- (void)setCandidateList:(id)arg1;	// IMP=0x000000000098d766
- (void)pushAutocorrections:(id)arg1 requestToken:(id)arg2;	// IMP=0x000000000098d5b8
- (void)processPayloadInfo:(id)arg1;	// IMP=0x000000000098d31e
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2 forInput:(id)arg3;	// IMP=0x000000000098cc78
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2;	// IMP=0x000000000098cc63
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;	// IMP=0x000000000098cc27
- (void)replaceText:(id)arg1;	// IMP=0x000000000098ca1f
- (void)clearDelegate;	// IMP=0x000000000098c9ad
- (void)clearAnimations;	// IMP=0x000000000098c96a
- (void)clearTransientState;	// IMP=0x000000000098c93a
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000098c827
- (void)addInputObject:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000098c675
- (void)addInputObject:(id)arg1;	// IMP=0x000000000098c56e
- (void)acceptRecentInput:(id)arg1;	// IMP=0x000000000098c460
- (void)removeRecentInput:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000098c38b
- (void)clearRecentInput;	// IMP=0x000000000098c340
- (void)clearInputWithCandidatesCleared:(_Bool)arg1;	// IMP=0x000000000098c236
- (void)clearInput;	// IMP=0x000000000098c1df
- (id)candidateList;	// IMP=0x000000000098c1ce
- (void)candidateListInvalidateSelection:(id)arg1;	// IMP=0x000000000098c1ba
- (void)candidateListSelectionDidChange:(id)arg1;	// IMP=0x000000000098c095
- (void)candidateListAcceptCandidate:(id)arg1;	// IMP=0x000000000098bf35
- (void)revealHiddenCandidates;	// IMP=0x000000000098bee8
- (void)jumpToCompositions;	// IMP=0x000000000098be9b
- (void)showNextPage;	// IMP=0x000000000098be74
- (void)showPreviousCandidate;	// IMP=0x000000000098be53
- (void)showNextCandidates;	// IMP=0x000000000098be2f
- (void)completeAcceptCandidate:(id)arg1;	// IMP=0x000000000098bd56
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)arg1;	// IMP=0x000000000098bc35
- (void)acceptCurrentCandidateIfSelected;	// IMP=0x000000000098bb8e
- (void)setUserSelectedCurrentCandidate:(_Bool)arg1;	// IMP=0x000000000098bb71
- (_Bool)userSelectedCurrentCandidate;	// IMP=0x000000000098bb54
- (void)acceptFirstCandidate;	// IMP=0x000000000098b890
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2 executionContext:(id)arg3;	// IMP=0x000000000098b79f
- (id)acceptInlineCandidateForInput:(id)arg1;	// IMP=0x000000000098b6d3
- (id)acceptCurrentCandidateForInput:(id)arg1;	// IMP=0x000000000098b479
- (id)acceptInlineCandidate;	// IMP=0x000000000098b465
- (id)acceptCurrentCandidate;	// IMP=0x000000000098b451
- (void)acceptHandwritingCandidate;	// IMP=0x000000000098b40f
- (void)handleDeletionForCandidate:(id)arg1;	// IMP=0x000000000098b33a
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2;	// IMP=0x000000000098a8e9
- (void)acceptCandidate:(id)arg1;	// IMP=0x000000000098a8d5
- (void)acceptPredictiveInput:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000098a314
- (_Bool)shouldForwardInsertSpaceAfterAcceptingPredictiveInput:(id)arg1;	// IMP=0x000000000098a2ff
- (void)textAccepted:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000098a1cb
- (void)textAccepted:(id)arg1;	// IMP=0x000000000098a0a8
- (_Bool)insertsSpaceAfterPredictiveInput;	// IMP=0x000000000098a07d
- (void)rejectAutocorrection:(id)arg1;	// IMP=0x0000000000989fb8
- (void)acceptPredictiveInput:(id)arg1;	// IMP=0x0000000000989db9
- (void)_acceptSupplementalCandidate:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000098997b
- (id)emojiCandidate:(id)arg1;	// IMP=0x000000000098979a
- (void)insertTextSuggestionCandidate:(id)arg1;	// IMP=0x00000000009896c5
- (void)removeAutocorrection;	// IMP=0x0000000000989695
- (void)acceptAutocorrection;	// IMP=0x00000000009892da
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;	// IMP=0x000000000098921d
- (void)completeDeleteFromInput;	// IMP=0x0000000000989145
- (void)deleteFromInputWithFlags:(unsigned long long)arg1 executionContext:(id)arg2;	// IMP=0x00000000009886be
- (void)deleteFromInputWithFlags:(unsigned long long)arg1;	// IMP=0x000000000098864b
- (void)deleteFromInput;	// IMP=0x0000000000988637
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)arg1;	// IMP=0x00000000009883e1
- (void)scheduleReplacementsAfterDeletionToEndOfWord;	// IMP=0x000000000098834f
- (void)collapseSelection;	// IMP=0x0000000000988322
- (_Bool)nextCharacterIsWordCharacter;	// IMP=0x00000000009882b5
- (void)deleteOnceFromInputWithExecutionContext:(id)arg1;	// IMP=0x0000000000988129
- (void)updateLayoutAndSetShift;	// IMP=0x00000000009880f6
- (_Bool)shouldEnableShiftForDeletedCharacter:(unsigned int)arg1;	// IMP=0x0000000000988079
- (void)movePhraseBoundaryToDirection:(long long)arg1 granularity:(long long)arg2;	// IMP=0x0000000000987fa1
- (void)adjustSegmentSize:(long long)arg1;	// IMP=0x0000000000987ef2
- (unsigned long long)phraseBoundary;	// IMP=0x0000000000987e3b
- (void)didChangePhraseBoundary;	// IMP=0x0000000000987dbc
- (void)completeAddInputString:(id)arg1 generateCandidates:(_Bool)arg2;	// IMP=0x0000000000987cd4
- (void)completeAddInputString:(id)arg1;	// IMP=0x0000000000987cbd
- (void)addWordTerminator:(id)arg1 afterSpace:(_Bool)arg2 afterAcceptingCandidate:(id)arg3 elapsedTime:(double)arg4 executionContext:(id)arg5;	// IMP=0x0000000000987959
- (void)didApplyAutocorrection:(id)arg1 autocorrectPromptFrame:(struct CGRect)arg2;	// IMP=0x00000000009877ff
- (_Bool)shouldApplyAcceptedAutocorrection:(id)arg1;	// IMP=0x00000000009876e4
- (void)acceptAutocorrection:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;	// IMP=0x0000000000986e84
- (void)handleEmojiInput:(id)arg1 keyboardState:(id)arg2;	// IMP=0x0000000000986d5b
- (void)emojiSearchWillInsertEmoji:(id)arg1 forSearchQuery:(id)arg2 selectionMethod:(id)arg3 inputType:(id)arg4;	// IMP=0x0000000000986c20
- (void)emojiSearchWillInsertEmoji:(id)arg1 forSearchQuery:(id)arg2;	// IMP=0x0000000000986bb6
- (void)insertedEmojiFromPopover:(id)arg1 selectionMethod:(id)arg2;	// IMP=0x0000000000986b26
- (void)setDocumentStateForAutocorrection:(id)arg1;	// IMP=0x0000000000986942
- (void)syncInputManagerToAcceptedAutocorrection:(id)arg1 forInput:(id)arg2;	// IMP=0x00000000009868b6
- (void)didAcceptAutocorrection:(id)arg1 wordTerminator:(id)arg2;	// IMP=0x000000000098657d
- (id)inputWordForTerminatorAtSelection;	// IMP=0x0000000000986475
- (void)acceptAutocorrectionForWordTerminator:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;	// IMP=0x00000000009861f8
- (id)acceptAutocorrectionForWordTerminator:(id)arg1;	// IMP=0x0000000000986044
- (void)addInputEvent:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000098580d
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;	// IMP=0x0000000000985490
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000985478
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3;	// IMP=0x00000000009853f5
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;	// IMP=0x000000000098537a
- (void)_scheduleInputAdditionOrDeletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000009852d4
- (void)removeSpaceAfterEmojiForInputString:(id)arg1;	// IMP=0x00000000009851bd
- (_Bool)shouldAcceptCandidate:(id)arg1 beforeInputString:(id)arg2;	// IMP=0x0000000000985058
- (id)handleReplacement:(id)arg1 forSpaceAndInput:(id)arg2;	// IMP=0x0000000000984f31
- (id)handleDeleteAutospaceForInputString:(id)arg1 afterSpace:(_Bool)arg2;	// IMP=0x0000000000984ead
- (_Bool)shouldDeleteAutospaceBeforeTerminator:(id)arg1;	// IMP=0x0000000000984e04
- (_Bool)willDoubleSpacePeriodForInputString:(id)arg1 afterSpace:(_Bool)arg2 elapsedTime:(double)arg3;	// IMP=0x0000000000984db4
- (void)updateDoubleSpacePeriodStateForString:(id)arg1;	// IMP=0x0000000000984cd7
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)arg1;	// IMP=0x0000000000984caa
- (id)inputEventForInputString:(id)arg1;	// IMP=0x0000000000984b0c
- (void)addInputString:(id)arg1 fromVariantKey:(_Bool)arg2;	// IMP=0x0000000000984af5
- (void)addInputString:(id)arg1;	// IMP=0x0000000000984ae1
- (_Bool)handleKeyAppCommandForCurrentEvent;	// IMP=0x00000000009849c3
- (_Bool)handleKeyTextCommandForCurrentEvent;	// IMP=0x00000000009848f6
- (_Bool)handleKeyInputMethodCommandForCurrentEvent;	// IMP=0x000000000098467b
- (_Bool)isCallingInputDelegate;	// IMP=0x0000000000984650
- (void)deleteBackward;	// IMP=0x0000000000984639
- (_Bool)deleteForwardAndNotify:(_Bool)arg1;	// IMP=0x00000000009845da
- (_Bool)_canDeleteForward;	// IMP=0x0000000000984549
- (void)updateKeyboardStateForDeletion;	// IMP=0x00000000009843e4
- (void)deleteBackwardAndNotify:(_Bool)arg1;	// IMP=0x00000000009842fc
- (void)moveCursorByAmount:(long long)arg1;	// IMP=0x00000000009842cc
- (void)updateKeyboardStateForInsertion:(id)arg1;	// IMP=0x000000000098421d
- (void)setPreviousGlobeKeyEvent:(id)arg1;	// IMP=0x00000000009841de
- (void)setPreviousInputString:(id)arg1;	// IMP=0x000000000098419f
- (_Bool)acceptInputString:(id)arg1;	// IMP=0x0000000000984144
- (void)handleStringInput:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;	// IMP=0x0000000000984058
- (_Bool)handleTabWithShift:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2 isMoveAction:(_Bool)arg3 testOnly:(_Bool)arg4;	// IMP=0x0000000000983d54
- (_Bool)handleTabWithShift:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2;	// IMP=0x0000000000983d3c
- (_Bool)handleMoveResponderWithShift:(_Bool)arg1;	// IMP=0x0000000000983d1f
- (_Bool)handleTabWithShift:(_Bool)arg1;	// IMP=0x0000000000983d05
- (_Bool)handleVerticalArrow:(_Bool)arg1 shiftDown:(_Bool)arg2 beforePublicKeyCommands:(_Bool)arg3 testOnly:(_Bool)arg4 isVerticalCandidate:(_Bool)arg5 hasCandidatesForTypedInput:(_Bool)arg6 inputDelegateCommandEnabled:(_Bool)arg7 canHandleInputDelegateCommand:(CDUnknownBlockType)arg8 savedHistory:(id)arg9 keyCommandTypeHandled:(unsigned long long *)arg10;	// IMP=0x0000000000983a88
- (_Bool)handleHorizontalArrow:(_Bool)arg1 shiftDown:(_Bool)arg2 beforePublicKeyCommands:(_Bool)arg3 testOnly:(_Bool)arg4 isVerticalCandidate:(_Bool)arg5 hasCandidatesForTypedInput:(_Bool)arg6 shouldNavigateCandidateList:(_Bool)arg7 canHandleInputDelegateCommand:(CDUnknownBlockType)arg8 savedHistory:(id)arg9 keyCommandTypeHandled:(unsigned long long *)arg10;	// IMP=0x0000000000983958
- (_Bool)handleMoveCursorToEndOfLine:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2 testOnly:(_Bool)arg3 savedHistory:(id)arg4 force:(_Bool)arg5 canHandleSelectableInputDelegateCommand:(CDUnknownBlockType)arg6;	// IMP=0x00000000009837e9
- (_Bool)handleMoveCursorToStartOfLine:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2 testOnly:(_Bool)arg3 savedHistory:(id)arg4 force:(_Bool)arg5 canHandleSelectableInputDelegateCommand:(CDUnknownBlockType)arg6;	// IMP=0x0000000000983677
- (void)handleClearWithExecutionContext:(id)arg1;	// IMP=0x00000000009835d3
- (void)handleClear;	// IMP=0x000000000098351d
- (void)handleClearWithInsertBeforeAdvance:(id)arg1;	// IMP=0x00000000009834e4
- (_Bool)canHandleDelete;	// IMP=0x00000000009834cf
- (void)handleDelete;	// IMP=0x00000000009833da
- (void)handleDeleteWordWithExecutionContext:(id)arg1;	// IMP=0x0000000000983235
- (void)completeDelete;	// IMP=0x00000000009831ed
- (void)handleDeleteWithExecutionContext:(id)arg1;	// IMP=0x0000000000983123
- (void)startDelayDeleteTimer;	// IMP=0x0000000000983109
- (void)handleDeleteAsRepeat:(_Bool)arg1 executionContext:(id)arg2;	// IMP=0x0000000000982fdc
- (void)playDeleteKeyFeedback:(_Bool)arg1;	// IMP=0x0000000000982fd6
- (void)setInputPoint:(struct CGPoint)arg1;	// IMP=0x0000000000982fbe
- (void)keyDeactivated;	// IMP=0x0000000000982fb8
- (void)keyActivated;	// IMP=0x0000000000982fa6
- (_Bool)shouldUsePinyinStyleRowNavigation;	// IMP=0x0000000000982f7b
- (_Bool)supportsNumberKeySelection;	// IMP=0x0000000000982f50
- (_Bool)suppliesCompletions;	// IMP=0x0000000000982e6b
- (_Bool)usesAutocorrectionLists;	// IMP=0x0000000000982e59
- (_Bool)accessibilityUsesExtendedKeyboardPredictionsEnabled;	// IMP=0x0000000000982de5
@property(readonly, nonatomic) _Bool continuousPathUnderway;
- (void)setLayoutAllowsContinuousPath:(_Bool)arg1;	// IMP=0x0000000000982daa
- (_Bool)usesContinuousPathProgressiveCandidates;	// IMP=0x0000000000982d8d
- (_Bool)usesContinuousPath;	// IMP=0x0000000000982d70
- (void)setUsesCandidateSelection:(_Bool)arg1;	// IMP=0x0000000000982cdb
- (_Bool)usesCandidateSelection;	// IMP=0x0000000000982c8e
- (void)updateShowCandidateBar;	// IMP=0x0000000000982c5d
- (void)setShouldSkipCandidateSelection:(_Bool)arg1 userInitiated:(_Bool)arg2;	// IMP=0x0000000000982a12
@property(nonatomic) _Bool shouldSkipCandidateSelection;
- (void)forceShiftUpdateIfKeyboardStateChanged;	// IMP=0x00000000009829a1
- (void)forceShiftUpdate;	// IMP=0x0000000000982979
- (void)clearShiftState;	// IMP=0x0000000000982947
- (_Bool)capsLockKeyHasLanguageSwitchLabel;	// IMP=0x000000000098293f
- (_Bool)isCapsLockSwitchEnabled;	// IMP=0x000000000098282d
- (_Bool)isCapsLockASCIIToggle;	// IMP=0x00000000009827d3
- (_Bool)shiftLockedEnabled;	// IMP=0x00000000009827c3
- (_Bool)isShiftLocked;	// IMP=0x00000000009827b3
- (_Bool)isAutoShifted;	// IMP=0x00000000009827a3
- (_Bool)isShifted;	// IMP=0x0000000000982793
- (void)setShiftLockedForced:(_Bool)arg1;	// IMP=0x000000000098276a
- (void)setShiftLocked:(_Bool)arg1;	// IMP=0x0000000000982734
- (void)setShiftNeedsUpdate;	// IMP=0x0000000000982717
- (void)setShiftPreventAutoshift:(_Bool)arg1;	// IMP=0x00000000009826fb
- (void)setShift:(_Bool)arg1 autoshift:(_Bool)arg2;	// IMP=0x0000000000982677
- (void)setShift:(_Bool)arg1;	// IMP=0x0000000000982663
- (void)toggleShift;	// IMP=0x000000000098263f
- (void)setShiftOffIfNeeded;	// IMP=0x0000000000982639
- (_Bool)nextInputWouldStartSentence;	// IMP=0x00000000009825e1
- (_Bool)isSelectionAtSentenceAutoshiftBoundary;	// IMP=0x00000000009824c0
- (_Bool)canPasteImage;	// IMP=0x0000000000982478
- (void)pasteOperation;	// IMP=0x00000000009823e3
- (void)copyOperation;	// IMP=0x000000000098234e
- (void)cutOperation;	// IMP=0x00000000009822b9
- (void)setEditingTraitsMarkedDirty:(_Bool)arg1;	// IMP=0x00000000009822a9
- (_Bool)editingTraitsMarkedDirty;	// IMP=0x0000000000982299
- (void)updateStylingTraitsIfNeeded;	// IMP=0x000000000098225e
- (id)responderStylingTraitsForceEditingMask:(_Bool)arg1;	// IMP=0x0000000000982193
- (void)updateShiftState;	// IMP=0x0000000000981eec
- (void)notifyShiftState;	// IMP=0x0000000000981b47
- (void)updateInputManagerAutocapitalizationType;	// IMP=0x0000000000981ada
- (void)recomputeActiveInputModesWithExtensions:(_Bool)arg1 allowNonLinguisticInputModes:(_Bool)arg2;	// IMP=0x00000000009814e1
- (void)recomputeActiveInputModesWithExtensions:(_Bool)arg1;	// IMP=0x0000000000981496
- (id)desirableInputModesWithExtensions:(_Bool)arg1;	// IMP=0x00000000009804e1
- (_Bool)shouldSwitchInputMode:(id)arg1;	// IMP=0x0000000000980441
- (_Bool)shouldUseCarPlayModes;	// IMP=0x0000000000980422
- (void)releaseInputManagerIfInactive;	// IMP=0x00000000009803ea
- (void)releaseInputManager;	// IMP=0x00000000009802d8
- (void)setInputManagerFromCurrentInputMode;	// IMP=0x0000000000980165
@property(readonly, nonatomic) TUIKeyboardBackendController *backendController;
@property(readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
- (void)removeAllDynamicDictionaries;	// IMP=0x000000000097fde4
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 granularity:(int)arg2 executionContext:(id)arg3;	// IMP=0x000000000097fc6c
- (void)performHitTestForTouchEvents:(id)arg1 executionContextPassingNSNumber:(id)arg2;	// IMP=0x000000000097fb14
- (void)performHitTestForTouchEvent:(id)arg1 executionContextPassingNSNumber:(id)arg2;	// IMP=0x000000000097fa99
- (void)skipHitTestForTouchEvent:(id)arg1 delayed:(_Bool)arg2;	// IMP=0x000000000097fa77
- (void)skipHitTestForTouchEvents:(id)arg1;	// IMP=0x000000000097f9a0
- (void)skipHitTestForTouchEvent:(id)arg1;	// IMP=0x000000000097f92a
- (void)generateReplacementsForString:(id)arg1 candidatesHandler:(CDUnknownBlockType)arg2 executionContext:(id)arg3;	// IMP=0x000000000097f7ef
- (void)handleAcceptedCandidate:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000097f239
- (void)_didReplaceText:(id)arg1 withSupplementalCandidate:(id)arg2;	// IMP=0x000000000097f0ff
- (void)_willReplaceText:(id)arg1 withSupplementalCandidate:(id)arg2;	// IMP=0x000000000097f011
- (_Bool)_insertSupplementalCandidate:(id)arg1 overridingCandidateText:(id)arg2;	// IMP=0x000000000097eec6
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 forPredictiveInput:(id)arg2 executionContext:(id)arg3;	// IMP=0x000000000097e6f9
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000097e6e2
- (void)_insertionPointExitedRangeWithSupplementalCandidate;	// IMP=0x000000000097e5f1
- (_Bool)shouldAcceptContinuousPathConversion:(id)arg1;	// IMP=0x000000000097e5b5
- (void)generateAutocorrectionsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000097e4b6
- (void)generateAutocorrectionWithExecutionContext:(id)arg1;	// IMP=0x000000000097e288
- (void)inputManagerDidGenerateCandidatesForRequest:(id)arg1 resultSet:(id)arg2;	// IMP=0x000000000097df23
- (void)_inputManagerDidGenerateSupplementalCandidates:(id)arg1;	// IMP=0x000000000097dbd7
- (id)_rangeForSupplementalItemText:(id)arg1;	// IMP=0x000000000097da6f
- (long long)preferredCandidateViewTypeForCandidateResultSet:(id)arg1;	// IMP=0x000000000097d966
- (_Bool)shouldPrioritizeTextSuggestionsOverCandidateResultSet:(id)arg1;	// IMP=0x000000000097d8cc
- (void)cancelCandidateRequests;	// IMP=0x000000000097d880
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange)arg1 selectedCandidate:(id)arg2;	// IMP=0x000000000097d400
- (void)generateCandidatesAsynchronously;	// IMP=0x000000000097d358
- (void)performKeyboardOutput:(id)arg1 checkingDelegate:(_Bool)arg2 forwardToRemoteInputSource:(_Bool)arg3;	// IMP=0x000000000097ca61
- (void)performKeyboardOutput:(id)arg1 checkingDelegate:(_Bool)arg2;	// IMP=0x000000000097ca49
- (void)performKeyboardOutputAsRTIClient:(id)arg1;	// IMP=0x000000000097c99a
- (void)performKeyboardOutput:(id)arg1;	// IMP=0x000000000097c912
- (void)_cancelPendingSupplementalCandidateInsertion;	// IMP=0x000000000097c87c
- (void)performKeyboardOutputInfo:(id)arg1;	// IMP=0x000000000097bc65
- (_Bool)dontPushOneTimeCode;	// IMP=0x000000000097bbaa
- (void)replaceAllTextInResponder:(id)arg1 withText:(id)arg2;	// IMP=0x000000000097b959
- (void)updateKeyboardOutput:(id)arg1 withInputForSmartPunctuation:(id)arg2 keyboardConfiguration:(id)arg3;	// IMP=0x000000000097b7d9
- (void)handleKeyboardInput:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000097b14b
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000097b0d8
- (void)syncKeyboardToConfiguration:(id)arg1;	// IMP=0x000000000097ad3e
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)arg1;	// IMP=0x000000000097ab4c
- (void)syncInputManagerToKeyboardState;	// IMP=0x000000000097aacd
@property(readonly, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;	// IMP=0x000000000097aa60
- (void)selectionDidChange:(id)arg1;	// IMP=0x000000000097a538
- (void)completeUpdateForChangedSelection:(_Bool)arg1;	// IMP=0x000000000097a38d
- (_Bool)shouldGenerateCandidatesAfterSelectionChange;	// IMP=0x000000000097a262
- (void)updateForChangedSelectionWithExecutionContext:(id)arg1;	// IMP=0x0000000000979f05
- (void)updateForChangedSelection;	// IMP=0x0000000000979e86
- (void)setSelectionWithPoint:(struct CGPoint)arg1;	// IMP=0x0000000000979e22
- (void)selectionWillChange:(id)arg1;	// IMP=0x0000000000979d23
- (void)prepareForSelectionChange;	// IMP=0x0000000000979a9a
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)arg1;	// IMP=0x0000000000979852
- (void)documentStateFromInputDelegate:(CDUnknownBlockType)arg1;	// IMP=0x00000000009793d3
- (void)syncDocumentStateToInputDelegate;	// IMP=0x0000000000979354
- (_Bool)cursorIsAtEndOfMarkedText;	// IMP=0x00000000009792ba
- (id)inputStringFromPhraseBoundary;	// IMP=0x00000000009791e0
- (id)searchStringForMarkedText;	// IMP=0x0000000000979192
- (id)markedTextOverlay;	// IMP=0x0000000000979134
- (void)smartSelectionForTextInDocument:(id)arg1 inRange:(struct _NSRange)arg2 options:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000978d2d
- (id)inputForMarkedText;	// IMP=0x0000000000978d10
- (_Bool)hasEditableMarkedText;	// IMP=0x0000000000978cc7
- (void)clearInputForMarkedText;	// IMP=0x0000000000978c76
- (void)_setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4 compareAttributes:(_Bool)arg5;	// IMP=0x00000000009787eb
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4;	// IMP=0x00000000009787cf
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4 candidateOffset:(long long)arg5 liveConversionSegments:(id)arg6 highlighSegmentIndex:(unsigned long long)arg7;	// IMP=0x00000000009783a1
- (unsigned long long)_clipCornersOfView:(id)arg1;	// IMP=0x00000000009780f1
- (void)_didChangeKeyplaneWithContext:(id)arg1;	// IMP=0x0000000000977d85
- (void)updateInputAssistantButtonItems;	// IMP=0x0000000000977d1e
- (void)didMoveToSuperview;	// IMP=0x0000000000977c38
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000977bdd
- (void)_updateExternalDeviceInputSettingForWindow:(id)arg1;	// IMP=0x0000000000977b4f
- (_Bool)transitionInProgress;	// IMP=0x0000000000977b3d
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x0000000000977b20
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x00000000009779fb
@property(readonly, nonatomic) double timestampOfLastTouchesEnded;
- (void)updateLayout;	// IMP=0x0000000000977374
- (void)finishLayoutChangeWithArguments:(id)arg1;	// IMP=0x0000000000977100
@property(readonly, nonatomic) _Bool shouldShowCandidateBar;
- (_Bool)shouldShowLongPredictionList;	// IMP=0x0000000000976fe8
- (_Bool)shouldShowCandidateBarIfReceivedCandidatesInCurrentInputMode:(_Bool)arg1 ignoreHidePredictionTrait:(_Bool)arg2;	// IMP=0x0000000000976ece
- (_Bool)currentKeyboardTraitsAllowCandidateBarWhileIgnoringHidePredictionTrait:(_Bool)arg1;	// IMP=0x0000000000976e22
- (void)layoutSubviews;	// IMP=0x0000000000976d67
- (struct CGRect)subtractKeyboardFrameFromRect:(struct CGRect)arg1 inView:(id)arg2;	// IMP=0x0000000000976af6
- (void)geometryChangeDone:(_Bool)arg1;	// IMP=0x00000000009769a8
- (void)prepareForGeometryChange;	// IMP=0x000000000097691f
- (void)releaseSuppressUpdateCandidateView;	// IMP=0x000000000097690e
- (void)updateLayoutIfNeeded;	// IMP=0x00000000009768d3
- (void)handleEmojiPopoverKeyCommand;	// IMP=0x0000000000976850
- (_Bool)handleReturnKey:(_Bool)arg1;	// IMP=0x0000000000976740
- (_Bool)handleCandidateListNavigation:(unsigned int)arg1 hasCandidatesForTypedInput:(_Bool)arg2 shiftDown:(_Bool)arg3 keyCommandTypeHandled:(unsigned long long *)arg4 allowRepeat:(_Bool *)arg5;	// IMP=0x00000000009763db
- (_Bool)handleInputManagerBasedKeybind:(id)arg1 testOnly:(_Bool)arg2;	// IMP=0x00000000009761bc
- (unsigned long long)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000973b85
- (_Bool)shouldShowKeyboardMenu;	// IMP=0x0000000000973b33
- (_Bool)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2 beforePublicKeyCommands:(_Bool)arg3;	// IMP=0x0000000000973a46
- (_Bool)isCurrentEditResponderInEditingMode;	// IMP=0x0000000000973880
- (_Bool)_cancelOperation:(_Bool)arg1 testOnly:(_Bool)arg2;	// IMP=0x0000000000973878
- (_Bool)_canHandleResponderCommandConservatively:(SEL)arg1;	// IMP=0x00000000009737bf
- (_Bool)_canHandleResponderCommand:(SEL)arg1;	// IMP=0x0000000000973781
- (_Bool)shouldAllowRepeatEvent:(id)arg1;	// IMP=0x00000000009734df
- (void)handleObserverCallback;	// IMP=0x0000000000973456
- (void)updateObserverState;	// IMP=0x00000000009733c4
- (void)setChangeNotificationDisabled:(_Bool)arg1;	// IMP=0x00000000009733b4
- (_Bool)changeNotificationDisabled;	// IMP=0x00000000009733a4
- (void)setChanged;	// IMP=0x0000000000973311
- (void)textFrameChanged:(id)arg1;	// IMP=0x00000000009731a4
- (void)callChanged;	// IMP=0x000000000097311d
- (_Bool)callShouldDeleteWithWordCountForRapidDelete:(int)arg1 characterCountForRapidDelete:(int)arg2;	// IMP=0x0000000000972e2e
- (_Bool)shouldRapidDeleteWithDelegate;	// IMP=0x0000000000972e09
- (_Bool)shouldRapidDelete;	// IMP=0x0000000000972db3
- (_Bool)usesAutoDeleteWord;	// IMP=0x0000000000972d5f
- (_Bool)insertTextIfShould:(id)arg1;	// IMP=0x0000000000972d0c
- (_Bool)callShouldInsertText:(id)arg1;	// IMP=0x0000000000972c7d
- (void)didClearText;	// IMP=0x0000000000972c21
- (void)setDocumentState:(id)arg1;	// IMP=0x0000000000972b29
- (void)performTextOperationActionSelector:(SEL)arg1;	// IMP=0x00000000009723dc
- (id)physicalKeyboardEventWithInput:(id)arg1 inputFlags:(int)arg2;	// IMP=0x000000000097238e
- (void)_completePerformInputViewControllerOutput:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000971b70
- (void)_processInputViewControllerKeyboardOutput:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000971649
- (void)_updateInputViewControllerOutput:(id)arg1 forKeyboardOutput:(id)arg2;	// IMP=0x00000000009713f8
- (_Bool)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)arg1;	// IMP=0x00000000009712c1
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)arg1 textInputSource:(long long)arg2;	// IMP=0x00000000009711f5
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)arg1;	// IMP=0x00000000009711e1
- (void)clearCapsLockDelayOverrideTimer;	// IMP=0x000000000097117c
- (void)removeCapsLockDelayOverride;	// IMP=0x000000000097115d
- (void)adjustCapsLockDelayOverride;	// IMP=0x00000000009710c7
- (void)updateAssistantView;	// IMP=0x0000000000971055
- (_Bool)isTrackpadMode;	// IMP=0x0000000000970ffa
- (void)prepareForFloatingTransition:(_Bool)arg1;	// IMP=0x0000000000970f23
- (id)keyplaneView;	// IMP=0x0000000000970ec8
- (void)handleWebViewCredentialsSaveForWebsiteURL:(id)arg1 user:(id)arg2 password:(id)arg3 passwordIsAutoGenerated:(_Bool)arg4;	// IMP=0x0000000000970e57
- (void)setSuggestions:(id)arg1;	// IMP=0x00000000009704fd
- (_Bool)predictionFromPreference;	// IMP=0x00000000009704a5
@property(readonly, nonatomic) _Bool isAutofillPrediction;
@property(readonly, nonatomic) _Bool isDefaultPrediction;
- (void)enable;	// IMP=0x0000000000970461
- (id)textInputTraits;	// IMP=0x0000000000970450
- (void)setOverrideTextInputTraits:(id)arg1;	// IMP=0x000000000097038c
- (void)setDefaultTextInputTraits:(id)arg1;	// IMP=0x00000000009702a3
- (void)textDidChange:(id)arg1;	// IMP=0x0000000000970248
- (void)textSuggestionDidChange:(id)arg1;	// IMP=0x000000000097019e
- (void)finishTextChanged;	// IMP=0x0000000000970137
- (void)textChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000096fed7
- (void)textChanged:(id)arg1;	// IMP=0x000000000096fe14
- (void)layoutHasChanged;	// IMP=0x000000000096fe02
- (void)textWillChange:(id)arg1;	// IMP=0x000000000096fdd8
- (_Bool)hasDelegate;	// IMP=0x000000000096fd06
- (_Bool)autocorrectSpellingEnabled;	// IMP=0x000000000096fcfa
- (void)setAutocorrectSpellingEnabled:(_Bool)arg1;	// IMP=0x000000000096fc8d
- (_Bool)delegateSupportsCorrectionUI;	// IMP=0x000000000096fc5e
- (void)flushDelayedTasks;	// IMP=0x000000000096fc2a
- (void)queueDelayedTask:(CDUnknownBlockType)arg1;	// IMP=0x000000000096fb7d
- (_Bool)delegateSupportsImagePaste;	// IMP=0x000000000096fb75
- (void)updateDelegatePasteSupport;	// IMP=0x000000000096fb64
- (_Bool)delegateIsSMSTextView;	// IMP=0x000000000096fa93
- (void)didSetDelegate;	// IMP=0x000000000096f8d1
- (void)setDelegate:(id)arg1 force:(_Bool)arg2;	// IMP=0x000000000096df14
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate; // @dynamic delegate;
- (id)inputDelegate;	// IMP=0x000000000096de9b
- (id)delegateAsResponder;	// IMP=0x000000000096de70
- (void)postInputResponderCapabilitiesChangedNotification;	// IMP=0x000000000096ddd7
- (void)_postInputResponderCapabilitiesChangedNotificationWithOutput:(id)arg1 selectionChanged:(_Bool)arg2;	// IMP=0x000000000096dd16
- (void)_postInputResponderChangedNotification;	// IMP=0x000000000096dc2e
- (id)documentIdentifierForInputDelegate:(id)arg1;	// IMP=0x000000000096da70
- (id)_sessionIdentifier;	// IMP=0x000000000096da53
- (void)setTextSelectionControllerFromDelegate;	// IMP=0x000000000096d91e
- (id)textSelectionControllerForInputDelegate:(id)arg1;	// IMP=0x000000000096d8de
- (void)removeSupplementalLexicon:(id)arg1;	// IMP=0x000000000096d869
- (void)addSupplementalLexicon:(id)arg1;	// IMP=0x000000000096d7f4
- (void)setLayoutRenderConfig:(id)arg1;	// IMP=0x000000000096d7c3
- (void)takeTextInputTraitsFromDelegate;	// IMP=0x000000000096d578
- (void)setCorrectionLearningAllowed:(_Bool)arg1;	// IMP=0x000000000096d489
- (void)finishLayoutToCurrentInterfaceOrientation;	// IMP=0x000000000096d429
@property(readonly, nonatomic) _Bool isRotating;
- (void)updateLayoutToCurrentInterfaceOrientation;	// IMP=0x000000000096d370
- (void)prepareLayoutForInterfaceOrientation:(long long)arg1;	// IMP=0x000000000096d171
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000000000096d0b0
- (void)updateLayoutIfNecessary;	// IMP=0x000000000096cebf
- (void)_updateSoundPreheatingForWindow:(id)arg1;	// IMP=0x000000000096cdaf
- (void)setInputModeToNextASCIICapableInPreferredList;	// IMP=0x000000000096cd04
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)arg1 withPreviousInputMode:(id)arg2;	// IMP=0x000000000096ccb8
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)arg1;	// IMP=0x000000000096cb3c
- (void)hideInternationalKeyIntroductionIfNeeded;	// IMP=0x000000000096caa2
- (void)showInternationalKeyIntroductionIfNeededWithPreviousInputMode:(id)arg1;	// IMP=0x000000000096c833
- (_Bool)shouldShowInternationalKeyIntroduction;	// IMP=0x000000000096c82b
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1;	// IMP=0x000000000096c817
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1 preserveIfPossible:(_Bool)arg2;	// IMP=0x000000000096c551
- (void)setKeyboardInputModeFromPreferences:(id)arg1;	// IMP=0x000000000096c4df
- (void)prepareKeyboardInputModeFromPreferences:(id)arg1;	// IMP=0x000000000096c42c
- (void)setInputModeFromPreferences;	// IMP=0x000000000096c258
- (void)finishSetInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;	// IMP=0x000000000096c0ca
- (void)finishSetExtensionInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;	// IMP=0x000000000096c057
- (void)finishSetKeyboardInputMode:(id)arg1 previousInputMode:(id)arg2 didChangeDirection:(_Bool)arg3;	// IMP=0x000000000096bd80
- (void)didDismissMemojiCard;	// IMP=0x000000000096bd5c
- (void)didPresentMemojiCard;	// IMP=0x000000000096bcbe
- (void)dismissKeyboardPopoverBeforeCleanup:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000096bbb9
- (void)dismissKeyboardPopoverIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000096bba2
- (void)_presentKeyboardPopoverWithInputMode:(id)arg1 window:(id)arg2 textInputView:(id)arg3 caretRect:(struct CGRect)arg4 isVerticalText:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000096b296
- (void)presentKeyboardPopoverWithInputMode:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000096a8ea
- (void)cleanupKeyboardPopover;	// IMP=0x000000000096a79d
- (void)presentEmojiPopoverViaTrigger:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000096a5f3
- (_Bool)canPresentOrDismissEmojiPopover;	// IMP=0x000000000096a599
- (_Bool)canPresentEmojiPopover;	// IMP=0x000000000096a591
- (_Bool)isKeyboardPopoverVisibleOrDismissing;	// IMP=0x000000000096a56d
- (_Bool)isKeyboardPopoverPresented;	// IMP=0x000000000096a52a
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x000000000096a4e7
- (_Bool)presentationControllerShouldDismiss:(id)arg1;	// IMP=0x000000000096a424
- (void)reinitializeAfterInputModeSwitch:(_Bool)arg1;	// IMP=0x000000000096a346
- (void)updateForHandBiasChange;	// IMP=0x000000000096a2ff
- (void)updateSmartPunctuationOptionsForLocaleIdentifier:(id)arg1;	// IMP=0x000000000096a1e1
- (void)cleanUpBeforeInputModeSwitch;	// IMP=0x000000000096a0f4
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 force:(_Bool)arg4 executionContext:(id)arg5;	// IMP=0x0000000000969a87
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;	// IMP=0x0000000000969a0c
- (void)reloadCurrentInputMode;	// IMP=0x00000000009699bf
- (void)postInputViewControllerShouldUpdateNotification:(id)arg1;	// IMP=0x00000000009698b7
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2;	// IMP=0x00000000009698a2
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 force:(_Bool)arg3;	// IMP=0x00000000009697e2
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;	// IMP=0x0000000000969773
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2;	// IMP=0x00000000009696a5
- (void)setInputMode:(id)arg1;	// IMP=0x0000000000969691
- (_Bool)shiftLockPreference;	// IMP=0x0000000000969649
- (void)setHardwareKeyboardsSeenPreference:(id)arg1;	// IMP=0x00000000009695df
- (id)hardwareKeyboardsSeenPreference;	// IMP=0x0000000000969597
- (void)setShouldUpdateCacheOnInputModesChange:(_Bool)arg1;	// IMP=0x0000000000969587
- (void)updateInputModeLastChosenPreference;	// IMP=0x000000000096952c
- (id)inputModeLastUsedPreference;	// IMP=0x00000000009694ee
- (id)inputModePreference;	// IMP=0x00000000009694bc
- (void)saveInputModesPreference:(id)arg1;	// IMP=0x0000000000969479
- (void)setAutomaticMinimizationEnabled:(_Bool)arg1;	// IMP=0x00000000009693ef
@property(readonly, nonatomic) _Bool automaticMinimizationEnabled; // @synthesize automaticMinimizationEnabled=m_automaticMinimizationEnabled;
- (_Bool)keyboardsExpandedPreference;	// IMP=0x0000000000969397
- (id)UILanguagePreference;	// IMP=0x0000000000969341
- (_Bool)doubleSpacePeriodPreference;	// IMP=0x00000000009692d4
@property(readonly, nonatomic) TISmartPunctuationController *smartPunctuationController; // @synthesize smartPunctuationController=m_smartPunctuationController;
- (_Bool)checkSpellingPreferenceForTraits;	// IMP=0x00000000009691f0
- (_Bool)checkSpellingPreference;	// IMP=0x00000000009691a8
- (_Bool)delayedCandidateList;	// IMP=0x0000000000969154
- (_Bool)liveConversionEnabled;	// IMP=0x0000000000969137
- (_Bool)smartInsertDeleteIsEnabled;	// IMP=0x000000000096909f
- (_Bool)autocapitalizationPreference;	// IMP=0x0000000000968fcb
- (_Bool)candidateSelectionPredictionForTraits;	// IMP=0x0000000000968f5e
- (_Bool)disableInputBars;	// IMP=0x0000000000968f04
- (_Bool)isPredictionViewControllerVisible;	// IMP=0x0000000000968e6d
@property(readonly, nonatomic) _Bool canShowPredictionBar;
- (_Bool)_shouldLoadPredictionsBasedOnCurrentTraits;	// IMP=0x0000000000968da9
- (unsigned long long)_updateAutocorrectionPreferenceForTraitsWithCurrentPreference:(_Bool)arg1;	// IMP=0x0000000000968cb6
- (unsigned long long)autocorrectionPreferenceForTraits;	// IMP=0x0000000000968c7b
- (void)updateTextInputKeyboardSource;	// IMP=0x0000000000968bb7
- (void)_updateTextInputPencilSource;	// IMP=0x0000000000968b7b
- (void)performOperations:(CDUnknownBlockType)arg1 withTextInputSource:(long long)arg2;	// IMP=0x0000000000968b4a
- (void)performDelete;	// IMP=0x0000000000968b44
- (void)performReturn;	// IMP=0x0000000000968b3e
- (long long)_textInputSourceForDelegate:(id)arg1;	// IMP=0x0000000000968b07
- (_Bool)keyboardIsKeyPad;	// IMP=0x0000000000968ace
- (_Bool)autocorrectionPreference;	// IMP=0x0000000000968a61
- (void)cancelSplitTransition;	// IMP=0x0000000000968a12
- (_Bool)hideAccessoryViewsDuringSplit;	// IMP=0x0000000000968993
- (void)setSplitProgress:(double)arg1;	// IMP=0x000000000096802e
- (void)setInSplitKeyboardMode:(_Bool)arg1;	// IMP=0x0000000000967fbf
- (_Bool)shouldAllowTwoFingerSelectionGestureOnView:(id)arg1;	// IMP=0x0000000000967f4d
- (void)beginFloatingTransitionFromPanGestureRecognizer:(id)arg1;	// IMP=0x0000000000967ec9
@property(readonly, nonatomic) _Bool splitTransitionInProgress;
@property(readonly) unsigned long long minimumTouchesForTranslation;
@property _Bool rivenSplitLock;
- (void)refreshRivenPreferences;	// IMP=0x000000000096768d
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x00000000009675db
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x000000000096756b
@property(readonly) _Bool centerFilled;
- (void)defaultsDidChange;	// IMP=0x0000000000967474
- (void)updateDefaultsWithResults:(CDUnknownBlockType)arg1;	// IMP=0x000000000096698a
- (void)selectionScrolling:(id)arg1;	// IMP=0x0000000000966650
- (void)applicationResumedEventsOnly:(id)arg1;	// IMP=0x00000000009665b9
- (void)applicationResumed:(id)arg1;	// IMP=0x00000000009665a2
- (void)applicationSuspendedEventsOnly:(id)arg1;	// IMP=0x000000000096650d
- (void)removeFromSuperview;	// IMP=0x0000000000966483
- (void)deactivateLayout;	// IMP=0x000000000096644d
- (void)clearLayouts;	// IMP=0x0000000000966365
@property(retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;
- (void)provideAutoFillTypingUpdatesIfNecessary;	// IMP=0x0000000000966325
- (_Bool)suppressOptOutASPCandidateUpdateForDelegate:(id)arg1;	// IMP=0x000000000096626b
- (void)trackResponderForAutofillIfNeeded:(id)arg1;	// IMP=0x0000000000966227
- (void)handleAutofillCredentialSaveIfNeeded:(id)arg1;	// IMP=0x000000000096610e
- (void)removeASPVisualEffectsIfNecessary:(id)arg1;	// IMP=0x00000000009660a2
- (void)clearAutofillGroup;	// IMP=0x0000000000966066
- (_Bool)isMemberOfPossibleAutofillGroup:(id)arg1;	// IMP=0x0000000000965e85
- (_Bool)isMemberOfAutofillGroup:(id)arg1;	// IMP=0x0000000000965dd8
- (_Bool)delegateAlreadyInAutofillGroup;	// IMP=0x0000000000965d58
- (long long)needAutofillCandidate:(id)arg1;	// IMP=0x0000000000965960
- (_Bool)preferFallbackAutofillGroup;	// IMP=0x0000000000965935
- (void)setPendingAutofillIndex:(long long)arg1;	// IMP=0x0000000000965903
- (void)refreshSecureCandidatesIfNecessary;	// IMP=0x00000000009658a2
- (void)refreshAutofillModeIfNecessary;	// IMP=0x000000000096578c
- (void)generateAutofillCandidateByAddingTask:(_Bool)arg1;	// IMP=0x000000000096565c
- (void)generateAutofillCandidate;	// IMP=0x0000000000965648
- (id)_contentsOfUsernameField;	// IMP=0x000000000096558f
- (long long)needAutofill;	// IMP=0x00000000009654fd
- (_Bool)needOneTimeCodeAutofill;	// IMP=0x00000000009654a7
- (_Bool)textInputTraitsNeedContactAutoFill;	// IMP=0x0000000000965425
- (_Bool)textInputTraitsNeedOneTimeCode;	// IMP=0x00000000009653f5
- (_Bool)textInputTraitsNeedSignup;	// IMP=0x00000000009653c5
@property(readonly, nonatomic) _Bool needAutofillLogin;
- (_Bool)textInputTraitsNeedAutofill;	// IMP=0x0000000000965366
- (_Bool)textInputTraitsNeedAutofillExcludeOneTimeCodeAndContact;	// IMP=0x000000000096531b
- (void)refreshKeyboardStateUpdatingSecureCandidateRenderTraits:(_Bool)arg1;	// IMP=0x0000000000964ec0
- (void)refreshKeyboardState;	// IMP=0x0000000000964ea9
- (void)updateInputManagerMode;	// IMP=0x0000000000964c44
- (_Bool)shouldSwitchFromInputManagerMode:(id)arg1 toInputMode:(id)arg2;	// IMP=0x0000000000964be6
- (id)updateSecureCandidateRenderTraits;	// IMP=0x000000000096491e
- (unsigned long long)maxNumberOfProactiveCells;	// IMP=0x00000000009648d1
- (id)layoutState;	// IMP=0x000000000096469a
- (void)dealloc;	// IMP=0x0000000000964210
- (void)detach;	// IMP=0x0000000000964070
- (void)keyboardDidHide:(id)arg1;	// IMP=0x0000000000963fec
- (void)delayedInit;	// IMP=0x0000000000963eb0
- (id)initWithFrame:(struct CGRect)arg1 forCustomInputView:(_Bool)arg2;	// IMP=0x0000000000963992
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000096397e
- (void)setCapsLockIfNeeded;	// IMP=0x0000000000963848
- (void)setCapsLockSign;	// IMP=0x0000000000963842
@property(nonatomic) _Bool hardwareKeyboardIsSeen;
- (void)didMoveToWindow;	// IMP=0x00000000009636eb
- (struct UIEdgeInsets)deviceSpecificPaddingForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;	// IMP=0x0000000000962e04
- (struct UIEdgeInsets)deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;	// IMP=0x0000000000962db2
- (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;	// IMP=0x0000000000962d8b
- (void)_setCandidateController:(id)arg1;	// IMP=0x000000000099d0c2
- (_Bool)_containsUsernamePasswordPairsInAutofillGroup:(id)arg1;	// IMP=0x000000000099d091
- (id)_fallbackAutofillGroup;	// IMP=0x000000000099d066
- (id)_autofillGroup;	// IMP=0x000000000099d03b
- (void)_setAutofillGroup:(id)arg1;	// IMP=0x000000000099cfea
- (void)_clearAutofillGroup;	// IMP=0x000000000099cfd8
- (long long)_needAutofillCandidate:(id)arg1;	// IMP=0x000000000099cfc6
- (void)logHandwritingData;	// IMP=0x000000000099cf6d
- (_Bool)isAutoDeleteActive;	// IMP=0x000000000099cf0d
- (int)textInputChangingCount;	// IMP=0x000000000099cefd
- (_Bool)_isShowingCandidateUIWithAvailableCandidates;	// IMP=0x000000000099ceb4
- (void)updateFromTextInputTraits;	// IMP=0x000000000099ce81
- (void)_setShiftLockedEnabled:(_Bool)arg1;	// IMP=0x000000000099ce71
- (void)_setInputManager:(id)arg1;	// IMP=0x000000000099cd76
- (void)createTypoTrackerReport;	// IMP=0x000000000099d0de
- (void)dismissEditingIntroductionView;	// IMP=0x000000000099f3f6
- (void)presentEditingIntroductionView;	// IMP=0x000000000099f341
- (_Bool)shouldShowEditingIntroductionView;	// IMP=0x000000000099f328
- (void)dismissContinuousPathIntroductionView;	// IMP=0x000000000099f2ea
- (void)presentContinuousPathIntroductionView;	// IMP=0x000000000099f14d
- (_Bool)shouldShowContinuousPathIntroductionView;	// IMP=0x000000000099f0c3
- (void)performKeyboardOutputOnInputSourceSession:(CDUnknownBlockType)arg1;	// IMP=0x000000000099f04e
- (_Bool)isRTIClient;	// IMP=0x000000000099f023
- (_Bool)callShouldInsertText:(id)arg1 onDelegate:(id)arg2;	// IMP=0x000000000099ef34
- (void)clearTextAlternativesRange;	// IMP=0x000000000099ef1c
- (void)showFirstTextAlternativeWithRangeAdjustment:(long long)arg1;	// IMP=0x000000000099ec76
- (void)showTextAlternativesInRange:(struct _NSRange)arg1;	// IMP=0x000000000099ec52
- (id)attributedText;	// IMP=0x000000000099ebab
- (double)lastTouchDownTimestamp;	// IMP=0x000000000099eb4f
- (void)lookUpResponderChainForCustomInputView;	// IMP=0x000000000099eae0
- (void)moveCursorRightShifted:(_Bool)arg1;	// IMP=0x000000000099e9d9
- (void)moveCursorLeftShifted:(_Bool)arg1;	// IMP=0x000000000099e885
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x000000000099e7ec
- (_Bool)hardwareKeyboardAttached;	// IMP=0x000000000099e77e
- (void)performBlockWithTextInputChangesIgnoredForNonMacOS:(CDUnknownBlockType)arg1;	// IMP=0x000000000099e74c
- (void)_deactiveActiveKeys;	// IMP=0x000000000099e72f
- (void)_showAutofillExtras;	// IMP=0x000000000099e729
- (_Bool)shouldLoadAutofillSignUpInputViewController;	// IMP=0x000000000099e5df
- (id)_passwordRules;	// IMP=0x000000000099e3f2
- (id)_remoteAssociatedDomains;	// IMP=0x000000000099e3bb
- (id)_remoteUnlocalizedAppName;	// IMP=0x000000000099e384
- (id)_remoteLocalizedAppName;	// IMP=0x000000000099e34d
- (id)_remoteAppId;	// IMP=0x000000000099e316
- (id)_autofillContext;	// IMP=0x000000000099e2f9
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x000000000099e283
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x000000000099e258
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x000000000099e22d
- (void)acceptAutocorrectionAndEndComposition;	// IMP=0x000000000099e1d6
- (double)biasedKeyboardWidthRatio;	// IMP=0x000000000099e1b9
- (long long)currentHandBias;	// IMP=0x000000000099e19c
- (_Bool)allowsReachableKeyboard;	// IMP=0x000000000099e0e4
- (id)_layout;	// IMP=0x000000000099e0d3
- (_Bool)isUsingDictationLayout;	// IMP=0x000000000099e069
- (void)setTextInputChangesIgnored:(_Bool)arg1;	// IMP=0x000000000099e059
- (void)finishSplitTransitionWithProgress:(double)arg1;	// IMP=0x000000000099dff4
- (void)_dynamicUserInterfaceTraitDidChange;	// IMP=0x000000000099debf
- (void)traitCollectionDidChange;	// IMP=0x000000000099de84
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x000000000099de1d
- (void)showSelectionCommands;	// IMP=0x000000000099ddf2
@property(readonly, nonatomic) UITextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) UITextSelectionView *selectionView;
- (void)setInitialDirection;	// IMP=0x000000000099dc65
- (void)_suppressSoftwareKeyboardStateChangedIgnoringPolicyDelegate:(_Bool)arg1;	// IMP=0x000000000099db1c
- (void)_updateKeyboardSuppression:(id)arg1;	// IMP=0x000000000099db08
- (_Bool)_shouldSuppressSoftwareKeyboardForResponder:(id)arg1 ignoringPolicyDelegate:(_Bool)arg2;	// IMP=0x000000000099daa5
- (_Bool)_shouldSuppressSoftwareKeyboardIgnoringPolicyDelegate:(_Bool)arg1;	// IMP=0x000000000099da65
- (_Bool)_shouldSuppressSoftwareKeyboard;	// IMP=0x000000000099da51
- (_Bool)_shouldMinimizeForHardwareKeyboard;	// IMP=0x000000000099d9b8
- (void)updateKeyboardConfigurations;	// IMP=0x000000000099d997
- (void)clearLanguageIndicator;	// IMP=0x000000000099d959
- (_Bool)keyboardDrawsOpaque;	// IMP=0x000000000099d8ff
- (void)clearExcessKeyboardMemory;	// IMP=0x000000000099d6e7
- (void)_tagTouchForTypingMenu:(unsigned int)arg1;	// IMP=0x000000000099d4ea
- (void)_requestInputManagerSync;	// IMP=0x000000000099d46b
- (void)_performInputViewControllerOutput:(id)arg1;	// IMP=0x000000000099d315
- (void)restoreFocusFromEntryPoint:(struct CGPoint)arg1;	// IMP=0x000000000099f48f
- (id)currentKey;	// IMP=0x000000000099f434
- (id)implProxy;	// IMP=0x000000000099f4ff
- (_Bool)isOutOfProcess;	// IMP=0x000000000099f532
@property(nonatomic) unsigned long long serviceRole;
- (_Bool)_needsCandidates;	// IMP=0x000000000099f746
- (void)_setNeedsCandidates:(_Bool)arg1;	// IMP=0x000000000099f736
- (long long)_positionInCandidateList:(id)arg1;	// IMP=0x000000000099f719
- (_Bool)_hasCandidates;	// IMP=0x000000000099f6fc
- (id)_getAutocorrectionList;	// IMP=0x000000000099f6b2
- (id)_getAutocorrection;	// IMP=0x000000000099f67b
- (void)_setAutocorrects:(_Bool)arg1;	// IMP=0x000000000099f65e
- (id)_getLocalizedInputMode;	// IMP=0x000000000099f603
- (id)_getCurrentKeyboardName;	// IMP=0x000000000099f5a8
- (id)_getCurrentKeyplaneName;	// IMP=0x000000000099f54d
@property(nonatomic) _Bool prewarmsPredictiveCandidates;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

