//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSString, UIKeyboardInputMode, UITextInputMode;
@protocol UIKeyboardInputModeControllerDelegate;

@interface UIKeyboardInputModeController : NSObject
{
    UIKeyboardInputMode *_currentInputMode;	// 8 = 0x8
    NSArray *_inputModesWithoutHardwareSupport;	// 16 = 0x10
    NSArray *_allExtensions;	// 24 = 0x18
    NSArray *_allowedExtensions;	// 32 = 0x20
    _Bool _skipExtensionInputModes;	// 40 = 0x28
    _Bool _excludeExtensionInputModes;	// 41 = 0x29
    _Bool _cacheNeedsRefresh;	// 42 = 0x2a
    int _notifyPasscodeChangedToken;	// 44 = 0x2c
    struct __CFUserNotification *_userNotification;	// 48 = 0x30
    struct __CFRunLoopSource *_userNotificationRunLoopSource;	// 56 = 0x38
    NSString *_newModeForUserNotification;	// 64 = 0x40
    NSObject *_keyboardTagForUserNotification;	// 72 = 0x48
    _Bool _suppressCurrentPublicInputMode;	// 80 = 0x50
    _Bool disableFloatingKeyboardFilter;	// 81 = 0x51
    _Bool _shouldRunContinuousDiscovery;	// 82 = 0x52
    _Bool _disablesUpdateLastUsedInputModeTimer;	// 83 = 0x53
    _Bool _lastInputModeSwitchTriggeredByASCIIToggle;	// 84 = 0x54
    UITextInputMode *_documentInputMode;	// 88 = 0x58
    NSArray *keyboardInputModes;	// 96 = 0x60
    NSArray *keyboardInputModeIdentifiers;	// 104 = 0x68
    NSArray *enabledInputModes;	// 112 = 0x70
    NSArray *normalizedInputModes;	// 120 = 0x78
    NSArray *defaultKeyboardInputModes;	// 128 = 0x80
    NSArray *defaultRawInputModes;	// 136 = 0x88
    NSArray *defaultInputModes;	// 144 = 0x90
    NSArray *defaultNormalizedInputModes;	// 152 = 0x98
    NSArray *suggestedInputModesForSiriLanguage;	// 160 = 0xa0
    UIKeyboardInputMode *_lastUsedInputMode;	// 168 = 0xa8
    NSString *_inputModeContextIdentifier;	// 176 = 0xb0
    NSArray *_additionalTextInputLocales;	// 184 = 0xb8
    id <UIKeyboardInputModeControllerDelegate> _delegate;	// 192 = 0xc0
    NSArray *_userSelectableKeyboardInputModes;	// 200 = 0xc8
    NSArray *_userSelectableKeyboardInputModeIdentifiers;	// 208 = 0xd0
    UIKeyboardInputMode *_nextInputModeToUse;	// 216 = 0xd8
    UIKeyboardInputMode *_currentUsedInputMode;	// 224 = 0xe0
    id _extensionMatchingContext;	// 232 = 0xe8
}

+ (id)ASCIICapableInputModeIdentifierForPreferredLanguages;	// IMP=0x00000000007df2e8
+ (id)inputModeIdentifierForPreferredLanguages:(id)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00000000007df0a0
+ (_Bool)dictationInputModeIsFunctional;	// IMP=0x00000000007d9e02
+ (id)disallowedDictationLanguagesForDeviceLanguage;	// IMP=0x00000000007d943c
+ (id)sharedInputModeController;	// IMP=0x00000000007d6c6e
@property(retain, nonatomic) id extensionMatchingContext; // @synthesize extensionMatchingContext=_extensionMatchingContext;
@property(retain, nonatomic) UIKeyboardInputMode *currentUsedInputMode; // @synthesize currentUsedInputMode=_currentUsedInputMode;
@property(retain, nonatomic) UIKeyboardInputMode *nextInputModeToUse; // @synthesize nextInputModeToUse=_nextInputModeToUse;
@property(retain) NSArray *userSelectableKeyboardInputModeIdentifiers; // @synthesize userSelectableKeyboardInputModeIdentifiers=_userSelectableKeyboardInputModeIdentifiers;
@property(retain) NSArray *userSelectableKeyboardInputModes; // @synthesize userSelectableKeyboardInputModes=_userSelectableKeyboardInputModes;
@property(nonatomic) _Bool lastInputModeSwitchTriggeredByASCIIToggle; // @synthesize lastInputModeSwitchTriggeredByASCIIToggle=_lastInputModeSwitchTriggeredByASCIIToggle;
@property(nonatomic) _Bool disablesUpdateLastUsedInputModeTimer; // @synthesize disablesUpdateLastUsedInputModeTimer=_disablesUpdateLastUsedInputModeTimer;
@property(nonatomic) id <UIKeyboardInputModeControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldRunContinuousDiscovery; // @synthesize shouldRunContinuousDiscovery=_shouldRunContinuousDiscovery;
@property(copy, nonatomic) NSArray *additionalTextInputLocales; // @synthesize additionalTextInputLocales=_additionalTextInputLocales;
@property(copy, nonatomic) NSString *inputModeContextIdentifier; // @synthesize inputModeContextIdentifier=_inputModeContextIdentifier;
@property(retain, nonatomic) UIKeyboardInputMode *lastUsedInputMode; // @synthesize lastUsedInputMode=_lastUsedInputMode;
@property(nonatomic) _Bool disableFloatingKeyboardFilter; // @synthesize disableFloatingKeyboardFilter;
@property(retain) NSArray *suggestedInputModesForSiriLanguage; // @synthesize suggestedInputModesForSiriLanguage;
@property(readonly, nonatomic) NSArray *allowedExtensions; // @synthesize allowedExtensions=_allowedExtensions;
@property(retain) NSArray *defaultNormalizedInputModes; // @synthesize defaultNormalizedInputModes;
@property(retain) NSArray *defaultInputModes; // @synthesize defaultInputModes;
@property(copy, nonatomic) NSArray *defaultRawInputModes; // @synthesize defaultRawInputModes;
@property(retain) NSArray *defaultKeyboardInputModes; // @synthesize defaultKeyboardInputModes;
@property(retain) NSArray *normalizedInputModes; // @synthesize normalizedInputModes;
@property(retain) NSArray *enabledInputModes; // @synthesize enabledInputModes;
@property(retain) NSArray *keyboardInputModeIdentifiers; // @synthesize keyboardInputModeIdentifiers;
@property(retain) NSArray *keyboardInputModes; // @synthesize keyboardInputModes;
@property(retain, nonatomic) UITextInputMode *documentInputMode; // @synthesize documentInputMode=_documentInputMode;
- (id)supportedFullModesForHardwareKeyboard:(id)arg1 countryCode:(id)arg2 activeModes:(id)arg3 matchedMode:(id *)arg4;	// IMP=0x00000000007e13bd
- (void)handleSpecificHardwareKeyboard:(id)arg1;	// IMP=0x00000000007e0f3b
- (void)getHardwareKeyboardLanguage:(id *)arg1 countryCode:(id *)arg2;	// IMP=0x00000000007e0e7c
- (void)releaseAddKeyboardNotification;	// IMP=0x00000000007e0e23
- (void)didAcceptAddKeyboardInputMode;	// IMP=0x00000000007e0cd0
- (void)showAddKeyboardAlertForInputModeIdentifier:(id)arg1;	// IMP=0x00000000007e0a5c
- (id)fullInputModeFromIdentifier:(id)arg1 hardwareKeyboardLanguage:(id)arg2;	// IMP=0x00000000007e09b8
- (id)inputModeToAddForKeyboardLanguage:(id)arg1 countryCode:(id)arg2 activeModes:(id)arg3;	// IMP=0x00000000007e061f
- (id)hardwareLayoutToUseForInputMode:(id)arg1 hardwareKeyboardLanguage:(id)arg2 countryCode:(id)arg3;	// IMP=0x00000000007e0471
- (id)hardwareLayoutToUseForInputMode:(id)arg1;	// IMP=0x00000000007e03d4
- (void)handleLastUsedInputMode:(id)arg1 withNewInputMode:(id)arg2;	// IMP=0x00000000007e03b8
- (id)supportedInputModesFromArray:(id)arg1;	// IMP=0x00000000007e0235
- (void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000007e0223
- (void)startDictationConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000007e0113
- (void)performWithForcedExtensionInputModes:(CDUnknownBlockType)arg1;	// IMP=0x00000000007e00f2
- (void)performWithoutExtensionInputModes:(CDUnknownBlockType)arg1;	// IMP=0x00000000007e00c1
- (void)forceDictationReturnToKeyboardInputMode;	// IMP=0x00000000007e008f
- (void)stopDictationAndResignFirstResponder;	// IMP=0x00000000007e005d
- (void)switchToDictationInputModeWithOptions:(id)arg1;	// IMP=0x00000000007dff50
- (void)stopDictation;	// IMP=0x00000000007dfeff
- (void)switchToDictationInputMode;	// IMP=0x00000000007dfeeb
- (void)switchToCurrentSystemInputMode;	// IMP=0x00000000007dfeb5
- (void)updateCurrentAndNextInputModes;	// IMP=0x00000000007dfd63
- (void)updateLastUsedInputMode:(id)arg1;	// IMP=0x00000000007dfba7
- (id)inputModeForASCIIToggleWithTraits:(id)arg1;	// IMP=0x00000000007dfaa1
- (id)inputModeLastUsedForLanguage:(id)arg1 includingExtensions:(_Bool)arg2;	// IMP=0x00000000007dfa6c
- (id)inputModeLastUsedForLanguage:(id)arg1;	// IMP=0x00000000007dfa55
- (id)inputModeIdentifierLastUsedForLanguage:(id)arg1 includingExtensions:(_Bool)arg2;	// IMP=0x00000000007df382
- (id)inputModeIdentifierLastUsedForLanguage:(id)arg1;	// IMP=0x00000000007df36b
- (id)nextInputModeInPreferenceListForTraits:(id)arg1;	// IMP=0x00000000007df089
- (id)nextInputModeInPreferenceListForTraits:(id)arg1 updatePreference:(_Bool)arg2 skipEmoji:(_Bool)arg3;	// IMP=0x00000000007deef4
- (id)nextInputModeInPreferenceListForTraits:(id)arg1 updatePreference:(_Bool)arg2;	// IMP=0x00000000007deedf
- (id)nextInputModeToUseForTraits:(id)arg1;	// IMP=0x00000000007deec8
- (void)clearNextInputModeToUse;	// IMP=0x00000000007deeb4
- (id)nextInputModeToUseForTraits:(id)arg1 updatePreference:(_Bool)arg2;	// IMP=0x00000000007ded4f
- (void)_setCurrentAndNextInputModePreference;	// IMP=0x00000000007dec28
- (id)nextInputModeFromList:(id)arg1 withFilter:(unsigned long long)arg2 withTraits:(id)arg3;	// IMP=0x00000000007de644
- (id)extensionInputModes;	// IMP=0x00000000007de479
- (_Bool)isLockscreenPasscodeKeyboard;	// IMP=0x00000000007de3ef
- (_Bool)verifyKeyboardExtensionsWithApp;	// IMP=0x00000000007de385
- (_Bool)deviceStateIsLocked;	// IMP=0x00000000007de37d
- (id)_MCFilteredExtensionIdentifiers;	// IMP=0x00000000007de267
- (void)_removeInputModes:(id)arg1;	// IMP=0x00000000007ddf6d
- (_Bool)_mayContainExtensionInputModes;	// IMP=0x00000000007ddf2f
- (void)_beginContinuousDiscoveryIfNeeded;	// IMP=0x00000000007dda4f
- (id)_allExtensionsFromMatchingExtensions:(id)arg1;	// IMP=0x00000000007dd6e5
- (void)_clearAllExtensionsIfNeeded;	// IMP=0x00000000007dd63a
- (void)_clearAllExtensions;	// IMP=0x00000000007dd4e0
- (void)didEnterBackground:(id)arg1;	// IMP=0x00000000007dd454
- (void)keyboardsPreferencesChanged:(id)arg1;	// IMP=0x00000000007dd442
- (void)willEnterForeground:(id)arg1;	// IMP=0x00000000007dd414
- (void)loadSuggestedInputModesForSiriLanguage;	// IMP=0x00000000007dd086
- (id)suggestedInputModesForPreferredLanguages;	// IMP=0x00000000007dcd3f
- (id)suggestedInputModesForLocales:(id)arg1;	// IMP=0x00000000007dc52c
- (id)suggestedInputModesForCurrentLocale;	// IMP=0x00000000007dc068
- (id)suggestedInputModesForCurrentHardwareKeyboardAndSuggestedInputModes:(id)arg1;	// IMP=0x00000000007dbd56
- (id)suggestedInputModesForHardwareKeyboardLanguage:(id)arg1 countryCode:(id)arg2 inputModes:(id)arg3;	// IMP=0x00000000007dbca6
- (id)suggestedInputModesForCurrentLocale:(_Bool)arg1 fallbackToDefaultInputModes:(_Bool)arg2;	// IMP=0x00000000007dbb98
- (id)defaultEnabledInputModesForCurrentLocale:(_Bool)arg1;	// IMP=0x00000000007db7dd
- (id)appendPasscodeInputModes:(id)arg1;	// IMP=0x00000000007db4ff
- (void)updateDefaultInputModesIfNecessaryForIdiom;	// IMP=0x00000000007db399
- (id)fallbackCurrentInputModeForFilteredInputModeIdentifier:(id)arg1 fromInputModeIdentifiers:(id)arg2;	// IMP=0x00000000007db2ea
- (id)fallbackCurrentInputModeForFilteredInputMode:(id)arg1 fromInputModes:(id)arg2;	// IMP=0x00000000007db162
- (id)filteredPadInputModesFromInputModes:(id)arg1 withRules:(id)arg2;	// IMP=0x00000000007dadaf
- (id)inputModeByReplacingSoftwareLayoutWithSoftwareLayout:(id)arg1 inInputMode:(id)arg2;	// IMP=0x00000000007dad18
- (id)filteredTVInputModesFromInputModes:(id)arg1;	// IMP=0x00000000007da904
- (id)filteredInputModesForSiriLanguageFromInputModes:(id)arg1;	// IMP=0x00000000007da61b
- (_Bool)currentLocaleRequiresExtendedSetup;	// IMP=0x00000000007da57c
- (void)updateCurrentInputMode:(id)arg1;	// IMP=0x00000000007da445
- (void)_setCurrentInputMode:(id)arg1 force:(_Bool)arg2;	// IMP=0x00000000007da358
@property(retain) UIKeyboardInputMode *currentInputMode;
- (id)getDictationSLSLanguagesEnabled;	// IMP=0x00000000007da311
- (void)setDictationSLSLanguagesEnabled:(id)arg1;	// IMP=0x00000000007da21d
@property(readonly, nonatomic) _Bool containsDictationSupportedInputMode;
@property(readonly, nonatomic) _Bool containsEmojiInputMode;
- (void)changePreferredEmojiSearchInputModeForInputDelegate:(id)arg1;	// IMP=0x00000000007d9e1b
- (void)updateEnabledDictationAndSLSLanguagesWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000007d9444
- (id)updateEnabledDictationLanguages:(_Bool)arg1;	// IMP=0x00000000007d9216
- (_Bool)isDictationLanguageEnabled:(id)arg1;	// IMP=0x00000000007d9119
@property(readonly, nonatomic) NSArray *enabledDictationLanguages;
@property(readonly, nonatomic) NSArray *activeDictationLanguages;
- (id)keyboardLanguageForDictationLanguage:(id)arg1;	// IMP=0x00000000007d8aa1
- (id)defaultDictationLanguages:(id)arg1;	// IMP=0x00000000007d8a31
- (id)suggestedDictationLanguagesForDeviceLanguage;	// IMP=0x00000000007d870d
@property(readonly, nonatomic) NSArray *activeDictationSupportedInputModeIdentifiers;
@property(readonly, nonatomic) UIKeyboardInputMode *lastUsedInputModeForCurrentContext;
@property(readonly, nonatomic) UIKeyboardInputMode *currentLinguisticInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *currentPublicInputMode;
- (id)textInputModeForResponder:(id)arg1;	// IMP=0x00000000007d8383
- (void)_inputModeChangedWhileContextTracked;	// IMP=0x00000000007d80b4
- (void)_trackInputModeIfNecessary:(id)arg1;	// IMP=0x00000000007d7df1
- (id)lastUsedInputModeForTextInputMode:(id)arg1;	// IMP=0x00000000007d7a23
- (id)currentSystemInputModeExcludingEmoji:(_Bool)arg1;	// IMP=0x00000000007d76fa
@property(readonly, nonatomic) UIKeyboardInputMode *currentSystemInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *hardwareInputMode;
- (id)_systemInputModePassingLanguageTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000007d730f
- (id)_systemInputModePassingTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000007d714d
@property(nonatomic) UIKeyboardInputMode *currentInputModeInPreference;
@property(readonly) NSArray *activeUserSelectableInputModeIdentifiers;
- (id)activeUserSelectableInputModes;	// IMP=0x00000000007d6e54
@property(readonly) NSArray *activeInputModeIdentifiers;
- (id)activeInputModes;	// IMP=0x00000000007d6df8
- (id)inputModeWithIdentifier:(id)arg1;	// IMP=0x00000000007d6ddf
- (id)init;	// IMP=0x00000000007d6cb3
- (void)dealloc;	// IMP=0x00000000007d6a28
- (_Bool)identifierIsValidSystemInputMode:(id)arg1;	// IMP=0x00000000007e342e
- (id)inputModesFromIdentifiers:(id)arg1;	// IMP=0x00000000007e32bd
- (id)identifiersFromInputModes:(id)arg1;	// IMP=0x00000000007e315c
@property(readonly) NSArray *enabledInputModeLanguages;
@property(readonly) NSArray *normalizedEnabledInputModeIdentifiers;
@property(readonly) NSArray *enabledInputModeIdentifiers;
- (void)updateUserSelectableInputModes;	// IMP=0x00000000007e2dae
- (id)userSelectableInputModeIdentifiersFromInputModeIdentifiers:(id)arg1;	// IMP=0x00000000007e2c15
- (id)userSelectableInputModesFromInputModes:(id)arg1;	// IMP=0x00000000007e28f5
- (id)enabledInputModeIdentifiers:(_Bool)arg1;	// IMP=0x00000000007e20ce
- (id)inputModesByAppendingApplicationLanguagesToInputModes:(id)arg1;	// IMP=0x00000000007e1c8d
- (void)saveDeviceUnlockPasscodeInputModes;	// IMP=0x00000000007e1c30
@property(readonly) NSArray *inputModesWithoutHardwareSupport;
@property(readonly) NSArray *supportedInputModeIdentifiers;

@end

