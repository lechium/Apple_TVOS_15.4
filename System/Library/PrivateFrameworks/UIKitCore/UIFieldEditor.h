//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/NSLayoutManagerDelegate-Protocol.h>
#import <UIKitCore/NSUITextViewCommonMethods-Protocol.h>
#import <UIKitCore/UIAutoscrollContainer-Protocol.h>
#import <UIKitCore/UIKeyInputPrivate-Protocol.h>
#import <UIKitCore/UIKeyboardInput-Protocol.h>
#import <UIKitCore/UITextAutoscrolling-Protocol.h>
#import <UIKitCore/UITextFieldContent-Protocol.h>
#import <UIKitCore/UITextInput-Protocol.h>
#import <UIKitCore/UITextInputControllerDelegate-Protocol.h>
#import <UIKitCore/UITextInputPrivate-Protocol.h>

@class NSAttributedString, NSDictionary, NSIndexSet, NSLayoutManager, NSString, NSTextContainer, NSTextStorage, NSTimer, RTIInputSystemSourceSession, UIAutoscroll, UIColor, UIImage, UIInputContextHistory, UITextField, UITextInputController, UITextInputPasswordRules, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, _UICascadingTextStorage, _UISupplementalLexicon, _UITextLayoutController;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer, _UITextCanvas;

@interface UIFieldEditor <UITextInputControllerDelegate, NSLayoutManagerDelegate, UIKeyInputPrivate, UITextFieldContent, NSUITextViewCommonMethods, UIAutoscrollContainer, UITextInput, UITextInputPrivate, UITextAutoscrolling, UIKeyboardInput>
{
    UITextField *_textField;	// 120 = 0x78
    _Bool _active;	// 128 = 0x80
    UIAutoscroll *_autoscroll;	// 136 = 0x88
    NSAttributedString *_originalAttributedString;	// 144 = 0x90
    NSDictionary *_originalDefaultAttributes;	// 152 = 0x98
    struct UIEdgeInsets _contentInsetsFromFonts;	// 160 = 0xa0
    UITextInputController *__textInputController;	// 192 = 0xc0
    NSTextContainer *__textContainer;	// 200 = 0xc8
    _UITextLayoutController *__textLayoutController;	// 208 = 0xd0
    _UICascadingTextStorage *__textStorage;	// 216 = 0xd8
    struct {
        unsigned int delegateRespondsToFieldEditorDidChange:1;
        unsigned int delegateRespondsToFieldEditorDidChangeSelection:1;
        unsigned int delegateRespondsToShouldInsertText:1;
        unsigned int delegateRespondsToShouldReplaceWithText:1;
        unsigned int suppressScrollToSelection:1;
        unsigned int clearOnNextEdit:1;
        unsigned int needsInvalidationAfterObscuredRangeChange:1;
        unsigned int isAnimatingPaste:1;
        unsigned int contentInsetsFromFontsValid:1;
    } _feFlags;	// 224 = 0xe0
    struct UIEdgeInsets _padding;	// 232 = 0xe8
    unsigned long long _obscuredSecureLength;	// 264 = 0x108
    NSTimer *_obscureAllTextTimer;	// 272 = 0x110
    double _desiredContentWidth;	// 280 = 0x118
    UIView<_UITextCanvas> *_contentView;	// 288 = 0x120
    _Bool _allowsAttachments;	// 296 = 0x128
    _Bool __shouldObscureNextInput;	// 297 = 0x129
    CDUnknownBlockType _scrollAnimationEndedAction;	// 304 = 0x130
    struct CGPoint _autoscrollContentOffset;	// 312 = 0x138
}

+ (id)excludedElementsForHTML;	// IMP=0x0000000000e68816
+ (id)activeFieldEditor;	// IMP=0x0000000000e643f5
+ (id)sharedFieldEditor;	// IMP=0x0000000000e643ed
- (void).cxx_destruct;	// IMP=0x0000000000e6c2f7
@property(nonatomic) _Bool _shouldObscureNextInput; // @synthesize _shouldObscureNextInput=__shouldObscureNextInput;
@property(nonatomic) struct CGPoint autoscrollContentOffset; // @synthesize autoscrollContentOffset=_autoscrollContentOffset;
@property(copy, nonatomic, setter=_setScrollAnimationEndedAction:) CDUnknownBlockType _scrollAnimationEndedAction; // @synthesize _scrollAnimationEndedAction;
@property(nonatomic) _Bool allowsAttachments; // @synthesize allowsAttachments=_allowsAttachments;
@property(nonatomic) struct UIEdgeInsets padding; // @synthesize padding=_padding;
- (_Bool)_shouldIgnoreAutofillSave;	// IMP=0x0000000000e6c23d
- (_Bool)_hasDictationPlaceholder;	// IMP=0x0000000000e6c1f9
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0000000000e6c198
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x0000000000e6c13d
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x0000000000e6c0b6
- (id)_textInputTraits;	// IMP=0x0000000000e6c00a
- (_Bool)_shouldObscureInput;	// IMP=0x0000000000e6bf72
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
- (id)attributedSubstringForMarkedRange;	// IMP=0x0000000000e6bdb4
@property(nonatomic) struct _NSRange markedRange;
- (id)linkTextAttributes;	// IMP=0x0000000000e6bd1b
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;	// IMP=0x0000000000e6bd15
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;	// IMP=0x0000000000e6bccd
- (_Bool)isHorizontallyResizable;	// IMP=0x0000000000e6bcc5
- (struct CGSize)minSize;	// IMP=0x0000000000e6bc95
- (void)invalidateTextContainerOrigin;	// IMP=0x0000000000e6bc8f
- (void)setConstrainedFrameSize:(struct CGSize)arg1;	// IMP=0x0000000000e6bc24
- (void)textContainerUsageDidChangeToBounds:(struct CGRect)arg1;	// IMP=0x0000000000e6bbef
- (struct UIEdgeInsets)textContainerInset;	// IMP=0x0000000000e6bbb4
- (struct CGPoint)textContainerOrigin;	// IMP=0x0000000000e6bac7
- (struct CGPoint)textContainerOriginForTextAlignment:(long long)arg1;	// IMP=0x0000000000e6b7b1
- (struct CGRect)visibleRect;	// IMP=0x0000000000e6b753
- (void)setLayoutOrientation:(long long)arg1;	// IMP=0x0000000000e6b74d
@property(readonly, nonatomic) long long layoutOrientation;
- (void)setTextContainer:(id)arg1;	// IMP=0x0000000000e6b617
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(_Bool)arg3;	// IMP=0x0000000000e6b5f8
- (struct CGRect)layoutManager:(id)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(id)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;	// IMP=0x0000000000e6b529
- (long long)layoutManager:(id)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;	// IMP=0x0000000000e6b3c2
- (unsigned long long)layoutManager:(id)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(id)arg5 forGlyphRange:(struct _NSRange)arg6;	// IMP=0x0000000000e6b170
- (void)endSelectionChange;	// IMP=0x0000000000e6b11a
- (void)beginSelectionChange;	// IMP=0x0000000000e6b0d2
- (id)_inputController;	// IMP=0x0000000000e6b0c0
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)metadataDictionariesForDictationResults;	// IMP=0x0000000000e6b02a
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;	// IMP=0x0000000000e6afa1
- (void)removeTextPlaceholder:(id)arg1;	// IMP=0x0000000000e6af2f
- (id)insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x0000000000e6aec3
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x0000000000e6ae4b
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;	// IMP=0x0000000000e6adcc
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x0000000000e6acf6
- (_Bool)isEditing;	// IMP=0x0000000000e6acbc
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000e6ac50
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000e6abb6
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000e6ab4a
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x0000000000e6aac7
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x0000000000e6a981
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x0000000000e6a902
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x0000000000e6a7d0
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000e6a753
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000e6a5b8
@property(readonly, nonatomic) UIView *textInputView;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000000e6a516
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000e6a48b
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000e6a400
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x0000000000e6a372
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x0000000000e6a2e9
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000e6a252
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x0000000000e6a175
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000e6a0c2
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000e69f9c
- (void)setMarkedTextStyle:(id)arg1;	// IMP=0x0000000000e69f2a
@property(readonly, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)clearText;	// IMP=0x0000000000e69c4b
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x0000000000e69bc5
- (void)replaceRange:(id)arg1 withAttributedText:(id)arg2;	// IMP=0x0000000000e69ae2
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000e69a06
- (id)attributedTextInRange:(id)arg1;	// IMP=0x0000000000e69983
- (void)insertAttributedText:(id)arg1;	// IMP=0x0000000000e69911
- (id)textInRange:(id)arg1;	// IMP=0x0000000000e6988e
- (void)deleteBackward;	// IMP=0x0000000000e697b1
- (void)_invalidateAfterObscuredRangeChangeIfNeeded;	// IMP=0x0000000000e6969a
- (void)_setNeedsInvalidateAfterObscuredRangeChange;	// IMP=0x0000000000e69629
- (void)_unobscureAllText;	// IMP=0x0000000000e69597
- (void)_obscureAllText;	// IMP=0x0000000000e69530
- (void)_ephemerallyUnobscureTextInRange:(struct _NSRange)arg1;	// IMP=0x0000000000e694a4
- (void)_ephemerallyUnobscureCharacterAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000e693f7
- (void)_unobscureTextInRange:(struct _NSRange)arg1 settingTimerToReobscure:(_Bool)arg2;	// IMP=0x0000000000e692b2
- (void)_cancelObscureAllTextTimer;	// IMP=0x0000000000e69270
- (struct _NSRange)insertFilteredText:(id)arg1;	// IMP=0x0000000000e68e9a
- (void)insertText:(id)arg1;	// IMP=0x0000000000e68e88
@property(readonly, nonatomic) _Bool hasText;
- (_Bool)_clearOnEditIfNeeded;	// IMP=0x0000000000e68dc0
- (double)_passcodeStyleAlpha;	// IMP=0x0000000000e68d81
@property(readonly, nonatomic) NSTextStorage *textStorage;
@property(readonly, nonatomic) NSTextContainer *textContainer;
- (void)setNonEditingLinebreakMode:(long long)arg1;	// IMP=0x0000000000e68d11
- (long long)nonEditingLinebreakMode;	// IMP=0x0000000000e68ccd
- (id)undoManager;	// IMP=0x0000000000e68c7d
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x0000000000e68c09
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000e68b8a
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x0000000000e68b2a
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000e6897c
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;	// IMP=0x0000000000e68920
- (void)_performWhileSuppressingDelegateNotifications:(CDUnknownBlockType)arg1;	// IMP=0x0000000000e687a4
- (_Bool)hasMarkedText;	// IMP=0x0000000000e6879c
- (void)setSelection:(struct _NSRange)arg1;	// IMP=0x0000000000e6871a
- (struct _NSRange)selectionRange;	// IMP=0x0000000000e686c7
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2 adjustForPurpleCaret:(_Bool)arg3;	// IMP=0x0000000000e68691
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2;	// IMP=0x0000000000e68679
- (int)scrollYOffset;	// IMP=0x0000000000e68662
- (int)scrollXOffset;	// IMP=0x0000000000e6864b
- (void)setAttributedTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;	// IMP=0x0000000000e68633
- (void)setAttributedText:(id)arg1 andSetCaretSelectionAfterText:(_Bool)arg2;	// IMP=0x0000000000e685aa
- (void)setAttributedText:(id)arg1;	// IMP=0x0000000000e6852a
- (id)attributedText;	// IMP=0x0000000000e684da
- (void)_setAttributedTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2 andSetCaretSelectionAfterText:(_Bool)arg3;	// IMP=0x0000000000e67fb4
- (void)addTextAlternativesDisplayStyle:(long long)arg1 toRange:(struct _NSRange)arg2;	// IMP=0x0000000000e67e9d
- (void)setTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;	// IMP=0x0000000000e67e85
- (void)setText:(id)arg1 andSetCaretSelectionAfterText:(_Bool)arg2;	// IMP=0x0000000000e67dfc
- (void)setText:(id)arg1;	// IMP=0x0000000000e67d7c
- (id)text;	// IMP=0x0000000000e67cac
- (void)_setTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2 andSetCaretSelectionAfterText:(_Bool)arg3;	// IMP=0x0000000000e67ba9
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (id)font;	// IMP=0x0000000000e679a0
- (void)setFont:(id)arg1;	// IMP=0x0000000000e67984
- (id)textColor;	// IMP=0x0000000000e6791a
- (void)setTextColor:(id)arg1;	// IMP=0x0000000000e678fe
- (id)layoutManager:(id)arg1 effectiveCUICatalogForTextEffect:(id)arg2;	// IMP=0x0000000000e67857
- (struct _NSRange)_unobscuredSecureRange;	// IMP=0x0000000000e677d7
- (void)_setValue:(id)arg1 forTextAttribute:(id)arg2;	// IMP=0x0000000000e6768c
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x0000000000e67686
- (void)_handleObscuredTextAfterActivationChange;	// IMP=0x0000000000e67648
- (void)_deactivateSelectionView;	// IMP=0x0000000000e675d0
- (void)_resetTypingAttributes;	// IMP=0x0000000000e67584
- (void)deactivateEditorDiscardingEdits:(_Bool)arg1;	// IMP=0x0000000000e67376
- (void)_updateLayoutManagerStyleEffectConfiguration;	// IMP=0x0000000000e672ec
- (void)activateEditor;	// IMP=0x0000000000e66c72
- (void)_tvUpdateTextColor;	// IMP=0x0000000000e66bb4
- (struct CGRect)contentFrameForView:(id)arg1;	// IMP=0x0000000000e66b96
- (void)cancelAutoscroll;	// IMP=0x0000000000e66b79
- (void)updateAutoscroll:(id)arg1;	// IMP=0x0000000000e6666d
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x0000000000e664d6
- (struct CGRect)_selectionClipRect;	// IMP=0x0000000000e664b7
- (id)textField;	// IMP=0x0000000000e6649e
- (id)textColorForCaretSelection;	// IMP=0x0000000000e663fe
- (id)textInputTraits;	// IMP=0x0000000000e66358
- (id)_textSelectingContainer;	// IMP=0x0000000000e66319
- (struct CGRect)_responderExternalTouchRectForWindow:(id)arg1;	// IMP=0x0000000000e661ea
- (_Bool)isFirstResponder;	// IMP=0x0000000000e661b0
- (id)_responderForBecomeFirstResponder;	// IMP=0x0000000000e66197
- (void)selectAll;	// IMP=0x0000000000e66163
- (_Bool)textInputShouldExtendCaretHeight:(id)arg1;	// IMP=0x0000000000e660d4
- (void)textInputDidAnimatePaste:(id)arg1;	// IMP=0x0000000000e660c3
- (void)textInputWillAnimatePaste:(id)arg1;	// IMP=0x0000000000e660b2
- (void)textInput:(id)arg1 prepareAttributedTextForInsertion:(id)arg2;	// IMP=0x0000000000e6602b
- (_Bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x0000000000e65faf
- (struct _NSRange)textInput:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;	// IMP=0x0000000000e65f42
- (void)textInputDidChangeSelection:(id)arg1;	// IMP=0x0000000000e65ea5
- (void)textInputDidChange:(id)arg1;	// IMP=0x0000000000e65e57
- (void)keyboardInputChangedSelection:(id)arg1;	// IMP=0x0000000000e65dca
- (_Bool)keyboardInputChanged:(id)arg1;	// IMP=0x0000000000e65d32
- (_Bool)keyboardInputShouldDelete:(id)arg1;	// IMP=0x0000000000e65c9a
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x0000000000e65bd1
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;	// IMP=0x0000000000e65b0f
- (void)layoutSubviews;	// IMP=0x0000000000e65573
- (_Bool)setUpClippingWithMaskForBounds:(struct CGRect)arg1 contentFrame:(struct CGRect)arg2;	// IMP=0x0000000000e6520a
- (struct UIEdgeInsets)_contentInsetsFromFonts;	// IMP=0x0000000000e651bf
- (struct UIEdgeInsets)_fullContentInsetsFromFonts;	// IMP=0x0000000000e65055
- (void)_applyCorrectTextContainerSize:(id)arg1;	// IMP=0x0000000000e64dab
- (void)_applyCorrectTextContainerSize;	// IMP=0x0000000000e64d27
- (void)_textStorageDidProcessEditing:(id)arg1;	// IMP=0x0000000000e64c4b
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x0000000000e64b5f
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (id)_textCanvasView;	// IMP=0x0000000000e64a8c
- (id)_textInputController;	// IMP=0x0000000000e649f7
- (id)_textStorage;	// IMP=0x0000000000e648b1
- (id)_textContainer;	// IMP=0x0000000000e647d6
- (id)_textLayoutController;	// IMP=0x0000000000e646f5
@property(readonly, nonatomic) _UITextLayoutController *textLayoutController;
- (void)dealloc;	// IMP=0x0000000000e64624
- (id)initWithTextField:(id)arg1;	// IMP=0x0000000000e64411
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000e643fd
- (void)_deleteBackwardAndNotify:(_Bool)arg1;	// IMP=0x0000000000a404d4

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(readonly, nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) long long selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool shouldAutoscroll;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(readonly, nonatomic) _Bool supportsImagePaste;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType; // @dynamic textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

