//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableSet, NSOperationQueue, NSString, NSURL, PKPrintSettings, PKPrinter, UIPrintFormatter, UIPrintInfo, UIPrintPageRenderer, UIPrintPanelViewController, UIPrintPaper, UIPrintingProgress, UIWindowScene;
@protocol UIPrintInteractionControllerActivityDelegate, UIPrintInteractionControllerDelegate;

@interface UIPrintInteractionController : NSObject
{
    _Bool _isContentManaged;	// 8 = 0x8
    unsigned long long _backgroundTaskIdentifier;	// 16 = 0x10
    NSOperationQueue *_previewQueue;	// 24 = 0x18
    id _temporaryRetainCycle;	// 32 = 0x20
    long long _currentRenderingQuality;	// 40 = 0x28
    _Bool _showsPageRange;	// 48 = 0x30
    _Bool _showsNumberOfCopies;	// 49 = 0x31
    _Bool _showsPaperSelectionForLoadedPapers;	// 50 = 0x32
    _Bool _showsPaperOrientation;	// 51 = 0x33
    _Bool _printStateActive;	// 52 = 0x34
    _Bool _supressNotifyDismissed;	// 53 = 0x35
    _Bool _manualPrintPageEnabled;	// 54 = 0x36
    _Bool _showPrintingProgress;	// 55 = 0x37
    int _printInfoState;	// 56 = 0x38
    CDUnknownBlockType _completionHandler;	// 64 = 0x40
    NSArray *_pageRanges;	// 72 = 0x48
    PKPrinter *_printer;	// 80 = 0x50
    UIPrintPaper *_paper;	// 88 = 0x58
    NSURL *_tempPreviewFileURL;	// 96 = 0x60
    UIPrintInfo *_printInfo;	// 104 = 0x68
    id <UIPrintInteractionControllerDelegate> _delegate;	// 112 = 0x70
    UIPrintPaper *_printPaper;	// 120 = 0x78
    UIPrintPageRenderer *_printPageRenderer;	// 128 = 0x80
    UIPrintFormatter *_printFormatter;	// 136 = 0x88
    id _printingItem;	// 144 = 0x90
    NSArray *_printingItems;	// 152 = 0x98
    long long _pageCount;	// 160 = 0xa0
    UIWindowScene *_hostingWindowScene;	// 168 = 0xa8
    long long _pageCountWithRanges;	// 176 = 0xb0
    NSMutableSet *_previewStates;	// 184 = 0xb8
    long long _currentPage;	// 192 = 0xc0
    long long _pagesDrawn;	// 200 = 0xc8
    UIPrintPanelViewController *_printPanelViewController;	// 208 = 0xd0
    UIPrintingProgress *_printingProgress;	// 216 = 0xd8
    PKPrintSettings *_printSettings;	// 224 = 0xe0
    UIPrintInfo *_activePrintInfo;	// 232 = 0xe8
    UIPrintPageRenderer *_formatterRenderer;	// 240 = 0xf0
    NSURL *_saveFileURL;	// 248 = 0xf8
    NSString *_pdfPassword;	// 256 = 0x100
    id <UIPrintInteractionControllerActivityDelegate> _printActivityDelegate;	// 264 = 0x108
    struct _NSRange _currentRange;	// 272 = 0x110
}

+ (id)sharedPrintController;	// IMP=0x0000000000b119bb
+ (_Bool)canPrintData:(id)arg1;	// IMP=0x0000000000b1198b
+ (_Bool)canPrintURL:(id)arg1;	// IMP=0x0000000000b11701
+ (id)printableUTIs;	// IMP=0x0000000000b11649
+ (_Bool)isPrintingAvailable;	// IMP=0x0000000000b11641
- (void).cxx_destruct;	// IMP=0x0000000000b1fe91
@property(nonatomic) __weak id <UIPrintInteractionControllerActivityDelegate> printActivityDelegate; // @synthesize printActivityDelegate=_printActivityDelegate;
@property(nonatomic) _Bool isContentManaged; // @synthesize isContentManaged=_isContentManaged;
@property(retain) NSString *pdfPassword; // @synthesize pdfPassword=_pdfPassword;
@property _Bool showPrintingProgress; // @synthesize showPrintingProgress=_showPrintingProgress;
@property(retain) NSURL *saveFileURL; // @synthesize saveFileURL=_saveFileURL;
@property _Bool manualPrintPageEnabled; // @synthesize manualPrintPageEnabled=_manualPrintPageEnabled;
@property(retain) UIPrintPageRenderer *formatterRenderer; // @synthesize formatterRenderer=_formatterRenderer;
@property _Bool supressNotifyDismissed; // @synthesize supressNotifyDismissed=_supressNotifyDismissed;
@property int printInfoState; // @synthesize printInfoState=_printInfoState;
@property(retain) UIPrintInfo *activePrintInfo; // @synthesize activePrintInfo=_activePrintInfo;
@property(retain) PKPrintSettings *printSettings; // @synthesize printSettings=_printSettings;
@property(retain) UIPrintingProgress *printingProgress; // @synthesize printingProgress=_printingProgress;
@property(retain) UIPrintPanelViewController *printPanelViewController; // @synthesize printPanelViewController=_printPanelViewController;
@property long long pagesDrawn; // @synthesize pagesDrawn=_pagesDrawn;
@property struct _NSRange currentRange; // @synthesize currentRange=_currentRange;
@property long long currentPage; // @synthesize currentPage=_currentPage;
@property(retain) NSMutableSet *previewStates; // @synthesize previewStates=_previewStates;
@property long long pageCountWithRanges; // @synthesize pageCountWithRanges=_pageCountWithRanges;
@property(retain, nonatomic) UIWindowScene *hostingWindowScene; // @synthesize hostingWindowScene=_hostingWindowScene;
@property(nonatomic) long long pageCount; // @synthesize pageCount=_pageCount;
@property _Bool printStateActive; // @synthesize printStateActive=_printStateActive;
@property(copy, nonatomic) NSArray *printingItems; // @synthesize printingItems=_printingItems;
@property(copy, nonatomic) id printingItem; // @synthesize printingItem=_printingItem;
@property(retain, nonatomic) UIPrintFormatter *printFormatter; // @synthesize printFormatter=_printFormatter;
@property(retain, nonatomic) UIPrintPageRenderer *printPageRenderer; // @synthesize printPageRenderer=_printPageRenderer;
@property(readonly, nonatomic) UIPrintPaper *printPaper; // @synthesize printPaper=_printPaper;
@property(nonatomic) _Bool showsPaperOrientation; // @synthesize showsPaperOrientation=_showsPaperOrientation;
@property(nonatomic) _Bool showsPaperSelectionForLoadedPapers; // @synthesize showsPaperSelectionForLoadedPapers=_showsPaperSelectionForLoadedPapers;
@property(nonatomic) _Bool showsNumberOfCopies; // @synthesize showsNumberOfCopies=_showsNumberOfCopies;
@property(nonatomic) _Bool showsPageRange; // @synthesize showsPageRange=_showsPageRange;
@property(nonatomic) __weak id <UIPrintInteractionControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIPrintInfo *printInfo; // @synthesize printInfo=_printInfo;
@property(copy) CDUnknownBlockType _completionHandler; // @synthesize _completionHandler;
- (void)_endPrintJobWithAction:(long long)arg1 error:(id)arg2;	// IMP=0x0000000000b1f6da
- (id)_printPageRenderer:(id)arg1;	// IMP=0x0000000000b1f471
- (struct CGContext *)_newSaveContext:(id)arg1 withMediaRect:(struct CGRect)arg2;	// IMP=0x0000000000b1f2fb
- (void)_printItemAsync:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b1e075
- (void)_completePrintPageWithError:(id)arg1;	// IMP=0x0000000000b1dca7
- (void)_printPage;	// IMP=0x0000000000b1dae3
- (void)_printPageWithDelay:(double)arg1;	// IMP=0x0000000000b1d9d3
- (_Bool)_printingItemIsReallyTallPDF;	// IMP=0x0000000000b1d830
- (void)_ensurePDFIsUnlockedFirstAttempt:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b1d044
- (struct CGSize)_printablePDFURLSize:(id)arg1;	// IMP=0x0000000000b1ce97
- (_Bool)_canPrintPDFURL:(id)arg1;	// IMP=0x0000000000b1cc9e
- (struct CGSize)_printablePDFDataSize:(id)arg1;	// IMP=0x0000000000b1c9bb
- (_Bool)_canPrintPDFData:(id)arg1;	// IMP=0x0000000000b1c873
- (void)_startPrinting;	// IMP=0x0000000000b1bc91
- (void)_updatePrintPaper;	// IMP=0x0000000000b1acb1
- (id)_getChosenPaperFromDelegateForPaperList:(id)arg1;	// IMP=0x0000000000b1aaba
- (double)_getCutLengthFromDelegateForPaper:(id)arg1;	// IMP=0x0000000000b1a93b
- (id)_paperForContentType:(long long)arg1;	// IMP=0x0000000000b1a6f8
- (id)_paperForPDFItem:(id)arg1 withDuplexMode:(long long)arg2;	// IMP=0x0000000000b1a591
- (void)_preparePrintInfo;	// IMP=0x0000000000b1a13b
- (void)_updateCutterBehavior;	// IMP=0x0000000000b19b53
- (void)_printPanelDidDismissWithAction:(long long)arg1;	// IMP=0x0000000000b19a30
- (void)_setPrintInfoState:(int)arg1;	// IMP=0x0000000000b197bb
- (void)_printPanelWillDismissWithAction:(long long)arg1;	// IMP=0x0000000000b196dd
- (void)_printPanelDidPresent;	// IMP=0x0000000000b1968c
- (void)_cancelAllPreviewGeneration;	// IMP=0x0000000000b1955b
- (void)_addPDFWithData:(id)arg1 toContext:(struct CGContext *)arg2;	// IMP=0x0000000000b190d8
- (void)_drawPageWithItem:(id)arg1 toContext:(struct CGContext *)arg2;	// IMP=0x0000000000b18c0a
- (id)_convertToPrintableItem:(id)arg1;	// IMP=0x0000000000b18553
- (void)_generatePrintPreview:(CDUnknownBlockType)arg1;	// IMP=0x0000000000b18496
- (void)_generatePrintPreviewWithRange:(struct _NSRange)arg1 useFullRange:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b18471
- (id)drawPagesWithRange:(struct _NSRange)arg1 withExistsURL:(id)arg2 withPreviewState:(id)arg3;	// IMP=0x0000000000b17fd7
- (void)_generatePDFInRange:(struct _NSRange)arg1 useFullRange:(_Bool)arg2 withQuality:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b179fc
- (void)_generatePDFForQuickLookCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000b17821
- (id)_printingItemPrintablePDFURL;	// IMP=0x0000000000b17728
- (_Bool)_fullRangeNeeded;	// IMP=0x0000000000b174d0
- (struct CGRect)_mediaRect;	// IMP=0x0000000000b173de
- (_Bool)_pageRendererAvailable;	// IMP=0x0000000000b17394
- (_Bool)_isPageCancelled:(id)arg1;	// IMP=0x0000000000b1733c
- (struct _NSRange)_fullPagesRange;	// IMP=0x0000000000b172ab
- (void)_updateRendererWithQuality:(long long)arg1;	// IMP=0x0000000000b1720e
- (id)_tempFileForPreview;	// IMP=0x0000000000b17132
- (id)_newPDFPreviewURLWithPath:(id)arg1 isContentManaged:(_Bool)arg2;	// IMP=0x0000000000b170e2
- (_Bool)_setupPrintPanel:(CDUnknownBlockType)arg1 forPDFGenerationOnly:(_Bool)arg2;	// IMP=0x0000000000b16aeb
- (_Bool)_setupPrintPanel:(CDUnknownBlockType)arg1;	// IMP=0x0000000000b16ad4
- (void)_updatePageCount;	// IMP=0x0000000000b165a1
- (id)rendererToUse;	// IMP=0x0000000000b162ff
- (void)_updatePrintInfoWithAnnotations;	// IMP=0x0000000000b162bf
- (void)removeFileAtURL:(id)arg1;	// IMP=0x0000000000b161ea
@property(retain) NSURL *tempPreviewFileURL; // @synthesize tempPreviewFileURL=_tempPreviewFileURL;
@property(retain, nonatomic) UIPrintPaper *paper; // @synthesize paper=_paper;
@property(retain, nonatomic) PKPrinter *printer; // @synthesize printer=_printer;
@property(retain, nonatomic) NSArray *pageRanges; // @synthesize pageRanges=_pageRanges;
- (_Bool)_canShowOrientation;	// IMP=0x0000000000b144d3
- (_Bool)_canShowPreview;	// IMP=0x0000000000b1418a
- (_Bool)_canShowAnnotations;	// IMP=0x0000000000b13d18
- (_Bool)_canShowPunch;	// IMP=0x0000000000b13cd6
- (_Bool)_canShowStaple;	// IMP=0x0000000000b13c94
- (_Bool)_canShowColor;	// IMP=0x0000000000b13c3c
- (_Bool)_canShowCopies;	// IMP=0x0000000000b13c33
- (_Bool)_canShowPaperList;	// IMP=0x0000000000b13be4
- (_Bool)_canShowPageRange;	// IMP=0x0000000000b13b3c
- (_Bool)_canShowDuplex;	// IMP=0x0000000000b13af8
- (struct CGSize)_printItemContentSize;	// IMP=0x0000000000b13382
- (id)_currentPrintInfo;	// IMP=0x0000000000b13352
- (void)_cleanPrintState;	// IMP=0x0000000000b131d2
- (void)dismissAnimated:(_Bool)arg1;	// IMP=0x0000000000b1318f
- (_Bool)printToPrinter:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b12921
- (_Bool)presentFromBarButtonItem:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b124f9
- (_Bool)presentFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b120b5
- (_Bool)presentAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b1209e
- (_Bool)_presentAnimated:(_Bool)arg1 hostingScene:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b11cd6
- (void)_cancelPreviewQueue:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b11b99
- (void)dealloc;	// IMP=0x0000000000b11acc
- (id)init;	// IMP=0x0000000000b119f8
- (_Bool)presentAnimated:(_Bool)arg1 hostingScene:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b20365
- (_Bool)savePDFToURL:(id)arg1 showProgress:(_Bool)arg2 hostingScene:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000b2003a
- (_Bool)savePDFToURL:(id)arg1 showProgress:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000b20022
- (_Bool)savePDFToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000b20005
- (void)_cancelManualPrintPage;	// IMP=0x0000000000b1ffef
- (void)_manualPrintPage;	// IMP=0x0000000000b1ffda
- (void)_enableManualPrintPage:(_Bool)arg1;	// IMP=0x0000000000b1ffd1

@end

