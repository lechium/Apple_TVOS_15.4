//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UIKitCore/NSCopying-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString;

@interface UIKBTree : NSObject <NSCopying>
{
    int type;	// 8 = 0x8
    NSString *name;	// 16 = 0x10
    NSMutableDictionary *properties;	// 24 = 0x18
    NSMutableArray *subtrees;	// 32 = 0x20
    NSMutableDictionary *cache;	// 40 = 0x28
    NSString *layoutTag;	// 48 = 0x30
    _Bool _isFloating;	// 56 = 0x38
    NSString *effectiveLayoutTag;	// 64 = 0x40
}

+ (id)keyboard;	// IMP=0x000000000083f82a
+ (id)key;	// IMP=0x000000000083f7ca
+ (id)shapesForControlKeyShapes:(id)arg1 options:(int)arg2;	// IMP=0x000000000083b652
+ (id)mergeStringForKeyName:(id)arg1;	// IMP=0x000000000083b5b3
+ (_Bool)shouldSkipCacheString:(id)arg1;	// IMP=0x0000000000834b19
+ (id)stringForType:(int)arg1;	// IMP=0x000000000082d6de
+ (id)treeOfType:(int)arg1;	// IMP=0x000000000082c73a
+ (id)uniqueName;	// IMP=0x000000000082c1f4
+ (_Bool)typeIsPersistent:(int)arg1;	// IMP=0x000000000082c1e8
@property(nonatomic) _Bool isFloating; // @synthesize isFloating=_isFloating;
@property(retain, nonatomic) NSString *effectiveLayoutTag; // @synthesize effectiveLayoutTag;
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag;
@property(retain, nonatomic) NSMutableDictionary *cache; // @synthesize cache;
@property(retain, nonatomic) NSMutableArray *subtrees; // @synthesize subtrees;
@property(retain, nonatomic) NSMutableDictionary *properties; // @synthesize properties;
@property(retain, nonatomic) NSString *name; // @synthesize name;
@property(nonatomic) int type; // @synthesize type;
- (id)keysForDisplayRowAtIndex:(unsigned long long)arg1;	// IMP=0x000000000083f88a
- (_Bool)renderKeyInKeyplane:(id)arg1;	// IMP=0x000000000083f477
- (_Bool)_renderAsStringKey;	// IMP=0x000000000083f425
- (id)cacheSecondaryDisplayString;	// IMP=0x000000000083f38b
- (id)cacheDisplayString;	// IMP=0x000000000083f33e
- (_Bool)shouldCacheKey;	// IMP=0x000000000083f00b
- (void)setLayoutTag:(id)arg1 passingKeyTest:(CDUnknownBlockType)arg2;	// IMP=0x000000000083ede8
- (_Bool)containsKeyThatIgnoresHandBias;	// IMP=0x000000000083ecb2
- (_Bool)hasLayoutTag:(id)arg1;	// IMP=0x000000000083ec8d
- (id)variantDisplayString;	// IMP=0x000000000083ea9a
- (void)orderVariantKeys:(_Bool)arg1;	// IMP=0x000000000083e536
- (void)setPreventPaddle:(_Bool)arg1;	// IMP=0x000000000083e4f4
- (_Bool)preventPaddle;	// IMP=0x000000000083e4bf
- (void)setGroupNeighbor:(unsigned long long)arg1;	// IMP=0x000000000083e476
- (unsigned long long)groupNeighbor;	// IMP=0x000000000083e43e
- (_Bool)containsDividerVariant;	// IMP=0x000000000083e324
- (_Bool)isRightToLeftSensitive;	// IMP=0x000000000083e2a7
- (_Bool)disablesEdgeSwipe;	// IMP=0x000000000083e250
- (_Bool)behavesAsShiftKey;	// IMP=0x000000000083e1fe
- (_Bool)avoidAutoDeactivation;	// IMP=0x000000000083e1d0
- (_Bool)dynamicDisplayTypeHint;	// IMP=0x000000000083e184
- (_Bool)modifiesKeyplane;	// IMP=0x000000000083e128
- (_Bool)avoidsLanguageIndicator;	// IMP=0x000000000083e04b
- (_Bool)allowRetestAfterCommittingDownActions;	// IMP=0x000000000083e032
- (_Bool)allowsDelayedTapForContinuousPathDisambiguation;	// IMP=0x000000000083e011
- (_Bool)allowsStartingContinuousPath;	// IMP=0x000000000083dfe2
- (_Bool)isExemptFromInputManagerHitTesting;	// IMP=0x000000000083df44
- (_Bool)isExemptFromInputManagerLayout;	// IMP=0x000000000083defa
- (void)setParentKey:(id)arg1;	// IMP=0x000000000083dede
- (id)parentKey;	// IMP=0x000000000083dec2
- (void)setMergeAsMoreKey:(_Bool)arg1;	// IMP=0x000000000083de69
- (_Bool)mergeAsMoreKey;	// IMP=0x000000000083de28
- (void)setForceMultitap:(_Bool)arg1;	// IMP=0x000000000083ddd7
- (_Bool)forceMultitap;	// IMP=0x000000000083ddbb
- (void)setClipCorners:(unsigned long long)arg1;	// IMP=0x000000000083dd72
- (unsigned long long)clipCorners;	// IMP=0x000000000083dd56
- (void)setSplitMode:(int)arg1;	// IMP=0x000000000083dd14
- (int)splitMode;	// IMP=0x000000000083dcf8
- (void)setDisabled:(_Bool)arg1;	// IMP=0x000000000083dcdd
- (_Bool)disabled;	// IMP=0x000000000083dcc4
- (void)setPopupDirection:(long long)arg1;	// IMP=0x000000000083dc7b
- (long long)popupDirection;	// IMP=0x000000000083dc40
- (void)setFlickDirection:(long long)arg1;	// IMP=0x000000000083dbf6
- (long long)flickDirection;	// IMP=0x000000000083dbb9
- (id)variantPopupBias;	// IMP=0x000000000083db9d
- (void)setVariantPopupBias:(id)arg1;	// IMP=0x000000000083db81
- (void)setGhost:(_Bool)arg1;	// IMP=0x000000000083db34
- (_Bool)ghost;	// IMP=0x000000000083da9c
- (void)setVisible:(_Bool)arg1;	// IMP=0x000000000083da52
- (_Bool)visible;	// IMP=0x000000000083da1d
- (void)setOverrideDisplayString:(id)arg1;	// IMP=0x000000000083da01
- (id)overrideDisplayString;	// IMP=0x000000000083d981
- (void)setRendering:(int)arg1;	// IMP=0x000000000083d93f
- (int)rendering;	// IMP=0x000000000083d923
- (void)setDisplayRowHint:(int)arg1;	// IMP=0x000000000083d8e1
- (int)displayRowHint;	// IMP=0x000000000083d8a9
- (void)setTextAlignment:(long long)arg1;	// IMP=0x000000000083d867
- (long long)textAlignment;	// IMP=0x000000000083d82c
- (void)setSelectedVariantIndex:(long long)arg1;	// IMP=0x000000000083d7d9
- (long long)highlightedVariantIndex;	// IMP=0x000000000083d7c7
- (long long)selectedVariantIndex;	// IMP=0x000000000083d78a
- (void)setDisplayTypeHint:(int)arg1;	// IMP=0x000000000083d748
- (int)displayTypeHint;	// IMP=0x000000000083d72c
- (void)setVariantType:(int)arg1;	// IMP=0x000000000083d6ea
- (int)variantType;	// IMP=0x000000000083d6b0
- (void)setInteractionType:(int)arg1;	// IMP=0x000000000083d66e
- (int)interactionType;	// IMP=0x000000000083d652
- (void)setDisplayType:(int)arg1;	// IMP=0x000000000083d610
- (int)displayType;	// IMP=0x000000000083d5f4
- (void)setLocalizationKey:(id)arg1;	// IMP=0x000000000083d5d8
- (id)localizationKey;	// IMP=0x000000000083d5bc
- (void)setSelectedVariantIndices:(id)arg1;	// IMP=0x000000000083d5a0
- (id)selectedVariantIndices;	// IMP=0x000000000083d584
- (void)setHighlightedVariantsList:(id)arg1;	// IMP=0x000000000083d568
- (id)highlightedVariantsList;	// IMP=0x000000000083d54c
- (void)setSecondaryRepresentedStrings:(id)arg1;	// IMP=0x000000000083d530
- (id)secondaryRepresentedStrings;	// IMP=0x000000000083d514
- (void)setSecondaryDisplayStrings:(id)arg1;	// IMP=0x000000000083d4f8
- (id)secondaryDisplayStrings;	// IMP=0x000000000083d4dc
- (void)setCachedGestureLayout:(id)arg1;	// IMP=0x000000000083d4c0
- (id)cachedGestureLayout;	// IMP=0x000000000083d4a4
- (void)setGestureKey:(id)arg1;	// IMP=0x000000000083d488
- (id)gestureKey;	// IMP=0x000000000083d46c
- (void)setDisplayString:(id)arg1;	// IMP=0x000000000083d450
- (id)displayString;	// IMP=0x000000000083d434
- (id)fullRepresentedString;	// IMP=0x000000000083d3ff
- (void)setRepresentedString:(id)arg1;	// IMP=0x000000000083d3e3
- (id)representedString;	// IMP=0x000000000083d307
- (void)updateVariantTypeForActions:(unsigned int)arg1;	// IMP=0x000000000083d29d
- (int)_variantType;	// IMP=0x000000000083d281
- (void)setState:(int)arg1;	// IMP=0x000000000083d239
- (int)state;	// IMP=0x000000000083d21d
- (id)activeShapesFromOutputShapes:(id)arg1 inputShapes:(id)arg2;	// IMP=0x000000000083cedc
- (void)setActiveGeometriesList:(id)arg1;	// IMP=0x000000000083cec0
- (id)activeGeometriesList;	// IMP=0x000000000083ce8b
- (void)setGeometriesList:(id)arg1;	// IMP=0x000000000083ce6f
- (id)geometriesList;	// IMP=0x000000000083ce3a
- (id)shapesForKeys:(id)arg1;	// IMP=0x000000000083cd60
- (id)listShapes;	// IMP=0x000000000083cbca
- (void)centerKeyplaneInRect:(struct CGRect)arg1 scale:(double)arg2;	// IMP=0x000000000083c675
- (id)supplementaryKeyList;	// IMP=0x000000000083c4ca
- (id)attributeSet:(_Bool)arg1;	// IMP=0x000000000083c2ea
- (id)geometrySet:(_Bool)arg1;	// IMP=0x000000000083c10a
- (id)keySet;	// IMP=0x000000000083bfdd
- (void)updateMoreAndInternationalKeysWithOptions:(int)arg1;	// IMP=0x000000000083bc09
- (void)shiftRowAndResizeLeadingControlKey:(id)arg1 toSize:(struct CGSize)arg2 scale:(double)arg3;	// IMP=0x000000000083b4d7
- (void)replaceKey:(id)arg1 withKey:(id)arg2;	// IMP=0x000000000083b10b
- (void)removeKey:(id)arg1 andShiftKeys:(id)arg2 scale:(double)arg3;	// IMP=0x000000000083aeb8
- (void)insertKey:(id)arg1 withFrame:(struct CGRect)arg2 andShiftKeys:(id)arg3 scale:(double)arg4;	// IMP=0x000000000083a988
- (void)removeKey:(id)arg1;	// IMP=0x000000000083a6a1
- (void)scaleKeys:(id)arg1 withFactor:(struct CGSize)arg2 scale:(double)arg3;	// IMP=0x000000000083a62a
- (void)insetKeys:(id)arg1 withInsets:(struct UIEdgeInsets)arg2 scale:(double)arg3;	// IMP=0x000000000083a5a0
- (void)resizeKeys:(id)arg1 withOffset:(struct CGPoint)arg2 scale:(double)arg3;	// IMP=0x000000000083a529
- (void)repositionKeys:(id)arg1 withOffset:(struct CGPoint)arg2 scale:(double)arg3;	// IMP=0x000000000083a4b2
- (void)centerVerticallyWhilePreservingLayoutWithKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000083a428
- (void)centerHorizontallyWhilePreservingLayoutWithKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000083a39e
- (void)centerWhilePreservingLayoutWithKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000083a314
- (void)centerKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000083a28a
- (id)_horizontallyCoincidentKeysWithKey:(id)arg1;	// IMP=0x000000000083a03c
- (void)_mutateKeys:(id)arg1 scale:(double)arg2 withShapeOperation:(CDUnknownBlockType)arg3;	// IMP=0x0000000000839e38
- (_Bool)addMessagesWriteboardKeyOrRomanSwitch:(_Bool)arg1;	// IMP=0x0000000000839dcd
- (void)addRomanSwitchToCachedKeyListWithShape:(id)arg1 rendering:(int)arg2;	// IMP=0x0000000000839bdd
- (void)addWriteboardKeyToCachedKeyListWithShape:(id)arg1 rendering:(int)arg2;	// IMP=0x00000000008399fe
- (_Bool)addMessagesWriteboardKeyOrRomanSwitchIfNoDismissKey:(_Bool)arg1;	// IMP=0x00000000008391d2
- (_Bool)addMessagesWriteboardKeyOrRomanSwitchIfDismissKey:(_Bool)arg1;	// IMP=0x0000000000837a30
- (id)shapeFromFrame:(struct CGRect)arg1 leftPadding:(double)arg2 rightPadding:(double)arg3;	// IMP=0x00000000008379b0
- (id)keysetCanContainWriteboardKey;	// IMP=0x000000000083746f
- (void)clearManualAddedKey;	// IMP=0x0000000000837232
- (id)rightSpaceKey;	// IMP=0x0000000000837130
- (id)mergeKeyNames:(id)arg1;	// IMP=0x0000000000836948
- (void)subsumeDisappearingKeyName:(id)arg1 intoKeyName:(id)arg2 factors:(id)arg3;	// IMP=0x00000000008368a2
- (id)keysForMergeConditions;	// IMP=0x000000000083657a
- (void)updateDictationKeyOnNumberPads:(_Bool)arg1;	// IMP=0x000000000083629c
- (id)findLeftMoreKey;	// IMP=0x00000000008360b8
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x0000000000836061
- (_Bool)looksLike:(id)arg1;	// IMP=0x0000000000835fe8
- (_Bool)supportsType:(long long)arg1;	// IMP=0x0000000000835db5
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000835d99
- (id)autolocalizedKeyCacheIterator;	// IMP=0x0000000000835d47
- (int)dragThreshold;	// IMP=0x0000000000835d2b
- (double)primaryKeylayoutOffset;	// IMP=0x0000000000835cec
- (double)primaryKeylayoutWidthRatio;	// IMP=0x0000000000835c68
- (_Bool)isSplit;	// IMP=0x0000000000835c36
- (void)cacheNativeIdiomIfNecessaryForScreenTraits:(id)arg1;	// IMP=0x0000000000835b71
- (long long)nativeIdiom;	// IMP=0x0000000000835b3a
- (void)setResizingOffset:(double)arg1;	// IMP=0x0000000000835adf
- (double)resizingOffset;	// IMP=0x0000000000835aab
- (void)setIsGenerated:(_Bool)arg1;	// IMP=0x0000000000835a51
- (_Bool)isGenerated;	// IMP=0x0000000000835a38
- (_Bool)isLetters;	// IMP=0x0000000000835936
- (_Bool)looksExactlyLikeShiftAlternate;	// IMP=0x0000000000835912
- (_Bool)looksLikeShiftAlternate;	// IMP=0x00000000008358b7
- (_Bool)usesKeyCharging;	// IMP=0x000000000083589b
- (_Bool)usesAdaptiveKeys;	// IMP=0x000000000083587f
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x0000000000835863
- (_Bool)noLanguageIndicator;	// IMP=0x0000000000835847
- (_Bool)notUseCandidateSelection;	// IMP=0x000000000083582b
- (_Bool)shouldSuppressDragRetest;	// IMP=0x000000000083580f
- (_Bool)shouldSkipCandidateSelectionForVariants;	// IMP=0x00000000008357f3
- (_Bool)shouldSkipCandidateSelection;	// IMP=0x00000000008357d7
- (_Bool)diacriticForwardCompose;	// IMP=0x00000000008357bb
- (_Bool)isKanaPlane;	// IMP=0x00000000008356b4
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000835698
- (_Bool)isShiftKeyplane;	// IMP=0x000000000083567c
- (id)shiftAlternateKeyplaneName;	// IMP=0x00000000008355ee
- (id)gestureKeyplaneName;	// IMP=0x00000000008355d2
- (id)alternateKeyplaneName;	// IMP=0x0000000000835544
- (_Bool)usesAutoShift;	// IMP=0x0000000000835528
- (id)keysExcludingEmptyKeys;	// IMP=0x0000000000835492
- (id)keysWithString:(id)arg1;	// IMP=0x00000000008352c3
- (id)keysByKeyName:(id)arg1;	// IMP=0x00000000008350f7
- (id)geometriesOrderedByPosition;	// IMP=0x00000000008350c3
- (id)keysOrderedByPositionRTL;	// IMP=0x000000000083508a
- (id)keysOrderedByPosition;	// IMP=0x0000000000835078
- (id)keysOrderedByPositionWithoutZip;	// IMP=0x0000000000834cb9
- (void)clearTransientCaches;	// IMP=0x0000000000834bae
- (id)keyAttributes;	// IMP=0x000000000083483f
- (id)geometries;	// IMP=0x0000000000834565
- (void)removeKeyFromAllCachedLists:(id)arg1;	// IMP=0x00000000008342b6
- (void)removeKeyFromCachedKeyList:(id)arg1;	// IMP=0x00000000008340e2
- (void)addkeyToCachedKeyList:(id)arg1;	// IMP=0x0000000000833f6b
- (id)keys;	// IMP=0x0000000000833dcc
- (void)_addKeylayoutKeys:(id)arg1;	// IMP=0x0000000000833c5f
- (void)setAttributes:(id)arg1;	// IMP=0x0000000000833ad3
- (long long)keyboardLayoutStyle;	// IMP=0x0000000000833a6a
- (id)keyplaneForKey:(id)arg1;	// IMP=0x00000000008337ba
- (id)keyForString:(id)arg1;	// IMP=0x000000000083351d
- (void)precacheLayoutName:(id)arg1;	// IMP=0x00000000008334e5
- (id)layoutName;	// IMP=0x0000000000833460
- (void)cacheKey:(id)arg1;	// IMP=0x00000000008331ef
- (id)_cacheRootNameForKey:(id)arg1;	// IMP=0x0000000000832e50
- (unsigned long long)numberOfRows;	// IMP=0x0000000000832ba9
- (id)scriptSwitchKey;	// IMP=0x00000000008329ea
- (id)keyplaneSwitchKeysWithoutCurrentKeyplane:(id)arg1;	// IMP=0x0000000000832625
- (id)keyplaneSwitchKeys;	// IMP=0x000000000083248f
- (id)firstKeyplaneSwitchKey;	// IMP=0x0000000000832320
- (id)firstCachedKeyWithName:(id)arg1;	// IMP=0x00000000008322e0
- (id)cachedKeysByKeyName:(id)arg1;	// IMP=0x00000000008322af
- (void)setVisualStyling:(CDStruct_227bb23d)arg1;	// IMP=0x000000000083226c
- (CDStruct_227bb23d)visualStyling;	// IMP=0x0000000000832214
- (CDStruct_227bb23d)visualStylingForScreenTraits:(id)arg1;	// IMP=0x0000000000831e2d
- (CDStruct_227bb23d)stylingFromVisualStyle;	// IMP=0x0000000000831e19
- (void)setVisualStyle:(int)arg1;	// IMP=0x0000000000831dd7
- (int)visualStyle;	// IMP=0x0000000000831dbb
- (struct CGRect)keyUnionPaddedFrame;	// IMP=0x0000000000831d83
- (struct CGRect)keyUnionFrame;	// IMP=0x0000000000831d4e
- (struct CGRect)keyUnionFramePadded:(_Bool)arg1;	// IMP=0x00000000008319f1
- (struct CGPoint)navigationPointOfKey;	// IMP=0x00000000008318d7
- (void)setPaddedFrame:(struct CGRect)arg1;	// IMP=0x0000000000831889
- (struct CGRect)paddedFrame;	// IMP=0x000000000083180c
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000008317be
- (struct CGRect)originalFrame;	// IMP=0x00000000008316e8
- (struct CGRect)frame;	// IMP=0x0000000000831639
- (struct CGRect)_originalKeyplaneFrame;	// IMP=0x00000000008313b3
- (struct CGRect)_keyplaneFrame;	// IMP=0x000000000083112d
- (void)setGeometry:(id)arg1;	// IMP=0x00000000008310dc
- (id)geometry;	// IMP=0x000000000083108c
- (void)setShape:(id)arg1;	// IMP=0x000000000083106c
- (id)shape;	// IMP=0x000000000083104c
- (_Bool)subtreesAreOrdered;	// IMP=0x0000000000831033
- (_Bool)isLeafType;	// IMP=0x0000000000831014
- (void)elaborateLayoutWithSize:(struct CGSize)arg1 scale:(double)arg2 origin:(struct CGPoint)arg3;	// IMP=0x000000000082ffe1
- (void)elaborateLayoutWithSize:(struct CGSize)arg1 scale:(double)arg2;	// IMP=0x000000000082ffbc
- (long long)_keyCountOnNamedRow:(id)arg1;	// IMP=0x000000000082fe33
- (void)zipAttributes;	// IMP=0x000000000082fe1a
- (void)zipOnlyGeometrySet;	// IMP=0x000000000082fe01
- (void)zipGeometrySet;	// IMP=0x000000000082fde5
- (void)zipGeometries:(_Bool)arg1 attributes:(_Bool)arg2;	// IMP=0x000000000082f52c
- (void)updateFlickKeycapOnKeys;	// IMP=0x000000000082e7ca
- (void)mergeReturnKey:(id)arg1 withReturnKey:(id)arg2;	// IMP=0x000000000082df63
- (_Bool)_needsScaling;	// IMP=0x000000000082df11
- (int)indexOfSubtree:(id)arg1;	// IMP=0x000000000082deb5
- (id)subtreesWithProperty:(id)arg1 value:(id)arg2;	// IMP=0x000000000082dcbd
- (id)subtreeWithName:(id)arg1 rows:(id)arg2;	// IMP=0x000000000082db38
- (id)subtreeWithName:(id)arg1;	// IMP=0x000000000082d906
- (id)subtreeWithType:(int)arg1;	// IMP=0x000000000082d7a4
- (id)recursiveDescription;	// IMP=0x000000000082d55d
- (id)description;	// IMP=0x000000000082d47f
- (id)numberForProperty:(id)arg1;	// IMP=0x000000000082d46d
- (_Bool)boolForProperty:(id)arg1;	// IMP=0x000000000082d3dc
- (long long)intForProperty:(id)arg1;	// IMP=0x000000000082d3ac
- (id)stringForProperty:(id)arg1;	// IMP=0x000000000082d39a
- (id)objectForProperty:(id)arg1;	// IMP=0x000000000082d31b
- (_Bool)setObject:(id)arg1 forProperty:(id)arg2;	// IMP=0x000000000082d261
- (_Bool)isDuplicateOfTree:(id)arg1;	// IMP=0x000000000082d120
- (_Bool)isEqualToTree:(id)arg1;	// IMP=0x000000000082d0ba
- (_Bool)isSameAsTree:(id)arg1;	// IMP=0x000000000082cba1
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000082c968
- (void)dealloc;	// IMP=0x000000000082c902
- (id)initWithType:(int)arg1 withName:(id)arg2 withProperties:(id)arg3 withSubtrees:(id)arg4 withCache:(id)arg5;	// IMP=0x000000000082c76e
- (id)initWithType:(int)arg1;	// IMP=0x000000000082c63e
- (_Bool)isHashed;	// IMP=0x000000000082c593
- (id)componentName;	// IMP=0x000000000082c53a
- (id)unhashedName;	// IMP=0x000000000082c520
- (id)nameFromAttributes;	// IMP=0x000000000082c225

@end

