//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIKeyboardInput-Protocol.h>
#import <UIKitCore/UITextInputPrivate-Protocol.h>

@class NSDictionary, NSIndexSet, NSString, RTIInputSystemSourceSession, UIColor, UIImage, UIInputContextHistory, UITextInputPasswordRules, UITextInputTraits, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, _UISupplementalLexicon;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer;

@interface UIDefaultKeyboardInput <UIKeyboardInput, UITextInputPrivate>
{
    UITextInputTraits *m_traits;	// 8 = 0x8
}

- (id)selectionRectsForRange:(id)arg1;	// IMP=0x000000000092bb33
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000092bb15
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000092bb0d
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000092bb05
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000092bafd
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x000000000092baf5
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x000000000092baed
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x000000000092bae5
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x000000000092badd
- (void)unmarkText;	// IMP=0x000000000092bad7
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x000000000092bad1
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x000000000092bac9
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x000000000092bac1
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x000000000092bab9
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000092bab1
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x000000000092baa9
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x000000000092baa1
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x000000000092ba6d
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x000000000092ba4f
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x000000000092ba49
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x000000000092ba41
- (id)textInRange:(id)arg1;	// IMP=0x000000000092ba39
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(copy) UITextRange *selectedTextRange;
@property(readonly, nonatomic) _Bool hasText;
- (struct CGRect)visibleBounds;	// IMP=0x000000000092b9e0
- (void)setBecomesEditableWithGestures:(_Bool)arg1;	// IMP=0x000000000092b9da
- (_Bool)becomesEditableWithGestures;	// IMP=0x000000000092b9d2
- (void)updateSelection;	// IMP=0x000000000092b9cc
- (_Bool)isEditing;	// IMP=0x000000000092b9c4
- (_Bool)isEditable;	// IMP=0x000000000092b9bc
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)selectionView;	// IMP=0x000000000092b9ac
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool acceptsEmoji; // @dynamic acceptsEmoji;
- (void)setSecure:(_Bool)arg1;	// IMP=0x000000000092b97c
- (_Bool)isSecure;	// IMP=0x000000000092b974
- (void)setupPlaceholderTextIfNeeded;	// IMP=0x000000000092b96e
- (_Bool)isShowingPlaceholder;	// IMP=0x000000000092b966
- (struct CGRect)convertCaretRect:(struct CGRect)arg1;	// IMP=0x000000000092b94e
- (struct CGRect)caretRect;	// IMP=0x000000000092b930
- (void)setSelectionWithPoint:(struct CGPoint)arg1;	// IMP=0x000000000092b92a
- (id)text;	// IMP=0x000000000092b922
- (void)setText:(id)arg1;	// IMP=0x000000000092b91c
- (void)selectAll;	// IMP=0x000000000092b916
- (void)extendCurrentSelection:(int)arg1;	// IMP=0x000000000092b910
- (id)rangeByExtendingCurrentSelection:(int)arg1;	// IMP=0x000000000092b908
- (id)rangeByMovingCurrentSelection:(int)arg1;	// IMP=0x000000000092b900
- (struct _NSRange)selectionRange;	// IMP=0x000000000092b8ee
- (_Bool)selectionAtWordStart;	// IMP=0x000000000092b8e6
- (_Bool)selectionAtDocumentStart;	// IMP=0x000000000092b8de
- (int)selectionState;	// IMP=0x000000000092b8d6
- (_Bool)hasSelection;	// IMP=0x000000000092b8ce
- (_Bool)hasContent;	// IMP=0x000000000092b8c6
- (int)wordOffsetInRange:(id)arg1;	// IMP=0x000000000092b8bb
- (id)rectsForNSRange:(struct _NSRange)arg1;	// IMP=0x000000000092b8b3
- (id)textColorForCaretSelection;	// IMP=0x000000000092b89a
- (id)fontForCaretSelection;	// IMP=0x000000000092b892
- (unsigned short)characterAfterCaretSelection;	// IMP=0x000000000092b88a
- (unsigned short)characterBeforeCaretSelection;	// IMP=0x000000000092b882
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;	// IMP=0x000000000092b87a
- (void)confirmMarkedText:(id)arg1;	// IMP=0x000000000092b874
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x000000000092b86e
- (void)replaceCurrentWordWithText:(id)arg1;	// IMP=0x000000000092b868
- (void)insertText:(id)arg1;	// IMP=0x000000000092b862
- (void)deleteBackward;	// IMP=0x000000000092b85c
- (id)delegate;	// IMP=0x000000000092b854
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x000000000092b823
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x000000000092b7d5
- (void)forwardInvocation:(id)arg1;	// IMP=0x000000000092b743
- (id)textInputTraits;	// IMP=0x000000000092b714
- (void)dealloc;	// IMP=0x000000000092b6d2

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue; // @dynamic contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(retain, nonatomic) UIColor *insertionPointColor; // @dynamic insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth; // @dynamic insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) long long selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType; // @dynamic shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(readonly, nonatomic) _Bool supportsImagePaste;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType; // @dynamic textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility; // @dynamic textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior; // @dynamic textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate; // @dynamic textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet; // @dynamic textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

