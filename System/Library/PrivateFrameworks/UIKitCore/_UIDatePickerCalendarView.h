//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/_UIDatePickerCalendarDateViewDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerCalendarHeaderViewDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerCalendarMonthYearSelectorDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerCalendarTimeViewDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerViewComponent-Protocol.h>

@class NSLayoutConstraint, NSString, UIColor, UIDatePicker, UIStackView, _UIDatePickerCalendarDateView, _UIDatePickerCalendarHeaderView, _UIDatePickerCalendarMonthYearSelector, _UIDatePickerCalendarTimeView, _UIDatePickerDataModel, _UIDatePickerDateRange;

__attribute__((visibility("hidden")))
@interface _UIDatePickerCalendarView <_UIDatePickerCalendarHeaderViewDelegate, _UIDatePickerCalendarDateViewDelegate, _UIDatePickerCalendarTimeViewDelegate, _UIDatePickerCalendarMonthYearSelectorDelegate, _UIDatePickerViewComponent>
{
    struct {
        unsigned int needsUpdateDate:1;
        unsigned int isEnabled:1;
    } _flags;	// 8 = 0x8
    UIStackView *_contentView;	// 16 = 0x10
    _UIDatePickerCalendarHeaderView *_headerView;	// 24 = 0x18
    _UIDatePickerCalendarDateView *_dateView;	// 32 = 0x20
    _UIDatePickerCalendarTimeView *_timeView;	// 40 = 0x28
    _UIDatePickerDateRange *_dateRange;	// 48 = 0x30
    long long _viewState;	// 56 = 0x38
    _UIDatePickerCalendarMonthYearSelector *_monthYearSelector;	// 64 = 0x40
    NSLayoutConstraint *_minimumWidthConstraint;	// 72 = 0x48
    NSLayoutConstraint *_maximumWidthConstraint;	// 80 = 0x50
    struct CGSize _lastSize;	// 88 = 0x58
    unsigned long long _stateUpdatesInFlight;	// 104 = 0x68
    UIDatePicker *_datePicker;	// 112 = 0x70
    _UIDatePickerDataModel *_data;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x00000000000a9d3e
@property(retain, nonatomic) _UIDatePickerDataModel *data; // @synthesize data=_data;
@property(nonatomic) __weak UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (id)primaryFirstResponder;	// IMP=0x00000000000a9c4c
- (void)_setEnabled:(_Bool)arg1;	// IMP=0x00000000000a9c26
- (_Bool)hasDefaultSize;	// IMP=0x00000000000a9c1e
- (struct CGSize)defaultSize;	// IMP=0x00000000000a9c08
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000000a9bf2
- (_Bool)usesAutoLayout;	// IMP=0x00000000000a9bea
- (struct UIEdgeInsets)_appliedInsetsToEdgeOfContent;	// IMP=0x00000000000a9a96
- (void)_setHidesLabels:(_Bool)arg1;	// IMP=0x00000000000a9a90
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode;
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;
- (void)didChangeCustomFontDescriptor;	// IMP=0x00000000000a9a5a
- (void)didChangeToday;	// IMP=0x00000000000a9a48
- (void)didReset;	// IMP=0x00000000000a9a36
- (void)didChangeRoundsToMinuteInterval;	// IMP=0x00000000000a99f2
- (void)didChangeMinuteInterval;	// IMP=0x00000000000a99ae
- (void)didChangeMaximumDate;	// IMP=0x00000000000a999c
- (void)didChangeMinimumDate;	// IMP=0x00000000000a998a
- (void)displaySelectedDateAnimated:(_Bool)arg1;	// IMP=0x00000000000a9901
- (void)didChangeDateFrom:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a98ef
- (void)didChangeCalendar;	// IMP=0x00000000000a98dd
- (void)didChangeTimeZone;	// IMP=0x00000000000a98cb
- (void)didChangeLocale;	// IMP=0x00000000000a98b9
- (void)didChangeMode;	// IMP=0x00000000000a9852
@property(readonly, nonatomic) long long datePickerStyle;
- (void)monthYearSelector:(id)arg1 didSelectMonth:(id)arg2;	// IMP=0x00000000000a9779
- (id)createDatePickerForTimeView:(id)arg1;	// IMP=0x00000000000a96e0
- (void)timeViewDidEndEditing:(id)arg1;	// IMP=0x00000000000a9693
- (void)timeViewDidBeginEditing:(id)arg1;	// IMP=0x00000000000a9656
- (void)timeViewWillBecomeFirstResponder:(id)arg1;	// IMP=0x00000000000a9644
- (void)timeView:(id)arg1 didSelectTime:(id)arg2;	// IMP=0x00000000000a962a
- (void)dateView:(id)arg1 didShowMonth:(id)arg2;	// IMP=0x00000000000a9610
- (void)dateView:(id)arg1 didSelectDate:(id)arg2;	// IMP=0x00000000000a95f3
- (void)headerViewDidSelect:(id)arg1;	// IMP=0x00000000000a95cb
- (void)headerViewDidStepBackward:(id)arg1;	// IMP=0x00000000000a9548
- (void)headerViewDidStepForward:(id)arg1;	// IMP=0x00000000000a94c5
- (void)_headerViewWantsToMoveToMonth:(id)arg1;	// IMP=0x00000000000a94ae
- (void)_updateVisibleMonth:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a9427
- (void)_updateDateViewForVisibleMonth:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a940a
- (_Bool)_shouldUpdateDateViewForVisibleMonth:(id)arg1;	// IMP=0x00000000000a9395
- (void)_updateHeaderViewForVisibleMonth:(id)arg1;	// IMP=0x00000000000a9378
- (_Bool)_shouldUpdateHeaderViewForVisibleMonth:(id)arg1;	// IMP=0x00000000000a9303
- (void)_updateSelectedDayToDayInMonth:(id)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;	// IMP=0x00000000000a9182
- (void)_updateSelectedTime:(id)arg1 notify:(_Bool)arg2;	// IMP=0x00000000000a90fa
- (void)_updateSelectedDay:(id)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;	// IMP=0x00000000000a906d
- (void)_updateSelectedDay:(id)arg1 time:(id)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;	// IMP=0x00000000000a8c11
- (void)_updateTimeViewForSelectedDate:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a8bf4
- (_Bool)_shouldUpdateTimeViewForSelectedTime:(id)arg1;	// IMP=0x00000000000a8b7f
- (void)_updateMonthYearSelectorForSelectedDay:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a8b23
- (_Bool)_shouldUpdateMonthYearSelectorForSelectedDay:(id)arg1;	// IMP=0x00000000000a8a7c
- (void)_updateDateViewForSelectedDay:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a8a5f
- (_Bool)_shouldUpdateDateViewForSelectedDay:(id)arg1;	// IMP=0x00000000000a89ea
- (void)_updateHeaderViewForSelectedDay:(id)arg1;	// IMP=0x00000000000a89cd
- (_Bool)_shouldUpdateHeaderViewForSelectedDay:(id)arg1;	// IMP=0x00000000000a8958
- (void)_updateDataForComponents:(id)arg1;	// IMP=0x00000000000a88f2
- (_Bool)_shouldUpdateDataForComponents:(id)arg1 date:(id)arg2;	// IMP=0x00000000000a887d
- (void)_updateCustomFonts;	// IMP=0x00000000000a87f4
- (void)_updateModuleVisibility;	// IMP=0x00000000000a8315
- (void)_updateEnabledStyling;	// IMP=0x00000000000a8265
- (void)_reload;	// IMP=0x00000000000a80ad
- (void)_reloadMonthYearSelector;	// IMP=0x00000000000a7f3d
- (void)_reloadTimeView;	// IMP=0x00000000000a7e84
- (void)_reloadDateView;	// IMP=0x00000000000a7ced
- (void)_reloadHeaderView;	// IMP=0x00000000000a7b61
- (void)_reloadDateRange;	// IMP=0x00000000000a7a4b
- (void)_updateDate;	// IMP=0x00000000000a78dc
- (void)_updateDateIfNeeded;	// IMP=0x00000000000a78bb
- (void)_setNeedsUpdateDate;	// IMP=0x00000000000a789e
- (void)_destroyMonthYearSelector;	// IMP=0x00000000000a7866
- (void)_setupMonthYearSelector;	// IMP=0x00000000000a751d
- (void)_updateViewState:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000a7206
- (void)_updateContentSizeLimitations;	// IMP=0x00000000000a7119
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000000a7087
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000000a6e8d
- (struct CGSize)intrinsicContentSize;	// IMP=0x00000000000a6e21
- (void)layoutSubviews;	// IMP=0x00000000000a6de0
- (void)layoutMarginsDidChange;	// IMP=0x00000000000a6d9f
- (void)_updateLayoutMargins;	// IMP=0x00000000000a6d15
- (void)_workaround66574039_datePickerDidUpdateLayoutMargins;	// IMP=0x00000000000a6b37
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000a62b8

// Remaining properties
@property(readonly, nonatomic) double contentWidth;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property(readonly) Class superclass;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property(nonatomic) double timeInterval;

@end

