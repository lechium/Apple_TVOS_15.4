//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIAutoscrollContainer-Protocol.h>
#import <UIKitCore/UIGestureRecognizerDelegate-Protocol.h>
#import <UIKitCore/UIKeyInput-Protocol.h>
#import <UIKitCore/UIKeyboardInput-Protocol.h>
#import <UIKitCore/UIPreviewItemDelegate-Protocol.h>
#import <UIKitCore/UITextAutoscrolling-Protocol.h>
#import <UIKitCore/UITextInputMultiDocument-Protocol.h>
#import <UIKitCore/UITextInputPrivate-Protocol.h>
#import <UIKitCore/UITextInputTokenizer-Protocol.h>
#import <UIKitCore/UIWebFileUploadPanelDelegate-Protocol.h>
#import <UIKitCore/WebEditingDelegate-Protocol.h>
#import <UIKitCore/WebFrameLoadDelegate-Protocol.h>
#import <UIKitCore/_UIRotatingAlertControllerDelegate-Protocol.h>
#import <UIKitCore/_UIWebDoubleTapDelegate-Protocol.h>

@class CALayer, DOMHTMLElement, DOMNode, DOMRange, NSArray, NSDictionary, NSIndexSet, NSString, NSTimer, RTIInputSystemSourceSession, UIAutoscroll, UIColor, UIImage, UIInputContextHistory, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPreviewItemController, UITapGestureRecognizer, UITextChecker, UITextInputPasswordRules, UITextInputTraits, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, UIWebFileUploadPanel, UIWebPlaybackTargetPicker, UIWebRotatingAlertController, UIWebTextPlaceholder, WebHistoryItem, WebThreadSafeUndoManager, WebView, _UISupplementalLexicon, _UITextServiceSession, _UIWebHighlightLongPressGestureRecognizer, _UIWebViewportHandler;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer;

@interface UIWebDocumentView <UIPreviewItemDelegate, _UIRotatingAlertControllerDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UITextInputPrivate, UIKeyInput, UITextInputTokenizer, UITextInputMultiDocument, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate, WebEditingDelegate, WebFrameLoadDelegate>
{
    WebView *_webView;	// 136 = 0x88
    id m_parentTextView;	// 144 = 0x90
    id _delegate;	// 152 = 0x98
    id _textSuggestionDelegate;	// 160 = 0xa0
    struct CGRect _doubleTapRect;	// 168 = 0xa8
    struct CGRect _mainDocumentDoubleTapRect;	// 200 = 0xc8
    struct CGPoint _scrollPoint;	// 232 = 0xe8
    struct CGPoint _doubleTapStartPosition;	// 248 = 0xf8
    double _doubleTapStartTime;	// 264 = 0x108
    struct CGSize _pendingSize;	// 272 = 0x110
    long long _orientation;	// 288 = 0x120
    DOMHTMLElement *_standaloneEditingElement;	// 296 = 0x128
    struct CGPoint _mouseDownPoint;	// 304 = 0x130
    double _mouseDownTime;	// 320 = 0x140
    UIAutoscroll *_autoscroll;	// 328 = 0x148
    struct __CFDictionary *_plugInViews;	// 336 = 0x150
    long long m_selectionGranularity;	// 344 = 0x158
    CALayer *_contentLayersHostingLayer;	// 352 = 0x160
    CALayer *_flattenedRotatingContentLayer;	// 360 = 0x168
    NSArray *_additionalSubviews;	// 368 = 0x170
    UITextInputTraits *_traits;	// 376 = 0x178
    id <UITextInputDelegate> _inputDelegate;	// 384 = 0x180
    UITapGestureRecognizer *_singleTapGestureRecognizer;	// 392 = 0x188
    UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 400 = 0x190
    UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 408 = 0x198
    _UIWebHighlightLongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 416 = 0x1a0
    UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 424 = 0x1a8
    UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 432 = 0x1b0
    UILongPressGestureRecognizer *_previewGestureRecognizer;	// 440 = 0x1b8
    UILongPressGestureRecognizer *_previewSecondaryGestureRecognizer;	// 448 = 0x1c0
    _Bool _panGestureWasEnabled;	// 456 = 0x1c8
    _Bool _pinchGestureWasEnabled;	// 457 = 0x1c9
    UIPreviewItemController *_previewItemController;	// 464 = 0x1d0
    struct {
        NSTimer *timer;
        struct CGPoint location;
        long long modifierFlags;
        _Bool isBlocked;
        _Bool isCancelled;
        _Bool isOnWebThread;
        _Bool isDisplayingHighlight;
        _Bool attemptedClick;
        struct CGPoint lastPanTranslation;
        DOMNode *element;
        id delegate;
        UIWebRotatingAlertController *interactionSheet;
        _Bool allowsImageSheet;
        _Bool allowsDataDetectorsSheet;
        _Bool allowsLinkSheet;
        _Bool acceptsFirstResponder;
        double documentScale;
        NSArray *previewHintRects;
        UIImage *previewHintImage;
    } _interaction;	// 472 = 0x1d8
    _UIWebViewportHandler *_viewportHandler;	// 584 = 0x248
    int _documentType;	// 592 = 0x250
    float _documentScale;	// 596 = 0x254
    float _previousDocumentScale;	// 600 = 0x258
    struct CGSize _fixedLayoutOriginRoundingDelta;	// 608 = 0x260
    struct CGSize _fixedLayoutSizeRoundingDelta;	// 624 = 0x270
    unsigned int _mouseDownCount;	// 640 = 0x280
    unsigned int _printModeCount;	// 644 = 0x284
    unsigned long long _dataDetectorTypes;	// 648 = 0x288
    unsigned int _webCoreNeedsSetNeedsDisplay:1;	// 656 = 0x290
    unsigned int _webCoreNeedsDraw:1;	// 656 = 0x290
    unsigned int _ignoresFocusingMouse:1;	// 656 = 0x290
    unsigned int _ignoresKeyEvents:1;	// 656 = 0x290
    unsigned int _autoresizes:1;	// 656 = 0x290
    unsigned int _ignoresViewportOverflowWhenAutoresizing:1;	// 656 = 0x290
    unsigned int _shouldIgnoreCustomViewport:1;	// 656 = 0x290
    unsigned int _updatingSize:1;	// 656 = 0x290
    unsigned int _scalesToFit:1;	// 657 = 0x291
    unsigned int _alwaysConstrainsScale:1;	// 657 = 0x291
    unsigned int _updatesScrollView:1;	// 657 = 0x291
    unsigned int _hasCustomScale:1;	// 657 = 0x291
    unsigned int _shouldRestoreScrollPosition:1;	// 657 = 0x291
    unsigned int _pageNeedsReset:1;	// 657 = 0x291
    unsigned int _hasScrollPoint:1;	// 657 = 0x291
    unsigned int _gesturesDisabled:1;	// 657 = 0x291
    unsigned int _doubleTapRectIsReplaced:1;	// 658 = 0x292
    unsigned int _standaloneEditableView:1;	// 658 = 0x292
    unsigned int _widgetEditingView:1;	// 658 = 0x292
    unsigned int _mouseDragged:1;	// 658 = 0x292
    unsigned int _mouseReentrancyGuard:1;	// 658 = 0x292
    unsigned int _isShowingFullScreenPlugIn:1;	// 658 = 0x292
    unsigned int _isSettingRedrawFrame:1;	// 658 = 0x292
    unsigned int _needsScrollNotifications:1;	// 658 = 0x292
    unsigned int _loadsSynchronously:1;	// 659 = 0x293
    unsigned int _mouseDown:1;	// 659 = 0x293
    unsigned int _geolocationDialogAllowed:1;	// 659 = 0x293
    unsigned int _usingMinimalTilesDuringLoading:1;	// 659 = 0x293
    unsigned int _sheetsCount:2;	// 659 = 0x293
    unsigned int _didFirstVisuallyNonEmptyLayout:1;	// 659 = 0x293
    unsigned int _loadInProgress:1;	// 659 = 0x293
    unsigned int _uiwdvIsResigningFirstResponder:1;	// 660 = 0x294
    unsigned int _sizeUpdatesSuspended:1;	// 660 = 0x294
    unsigned int _sizeUpdateOccurredWhileSuspended:1;	// 660 = 0x294
    unsigned int _shouldOnlyRecognizeGesturesOnActiveElements:1;	// 660 = 0x294
    unsigned int _ignoresFocusEventFromFirstResponderChange:1;	// 660 = 0x294
    unsigned int _shouldCloseWebViewAtDealloc:1;	// 660 = 0x294
    unsigned int _shouldRemoveUserStyleSheet:1;	// 660 = 0x294
    unsigned int _hasDrawnTiles:1;	// 660 = 0x294
    unsigned int _showingTextStyleOptions:1;	// 661 = 0x295
    unsigned int _subviewCachesNeedUpdate:1;	// 661 = 0x295
    unsigned int _avoidFixedPositionUpdateViaDidScroll:1;	// 661 = 0x295
    unsigned int _inspectorSearchingForNode:1;	// 661 = 0x295
    unsigned int _previousScrollWasScrollToTop:1;	// 661 = 0x295
    unsigned int _pageIsLoadedFromPageCache:1;	// 661 = 0x295
    unsigned int _shouldSendWillShowInteractionHighlight:1;	// 661 = 0x295
    WebThreadSafeUndoManager *_undoManager;	// 664 = 0x298
    UITextInteractionAssistant *_textSelectionAssistant;	// 672 = 0x2a0
    UITextChecker *_textChecker;	// 680 = 0x2a8
    struct UIEdgeInsets _caretInsets;	// 688 = 0x2b0
    UIWebFileUploadPanel *_fileUploadPanel;	// 720 = 0x2d0
    int _selectionAffinity;	// 728 = 0x2d8
    UIWebTextPlaceholder *_textPlaceholder;	// 736 = 0x2e0
    id _textPlaceholderRemovalObserver;	// 744 = 0x2e8
    DOMRange *_rangeToRestoreAfterDictation;	// 752 = 0x2f0
    UIWebPlaybackTargetPicker *_playbackTargetPicker;	// 760 = 0x2f8
    struct _UIWebViewportConfiguration _defaultViewportConfigurations[5];	// 768 = 0x300
    _UITextServiceSession *_definitionSession;	// 928 = 0x3a0
    _UITextServiceSession *_learnSession;	// 936 = 0x3a8
    _UITextServiceSession *_shareSession;	// 944 = 0x3b0
    _UITextServiceSession *_lookupSession;	// 952 = 0x3b8
    _UITextServiceSession *_translateSession;	// 960 = 0x3c0
    WebHistoryItem *_latestCommittedPageLoadHistoryItem;	// 968 = 0x3c8
    _Bool _suppressesIncrementalRendering;	// 976 = 0x3d0
    _Bool _wantsMinimalUI;	// 977 = 0x3d1
    unsigned long long _renderTreeSize;	// 984 = 0x3d8
    unsigned long long _renderTreeSizeThresholdForReset;	// 992 = 0x3e0
    struct CGRect _exposedScrollViewRect;	// 1000 = 0x3e8
}

+ (id)standardTextViewPreferences;	// IMP=0x00000000010d3b5c
+ (_Bool)hasLandscapeOrientation;	// IMP=0x00000000010d012b
+ (void)initialize;	// IMP=0x00000000010cb21f
+ (double)getTimestamp;	// IMP=0x00000000010cb1f3
+ (Class)layerClass;	// IMP=0x00000000010cb1e2
+ (id)_sharedHighlightView;	// IMP=0x00000000010ddd53
+ (id)_createDefaultHighlightView;	// IMP=0x00000000010ddca7
@property(nonatomic) unsigned long long renderTreeSizeThresholdForReset; // @synthesize renderTreeSizeThresholdForReset=_renderTreeSizeThresholdForReset;
@property(readonly, nonatomic) unsigned long long renderTreeSize; // @synthesize renderTreeSize=_renderTreeSize;
@property(readonly, nonatomic) _Bool wantsMinimalUI; // @synthesize wantsMinimalUI=_wantsMinimalUI;
@property(nonatomic) struct CGRect exposedScrollViewRect; // @synthesize exposedScrollViewRect=_exposedScrollViewRect;
@property(nonatomic) _Bool suppressesIncrementalRendering; // @synthesize suppressesIncrementalRendering=_suppressesIncrementalRendering;
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation; // @synthesize rangeToRestoreAfterDictation=_rangeToRestoreAfterDictation;
- (void)willZoomToLocation:(struct CGPoint)arg1 atScale:(double)arg2 forDuration:(double)arg3;	// IMP=0x00000000010da3f9
- (_Bool)shouldSelectionAssistantReceiveDoubleTapAtPoint:(struct CGPoint)arg1 forScale:(double)arg2;	// IMP=0x00000000010da37d
- (void)willZoomToMinimumScale;	// IMP=0x00000000010da36b
- (_Bool)considerHeightForDoubleTap;	// IMP=0x00000000010da359
- (CDStruct_cf303044)doubleTapScalesForSize:(struct CGSize)arg1;	// IMP=0x00000000010da2f5
- (struct CGRect)rectOfInterestForPoint:(struct CGPoint)arg1;	// IMP=0x00000000010da09c
- (double)minimumScaleForSize:(struct CGSize)arg1;	// IMP=0x00000000010da085
- (struct CGRect)visibleContentRect;	// IMP=0x00000000010da03c
- (double)currentDocumentScale;	// IMP=0x00000000010da02a
- (double)zoomedDocumentScale;	// IMP=0x00000000010da018
- (id)contentView;	// IMP=0x00000000010da00f
- (id)enclosingScrollView;	// IMP=0x00000000010d9ffd
- (_Bool)_isInspectorSearchingForNode;	// IMP=0x00000000010d9fe8
- (_Bool)_shouldResetForNewPage;	// IMP=0x00000000010d9f77
- (int)documentType;	// IMP=0x00000000010d9f67
- (id)_documentUrl;	// IMP=0x00000000010d9f0a
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x00000000010d9ea9
@property(nonatomic) long long selectionGranularity;
@property(nonatomic) long long selectionAffinity;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x00000000010d9dbd
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000010d9d99
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000010d9d0b
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x00000000010d9c8e
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010d9bd1
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x00000000010d9ad5
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x00000000010d9a75
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x00000000010d980d
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (struct CGRect)_lastRectForRange:(id)arg1;	// IMP=0x00000000010d972d
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x00000000010d9683
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000010d95e0
- (void)_scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;	// IMP=0x00000000010d958f
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000010d9545
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000010d94d6
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000010d9466
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x00000000010d944e
- (id)_positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(_Bool)arg4;	// IMP=0x00000000010d93ca
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x00000000010d934d
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000010d92f9
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000010d92a6
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x00000000010d91e1
- (id)rangeOfEnclosingWord:(id)arg1;	// IMP=0x00000000010d90ea
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000010d9037
- (id)textInRange:(id)arg1;	// IMP=0x00000000010d8fc3
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x00000000010d8ed7
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;	// IMP=0x00000000010d8dee
@property(copy) UITextRange *selectedTextRange;
@property(readonly, nonatomic) _Bool hasText;
- (id)_textSelectingContainer;	// IMP=0x00000000010d8c93
- (_Bool)hasBodyElement;	// IMP=0x00000000010d8c55
- (void)setTileUpdatesDisabled:(_Bool)arg1;	// IMP=0x00000000010d8c26
- (void)_restoreFlattenedContentLayers;	// IMP=0x00000000010d8ba6
- (void)_flattenAndSwapContentLayersInRect:(struct CGRect)arg1;	// IMP=0x00000000010d8a2e
- (void *)_createIOSurfaceFromRect:(struct CGRect)arg1;	// IMP=0x00000000010d8a26
- (_Bool)_shouldFlattenContentLayersForRect:(struct CGRect)arg1;	// IMP=0x00000000010d88fb
- (unsigned int)_contentSizeInExposedRect:(struct CGRect)arg1 topLayer:(id)arg2 visibleLayerCount:(int *)arg3;	// IMP=0x00000000010d8661
- (double)maximumDoubleTapScale;	// IMP=0x00000000010d8653
- (void)didEndZoom;	// IMP=0x00000000010d85dd
- (void)didZoom;	// IMP=0x00000000010d8594
- (void)willStartZoom;	// IMP=0x00000000010d854c
- (void)scrollViewWasRemoved;	// IMP=0x00000000010d8538
- (void)didEndScroll;	// IMP=0x00000000010d84a9
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// IMP=0x00000000010d8490
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// IMP=0x00000000010d8443
- (void)_updateFixedPositioningObjectsLayoutDuringScroll;	// IMP=0x00000000010d842a
- (void)willStartScrollToTop;	// IMP=0x00000000010d83e4
- (void)willStartScroll;	// IMP=0x00000000010d838d
- (void)useSelectionAssistantWithMode:(int)arg1;	// IMP=0x00000000010d837b
- (void)resetSelectionAssistant;	// IMP=0x00000000010d8302
- (void)setBecomesEditableWithGestures:(_Bool)arg1;	// IMP=0x00000000010d82fc
- (_Bool)becomesEditableWithGestures;	// IMP=0x00000000010d82f4
- (_Bool)playsNicelyWithGestures;	// IMP=0x00000000010d82ec
- (struct CGRect)autoscrollContentFrame;	// IMP=0x00000000010d82ce
- (struct CGRect)autoscrollDragFrame;	// IMP=0x00000000010d82b0
- (struct CGRect)visibleContentFrame;	// IMP=0x00000000010d8292
- (struct CGRect)visibleFrame;	// IMP=0x00000000010d8274
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000010d79da
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000010d798f
- (_Bool)inPopover;	// IMP=0x00000000010d7921
- (_Bool)isCaretInEmptyParagraph;	// IMP=0x00000000010d78c1
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x00000000010d78ad
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x00000000010d7896
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x00000000010d787d
- (void)_transliterateChinese:(id)arg1;	// IMP=0x00000000010d783b
- (void)_promptForReplace:(id)arg1;	// IMP=0x00000000010d77f9
- (void)replace:(id)arg1;	// IMP=0x00000000010d7730
- (void)decreaseSize:(id)arg1;	// IMP=0x00000000010d771e
- (void)increaseSize:(id)arg1;	// IMP=0x00000000010d770c
- (void)selectAll:(id)arg1;	// IMP=0x00000000010d76bd
- (void)select:(id)arg1;	// IMP=0x00000000010d767b
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x00000000010d75dc
- (void)paste:(id)arg1;	// IMP=0x00000000010d753d
- (_Bool)_shouldPaste;	// IMP=0x00000000010d744b
- (_Bool)_isDisplayingShortcutViewController;	// IMP=0x00000000010d7436
- (void)_addShortcut:(id)arg1;	// IMP=0x00000000010d7358
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;	// IMP=0x00000000010d7324
- (_Bool)_isDisplayingTranslateViewController;	// IMP=0x00000000010d730f
- (void)_translate:(id)arg1;	// IMP=0x00000000010d7241
- (_Bool)_isDisplayingLookupViewController;	// IMP=0x00000000010d722c
- (void)_define:(id)arg1;	// IMP=0x00000000010d715e
- (_Bool)_isDisplayingShareViewController;	// IMP=0x00000000010d7149
- (void)_shareElement:(id)arg1 withURL:(id)arg2;	// IMP=0x00000000010d70cf
- (void)_share:(id)arg1;	// IMP=0x00000000010d704b
- (void)_shareText:(id)arg1 fromRect:(struct CGRect)arg2;	// IMP=0x00000000010d6f71
- (_Bool)_isDisplayingReferenceLibraryViewController;	// IMP=0x00000000010d6f5c
- (struct CGRect)_shortcutPresentationRect;	// IMP=0x00000000010d6eb5
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x00000000010d6cfa
- (void)toggleUnderline:(id)arg1;	// IMP=0x00000000010d6c84
- (void)toggleItalics:(id)arg1;	// IMP=0x00000000010d6c0e
- (void)toggleBoldface:(id)arg1;	// IMP=0x00000000010d6b98
- (void)copy:(id)arg1;	// IMP=0x00000000010d6b67
- (void)cut:(id)arg1;	// IMP=0x00000000010d6a97
- (void)endFloatingCursor;	// IMP=0x00000000010d6a6c
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;	// IMP=0x00000000010d6a16
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010d69d4
- (void)beginFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010d6992
- (struct CGRect)_selectionClipRect;	// IMP=0x00000000010d67c2
- (void)updateSelection;	// IMP=0x00000000010d67bc
- (void)endSelectionChange;	// IMP=0x00000000010d678b
- (void)beginSelectionChange;	// IMP=0x00000000010d675a
- (_Bool)isEditing;	// IMP=0x00000000010d6706
- (_Bool)isEditable;	// IMP=0x00000000010d66c0
- (_Bool)_restoreFirstResponder;	// IMP=0x00000000010d664e
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)selectionView;	// IMP=0x00000000010d6577
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x00000000010d6546
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x00000000010d64f8
- (void)forwardInvocation:(id)arg1;	// IMP=0x00000000010d6466
- (id)textInputTraits;	// IMP=0x00000000010d6437
@property(retain, nonatomic) UIColor *insertionPointColor; // @dynamic insertionPointColor;
- (void)webView:(id)arg1 willAddPlugInView:(id)arg2;	// IMP=0x00000000010d62f4
- (_Bool)hasPlugInSubviews;	// IMP=0x00000000010d62cf
- (_Bool)isShowingFullScreenPlugInUI;	// IMP=0x00000000010d62ba
- (void)didRemovePlugInView:(id)arg1;	// IMP=0x00000000010d626b
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;	// IMP=0x00000000010d61f5
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;	// IMP=0x00000000010d61cd
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;	// IMP=0x00000000010d5f85
- (void)setPaused:(_Bool)arg1 withEvents:(_Bool)arg2;	// IMP=0x00000000010d5e96
- (void)setPaused:(_Bool)arg1;	// IMP=0x00000000010d5e82
- (void)handleKeyWebEvent:(id)arg1;	// IMP=0x00000000010d5e3f
- (_Bool)requiresKeyEvents;	// IMP=0x00000000010d5e37
- (void)setBottomBufferHeight:(double)arg1;	// IMP=0x00000000010d5e13
- (id)automaticallySelectedOverlay;	// IMP=0x00000000010d5dba
- (void)keyboardInputChangedSelection:(id)arg1;	// IMP=0x00000000010d5d41
- (_Bool)keyboardInputChanged:(id)arg1;	// IMP=0x00000000010d5cd0
- (_Bool)keyboardInputShouldDelete:(id)arg1;	// IMP=0x00000000010d5c5b
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;	// IMP=0x00000000010d5bc9
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x00000000010d5b49
- (id)implementationWebView;	// IMP=0x00000000010d5b40
- (struct CGRect)convertCaretRect:(struct CGRect)arg1;	// IMP=0x00000000010d5b28
- (void)setCaretChangeListener:(id)arg1;	// IMP=0x00000000010d5af7
- (_Bool)hasContent;	// IMP=0x00000000010d5a9c
- (id)text;	// IMP=0x00000000010d592f
- (void)setText:(id)arg1;	// IMP=0x00000000010d5818
- (void)selectAll;	// IMP=0x00000000010d57c8
- (_Bool)selectionAtWordStart;	// IMP=0x00000000010d5792
- (_Bool)selectionAtDocumentStart;	// IMP=0x00000000010d575c
- (_Bool)hasSelection;	// IMP=0x00000000010d571d
- (void)extendCurrentSelection:(int)arg1;	// IMP=0x00000000010d56a3
- (id)rangeByExtendingCurrentSelection:(int)arg1;	// IMP=0x00000000010d565e
- (id)rangeByMovingCurrentSelection:(int)arg1;	// IMP=0x00000000010d5619
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;	// IMP=0x00000000010d5567
- (id)selectedDOMRange;	// IMP=0x00000000010d5531
- (struct _NSRange)selectionRange;	// IMP=0x00000000010d54fb
- (void)replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(_Bool)arg2 smartReplace:(_Bool)arg3;	// IMP=0x00000000010d545b
- (int)wordOffsetInRange:(id)arg1;	// IMP=0x00000000010d5416
- (id)rectsForNSRange:(struct _NSRange)arg1;	// IMP=0x00000000010d51cb
- (id)textColorForCaretSelection;	// IMP=0x00000000010d5194
- (id)fontForCaretSelection;	// IMP=0x00000000010d5153
- (unsigned short)characterAfterCaretSelection;	// IMP=0x00000000010d511d
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;	// IMP=0x00000000010d50d8
- (void)confirmMarkedText:(id)arg1;	// IMP=0x00000000010d504e
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000010d4fb1
- (void)replaceCurrentWordWithText:(id)arg1;	// IMP=0x00000000010d4eea
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x00000000010d4e06
- (void)clearMarkedText;	// IMP=0x00000000010d4de5
- (id)dictationInterpretations;	// IMP=0x00000000010d4daf
- (void)_removeTextPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x00000000010d4ae0
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x00000000010d4ace
- (void)_finishedUsingTextPlaceholder;	// IMP=0x00000000010d4a93
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;	// IMP=0x00000000010d4978
- (id)_insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x00000000010d4675
- (struct CGSize)_sizeForDictationResultPlaceholder;	// IMP=0x00000000010d445c
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
- (void)removeTextPlaceholder:(id)arg1;	// IMP=0x00000000010d43ee
- (id)insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x00000000010d438f
- (_Bool)_textPlaceholderHasBeenRemoved;	// IMP=0x00000000010d431f
- (_Bool)hasRangedSelection;	// IMP=0x00000000010d4306
- (id)dictationResultMetadataForRange:(id)arg1;	// IMP=0x00000000010d42c3
- (id)metadataDictionariesForDictationResults;	// IMP=0x00000000010d413e
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000010d3f3a
- (_Bool)isEditingSingleLineElement;	// IMP=0x00000000010d3eda
- (void)insertText:(id)arg1;	// IMP=0x00000000010d3e67
- (void)deleteBackward;	// IMP=0x00000000010d3e06
- (void)disableClearsOnInsertion;	// IMP=0x00000000010d3db4
- (void)deleteFromInputWithFlags:(unsigned long long)arg1;	// IMP=0x00000000010d3d7c
- (void)deleteFromInput;	// IMP=0x00000000010d3d48
- (void)addInputString:(id)arg1;	// IMP=0x00000000010d3d34
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;	// IMP=0x00000000010d3ced
- (_Bool)handleKeyAppCommandForCurrentEvent;	// IMP=0x00000000010d3cbb
- (_Bool)handleKeyTextCommandForCurrentEvent;	// IMP=0x00000000010d3c89
- (id)delegate;	// IMP=0x00000000010d3c81
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x00000000010d3c50
- (void)_setParentTextView:(id)arg1;	// IMP=0x00000000010d3b4b
- (id)_parentTextView;	// IMP=0x00000000010d3b3a
- (id)undoManager;	// IMP=0x00000000010d3b1d
- (id)undoManagerForWebView:(id)arg1;	// IMP=0x00000000010d3a75
- (void)_undoManagerDidRedo:(id)arg1;	// IMP=0x00000000010d39be
- (void)_undoManagerDidUndo:(id)arg1;	// IMP=0x00000000010d3907
- (void)setInteractionAssistantGestureRecognizers;	// IMP=0x00000000010d38ab
- (void)ensureSelection;	// IMP=0x00000000010d3760
- (_Bool)clearWKFirstResponder;	// IMP=0x00000000010d3671
- (_Bool)makeWKFirstResponder;	// IMP=0x00000000010d35eb
- (id)_responderForBecomeFirstResponder;	// IMP=0x00000000010d359d
- (_Bool)resignFirstResponder;	// IMP=0x00000000010d3460
- (void)deferredBecomeFirstResponder;	// IMP=0x00000000010d343c
- (_Bool)becomeFirstResponder;	// IMP=0x00000000010d32f7
- (_Bool)canResignFirstResponder;	// IMP=0x00000000010d32ef
- (_Bool)canBecomeFirstResponder;	// IMP=0x00000000010d32dd
- (_Bool)updateKeyboardStateOnResponderChanges;	// IMP=0x00000000010d3282
- (_Bool)isWidgetEditingView;	// IMP=0x00000000010d326d
- (void)setIsWidgetEditingView:(_Bool)arg1;	// IMP=0x00000000010d3252
- (id)standaloneEditingElement;	// IMP=0x00000000010d3241
- (void)setStandaloneEditingElement:(id)arg1;	// IMP=0x00000000010d3209
- (_Bool)isStandaloneEditableView;	// IMP=0x00000000010d31f5
- (void)setIsStandaloneEditableView:(_Bool)arg1;	// IMP=0x00000000010d31db
- (id)textFormElement;	// IMP=0x00000000010d31d3
- (id)formElement;	// IMP=0x00000000010d31cb
- (void)_focusAndAssistFormNode:(id)arg1;	// IMP=0x00000000010d31a7
- (void)_clearAllConsoleMessages;	// IMP=0x00000000010d31a1
- (void)_resetFormDataForFrame:(id)arg1;	// IMP=0x00000000010d319b
- (void)assistFormNode:(id)arg1;	// IMP=0x00000000010d3187
- (_Bool)doubleTapRectIsReplaced;	// IMP=0x00000000010d3175
- (struct CGRect)doubleTapRect;	// IMP=0x00000000010d3155
- (void)_handleTwoFingerDoubleTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00000000010d312f
- (void)_handleDoubleTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00000000010d3109
- (void)_handleSingleTapZoomPostClickAtLocation:(struct CGPoint)arg1;	// IMP=0x00000000010d30e3
- (_Bool)_handleSingleTapZoomPreClickAtLocation:(struct CGPoint)arg1;	// IMP=0x00000000010d30bb
@property(nonatomic, getter=isDoubleTapEnabled) _Bool doubleTapEnabled;
@property(nonatomic) _Bool alwaysConstrainsScale;
@property(nonatomic) _Bool mediaPlaybackAllowsAirPlay;
@property(nonatomic) _Bool shouldOnlyRecognizeGesturesOnActiveElements;
- (void)sendOrientationEventForOrientation:(long long)arg1;	// IMP=0x00000000010d2f10
- (void)didRotateInteractionSheet;	// IMP=0x00000000010d2f0a
- (void)willRotateInteractionSheet;	// IMP=0x00000000010d2f04
- (void)updateInteractionElements;	// IMP=0x00000000010d2e82
- (void)redrawScaledDocument;	// IMP=0x00000000010d2c60
- (void)_reshapePlugInViews;	// IMP=0x00000000010d2b42
- (id)checkSpellingOfString:(id)arg1;	// IMP=0x00000000010d2941
- (void)_renderUnbufferedInContext:(struct CGContext *)arg1;	// IMP=0x00000000010d275d
- (void)webViewDidDrawTiles:(id)arg1;	// IMP=0x00000000010d2702
- (id)subviews;	// IMP=0x00000000010d2637
- (_Bool)_shouldUpdateSubviewCachesForPlugins;	// IMP=0x00000000010d247d
- (void)_updateSubviewCaches;	// IMP=0x00000000010d2423
- (id)_collectAdditionalSubviews;	// IMP=0x00000000010d241b
- (void)_setSubviewCachesNeedUpdate:(_Bool)arg1;	// IMP=0x00000000010d2401
- (void)webViewDidCommitCompositingLayerChanges:(id)arg1;	// IMP=0x00000000010d23c5
- (void)_webthread_webView:(id)arg1 attachRootLayer:(id)arg2;	// IMP=0x00000000010d1f66
- (void)revealedSelectionByScrollingWebFrame:(id)arg1;	// IMP=0x00000000010d1f30
- (_Bool)shouldSuppressPasswordEcho;	// IMP=0x00000000010d1edb
- (int)deviceOrientation;	// IMP=0x00000000010d1e98
- (void)showPlaybackTargetPicker:(_Bool)arg1 fromRect:(struct CGRect)arg2;	// IMP=0x00000000010d1e36
- (long long)getPasteboardChangeCount;	// IMP=0x00000000010d1e04
- (id)readDataFromPasteboard:(id)arg1 withIndex:(long long)arg2;	// IMP=0x00000000010d1d4f
- (id)supportedPasteboardTypesForCurrentSelection;	// IMP=0x00000000010d1d16
- (id)_supportedPasteboardTypesForCurrentSelection;	// IMP=0x00000000010d1b92
- (_Bool)_insertFragmentWithoutPreservingStyle:(id)arg1 atDestination:(id)arg2 smartReplace:(_Bool)arg3 collapseToEnd:(_Bool)arg4;	// IMP=0x00000000010d19db
- (_Bool)performsTwoStepPaste:(id)arg1;	// IMP=0x00000000010d1919
- (_Bool)fragmentContainsRichContent:(id)arg1;	// IMP=0x00000000010d18ce
- (_Bool)hasRichlyEditableSelection;	// IMP=0x00000000010d184a
- (_Bool)isInsideRichlyEditableTextWidget;	// IMP=0x00000000010d17fb
- (long long)getPasteboardItemsCount;	// IMP=0x00000000010d17c9
- (void)writeDataToPasteboard:(id)arg1;	// IMP=0x00000000010d1722
- (void)_updateFixedPositionContent;	// IMP=0x00000000010d169f
- (struct CGRect)_adjustedLayoutRectForFixedPositionObjects;	// IMP=0x00000000010d1635
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(_Bool)arg1 synchronize:(_Bool)arg2;	// IMP=0x00000000010d1500
- (struct CGRect)_layoutRectForFixedPositionObjects;	// IMP=0x00000000010d120e
- (struct CGRect)_documentViewVisibleRect;	// IMP=0x00000000010d0f6f
- (void)_updateWebKitExposedScrollViewRect;	// IMP=0x00000000010d0e1a
- (void)_notifyContentHostingLayersOfScaleChange;	// IMP=0x00000000010d0d3b
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;	// IMP=0x00000000010d0b98
- (void)_notifyPlugInViewsOfScaleChange;	// IMP=0x00000000010d0a36
- (void)_notifyPlugInViewsOfDidZoom;	// IMP=0x00000000010d08a2
- (void)_notifyPlugInViewsOfDidEndZooming;	// IMP=0x00000000010d072a
- (void)_notifyPlugInViewsOfWillBeginZooming;	// IMP=0x00000000010d05c8
- (_Bool)_isSubviewOfPlugInView:(id)arg1;	// IMP=0x00000000010d0546
- (void)_didScroll;	// IMP=0x00000000010d0394
- (void)_cancelLongPressGestureRecognizer;	// IMP=0x00000000010d0377
- (void)setTilingArea:(int)arg1;	// IMP=0x00000000010d0328
- (void)setIgnoresKeyEvents:(_Bool)arg1;	// IMP=0x00000000010d030d
- (void)setIgnoresFocusingMouse:(_Bool)arg1;	// IMP=0x00000000010d02f2
- (_Bool)cancelTouchTracking;	// IMP=0x00000000010d02bf
- (_Bool)cancelMouseTracking;	// IMP=0x00000000010d0247
- (struct CGImage *)newSnapshotWithRect:(struct CGRect)arg1;	// IMP=0x00000000010d01f0
- (void)setOpaque:(_Bool)arg1;	// IMP=0x00000000010d01a5
- (void)setDrawsBackground:(_Bool)arg1;	// IMP=0x00000000010d0155
- (void)setSmoothsFonts:(_Bool)arg1;	// IMP=0x00000000010d00ba
- (void)layoutSubviews;	// IMP=0x00000000010cfff4
- (void)forceLayout;	// IMP=0x00000000010cff45
- (void)_showPendingContentLayers;	// IMP=0x00000000010cff26
- (_Bool)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint)arg2 forFrame:(id)arg3;	// IMP=0x00000000010cfbc3
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(_Bool)arg4;	// IMP=0x00000000010cfa94
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;	// IMP=0x00000000010cf77f
- (void)saveStateToCurrentHistoryItem;	// IMP=0x00000000010cf745
- (void)_saveStateToHistoryItem:(id)arg1;	// IMP=0x00000000010cf5b6
- (void)_resetForNewPage;	// IMP=0x00000000010cf37d
- (void)_restoreScrollPointForce:(_Bool)arg1;	// IMP=0x00000000010cf12d
- (_Bool)updatesScrollView;	// IMP=0x00000000010cf118
- (void)setUpdatesScrollView:(_Bool)arg1;	// IMP=0x00000000010cf0fd
- (void)fileUploadPanelDidDismiss:(id)arg1;	// IMP=0x00000000010cf0c2
- (void)setAvoidsUnsafeArea:(_Bool)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cf098
- (void)setAllowsShrinkToFit:(_Bool)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cf06e
- (void)setAllowsUserScaling:(_Bool)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cf044
- (void)setMaximumScale:(float)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cf018
- (void)setMinimumScale:(float)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cefec
- (void)setInitialScale:(float)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cefc0
- (void)setViewportSize:(struct CGSize)arg1 forDocumentTypes:(int)arg2;	// IMP=0x00000000010cef5e
- (void)setMinimumSize:(struct CGSize)arg1 updateCurrentViewportConfigurationSize:(_Bool)arg2;	// IMP=0x00000000010cedfc
- (void)setMinimumSize:(struct CGSize)arg1;	// IMP=0x00000000010cede8
- (void)setIgnoresViewportOverflowWhenAutoresizing:(_Bool)arg1;	// IMP=0x00000000010cedcd
- (void)setAutoresizes:(_Bool)arg1;	// IMP=0x00000000010cedb2
- (struct CGRect)documentBounds;	// IMP=0x00000000010ced74
- (void)_WAKViewSizeDidChange:(id)arg1;	// IMP=0x00000000010cec7e
- (void)webViewDidReceiveMobileDocType:(id)arg1;	// IMP=0x00000000010cec62
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;	// IMP=0x00000000010ce8b5
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;	// IMP=0x00000000010ce898
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;	// IMP=0x00000000010ce809
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;	// IMP=0x00000000010ce7c2
- (void)webViewDidRestoreFromPageCache:(id)arg1;	// IMP=0x00000000010ce7b1
- (void)webView:(id)arg1 runOpenPanelForFileButtonWithResultListener:(id)arg2 configuration:(id)arg3;	// IMP=0x00000000010ce721
- (void)webViewDidEndOverflowScroll:(id)arg1;	// IMP=0x00000000010ce704
- (void)webViewDidStartOverflowScroll:(id)arg1;	// IMP=0x00000000010ce6e7
- (void)_editableSelectionLayoutChangedByScrolling:(_Bool)arg1;	// IMP=0x00000000010ce67e
- (void)_selectionLayoutChangedByScrolling:(_Bool)arg1;	// IMP=0x00000000010ce661
- (void)webThreadWebViewDidLayout:(id)arg1 byScrolling:(_Bool)arg2;	// IMP=0x00000000010ce4e6
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;	// IMP=0x00000000010ce3c2
- (void)resetTilingAfterLoadComplete;	// IMP=0x00000000010ce33e
- (void)sendScrollEventIfNecessaryWasUserScroll:(_Bool)arg1;	// IMP=0x00000000010ce244
- (void)sendScrollEventIfNecessary;	// IMP=0x00000000010ce22d
- (_Bool)needsScrollNotifications;	// IMP=0x00000000010ce21a
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;	// IMP=0x00000000010ce1b8
- (_Bool)isClassicViewportMode;	// IMP=0x00000000010ce19b
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2;	// IMP=0x00000000010ce112
- (void)_applyViewportArguments:(id)arg1;	// IMP=0x00000000010cdf4e
@property(nonatomic) _Bool shouldIgnoreCustomViewport;
- (void)_clearDoubleTapRect;	// IMP=0x00000000010cdddd
- (void)_updateSize;	// IMP=0x00000000010cd702
@property(nonatomic) _Bool sizeUpdatesSuspended;
- (void)_setDocumentType:(int)arg1;	// IMP=0x00000000010cd67f
- (void)_setDocumentType:(int)arg1 overrideCustomConfigurations:(_Bool)arg2 viewportArguments:(id)arg3;	// IMP=0x00000000010cd4aa
- (struct CGRect)convertRect:(struct CGRect)arg1 fromFrame:(id)arg2;	// IMP=0x00000000010cd44b
- (struct CGRect)convertRect:(struct CGRect)arg1 toFrame:(id)arg2;	// IMP=0x00000000010cd3ec
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromFrame:(id)arg2;	// IMP=0x00000000010cd3a5
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toFrame:(id)arg2;	// IMP=0x00000000010cd35e
- (void)viewportHandler:(id)arg1 didChangeAvoidsUnsafeArea:(_Bool)arg2;	// IMP=0x00000000010cd30a
- (void)viewportHandler:(id)arg1 didChangeViewportSize:(struct CGSize)arg2;	// IMP=0x00000000010cd16d
- (void)viewportHandlerDidChangeScales:(id)arg1;	// IMP=0x00000000010ccfc2
- (void)_updateScrollViewBoundaryZoomScales;	// IMP=0x00000000010ccecb
- (double)_zoomedDocumentScale;	// IMP=0x00000000010cce76
- (float)minimumScale;	// IMP=0x00000000010cce59
- (float)maximumScale;	// IMP=0x00000000010cce3c
- (float)initialScale;	// IMP=0x00000000010cce1f
- (float)minimumScaleForMinimumSize:(struct CGSize)arg1;	// IMP=0x00000000010cce02
- (float)_documentScale;	// IMP=0x00000000010ccdf0
- (void)_setDocumentScale:(float)arg1;	// IMP=0x00000000010ccb7f
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000010cc961
- (unsigned long long)dataDetectorTypes;	// IMP=0x00000000010cc950
- (void)setDataDetectorTypes:(unsigned long long)arg1;	// IMP=0x00000000010cc902
- (unsigned long long)effectiveDataDetectorTypes;	// IMP=0x00000000010cc8e4
- (_Bool)_dataDetectionIsActivated;	// IMP=0x00000000010cc8c2
- (_Bool)detectsPhoneNumbers;	// IMP=0x00000000010cc8aa
- (void)setDetectsPhoneNumbers:(_Bool)arg1;	// IMP=0x00000000010cc896
- (void)setUserStyleSheet:(id)arg1;	// IMP=0x00000000010cc7b4
- (id)_focusedOrMainFrame;	// IMP=0x00000000010cc763
- (id)_groupName;	// IMP=0x00000000010cc72a
- (id)webView;	// IMP=0x00000000010cc719
- (_Bool)loadsSynchronously;	// IMP=0x00000000010cc707
- (void)setLoadsSynchronously:(_Bool)arg1;	// IMP=0x00000000010cc689
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;	// IMP=0x00000000010cc5dd
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;	// IMP=0x00000000010cc541
- (void)loadRequest:(id)arg1;	// IMP=0x00000000010cc4ad
- (void)_cleanUpFrameStateAndLoad:(CDUnknownBlockType)arg1;	// IMP=0x00000000010cc49b
- (void)_runLoadBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000010cc466
- (void)setDelegate:(id)arg1;	// IMP=0x00000000010cc455
- (void)stopLoading:(id)arg1;	// IMP=0x00000000010cc410
- (void)didMoveToSuperview;	// IMP=0x00000000010cc3fe
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x00000000010cc3e1
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000010cc391
- (_Bool)hasDrawnTiles;	// IMP=0x00000000010cc37e
- (_Bool)didFirstVisuallyNonEmptyLayout;	// IMP=0x00000000010cc369
- (void)dealloc;	// IMP=0x00000000010cbf0c
- (void)_setTextColor:(id)arg1;	// IMP=0x00000000010cbe37
- (void)_setFont:(id)arg1;	// IMP=0x00000000010cbd7f
- (void)_dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000010cbd16
- (_Bool)_presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000010cbca3
- (void)_removeShortcutController:(_Bool)arg1;	// IMP=0x00000000010cbc86
- (void)_removeShareController:(_Bool)arg1;	// IMP=0x00000000010cbc69
- (void)_removeDefinitionController:(_Bool)arg1;	// IMP=0x00000000010cbc4c
- (void)_inspectorDidStopSearchingForNode:(id)arg1;	// IMP=0x00000000010cbc3b
- (void)_inspectorDidStartSearchingForNode:(id)arg1;	// IMP=0x00000000010cbc2a
- (void)_resetShowingTextStyle:(id)arg1;	// IMP=0x00000000010cb9fd
- (id)initWithWebView:(id)arg1 frame:(struct CGRect)arg2;	// IMP=0x00000000010cb645
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000010cb631
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 frame:(struct CGRect)arg2 preferences:(id)arg3 groupName:(id)arg4;	// IMP=0x00000000010cb538
- (struct CGRect)webViewFrameForUIFrame:(struct CGRect)arg1;	// IMP=0x00000000010cb494
- (void)_restoreViewportSettingsWithSize:(struct CGSize)arg1;	// IMP=0x00000000010cb2ab
- (Class)_printFormatterClass;	// IMP=0x0000000000ae8cc9
@property(getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) _Bool _acceptsFirstResponder;
- (id)_doubleTapGestureRecognizer;	// IMP=0x00000000010e1f34
- (id)superviewForSheet;	// IMP=0x00000000010e1e27
- (struct CGPoint)interactionLocation;	// IMP=0x00000000010e1e0b
- (id)interactionElement;	// IMP=0x00000000010e1df6
- (void)setAllowsLinkSheet:(_Bool)arg1;	// IMP=0x00000000010e1de2
- (void)setAllowsDataDetectorsSheet:(_Bool)arg1;	// IMP=0x00000000010e1dce
- (void)setAllowsImageSheet:(_Bool)arg1;	// IMP=0x00000000010e1dba
- (id)interactionDelegate;	// IMP=0x00000000010e1da5
- (void)setInteractionDelegate:(id)arg1;	// IMP=0x00000000010e1d90
- (_Bool)supportsTwoFingerScrollingAtTouchLocation:(struct CGPoint)arg1 andLocation:(struct CGPoint)arg2;	// IMP=0x00000000010e1c75
- (void)sendScrollWheelEvents;	// IMP=0x00000000010e1b3e
- (void)_cleanupSheet;	// IMP=0x00000000010e1ad4
- (void)_didDismissElementSheet;	// IMP=0x00000000010e1a72
- (id)_targetURL;	// IMP=0x00000000010e19e6
- (void)cancelInteractionWithImmediateDisplay:(_Bool)arg1;	// IMP=0x00000000010e17b8
- (void)deferInteraction;	// IMP=0x00000000010e1780
- (void)cancelInteraction;	// IMP=0x00000000010e1769
- (void)completeInteraction;	// IMP=0x00000000010e1720
- (void)resetInteraction;	// IMP=0x00000000010e16ef
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// IMP=0x00000000010e1603
- (void)hideTapHighlight;	// IMP=0x00000000010e15c8
- (void)highlightApproximateNodeInverted:(_Bool)arg1;	// IMP=0x00000000010e12b9
- (id)deepestNodeAtViewportLocation:(struct CGPoint)arg1;	// IMP=0x00000000010e11ff
- (id)approximateNodeAtViewportLocation:(struct CGPoint *)arg1;	// IMP=0x00000000010e1153
- (void)webViewDidPreventDefaultForEvent:(id)arg1;	// IMP=0x00000000010e114d
- (void)webView:(id)arg1 didObserveDeferredContentChange:(int)arg2 forFrame:(id)arg3;	// IMP=0x00000000010e1126
- (void)attemptClick:(id)arg1;	// IMP=0x00000000010e0ed1
- (void)_sendMouseMoveAndAttemptClick:(id)arg1;	// IMP=0x00000000010e0d59
- (id)newMouseEvent:(int)arg1;	// IMP=0x00000000010e0c59
- (void)performClick:(id)arg1;	// IMP=0x00000000010e07ea
- (void)_syntheticMouseEventNotHandledAtLocation:(struct CGPoint)arg1;	// IMP=0x00000000010e07d8
- (void)_twoFingerPanRecognized:(id)arg1;	// IMP=0x00000000010e06e8
- (void)_longPressRecognized:(id)arg1;	// IMP=0x00000000010e0651
- (void)_highlightLongPressRecognized:(id)arg1;	// IMP=0x00000000010e04fd
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000010e02a5
- (SEL)_actionForLongPressOnElement:(id)arg1;	// IMP=0x00000000010e0212
- (void)_twoFingerDoubleTapRecognized:(id)arg1;	// IMP=0x00000000010e01e1
- (void)_doubleTapRecognized:(id)arg1;	// IMP=0x00000000010e01b0
- (void)_singleTapRecognized:(id)arg1;	// IMP=0x00000000010e0085
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00000000010dff27
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;	// IMP=0x00000000010dfec3
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;	// IMP=0x00000000010dfe84
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000000010dfe2d
- (void)installGestureRecognizers;	// IMP=0x00000000010dfb1c
- (_Bool)willInteractWithLocation:(struct CGPoint)arg1;	// IMP=0x00000000010dfa6d
- (_Bool)isInInteraction;	// IMP=0x00000000010dfa4b
- (_Bool)startActionSheet;	// IMP=0x00000000010df9f5
- (void)validateInteractionWithLocation:(struct CGPoint)arg1;	// IMP=0x00000000010df995
- (void)tapInteractionWithLocation:(struct CGPoint)arg1;	// IMP=0x00000000010df943
- (void)continueInteractionWithLocation:(struct CGPoint)arg1;	// IMP=0x00000000010df91c
- (void)startInteractionWithLocation:(struct CGPoint)arg1;	// IMP=0x00000000010df8f0
- (void)_resetInteractionWithLocation:(struct CGPoint)arg1 modifierFlags:(long long)arg2;	// IMP=0x00000000010df841
- (void)performInteractionSelector:(SEL)arg1 afterDelay:(double)arg2;	// IMP=0x00000000010df7fa
- (void)clearInteractionTimer;	// IMP=0x00000000010df7be
- (void)_interactionStoppedFromPreviewItemController:(id)arg1;	// IMP=0x00000000010df6fc
- (void)_interactionStartedFromPreviewItemController:(id)arg1;	// IMP=0x00000000010df602
- (struct CGRect)computeRectForElement:(id)arg1 withHighligh:(id)arg2 isInverted:(_Bool)arg3;	// IMP=0x00000000010de51d
- (id)_presentationRectsForPreviewItemController:(id)arg1;	// IMP=0x00000000010de493
- (id)_presentationSnapshotForPreviewItemController:(id)arg1;	// IMP=0x00000000010de409
- (id)_presentationRectsForPreview;	// IMP=0x00000000010de3f4
- (id)_presentationSnapshotForPreview;	// IMP=0x00000000010de3df
- (void)_previewItemController:(id)arg1 commitPreview:(id)arg2;	// IMP=0x00000000010de389
- (void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(_Bool)arg3;	// IMP=0x00000000010de31d
- (void)_clearPreviewRevealInformation;	// IMP=0x00000000010de2d8
- (void)_collectPreviewRevealInformationIfNeeded;	// IMP=0x00000000010de224
- (void)_previewItemController:(id)arg1 willPresentPreview:(id)arg2 forPosition:(struct CGPoint)arg3 inSourceView:(id)arg4;	// IMP=0x00000000010de1ce
- (id)_presentedViewControllerForPreviewItemController:(id)arg1;	// IMP=0x00000000010de13b
- (id)_dataForPreviewItemController:(id)arg1 atPosition:(struct CGPoint)arg2 type:(long long *)arg3;	// IMP=0x00000000010de03f
- (_Bool)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(struct CGPoint)arg2;	// IMP=0x00000000010ddfbc
- (_Bool)_previewAllowedForPosition:(struct CGPoint)arg1;	// IMP=0x00000000010ddf00
- (_Bool)isPreviewing;	// IMP=0x00000000010ddee0
- (void)_unregisterPreview;	// IMP=0x00000000010dde6d
- (void)_registerPreview;	// IMP=0x00000000010ddd80
- (struct CGRect)presentationRectInHostViewForSheet:(id)arg1;	// IMP=0x00000000010e317d
- (struct CGRect)initialPresentationRectInHostViewForSheet:(id)arg1;	// IMP=0x00000000010e3100
- (id)hostViewForSheet:(id)arg1;	// IMP=0x00000000010e30ee
- (struct CGRect)_presentationRectForSheetGivenPoint:(struct CGPoint)arg1 inHostView:(id)arg2;	// IMP=0x00000000010e308c
- (void)actionDidFinish;	// IMP=0x00000000010e3037
- (void)_showLinkSheet;	// IMP=0x00000000010e2ede
- (void)_showImageSheet;	// IMP=0x00000000010e2aee
- (void)_appendOpenActionsForURL:(id)arg1 actions:(id)arg2;	// IMP=0x00000000010e2ab1
- (void)_createSheetWithElementActions:(id)arg1 showLinkTitle:(_Bool)arg2;	// IMP=0x00000000010e256f
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;	// IMP=0x00000000010e37cd
- (_Bool)mouseEventsChangeSelection;	// IMP=0x00000000010e37b6
- (id)positionAtStartOrEndOfWord:(id)arg1;	// IMP=0x00000000010e730f
- (id)asText;	// IMP=0x00000000010e7306
- (struct CGRect)visibleBounds;	// IMP=0x00000000010e70f5
- (id)webVisiblePositionForPoint:(struct CGPoint)arg1;	// IMP=0x00000000010e7045
- (void)setSelectionWithPoint:(struct CGPoint)arg1;	// IMP=0x00000000010e6f92
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x00000000010e6f8c
- (void)cancelAutoscroll;	// IMP=0x00000000010e6f6c
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x00000000010e660c
@property(nonatomic) _Bool shouldAutoscroll;
- (struct CGRect)contentFrameForView:(id)arg1;	// IMP=0x00000000010e6553
@property(nonatomic) struct CGPoint autoscrollContentOffset;
- (void)setSelectionToStart;	// IMP=0x00000000010e6423
- (void)setSelectionToEnd;	// IMP=0x00000000010e63d3
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint)arg1;	// IMP=0x00000000010e635d
- (void)smartExtendRangedSelection:(int)arg1;	// IMP=0x00000000010e6318
- (id)selectionRects;	// IMP=0x00000000010e60fe
- (id)selectionRectsForDOMRange:(id)arg1;	// IMP=0x00000000010e5ede
- (id)textInDOMRange:(id)arg1;	// IMP=0x00000000010e5e99
- (void)setSelectedDOMRange:(id)arg1 affinity:(unsigned long long)arg2;	// IMP=0x00000000010e5e1a
- (id)wordAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010e5dbe
- (void)setSelectionWithFirstPoint:(struct CGPoint)arg1 secondPoint:(struct CGPoint)arg2;	// IMP=0x00000000010e5cf9
- (void)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(_Bool)arg2 allowFlipping:(_Bool)arg3;	// IMP=0x00000000010e5c58
- (_Bool)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(_Bool)arg2;	// IMP=0x00000000010e5bba
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// IMP=0x00000000010e5b84
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// IMP=0x00000000010e5b4e
- (void)clearRangedSelectionInitialExtent;	// IMP=0x00000000010e5b18
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// IMP=0x00000000010e5ae2
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// IMP=0x00000000010e5aac
- (void)setRangedSelectionBaseToCurrentSelection;	// IMP=0x00000000010e5a76
- (void)setBaseWritingDirection:(long long)arg1;	// IMP=0x00000000010e5a31
- (void)toggleBaseWritingDirection;	// IMP=0x00000000010e59e1
- (long long)selectionBaseWritingDirection;	// IMP=0x00000000010e59aa
- (struct CGRect)caretRectForVisiblePosition:(id)arg1;	// IMP=0x00000000010e58c8
- (struct CGRect)caretRect;	// IMP=0x00000000010e57f0
- (struct UIEdgeInsets)caretInsets;	// IMP=0x00000000010e57cd
- (void)setCaretInsets:(struct UIEdgeInsets)arg1;	// IMP=0x00000000010e57ac
- (void)collapseSelection;	// IMP=0x00000000010e575c
@property(readonly, nonatomic) int selectionState;
- (unsigned long long)offsetInMarkedTextForSelection:(id)arg1;	// IMP=0x00000000010e566d
- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;	// IMP=0x00000000010e55ab
- (_Bool)hasMarkedText;	// IMP=0x00000000010e555b
- (_Bool)hasEditableSelection;	// IMP=0x00000000010e551c
- (void)clearSelection;	// IMP=0x00000000010e54cc
- (void)selectionChanged:(id)arg1;	// IMP=0x00000000010e542f
- (void)selectionChanged;	// IMP=0x00000000010e53cc
- (struct CGPoint)convertPointToSelectedFrameCoordinates:(struct CGPoint)arg1;	// IMP=0x00000000010e536b
- (struct CGRect)convertRectFromSelectedFrameCoordinates:(struct CGRect)arg1;	// IMP=0x00000000010e52e9
- (void)selectWord;	// IMP=0x00000000010e5299
- (void)drawPage:(unsigned long long)arg1 withPaginationInfo:(id)arg2;	// IMP=0x0000000001101781
- (void)_drawPDFPagesForPage:(unsigned long long)arg1 withPaginationInfo:(id)arg2;	// IMP=0x0000000001101422
- (void)_endPrintMode;	// IMP=0x00000000011012b5
- (void)endPrintMode;	// IMP=0x0000000001101292
- (void)releasePrintMode;	// IMP=0x0000000001101266
- (id)beginPrintModeForFrame:(id)arg1 withSize:(struct CGSize)arg2 startOffset:(double)arg3 minimumLayoutWidth:(double)arg4 maximumLayoutWidth:(double)arg5 tileClippedContent:(_Bool)arg6;	// IMP=0x00000000011010f7
- (id)beginPrintModeWithSize:(struct CGSize)arg1 startOffset:(double)arg2 minimumLayoutWidth:(double)arg3 maximumLayoutWidth:(double)arg4 tileClippedContent:(_Bool)arg5;	// IMP=0x0000000001101074
- (id)beginPrintModeForFrame:(id)arg1 withWidth:(double)arg2 height:(double)arg3 startOffset:(double)arg4 shrinkToFit:(_Bool)arg5 tileClippedContent:(_Bool)arg6;	// IMP=0x0000000001100eea
- (id)beginPrintModeWithWidth:(double)arg1 height:(double)arg2 startOffset:(double)arg3 shrinkToFit:(_Bool)arg4 tileClippedContent:(_Bool)arg5 forFrame:(id)arg6;	// IMP=0x0000000001100e6a
- (id)beginPrintModeWithWidth:(double)arg1 height:(double)arg2 startOffset:(double)arg3 shrinkToFit:(_Bool)arg4 forFrame:(id)arg5;	// IMP=0x0000000001100e50
- (id)_beginPrintModeForPDFView:(id)arg1 withSize:(struct CGSize)arg2 startOffset:(double)arg3 minimumLayoutWidth:(double)arg4 maximumLayoutWidth:(double)arg5;	// IMP=0x0000000001100adb
- (id)_beginPrintModeForHTMLView:(id)arg1 withSize:(struct CGSize)arg2 startOffset:(double)arg3 minimumLayoutWidth:(double)arg4 maximumLayoutWidth:(double)arg5 tileClippedContent:(_Bool)arg6;	// IMP=0x00000000011007d0
- (_Bool)isInPrintMode;	// IMP=0x000000000110068a

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji; // @dynamic acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue; // @dynamic contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(nonatomic) unsigned long long insertionPointWidth; // @dynamic insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument; // @dynamic isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(retain, nonatomic) UIColor *selectionBarColor; // @dynamic selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage; // @dynamic selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(retain, nonatomic) UIColor *selectionHighlightColor; // @dynamic selectionHighlightColor;
@property(nonatomic) int shortcutConversionType; // @dynamic shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(readonly, nonatomic) _Bool supportsImagePaste;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType; // @dynamic textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility; // @dynamic textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior; // @dynamic textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate; // @dynamic textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet; // @dynamic textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

