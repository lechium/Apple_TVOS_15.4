//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSString;

@interface UITextChecker : NSObject
{
    id _reserved;	// 8 = 0x8
    long long _usdt;	// 16 = 0x10
    NSString *_checkerWarmingLanguage;	// 24 = 0x18
}

+ (void)setString:(id)arg1 isExemptFromChecker:(_Bool)arg2;	// IMP=0x0000000000ec9081
+ (void)unlearnWord:(id)arg1;	// IMP=0x0000000000ec8d13
+ (_Bool)hasLearnedWord:(id)arg1;	// IMP=0x0000000000ec8cff
+ (void)learnWord:(id)arg1;	// IMP=0x0000000000ec8ceb
+ (void)_setWords:(id)arg1 inDictionary:(id)arg2;	// IMP=0x0000000000ec8aca
+ (id)_wordsInDictionary:(id)arg1;	// IMP=0x0000000000ec898b
+ (_Bool)_isWord:(id)arg1 inDictionary:(id)arg2;	// IMP=0x0000000000ec891b
+ (_Bool)_forgetWord:(id)arg1 inDictionary:(id)arg2;	// IMP=0x0000000000ec8886
+ (_Bool)_learnWord:(id)arg1 inDictionary:(id)arg2;	// IMP=0x0000000000ec8784
+ (id)dictionaryInfo:(id)arg1;	// IMP=0x0000000000ec86bb
+ (void)_setDictionaryEntry:(id)arg1 forName:(id)arg2;	// IMP=0x0000000000ec8622
+ (id)_dictionaryEntryForName:(id)arg1;	// IMP=0x0000000000ec850f
+ (id)openUserDictionary:(id)arg1;	// IMP=0x0000000000ec8168
+ (struct __CFSet *)createDictHashTable:(_Bool)arg1;	// IMP=0x0000000000ec7f6b
+ (id)bestLanguageForString:(id)arg1 fromAlternatives:(id)arg2 currentLanguage:(id)arg3;	// IMP=0x0000000000ec7f3e
+ (id)bestLanguageForString:(id)arg1 fromAlternatives:(id)arg2 currentLanguage:(id)arg3 insertionPointIndex:(unsigned long long)arg4 scriptForBestLanguage:(id *)arg5;	// IMP=0x0000000000ec6fc3
+ (id)availableLanguages;	// IMP=0x0000000000ec5668
+ (long long)uniqueSpellDocumentTag;	// IMP=0x0000000000ec500c
- (_Bool)isWordInUserDictionaries:(id)arg1 caseSensitive:(_Bool)arg2;	// IMP=0x0000000000ec8d27
@property(retain, nonatomic) NSArray *ignoredWords;
- (void)ignoreWord:(id)arg1;	// IMP=0x0000000000ec8c06
- (id)alternativesForPinyinInputString:(id)arg1;	// IMP=0x0000000000ec6ee8
- (id)stringForInputString:(id)arg1 language:(id)arg2;	// IMP=0x0000000000ec6dea
- (_Bool)canChangeCaseOfFirstLetterInString:(id)arg1 toUpperCase:(_Bool)arg2 language:(id)arg3;	// IMP=0x0000000000ec6cd8
- (id)suggestWordInLanguage:(id)arg1;	// IMP=0x0000000000ec6bda
- (id)completionsForPartialWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000ec6a55
- (id)guessesForWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000ec68d0
- (id)correctionForWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000ec6837
- (struct _NSRange)checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(_Bool)arg4 details:(id *)arg5;	// IMP=0x0000000000ec64cf
- (struct _NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 languages:(id)arg3 wrap:(_Bool)arg4 correction:(id *)arg5;	// IMP=0x0000000000ec617e
- (struct _NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(_Bool)arg4 correction:(id *)arg5;	// IMP=0x0000000000ec6121
- (struct _NSRange)rangeOfMisspelledWordInString:(id)arg1 range:(struct _NSRange)arg2 startingAt:(long long)arg3 wrap:(_Bool)arg4 language:(id)arg5;	// IMP=0x0000000000ec60ad
- (struct _NSRange)rangeOfMisspelledWordInString:(id)arg1 range:(struct _NSRange)arg2 startingAt:(long long)arg3 wrap:(_Bool)arg4 languages:(id)arg5;	// IMP=0x0000000000ec5f9e
- (struct _NSRange)_chunkAndFindMisspelledWordInString:(id)arg1 languages:(id)arg2 learnedDictionaries:(id)arg3 wordCount:(long long *)arg4 correction:(id *)arg5 usingChecker:(id)arg6;	// IMP=0x0000000000ec5d2b
- (struct _NSRange)_chunkAndCheckGrammarInString:(id)arg1 language:(id)arg2 usingChecker:(id)arg3 details:(id *)arg4;	// IMP=0x0000000000ec5b3e
- (long long)adjustOffsetToNextWordBoundaryInString:(id)arg1 startingAt:(long long)arg2;	// IMP=0x0000000000ec59e3
- (void)releaseAllLexicons;	// IMP=0x0000000000ec55d0
- (void)resetAllLanguageModels;	// IMP=0x0000000000ec5538
- (id)_checker;	// IMP=0x0000000000ec551e
- (void)dealloc;	// IMP=0x0000000000ec54d4
- (_Bool)_doneLoading;	// IMP=0x0000000000ec54c8
- (id)_initWithAsynchronousLoading:(_Bool)arg1;	// IMP=0x0000000000ec534c
- (id)init;	// IMP=0x0000000000ec5338
- (void)initGlobals;	// IMP=0x0000000000ec519e
- (void)initUserDictionaries;	// IMP=0x0000000000ec509e
- (void)_setDocumentDictionaryName:(id)arg1;	// IMP=0x0000000000ec507d
- (void)_setLanguageDictionaryName:(id)arg1;	// IMP=0x0000000000ec505c
- (id)_nameOfDictionaryForDocumentTag:(long long)arg1;	// IMP=0x0000000000ec5024

@end

