//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIContentSizeCategoryAdjusting-Protocol.h>
#import <UIKitCore/UIKeyboardInput-Protocol.h>
#import <UIKitCore/UITextAutoscrolling-Protocol.h>
#import <UIKitCore/UITextInput-Protocol.h>
#import <UIKitCore/UITextInputControllerDelegate-Protocol.h>
#import <UIKitCore/UITextInputTraits_Private-Protocol.h>
#import <UIKitCore/UIViewGhostedRangeSupporting-Protocol.h>
#import <UIKitCore/_UILayoutBaselineUpdating-Protocol.h>
#import <UIKitCore/_UIMultilineTextContentSizing-Protocol.h>
#import <UIKitCore/_UITextContainerViewDelegate-Protocol.h>
#import <UIKitCore/_UITextContent-Protocol.h>
#import <UIKitCore/_UITextItemDiscoverable-Protocol.h>
#import <UIKitCore/_UITextItemInteracting-Protocol.h>
#import <UIKitCore/_UITextViewContentPaddingDelegate-Protocol.h>
#import <UIKitCore/_UIViewBaselineSpacing-Protocol.h>

@class CUICatalog, NSAttributedString, NSDictionary, NSIndexSet, NSLayoutManager, NSString, NSTextContainer, NSTextStorage, UIAutoscroll, UIColor, UIFont, UIImage, UIInputContextHistory, UILabel, UITextInputController, UITextInputPasswordRules, UITextInputTraits, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, _UICharacterStreamingManager, _UISupplementalLexicon, _UITextContainerView, _UITextItemDiscoverer, _UITextLayoutController, _UITextLayoutView, _UITextSizeCache, _UITextViewContentPadding, _UITextViewRestorableScrollPosition, _UITextViewVisualStyle;
@protocol UICoordinateSpace, UITextInputDelegate, UITextInputTokenizer, UITextViewDelegate;

@interface UITextView <_UIViewBaselineSpacing, _UITextContainerViewDelegate, _UITextViewContentPaddingDelegate, UITextInputControllerDelegate, UITextAutoscrolling, UIKeyboardInput, _UITextContent, UITextInputTraits_Private, _UIMultilineTextContentSizing, _UILayoutBaselineUpdating, UIViewGhostedRangeSupporting, _UITextItemInteracting, _UITextItemDiscoverable, UITextInput, UIContentSizeCategoryAdjusting>
{
    NSTextStorage *_textStorage;	// 120 = 0x78
    NSTextContainer *_textContainer;	// 128 = 0x80
    _UITextContainerView *_containerView;	// 136 = 0x88
    _UITextLayoutView *_layoutView;	// 144 = 0x90
    id _inputDelegate;	// 152 = 0x98
    id <UITextInputTokenizer> _tokenizer;	// 160 = 0xa0
    UITextInputController *_inputController;	// 168 = 0xa8
    UITextInteractionAssistant *_interactionAssistant;	// 176 = 0xb0
    UITextInputTraits *_textInputTraits;	// 184 = 0xb8
    UIAutoscroll *_autoscroll;	// 192 = 0xc0
    struct {
        unsigned int needsScrollToSelectionAfterLayout:1;
        unsigned int editable:1;
        unsigned int reentrancyGuard:1;
        unsigned int usesExplicitPreferredMaxLayoutWidth:1;
        unsigned int interactiveSelectionDisabled:1;
        unsigned int selectable:1;
        unsigned int shouldPresentSheetsInAWindowLayeredAboveTheKeyboard:1;
        unsigned int shouldAutoscrollAboveBottom:1;
        unsigned int containerViewSizeInvalid:1;
        unsigned int isAnimatingPaste:1;
        unsigned int textSizeCacheEnabled:1;
        unsigned int showsEditMenu:1;
    } _tvFlags;	// 200 = 0xc8
    long long _contentSizeUpdateSeqNo;	// 208 = 0xd0
    _UITextViewRestorableScrollPosition *_scrollTarget;	// 216 = 0xd8
    unsigned long long _scrollPositionDontRecordCount;	// 224 = 0xe0
    _UITextViewRestorableScrollPosition *_scrollPosition;	// 232 = 0xe8
    double _offsetFromScrollPosition;	// 240 = 0xf0
    unsigned long long _dataDetectorTypes;	// 248 = 0xf8
    double _preferredMaxLayoutWidth;	// 256 = 0x100
    UILabel *_placeholderLabel;	// 264 = 0x108
    NSAttributedString *_overriddenPlaceholder;	// 272 = 0x110
    long long _overriddenPlaceholderAlignment;	// 280 = 0x118
    UIView *_inputAccessoryView;	// 288 = 0x120
    NSDictionary *_linkTextAttributes;	// 296 = 0x128
    _UICharacterStreamingManager *_characterStreamingManager;	// 304 = 0x130
    NSDictionary *_siriParameters;	// 312 = 0x138
    double _firstBaselineOffsetFromTop;	// 320 = 0x140
    double _lastBaselineOffsetFromBottom;	// 328 = 0x148
    _UITextSizeCache *_intrinsicSizeCache;	// 336 = 0x150
    CUICatalog *_cuiCatalog;	// 344 = 0x158
    struct UIEdgeInsets _beforeFreezingTextContainerInset;	// 352 = 0x160
    struct UIEdgeInsets _duringFreezingTextContainerInset;	// 384 = 0x180
    struct CGSize _beforeFreezingFrameSize;	// 416 = 0x1a0
    _Bool _unfreezingTextContainerSize;	// 432 = 0x1b0
    struct CGRect _frameOfTrailingWhitespace;	// 440 = 0x1b8
    _UITextItemDiscoverer *_textItemDiscoverer;	// 472 = 0x1d8
    _UITextViewContentPadding *_topContentPadding;	// 480 = 0x1e0
    _UITextViewContentPadding *_bottomContentPadding;	// 488 = 0x1e8
    struct CGPoint _scrollEndDraggingVelocity;	// 496 = 0x1f0
    _Bool _adjustsFontForContentSizeCategory;	// 512 = 0x200
    _Bool _clearsOnInsertion;	// 513 = 0x201
    _UITextLayoutController *_textLayoutController;	// 520 = 0x208
    double _multilineContextWidth;	// 528 = 0x210
    UIView *_inputView;	// 536 = 0x218
    _UITextViewVisualStyle *_visualStyle;	// 544 = 0x220
}

+ (id)_defaultTextColor;	// IMP=0x0000000000eb97a1
- (void).cxx_destruct;	// IMP=0x0000000000ebedc8
@property(retain, nonatomic) _UITextViewVisualStyle *visualStyle; // @synthesize visualStyle=_visualStyle;
@property(readonly, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(readonly, nonatomic) NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(retain) UIView *inputView; // @synthesize inputView=_inputView;
- (void)_setMultilineContextWidth:(double)arg1;	// IMP=0x0000000000ebed48
- (double)_multilineContextWidth;	// IMP=0x0000000000ebed36
@property(readonly, nonatomic) _UITextLayoutController *textLayoutController; // @synthesize textLayoutController=_textLayoutController;
@property(nonatomic) _Bool adjustsFontForContentSizeCategory; // @synthesize adjustsFontForContentSizeCategory=_adjustsFontForContentSizeCategory;
- (id)_getDelegateZoomView;	// IMP=0x0000000000ebecbf
- (_Bool)isTextDropActive;	// IMP=0x0000000000ebecb7
- (_Bool)isTextDragActive;	// IMP=0x0000000000ebecaf
- (_Bool)_allowHighlightForTextInteractableItem:(id)arg1;	// IMP=0x0000000000ebec15
- (_Bool)_interactionPossibleWithAttachment:(id)arg1;	// IMP=0x0000000000ebeb9d
- (id)_textInteractableItemAtPoint:(struct CGPoint)arg1 precision:(unsigned long long)arg2;	// IMP=0x0000000000ebe2b5
- (id)_anyTextItemConstrainedToLineAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ebe249
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ebe243
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ebe23d
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ebe1fe
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ebe1c9
- (_Bool)_mightHaveInteractableItems;	// IMP=0x0000000000ebe1c1
- (_Bool)_allowInteraction:(long long)arg1 forTextInteractableItem:(id)arg2;	// IMP=0x0000000000ebdf31
- (_Bool)_delegatesAllowingTextItemInteractions;	// IMP=0x0000000000ebdeb3
- (void)_updateSelectionGestures;	// IMP=0x0000000000ebdc7a
- (void)_resetDataDetectorsResults;	// IMP=0x0000000000ebdc74
- (void)_startDataDetectors;	// IMP=0x0000000000ebdc6e
- (void)_startDataDetectorsIfNeeded;	// IMP=0x0000000000ebdc37
- (void)_cancelDataDetectors;	// IMP=0x0000000000ebdc31
- (_Bool)_shouldStartDataDetectors;	// IMP=0x0000000000ebdbe3
- (unsigned long long)_effectiveDataDetectorTypes;	// IMP=0x0000000000ebdb9f
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0000000000ebdb3e
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x0000000000ebdae3
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x0000000000ebda5c
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x0000000000ebd9ea
- (id)_textInputTraits;	// IMP=0x0000000000ebd900
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
- (_Bool)_shouldObscureInput;	// IMP=0x0000000000ebd7a9
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
- (id)metadataDictionariesForDictationResults;	// IMP=0x0000000000ebd68e
- (void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2;	// IMP=0x0000000000ebd619
- (void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x0000000000ebd483
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x0000000000ebd3c2
- (void)textInputDidAnimatePaste:(id)arg1;	// IMP=0x0000000000ebd3b0
- (void)textInputWillAnimatePaste:(id)arg1;	// IMP=0x0000000000ebd39e
- (_Bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x0000000000ebd2f3
- (id)automaticallySelectedOverlay;	// IMP=0x0000000000ebd1dd
- (void)keyboardInputChangedSelection:(id)arg1;	// IMP=0x0000000000ebd161
- (_Bool)keyboardInputChanged:(id)arg1;	// IMP=0x0000000000ebd0e4
- (_Bool)keyboardInputShouldDelete:(id)arg1;	// IMP=0x0000000000ebcfe5
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;	// IMP=0x0000000000ebcef2
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x0000000000ebce54
- (void)validateCommand:(id)arg1;	// IMP=0x0000000000ebcdf7
- (void)captureTextFromCamera:(id)arg1;	// IMP=0x0000000000ebcd9a
- (void)alignRight:(id)arg1;	// IMP=0x0000000000ebcd3d
- (void)alignJustified:(id)arg1;	// IMP=0x0000000000ebcce0
- (void)alignCenter:(id)arg1;	// IMP=0x0000000000ebcc83
- (void)alignLeft:(id)arg1;	// IMP=0x0000000000ebcc26
- (void)_transliterateChinese:(id)arg1;	// IMP=0x0000000000ebcbc9
- (void)_promptForReplace:(id)arg1;	// IMP=0x0000000000ebcb6c
- (void)replace:(id)arg1;	// IMP=0x0000000000ebcb0f
- (void)updateTextAttributesWithConversionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000ebcab2
- (void)decreaseSize:(id)arg1;	// IMP=0x0000000000ebca76
- (void)increaseSize:(id)arg1;	// IMP=0x0000000000ebca3a
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x0000000000ebc9dd
- (void)toggleUnderline:(id)arg1;	// IMP=0x0000000000ebc980
- (void)toggleItalics:(id)arg1;	// IMP=0x0000000000ebc923
- (void)toggleBoldface:(id)arg1;	// IMP=0x0000000000ebc8c6
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x0000000000ebc869
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x0000000000ebc80c
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x0000000000ebc7af
- (void)selectAll:(id)arg1;	// IMP=0x0000000000ebc73d
- (void)select:(id)arg1;	// IMP=0x0000000000ebc700
- (id)_attributedStringForInsertionOfAttributedString:(id)arg1;	// IMP=0x0000000000ebc693
- (void)_pasteAttributedString:(id)arg1 pasteAsRichText:(_Bool)arg2;	// IMP=0x0000000000ebc630
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x0000000000ebc5d3
- (void)paste:(id)arg1;	// IMP=0x0000000000ebc576
- (_Bool)_isDisplayingShortcutViewController;	// IMP=0x0000000000ebc53c
- (void)_addShortcut:(id)arg1;	// IMP=0x0000000000ebc4df
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;	// IMP=0x0000000000ebc482
- (void)_selectionMayChange:(id)arg1;	// IMP=0x0000000000ebc425
- (_Bool)_isDisplayingLookupViewController;	// IMP=0x0000000000ebc3eb
- (_Bool)_isDisplayingShareViewController;	// IMP=0x0000000000ebc3b1
- (_Bool)_isDisplayingTextService;	// IMP=0x0000000000ebc377
- (void)_share:(id)arg1;	// IMP=0x0000000000ebc31a
- (_Bool)_isDisplayingReferenceLibraryViewController;	// IMP=0x0000000000ebc2e0
- (void)_translate:(id)arg1;	// IMP=0x0000000000ebc283
- (void)_define:(id)arg1;	// IMP=0x0000000000ebc226
- (void)copy:(id)arg1;	// IMP=0x0000000000ebc171
- (void)cut:(id)arg1;	// IMP=0x0000000000ebc109
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000ebc036
- (void)_adjustFontForAccessibilityTraits:(_Bool)arg1;	// IMP=0x0000000000ebbc03
- (void)cancelAutoscroll;	// IMP=0x0000000000ebbb8f
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x0000000000ebb915
- (id)textContainerView:(id)arg1 cuiCatalogForTextEffectName:(id)arg2;	// IMP=0x0000000000ebb88e
- (void)updateSelectionForTextContainerView:(id)arg1;	// IMP=0x0000000000ebb87c
- (struct _NSRange)selectedRangeForTextContainerView:(id)arg1;	// IMP=0x0000000000ebb86a
- (_Bool)isEditableForTextContainerView:(id)arg1;	// IMP=0x0000000000ebb858
- (id)textContainerView:(id)arg1 linkTextAttributesForLink:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;	// IMP=0x0000000000ebb840
- (id)linkTextAttributesForTextContainerView:(id)arg1;	// IMP=0x0000000000ebb82e
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x0000000000ebb81a
- (void)_unconstrainTiledRendering;	// IMP=0x0000000000ebb814
- (void)_constrainTiledRenderingToRect:(struct CGRect)arg1;	// IMP=0x0000000000ebb80e
- (void)_setFreezeTextContainerSize:(_Bool)arg1;	// IMP=0x0000000000ebb6b4
- (_Bool)_freezeTextContainerSize;	// IMP=0x0000000000ebb697
- (void)_updateTextEffectsConfigurationIfNeeded;	// IMP=0x0000000000ebb4cd
- (id)_cuiStyleEffectConfiguration;	// IMP=0x0000000000ebb47d
- (void)_setCuiStyleEffectConfiguration:(id)arg1;	// IMP=0x0000000000ebb2e7
- (void)_setupDefaultStyleEffectConfiguration;	// IMP=0x0000000000ebb1fd
- (id)_cuiCatalog;	// IMP=0x0000000000ebb1e8
- (void)_setCuiCatalog:(id)arg1;	// IMP=0x0000000000ebb187
- (void)setShouldPreserveVisualFontSizeFidelity:(_Bool)arg1;	// IMP=0x0000000000ebb175
- (_Bool)shouldPreserveVisualFontSizeFidelity;	// IMP=0x0000000000ebb163
@property(nonatomic) _Bool usesStandardTextScaling;
- (id)_allowedTypingAttributes;	// IMP=0x0000000000ebb0e3
- (void)_setAllowedTypingAttributes:(id)arg1;	// IMP=0x0000000000ebb086
- (id)_whitelistedTypingAttributes;	// IMP=0x0000000000ebb074
- (void)_setWhitelistedTypingAttributes:(id)arg1;	// IMP=0x0000000000ebb062
- (void)setContentMode:(long long)arg1;	// IMP=0x0000000000ebafed
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ebaf84
- (id)_linkTextAttributesForLink:(id)arg1 forCharacterAtIndex:(unsigned long long)arg2;	// IMP=0x0000000000ebac48
@property(copy, nonatomic) NSDictionary *linkTextAttributes;
- (double)lineHeight;	// IMP=0x0000000000eba846
- (void)setLineHeight:(double)arg1;	// IMP=0x0000000000eba6c9
- (struct CGRect)visibleTextRect;	// IMP=0x0000000000eba6aa
- (struct CGRect)visibleRect;	// IMP=0x0000000000eba5fa
- (struct CGRect)visibleRectIgnoringKeyboard;	// IMP=0x0000000000eba58d
@property(nonatomic) struct UIEdgeInsets textContainerInset;
- (void)setMarginTop:(unsigned long long)arg1;	// IMP=0x0000000000eba2ff
- (unsigned long long)marginTop;	// IMP=0x0000000000eba297
- (void)updateAutoscrollAboveBottom;	// IMP=0x0000000000eba21e
- (void)setShouldAutoscrollAboveBottom:(_Bool)arg1;	// IMP=0x0000000000eba1f4
- (_Bool)shouldAutoscrollAboveBottom;	// IMP=0x0000000000eba1e1
- (void)setContentToHTMLString:(id)arg1;	// IMP=0x0000000000eba0c4
- (id)webView;	// IMP=0x0000000000eba0bc
@property(nonatomic) unsigned long long dataDetectorTypes;
- (void)disableClearsOnInsertion;	// IMP=0x0000000000eba041
@property(nonatomic) _Bool clearsOnInsertion; // @synthesize clearsOnInsertion=_clearsOnInsertion;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;	// IMP=0x0000000000eb9eae
- (_Bool)_shouldBecomeEditableUponBecomingTargetOfKeyboardEventDeferringEnvironment;	// IMP=0x0000000000eb9ea6
- (_Bool)_shouldBecomeEditableUponFocus;	// IMP=0x0000000000eb9e9e
- (_Bool)becomesEditableWithGestures;	// IMP=0x0000000000eb9e96
@property(nonatomic) struct _NSRange selectedRange;
@property(nonatomic) long long textAlignment;
@property(retain, nonatomic) UIColor *textColor;
- (void)_setTextColor:(id)arg1;	// IMP=0x0000000000eb9834
- (_Bool)_shouldAppendTextInViewDescription;	// IMP=0x0000000000eb978c
@property(readonly, copy) NSString *debugDescription;
@property(copy, nonatomic) NSString *text;
- (id)_currentDefaultAttributes;	// IMP=0x0000000000eb94b1
- (_Bool)allowsAttachments;	// IMP=0x0000000000eb94a9
@property(retain, nonatomic) UIFont *font;
- (id)initWithFrame:(struct CGRect)arg1 font:(id)arg2;	// IMP=0x0000000000eb92b6
- (void)textInputDidChangeSelection:(id)arg1;	// IMP=0x0000000000eb9249
- (_Bool)textInputShouldExtendCaretHeight:(id)arg1;	// IMP=0x0000000000eb9200
- (void)textInputDidChange:(id)arg1;	// IMP=0x0000000000eb9139
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x0000000000eb9100
- (void)_setTypingAttributesTextColor:(id)arg1;	// IMP=0x0000000000eb907d
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (void)_syncTypingAttributesToTextContainerAttributesForExtraLineFragment;	// IMP=0x0000000000eb8e0c
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;	// IMP=0x0000000000eb8d99
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x0000000000eb8d36
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;	// IMP=0x0000000000eb8cc0
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
- (void)removeTextPlaceholder:(id)arg1;	// IMP=0x0000000000eb8c1d
- (id)insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x0000000000eb8bbb
- (_Bool)_isSystemAttachment:(id)arg1;	// IMP=0x0000000000eb8b5a
- (_Bool)_shouldSuppressSelectionCommands;	// IMP=0x0000000000eb8b52
- (void)_updateSelectableInteractions;	// IMP=0x0000000000eb8930
- (_Bool)_showsEditMenu;	// IMP=0x0000000000eb891a
- (void)_setShowsEditMenu:(_Bool)arg1;	// IMP=0x0000000000eb88fc
@property(nonatomic, getter=isSelectable) _Bool selectable;
@property(nonatomic, getter=isEditable) _Bool editable;
- (_Bool)_mightHaveSelection;	// IMP=0x0000000000eb870d
- (_Bool)isEditing;	// IMP=0x0000000000eb86d4
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000eb8672
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000eb85e9
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000eb8587
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x0000000000eb851a
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000eb84a7
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x0000000000eb8431
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x0000000000eb83bb
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x0000000000eb8358
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000eb82f1
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
- (id)undoManager;	// IMP=0x0000000000eb81c2
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000eb814f
- (id)_textInputViewForAddingGestureRecognizers;	// IMP=0x0000000000eb8146
@property(readonly, nonatomic) UIView *textInputView;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000000eb80be
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000eb803b
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000eb7fb8
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x0000000000eb7f3f
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x0000000000eb7ecc
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000eb7e3d
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x0000000000eb7d7d
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000eb7d15
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000eb7cad
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(nonatomic) long long selectionAffinity;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x0000000000eb79c2
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000eb794d
- (id)attributedTextInRange:(id)arg1;	// IMP=0x0000000000eb78e0
- (void)insertAttributedText:(id)arg1;	// IMP=0x0000000000eb7883
- (id)textInRange:(id)arg1;	// IMP=0x0000000000eb7816
- (id)selectedText;	// IMP=0x0000000000eb77b3
- (struct CGRect)_rectToScrollToVisibleInCellInWindow:(id)arg1;	// IMP=0x0000000000eb730e
- (struct CGPoint)_contentOffsetForScrollingToRect:(struct CGRect)arg1;	// IMP=0x0000000000eb71aa
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x0000000000eb7139
- (void)scrollRangeToVisible:(struct _NSRange)arg1;	// IMP=0x0000000000eb70d7
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000eb707f
- (id)_restorableScrollPositionForStateRestoration;	// IMP=0x0000000000eb7063
- (id)_restorableScrollPosition;	// IMP=0x0000000000eb7047
- (void)_restoreScrollPosition:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000eb6f79
- (struct CGPoint)_lastGlyphBaselineLeftPointWithLayoutManager:(id)arg1;	// IMP=0x0000000000eb6ca8
- (struct CGPoint)_firstGlyphBaselineRightPointWithLayoutManager:(id)arg1;	// IMP=0x0000000000eb69e4
- (struct CGPoint)_lastGlyphBaselineRightPointWithLayoutManager:(id)arg1;	// IMP=0x0000000000eb6609
- (struct CGPoint)_firstGlyphBaselineLeftPointWithLayoutManager:(id)arg1;	// IMP=0x0000000000eb6320
- (void)_ensureCleanedUp;	// IMP=0x0000000000eb631a
- (void)_didFinishSpeechRecognition;	// IMP=0x0000000000eb62c7
- (void)_didRecognizeSpeechStrings:(id)arg1;	// IMP=0x0000000000eb60f5
- (void)_didRecognizeSpeechTokens:(id)arg1;	// IMP=0x0000000000eb60a9
- (id)extractWordArrayFromTokensArray:(id)arg1;	// IMP=0x0000000000eb5d19
- (void)_setSiriAnimationDictationStyleWithCharacterInsertionRate:(double)arg1 minimumDurationBetweenHypotheses:(double)arg2;	// IMP=0x0000000000eb5c18
- (void)_enableSiriAnimationDictationStyle;	// IMP=0x0000000000eb5c12
- (_Bool)hasTextItemsOfType:(long long)arg1 inTextRange:(id)arg2;	// IMP=0x0000000000eb5b95
- (id)textItemsOfType:(long long)arg1 inTextRange:(id)arg2;	// IMP=0x0000000000eb5b0c
- (id)visibleTextRange;	// IMP=0x0000000000eb5abc
@property(readonly, nonatomic) id <UICoordinateSpace> textItemCoordinateSpace;
- (id)_textItemDiscoverer;	// IMP=0x0000000000eb5a18
- (struct CGRect)_boundingRectForRange:(id)arg1;	// IMP=0x0000000000eb59da
- (id)_previewRendererForRange:(id)arg1 unifyRects:(_Bool)arg2;	// IMP=0x0000000000eb59bd
- (struct _NSRange)_visibleRangeWithLayout:(_Bool)arg1;	// IMP=0x0000000000eb5893
- (struct CGPoint)_contentOffsetForScrollToVisible:(struct _NSRange)arg1;	// IMP=0x0000000000eb57f4
- (struct CGRect)_rectForScrollToVisible:(struct _NSRange)arg1;	// IMP=0x0000000000eb537c
- (void)_diagnoseFocusabilityForReport:(id)arg1;	// IMP=0x0000000000eb52f9
- (id)_systemDefaultFocusGroupIdentifier;	// IMP=0x0000000000eb52ef
- (struct CGRect)accessibilityFrame;	// IMP=0x0000000000eb5295
- (_Bool)_wantsFocusRing;	// IMP=0x0000000000eb528d
- (_Bool)canBecomeFocused;	// IMP=0x0000000000eb523a
- (void)endFloatingCursor;	// IMP=0x0000000000eb51fd
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;	// IMP=0x0000000000eb5190
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000eb5137
- (void)beginFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000eb50de
- (_Bool)_restoreFirstResponder;	// IMP=0x0000000000eb5056
- (id)interactionAssistant;	// IMP=0x0000000000eb5041
- (id)selectionView;	// IMP=0x0000000000eb4ff1
- (void)updateSelectionImmediately;	// IMP=0x0000000000eb4f87
- (void)updateSelection;	// IMP=0x0000000000eb4f1d
- (void)endSelectionChange;	// IMP=0x0000000000eb4ee9
- (void)beginSelectionChange;	// IMP=0x0000000000eb4eb5
- (void)_deleteBackwardAndNotify:(_Bool)arg1;	// IMP=0x0000000000eb4dee
- (void)deleteBackward;	// IMP=0x0000000000eb4dba
- (void)insertText:(id)arg1 style:(long long)arg2 alternatives:(id)arg3;	// IMP=0x0000000000eb4d9f
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;	// IMP=0x0000000000eb4ccb
- (void)insertText:(id)arg1;	// IMP=0x0000000000eb4c6e
@property(readonly, nonatomic) _Bool hasText;
- (void)_updatePlaceholderVisibility;	// IMP=0x0000000000eb4b74
- (void)_layoutPlaceholder;	// IMP=0x0000000000eb486c
- (_Bool)_isTextSizeCacheEnabled;	// IMP=0x0000000000eb4856
- (void)_setTextSizeCacheEnabled:(_Bool)arg1;	// IMP=0x0000000000eb4806
- (void)_setOverridePlaceholder:(id)arg1 alignment:(long long)arg2;	// IMP=0x0000000000eb4686
- (id)attributedPlaceholder;	// IMP=0x0000000000eb463e
- (void)setAttributedPlaceholder:(id)arg1;	// IMP=0x0000000000eb44a7
- (void)setShouldPresentSheetsInAWindowLayeredAboveTheKeyboard:(_Bool)arg1;	// IMP=0x0000000000eb448b
- (_Bool)_shouldShowEditMenu;	// IMP=0x0000000000eb4479
- (_Bool)shouldPresentSheetsInAWindowLayeredAboveTheKeyboard;	// IMP=0x0000000000eb4464
- (_Bool)_isInteractiveTextSelectionDisabled;	// IMP=0x0000000000eb444f
- (void)_setInteractiveTextSelectionDisabled:(_Bool)arg1;	// IMP=0x0000000000eb43d8
- (void)_updateContainerTileAndSizingFlags;	// IMP=0x0000000000eb4249
- (void)setScrollEnabled:(_Bool)arg1;	// IMP=0x0000000000eb41ae
- (void)removeInvisibleRange:(id)arg1;	// IMP=0x0000000000eb4115
- (void)addInvisibleRange:(id)arg1;	// IMP=0x0000000000eb407c
- (void)removeAllGhostedRanges;	// IMP=0x0000000000eb405f
- (void)addGhostedRange:(id)arg1;	// IMP=0x0000000000eb401d
- (void)setTiledViewsDrawAsynchronously:(_Bool)arg1;	// IMP=0x0000000000eb3fa3
- (_Bool)tiledViewsDrawAsynchronously;	// IMP=0x0000000000eb3f2a
- (void)setMaxTileHeight:(double)arg1;	// IMP=0x0000000000eb3f0d
- (double)maxTileHeight;	// IMP=0x0000000000eb3ef0
- (void)_disableTiledViews;	// IMP=0x0000000000eb3ed1
- (void)setUsesTiledViews:(_Bool)arg1;	// IMP=0x0000000000eb3dff
- (_Bool)usesTiledViews;	// IMP=0x0000000000eb3de2
@property(nonatomic) _Bool allowsEditingTextAttributes;
- (void)_notifyDidEndEditing;	// IMP=0x0000000000eb3cd3
- (void)_notifyDidBeginEditing;	// IMP=0x0000000000eb3c37
- (_Bool)resignFirstResponder;	// IMP=0x0000000000eb3ab7
- (_Bool)canResignFirstResponder;	// IMP=0x0000000000eb3a47
- (void)tintColorDidChange;	// IMP=0x0000000000eb3969
- (_Bool)becomeFirstResponder;	// IMP=0x0000000000eb3529
- (_Bool)canBecomeFirstResponder;	// IMP=0x0000000000eb3521
- (_Bool)_shouldScrollEnclosingScrollView;	// IMP=0x0000000000eb3499
- (void)_keyboardDidShow:(id)arg1;	// IMP=0x0000000000eb343d
- (void)_scrollSelectionToVisibleInContainingScrollView;	// IMP=0x0000000000eb3429
- (void)_scrollSelectionToVisibleInContainingScrollView:(_Bool)arg1;	// IMP=0x0000000000eb33b8
- (void)_scrollRect:(struct CGRect)arg1 toVisibleInContainingScrollView:(_Bool)arg2;	// IMP=0x0000000000eb32bf
- (void)_updateBaselineInformationDependentOnBounds;	// IMP=0x0000000000eb30a9
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;	// IMP=0x0000000000eb302a
- (void)_prepareForFirstIntrinsicContentSizeCalculation;	// IMP=0x0000000000eb2fec
- (void)invalidateIntrinsicContentSize;	// IMP=0x0000000000eb2fa1
- (_Bool)_wantsBaselineUpdatingFollowingConstraintsPass;	// IMP=0x0000000000eb2f79
- (_Bool)_needsDoubleUpdateConstraintsPass;	// IMP=0x0000000000eb2f37
- (double)_currentPreferredMaxLayoutWidth;	// IMP=0x0000000000eb2f06
- (id)_layoutDebuggingTitle;	// IMP=0x0000000000eb2e95
- (struct CGSize)intrinsicContentSize;	// IMP=0x0000000000eb2caf
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;	// IMP=0x0000000000eb2b4a
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x0000000000eb2a20
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x0000000000eb2a0e
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;	// IMP=0x0000000000eb2559
- (struct CGSize)_containerSizeForBoundsSize:(struct CGSize)arg1 allowingOverflow:(_Bool)arg2;	// IMP=0x0000000000eb23f0
- (void)_performLayoutCalculation:(CDUnknownBlockType)arg1 inSize:(struct CGSize)arg2;	// IMP=0x0000000000eb207b
- (CDStruct_c3b9c2ee)_baselineOffsetsAtSize:(struct CGSize)arg1;	// IMP=0x0000000000eb1cdc
- (_Bool)_shouldInvalidateBaselineConstraintsForSize:(struct CGSize)arg1 oldSize:(struct CGSize)arg2;	// IMP=0x0000000000eb1cd4
- (_Bool)_hasBaseline;	// IMP=0x0000000000eb1ccc
- (double)_baselineOffsetFromBottom;	// IMP=0x0000000000eb1c31
- (double)_firstBaselineOffsetFromTop;	// IMP=0x0000000000eb1b96
- (double)_preferredMaxLayoutWidth;	// IMP=0x0000000000eb1b84
- (void)_setPreferredMaxLayoutWidth:(double)arg1;	// IMP=0x0000000000eb1ade
- (void)_resetUsesExplicitPreferredMaxLayoutWidth;	// IMP=0x0000000000eb1a86
- (struct CGRect)_frameOfTrailingWhitespace;	// IMP=0x0000000000eb1a66
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x0000000000eb18ab
- (void)setNeedsDisplay;	// IMP=0x0000000000eb172b
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000eb163f
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000eb1553
- (void)_setFrameOrBounds:(struct CGRect)arg1 fromOldRect:(struct CGRect)arg2 settingAction:(CDUnknownBlockType)arg3;	// IMP=0x0000000000eb110a
- (void)_updateContentSize;	// IMP=0x0000000000eb0ae9
- (void)_updateFrameOfTrailingWhitespace:(struct CGSize)arg1;	// IMP=0x0000000000eb09f1
- (void)_textContainerSizeDidChange:(id)arg1;	// IMP=0x0000000000eb09c3
- (void)_scrollToSelectionIfNeeded;	// IMP=0x0000000000eb08f1
- (void)_scrollToCaretIfNeeded;	// IMP=0x0000000000eb053b
- (void)_invalidateContainerViewSize;	// IMP=0x0000000000eb051d
- (void)_updateContentContainerView;	// IMP=0x0000000000eb0517
- (void)layoutSubviews;	// IMP=0x0000000000eb04c1
- (void)_layoutText;	// IMP=0x0000000000eb044e
- (void)_setNeedsTextLayout;	// IMP=0x0000000000eb03df
- (void)setNeedsLayout;	// IMP=0x0000000000eb039e
- (void)adjustedContentInsetDidChange;	// IMP=0x0000000000eb0358
- (void)_resyncContainerFrameForNonAutolayoutDeferringSizeToFit:(_Bool)arg1;	// IMP=0x0000000000eafe49
- (void)_resyncContainerFrameForNonAutolayout;	// IMP=0x0000000000eafe35
- (void)_updateTextContainerSizeAndSizeToFit;	// IMP=0x0000000000eafd7e
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;	// IMP=0x0000000000eafbf6
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;	// IMP=0x0000000000eafa76
- (void)_scrollViewWillEndDraggingWithVelocity:(struct CGPoint)arg1 targetContentOffset:(struct CGPoint *)arg2;	// IMP=0x0000000000eafa5e
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x0000000000eaf9e3
- (void)_textViewContentPaddingDidChange:(id)arg1;	// IMP=0x0000000000eaf9c2
- (id)bottomContentPadding;	// IMP=0x0000000000eaf9ad
- (id)topContentPadding;	// IMP=0x0000000000eaf998
- (void)_setContentOffsetWithoutRecordingScrollPosition:(struct CGPoint)arg1;	// IMP=0x0000000000eaf96d
- (void)_observedTextViewDidChange:(id)arg1;	// IMP=0x0000000000eaf932
- (unsigned long long)_totalNumberOfTextViewsInLayoutManager;	// IMP=0x0000000000eaf7bc
- (void)_textStorageDidProcessEditing:(id)arg1;	// IMP=0x0000000000eaf737
- (id)_canvasView;	// IMP=0x0000000000eaf71a
- (id)_containerView;	// IMP=0x0000000000eaf705
- (id)_contentView;	// IMP=0x0000000000eaf6fc
@property(copy) NSAttributedString *attributedText;
- (void)addTextAlternativesDisplayStyle:(long long)arg1 toRange:(struct _NSRange)arg2;	// IMP=0x0000000000eaf002
- (_Bool)_ownsInputAccessoryView;	// IMP=0x0000000000eaef35
@property(retain) UIView *inputAccessoryView;
- (id)_inputController;	// IMP=0x0000000000eaee72
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (void)dealloc;	// IMP=0x0000000000eaedc6
- (void)_populateArchivedSubviews:(id)arg1;	// IMP=0x0000000000eaebb8
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000eae505
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000eadf83
- (id)initReadonlyAndUnselectableWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;	// IMP=0x0000000000eadee4
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;	// IMP=0x0000000000eade56
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000eade42
- (void)_commonInitWithTextContainer:(id)arg1 isDecoding:(_Bool)arg2 isEditable:(_Bool)arg3 isSelectable:(_Bool)arg4 isDraggable:(_Bool)arg5;	// IMP=0x0000000000ead47b
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;	// IMP=0x000000000000a34d
- (_Bool)isAccessibilityElementByDefault;	// IMP=0x000000000000a345
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;	// IMP=0x0000000000ae339e
- (Class)_printFormatterClass;	// IMP=0x0000000000ae338d
- (void)endSnapshotSeparation;	// IMP=0x0000000000e570e8
- (void)addSnapshotSeparation:(double)arg1 withAffinity:(long long)arg2;	// IMP=0x0000000000e56ff0
- (double)beginSnapshotSeparationOfHeight:(double)arg1 atYOffset:(double)arg2;	// IMP=0x0000000000e566b5
- (struct CGRect)rectInTextContainerForRect:(struct CGRect)arg1;	// IMP=0x0000000000e56661
@property(retain, nonatomic) UIView *uiss_snapshotView;
@property(nonatomic, setter=_setDrawsDebugBaselines:) _Bool _drawsDebugBaselines;
- (void)decodeRestorableStateWithCoder:(id)arg1;	// IMP=0x0000000000ebf805
- (void)decodeRestorableStateWithCoder:(id)arg1 includingSelectedTextAndDisplayedViewControllers:(_Bool)arg2;	// IMP=0x0000000000ebf311
- (void)encodeRestorableStateWithCoder:(id)arg1;	// IMP=0x0000000000ebf2fa
- (void)encodeRestorableStateWithCoder:(id)arg1 includingSelectedTextAndDisplayedViewControllers:(_Bool)arg2;	// IMP=0x0000000000ebf033
@property(copy, nonatomic, setter=_setInteractionState:) id _interactionState;
@property(copy, nonatomic) id interactionState;
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 nextToNeighbor:(id)arg3 edge:(int)arg4 attribute:(long long)arg5 multiplier:(double)arg6;	// IMP=0x0000000000f87f33
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 inContainer:(id)arg3 isGuide:(_Bool)arg4;	// IMP=0x0000000000f87ec4
- (_Bool)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)arg1;	// IMP=0x0000000000f87eb5
- (id)_fontInfoForBaselineSpacing;	// IMP=0x0000000000f87ea3
- (_Bool)_hasFontInfoForVerticalBaselineSpacing;	// IMP=0x0000000000f87e8e

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(nonatomic) _Bool deferBecomingResponder;
@property(nonatomic) __weak id <UITextViewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(readonly, nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

