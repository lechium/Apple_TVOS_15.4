//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <IDSFoundation/IDSLink-Protocol.h>
#import <IDSFoundation/IDSLinkDelegate-Protocol.h>
#import <IDSFoundation/IDSStunCandidatePairDelegate-Protocol.h>

@class IDSGlobalLinkBlocks, IDSStunCandidatePair, IDSTCPLink, IDSUDPLink, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol IDSLinkDelegate, OS_dispatch_source;

@interface IDSGlobalLink : NSObject <IDSLink, IDSLinkDelegate, IDSStunCandidatePairDelegate>
{
    IDSUDPLink *_udpLink;	// 8 = 0x8
    IDSUDPLink *_udpLinkv6;	// 16 = 0x10
    IDSTCPLink *_tcpLink;	// 24 = 0x18
    IDSTCPLink *_tcpSSLLink;	// 32 = 0x20
    unsigned short _startPort;	// 40 = 0x28
    int _portRange;	// 44 = 0x2c
    id <IDSLinkDelegate> _delegate;	// 48 = 0x30
    id <IDSLinkDelegate> _alternateDelegate;	// 56 = 0x38
    CDUnknownBlockType _connectReadyHandler;	// 64 = 0x40
    CDUnknownBlockType _disconnectCompletionHandler;	// 72 = 0x48
    long long _clientType;	// 80 = 0x50
    _Bool _allowOnlyOneQR;	// 88 = 0x58
    _Bool _allowP2P;	// 89 = 0x59
    _Bool _disallowWiFi;	// 90 = 0x5a
    _Bool _disallowCellular;	// 91 = 0x5b
    _Bool _preferCellularForCallSetup;	// 92 = 0x5c
    _Bool _allowConcurrentQRSetup;	// 93 = 0x5d
    struct tagIDSQRSendInfoList *_sendInfoList;	// 96 = 0x60
    BOOL _linkIDCounter;	// 104 = 0x68
    BOOL _linkIDForQUIC;	// 105 = 0x69
    double _natMappingTimeout;	// 112 = 0x70
    double _inviteSentTime;	// 120 = 0x78
    double _inviteRecvTime;	// 128 = 0x80
    unsigned int _acceptDelayU32;	// 136 = 0x88
    double _allocbindStartTime;	// 144 = 0x90
    double _allocbindEndTime;	// 152 = 0x98
    double _linkConnectTime;	// 160 = 0xa0
    double _firstClientPacketTime;	// 168 = 0xa8
    double _firstDataReceivedTime;	// 176 = 0xb0
    _Bool _reportClientPacketTime;	// 184 = 0xb8
    _Bool _reportDataReceivedTime;	// 185 = 0xb9
    struct IDSNAT64PrefixCache_ *_nat64PrefixCache;	// 192 = 0xc0
    NSMutableDictionary *_tokenToCandidatePairs;	// 200 = 0xc8
    NSMutableDictionary *_linkIDToCandidatePairs;	// 208 = 0xd0
    NSMutableDictionary *_channelToCandidatePairs;	// 216 = 0xd8
    NSMutableDictionary *_startTimeToStunReqID;	// 224 = 0xe0
    NSMutableDictionary *_tokenToStunReqID;	// 232 = 0xe8
    struct IDSSimpleUInt16List _channelNumberList;	// 240 = 0xf0
    struct IDSSimpleUInt16List _reallocChannelList;	// 264 = 0x108
    NSMutableDictionary *_tokenToReallocBlocks;	// 288 = 0x120
    NSMutableDictionary *_reallocNewCandidatePairToOldCandidatePair;	// 296 = 0x128
    NSMutableDictionary *_unallocbindRequestToReason;	// 304 = 0x130
    NSObject<OS_dispatch_source> *_disconnectTimer;	// 312 = 0x138
    NSObject<OS_dispatch_source> *_activityTimer;	// 320 = 0x140
    NSMutableDictionary *_linkIDToReorderedPackets;	// 328 = 0x148
    NSMutableDictionary *_linkIDToRequestTimeStampAndRTT;	// 336 = 0x150
    NSMutableDictionary *_linkIDToHBCounter;	// 344 = 0x158
    NSMutableArray *_connectedLinkIDs;	// 352 = 0x160
    NSMutableArray *_activeProbingLinkIDs;	// 360 = 0x168
    NSMutableDictionary *_connectingCandidatePairSessionInfo;	// 368 = 0x170
    NSMutableArray *_interfaceAddressArray;	// 376 = 0x178
    _Bool _isInitiator;	// 384 = 0x180
    int _nominateCount;	// 388 = 0x184
    NSMutableArray *_localCandidateList;	// 392 = 0x188
    NSMutableArray *_remoteCandidateList;	// 400 = 0x190
    NSMutableDictionary *_tokenToStunCheckPairs;	// 408 = 0x198
    _Bool _enableSKE;	// 416 = 0x1a0
    NSData *_skeData;	// 424 = 0x1a8
    _Bool _recvRemoteSKEData;	// 432 = 0x1b0
    _Bool _delaySessionConnected;	// 433 = 0x1b1
    _Bool _skeToRemoteComplete;	// 434 = 0x1b2
    double _skeStartTime;	// 440 = 0x1b8
    NSString *_acceptedRelaySessionID;	// 448 = 0x1c0
    NSMutableArray *_nonAcceptedQRSessions;	// 456 = 0x1c8
    _Bool _isSessionAcceptedWithNoCandidatePair;	// 464 = 0x1d0
    long long _remoteCapabilityFlag;	// 472 = 0x1d8
    _Bool _delayedConnData;	// 480 = 0x1e0
    int _localConnDataCounter;	// 484 = 0x1e4
    int _remoteConnDataCounter;	// 488 = 0x1e8
    NSMutableArray *_delayedCellInterfaces;	// 496 = 0x1f0
    _Bool _hasPendingAllocation;	// 504 = 0x1f8
    NSMutableArray *_targetedAllocations;	// 512 = 0x200
    _Bool _useSecureControlMessage;	// 520 = 0x208
    NSData *_controlMessageKey;	// 528 = 0x210
    BOOL _basebandPacketLinkID;	// 536 = 0x218
    unsigned short _basebandPacketChannelNumber;	// 538 = 0x21a
    IDSGlobalLinkBlocks *_qraBlocks;	// 544 = 0x220
    NSMutableArray *_allocateTimeReportBlocks;	// 552 = 0x228
    _Bool _hasPendingSelfAllocation;	// 560 = 0x230
    NSMutableArray *_selfAllocateRequestIDs;	// 568 = 0x238
    NSString *_cbuuid;	// 576 = 0x240
    NSString *_deviceUniqueID;	// 584 = 0x248
    unsigned long long _headerOverhead;	// 592 = 0x250
    unsigned long long _state;	// 600 = 0x258
    unsigned char _clientUUID[16];	// 608 = 0x260
    NSString *_idsSessionID;	// 624 = 0x270
    unsigned long long _totalBytesSent;	// 632 = 0x278
    unsigned long long _totalPacketsSent;	// 640 = 0x280
    unsigned long long _totalBytesReceived;	// 648 = 0x288
    unsigned long long _totalPacketsReceived;	// 656 = 0x290
    unsigned long long _previousBytesSent;	// 664 = 0x298
    unsigned long long _previousPacketsSent;	// 672 = 0x2a0
    unsigned long long _previousBytesReceived;	// 680 = 0x2a8
    unsigned long long _previousPacketsReceived;	// 688 = 0x2b0
    double _previousReportTime;	// 696 = 0x2b8
    double _calleeAcceptTime;	// 704 = 0x2c0
    _Bool _isSecondOrLaterParticipant;	// 712 = 0x2c8
    _Bool _shouldReportAcceptDelay;	// 713 = 0x2c9
    unsigned int _probingTimeout;	// 716 = 0x2cc
    struct os_unfair_lock_s _lock;	// 720 = 0x2d0
    short _remoteGlobalLinkVersion;	// 724 = 0x2d4
    _Bool _reduceCellularUsage;	// 726 = 0x2d6
    _Bool _reduceRelayLinkCreation;	// 727 = 0x2d7
    _Bool _shouldProcessBasebandNotification;	// 728 = 0x2d8
    _Bool _supportChannelData;	// 729 = 0x2d9
    _Bool _islocalCellAttributeInexpensive;	// 730 = 0x2da
    _Bool _shouldAcceptIncomingMKMOverQR;	// 731 = 0x2db
    _Bool _receivedAllocbindResponse;	// 732 = 0x2dc
    NSMutableDictionary *_retryCountPerLinkType;	// 736 = 0x2e0
    unsigned int _remoteDeviceVersion;	// 744 = 0x2e8
    _Bool _isUPlusOneSession;	// 748 = 0x2ec
    unsigned int _localRelayInterfaceCounter;	// 752 = 0x2f0
    unsigned int _remoteRelayInterfaceCounter;	// 756 = 0x2f4
    double _remoteJoinedUPlusOneTime;	// 760 = 0x2f8
    NSMutableDictionary *_localRemoteRelayLinkIDToVirtualCandidatePairs;	// 768 = 0x300
    long long _delayFirstConnectionData;	// 776 = 0x308
    _Bool _receivedRemoteDeviceVersion;	// 784 = 0x310
    _Bool _isLightweightParticipant;	// 785 = 0x311
    NSDate *_timeBase;	// 792 = 0x318
    NSDictionary *_QRServerDataBlob;	// 800 = 0x320
    IDSStunCandidatePair *_migratingCandidatePair;	// 808 = 0x328
    NSMutableDictionary *_pluginParticipantIDs;	// 816 = 0x330
    NSMutableDictionary *_pluginNameToPluginOptionsDict;	// 824 = 0x338
    NSMutableArray *_pluginControlDisconnectRecentTransactionIDs;	// 832 = 0x340
}

+ (Class)getGLClassWithOptions:(id)arg1;	// IMP=0x000000000002e03e
- (void).cxx_destruct;	// IMP=0x000000000007263a
@property __weak id <IDSLinkDelegate> alternateDelegate; // @synthesize alternateDelegate=_alternateDelegate;
@property __weak id <IDSLinkDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) unsigned long long state; // @synthesize state=_state;
@property(retain) NSString *deviceUniqueID; // @synthesize deviceUniqueID=_deviceUniqueID;
@property(retain) NSString *cbuuid; // @synthesize cbuuid=_cbuuid;
- (void)receiveBlockedIndicationWithReason:(unsigned int)arg1;	// IMP=0x000000000007250f
- (void)receiveIdleClientErrorForCandidatePair:(id)arg1;	// IMP=0x0000000000072451
- (long long)sendStunMessage:(id)arg1 candidatePair:(id)arg2;	// IMP=0x000000000007243f
- (void)sendProbingRequestWithoptions:(id)arg1 candidatePairToken:(id)arg2;	// IMP=0x0000000000072420
- (void)sendAllocbindRequest:(id)arg1 isRealloc:(_Bool)arg2 inResponseToNoSessionState:(_Bool)arg3;	// IMP=0x00000000000723bb
- (void)disconnectCandidatePair:(id)arg1;	// IMP=0x0000000000072316
- (void)_disconnectPluginConnectionsForParticipantID:(unsigned long long)arg1 andPurgeRegistration:(_Bool)arg2;	// IMP=0x0000000000071d98
- (void)_didReceiveRequestToPurgeRegistration;	// IMP=0x0000000000071ba8
- (void)candidatePair:(id)arg1 didReceivePluginControlEvent:(unsigned long long)arg2 operation:(unsigned char)arg3 transactionID:(id)arg4;	// IMP=0x0000000000071a0f
- (void)candidatePair:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00000000000715ff
- (void)candidatePair:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00000000000711ec
- (void)candidatePair:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;	// IMP=0x0000000000071155
- (void)candidatePair:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x00000000000710c7
- (void)candidatePair:(id)arg1 didReceiveStunErrorResponse:(long long)arg2 errorCode:(unsigned short)arg3;	// IMP=0x0000000000070d30
- (_Bool)_hasConnectedP2pLink;	// IMP=0x0000000000070b18
- (void)_handleRemapping:(id)arg1;	// IMP=0x00000000000706fe
- (void)_removeChannelFromChannelToCandidatePair:(id)arg1;	// IMP=0x000000000007054b
- (void)candidatePair:(id)arg1 didReceiveSessionInfo:(id)arg2 status:(unsigned int)arg3;	// IMP=0x000000000007048f
- (void)_notifySessionInfoReceived:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 status:(unsigned int)arg4;	// IMP=0x0000000000070273
- (void)_convergeSharedSessions:(id)arg1;	// IMP=0x000000000006fc67
- (_Bool)_setupNewQRLinkIfNecessary:(id)arg1;	// IMP=0x000000000006f929
- (void)_requestNewTwoWayQRAllocation:(id)arg1;	// IMP=0x000000000006f560
- (id)_findCandidatePairWithRelaySessionID:(id)arg1;	// IMP=0x000000000006f389
- (unsigned char)_getNewLinkType:(id)arg1 remoteInterface:(int *)arg2;	// IMP=0x000000000006ea10
- (_Bool)_qrLinkLimitExceededWithNewLinkType:(unsigned char)arg1 cellularRelayLinkCount:(unsigned short)arg2 wifiRelayLinkCount:(unsigned short)arg3;	// IMP=0x000000000006e9c3
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_727fadec *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x000000000006d59d
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x000000000006d597
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x000000000006d591
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;	// IMP=0x000000000006d1fa
- (unsigned long long)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;	// IMP=0x000000000006ce63
- (id)_findVirtualCandidatePair:(id)arg1;	// IMP=0x000000000006ce5b
- (void)_discardKeyMaterialMessage:(long long)arg1;	// IMP=0x000000000006ce55
- (void)_processCommandRelayInterfaceInfo:(id)arg1 candidatePairToken:(id)arg2;	// IMP=0x000000000006ce4f
- (void)enableUPlusOneSessionForTransition:(_Bool)arg1;	// IMP=0x000000000006ce49
- (void)setIsUPlusOneSession:(_Bool)arg1;	// IMP=0x000000000006ce43
- (void)receiveJoinNotificationFromAParticipant;	// IMP=0x000000000006ce3d
- (void)_sendRelayInterfaceInfo:(id)arg1;	// IMP=0x000000000006ce37
- (void)_enableE2E;	// IMP=0x000000000006ce31
- (void)registerPluginWithOptions:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3;	// IMP=0x000000000006ca86
- (void)updateSessionParticipants:(id)arg1 relaySessionID:(id)arg2 participants:(id)arg3;	// IMP=0x000000000006c779
- (void)getSessionInfo:(id)arg1 relaySessionID:(id)arg2 requestType:(long long)arg3 options:(id)arg4;	// IMP=0x000000000006c614
- (_Bool)_getSessionStreamInfo:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;	// IMP=0x000000000006b933
- (_Bool)_getSessionParticipants:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;	// IMP=0x000000000006b317
- (void)setRemoteDeviceVersion:(unsigned int)arg1;	// IMP=0x000000000006ae46
- (void)setReceivedRemoteDeviceVersion:(_Bool)arg1;	// IMP=0x000000000006ac4f
- (void)flushLinkProbingStatus:(id)arg1;	// IMP=0x000000000006a96f
- (void)queryLinkProbingStatus:(id)arg1;	// IMP=0x000000000006983b
- (void)_stopProbingOnLinkID:(BOOL)arg1;	// IMP=0x00000000000696d8
- (void)stopLinkProbing:(id)arg1;	// IMP=0x00000000000693e5
- (void)startLinkProbing:(id)arg1;	// IMP=0x0000000000068cfe
- (void)setWiFiAssistState:(_Bool)arg1;	// IMP=0x0000000000068ca4
- (void)currentCellularSignalStrength:(int *)arg1 signalStrength:(int *)arg2 signalGrade:(int *)arg3;	// IMP=0x0000000000068b53
- (void)stopKeepAlive:(id)arg1;	// IMP=0x0000000000068a2d
- (void)updateProtocolQualityOfService:(BOOL)arg1 isGood:(_Bool)arg2;	// IMP=0x0000000000068803
- (void)dropIPPackets:(BOOL)arg1 payloadArray:(id)arg2;	// IMP=0x000000000006850f
- (void)setPacketNotificationFilter:(BOOL)arg1 uniqueTag:(unsigned int)arg2 isEnabled:(_Bool)arg3;	// IMP=0x0000000000067d52
- (void)setTimeBase:(id)arg1;	// IMP=0x0000000000067d4c
- (void)_resetRetryCountForCandidatePair:(id)arg1;	// IMP=0x0000000000067d46
- (void)setDefaultUnderlyingLink:(BOOL)arg1;	// IMP=0x0000000000067d40
- (void)sendKeyMaterialMessageData:(id)arg1 relayGroupID:(id)arg2 destinationURIs:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000067d3a
- (void)sendSKEData:(id)arg1;	// IMP=0x0000000000067d34
- (void)setHasPendingAllocation:(_Bool)arg1;	// IMP=0x0000000000067d2e
- (void)setAcceptedRelaySession:(id)arg1 options:(id)arg2;	// IMP=0x0000000000066c62
- (void)_requestNonUDPRelayAllocation:(long long)arg1 relaySessionID:(id)arg2;	// IMP=0x0000000000066279
- (void)_sendSKEDataToSucceededCandidatePairs;	// IMP=0x00000000000654f3
- (void)_sendSKEDataWithSelectedCandidatePair;	// IMP=0x000000000006493b
- (id)generateLinkReport:(double)arg1 isCurrentLink:(_Bool)arg2;	// IMP=0x0000000000064694
- (unsigned long long)sendPacketBufferArray:(CDStruct_183601bc **)arg1 arraySize:(int)arg2 toDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x0000000000064012
- (unsigned long long)sendPacketBuffer:(CDStruct_727fadec *)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x000000000006392a
- (void)_updateSendStatsWithResult:(unsigned long long)arg1 bytesSent:(long long)arg2 packetsSent:(int)arg3 linkID:(BOOL)arg4 delegatedLinkID:(BOOL)arg5 token:(id)arg6 useRelay:(_Bool)arg7 isClientData:(_Bool)arg8 sendTime:(double)arg9 stunTransport:(long long)arg10;	// IMP=0x00000000000635a0
- (_Bool)_getPacketBufferSendInfo:(CDStruct_727fadec *)arg1 channelNumber:(unsigned short *)arg2 transport:(long long *)arg3;	// IMP=0x00000000000633f0
- (void)_reportSessionSetupTime;	// IMP=0x00000000000622fd
- (_Bool)remoteHostAwake;	// IMP=0x00000000000622f5
- (id)copyLinkStatsDict;	// IMP=0x00000000000621c7
@property(readonly, getter=linkTypeString) NSString *linkTypeString;
@property(readonly) unsigned long long headerOverhead; // @synthesize headerOverhead=_headerOverhead;
- (void)handleCellularRATChange;	// IMP=0x0000000000061c2a
- (void)_handleNewRATChange;	// IMP=0x0000000000061966
- (void)_processDelayedCellularInterfaces;	// IMP=0x00000000000617f7
- (void)handleNetworkAddressChanges:(_Bool)arg1 hasIPv6AddressChange:(_Bool)arg2;	// IMP=0x00000000000605dd
- (void)_setupRelayConnectionForNetworkAddressChanges;	// IMP=0x000000000005fa45
- (void)_processNewRemoteCandidates:(id)arg1;	// IMP=0x000000000005f7e3
- (void)_processRemovedRemoteCandidates:(id)arg1;	// IMP=0x000000000005e96f
- (id)_interfaceNameForInterfaceIndex:(unsigned int)arg1;	// IMP=0x000000000005e7fe
- (_Bool)_isInterfaceDelegatedWithInterfaceIndex:(unsigned int)arg1;	// IMP=0x000000000005e679
- (_Bool)_isInterfaceConstrainedWithInterfaceIndex:(unsigned int)arg1;	// IMP=0x000000000005e4f6
- (_Bool)_isInterfaceExpensiveWithInterfaceIndex:(unsigned int)arg1;	// IMP=0x000000000005e3a2
- (void)_processNewLocalAddressList:(id)arg1;	// IMP=0x000000000005db81
- (_Bool)_processRemovedLocalAddressList:(id)arg1;	// IMP=0x000000000005c747
- (void)_setDefaultCandidatePairForNonFT;	// IMP=0x000000000005c741
- (void)_updateInterfaceAddressesWithAddList:(id)arg1 removeList:(id)arg2;	// IMP=0x000000000005c342
- (_Bool)_processBindingResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remmoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x000000000005ae3a
- (_Bool)_processBindingRequest:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remmoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x0000000000059c3c
- (_Bool)_isCellularInterfaceForCandidatePair:(id)arg1 localAddress:(struct sockaddr *)arg2;	// IMP=0x0000000000059967
- (void)_processRemoteLinkUUID:(id)arg1 candidatePair:(id)arg2;	// IMP=0x0000000000059579
- (void)_sendBindingRequest:(id)arg1 stunMessage:(id)arg2;	// IMP=0x00000000000585bb
- (void)_nominateCandidatePair:(id)arg1;	// IMP=0x00000000000583de
- (void)_updateNominatedCandidatePair:(id)arg1;	// IMP=0x0000000000057fea
- (void)_startStunCheck:(id)arg1;	// IMP=0x0000000000057fd6
- (void)_processRemoteCandidates:(id)arg1;	// IMP=0x00000000000573fb
- (void)_startExtIPDiscovery;	// IMP=0x0000000000056b19
- (_Bool)_requestSelfAllocationForInterfaceAddress:(id)arg1;	// IMP=0x00000000000564e0
- (void)_sendAllocbindRequestForExtIP:(id)arg1 startTime:(double)arg2;	// IMP=0x0000000000055d53
- (_Bool)_IsExtIPDiscoveryNeeded:(struct sockaddr *)arg1 candidatePairList:(id)arg2;	// IMP=0x0000000000055b6b
- (void)_processXORMappedAddress:(id)arg1 arrivalTime:(double)arg2;	// IMP=0x000000000005529c
- (void)_handleSelfAllocationTimeout:(id)arg1;	// IMP=0x00000000000550f7
- (_Bool)_isExtIPDiscoveryDone;	// IMP=0x0000000000054ced
- (void)_handleAllocbindFailoverTimer:(id)arg1 failoverTimerOnCandidatePair:(id)arg2 onInterface:(int)arg3;	// IMP=0x00000000000541c2
- (void)_stopAllocbindFailoverTimer:(id)arg1;	// IMP=0x000000000005399e
- (void)_startAllocbindFailoverTimerOnCandidatePair:(id)arg1;	// IMP=0x0000000000053561
- (_Bool)_hasActiveAllocbindFailoverTimerForSessionID:(id)arg1;	// IMP=0x00000000000530b4
- (_Bool)_addCandidate:(id)arg1 isRemoteCandidate:(_Bool)arg2;	// IMP=0x0000000000052d9c
- (void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(_Bool)arg2;	// IMP=0x0000000000052d87
- (void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(_Bool)arg2 excludeLocalAddress:(struct sockaddr *)arg3;	// IMP=0x00000000000520e9
- (void)_stopActivityTimer;	// IMP=0x0000000000051f99
- (void)_startActivityTimer;	// IMP=0x0000000000051d53
- (void)_handleActivityTimer;	// IMP=0x0000000000050f5f
- (void)_handleNoRemotePacket;	// IMP=0x0000000000050f59
- (void)_startHB:(id)arg1;	// IMP=0x0000000000050f53
- (void)_stopDisconnectTimer;	// IMP=0x0000000000050e03
- (void)_startDisconnectTimer;	// IMP=0x0000000000050bc7
- (void)_handleDisconnectTimer;	// IMP=0x0000000000050a85
- (void)_sendNowConnectionDataWithRemovedAddressList:(id)arg1;	// IMP=0x000000000004fe6b
- (void)_sendConnectionDataWithRemovedAddressList:(id)arg1;	// IMP=0x000000000004fc6e
- (void)_processCommandNominate:(id)arg1 candidatePairToken:(id)arg2;	// IMP=0x000000000004f188
- (void)_processCommandConnectionData:(id)arg1 candidatePairToken:(id)arg2;	// IMP=0x000000000004eb06
- (void)_processCommandHeartbeat:(id)arg1 candidatePairToken:(id)arg2 arrivalTime:(double)arg3 remoteRelayLinkID:(unsigned short)arg4;	// IMP=0x000000000004dd10
- (void)_processCommandDisconnected:(id)arg1 candidatePairToken:(id)arg2;	// IMP=0x000000000004d957
- (void)_processCommandConnected:(id)arg1 candidatePairToken:(id)arg2;	// IMP=0x000000000004b7eb
- (void)_setRemoteGlobalLinkVersionWithCommand:(long long)arg1 receivedRemoteVersion:(_Bool)arg2 versionValue:(unsigned short)arg3 receivedSKE:(_Bool)arg4;	// IMP=0x000000000004b7ae
- (void)_notifyQRSessionConnected:(id)arg1;	// IMP=0x000000000004a7b4
- (_Bool)_processIncomingIndicationData:(char *)arg1 length:(int)arg2 candidatePairToken:(id)arg3 arrivalTime:(double)arg4 remoteRelayLinkID:(unsigned short)arg5;	// IMP=0x000000000004a2c9
- (void)_sendCommandMessage:(long long)arg1 stunMessage:(id)arg2 options:(id)arg3 candidatePairToken:(id)arg4;	// IMP=0x00000000000486a8
- (_Bool)_shouldSkipCommand:(long long)arg1 withCandidatePair:(id)arg2 connectionDataCounter:(int)arg3 relayInterfaceCounter:(int)arg4;	// IMP=0x000000000004806c
- (_Bool)_skipCommandMessage:(long long)arg1 candidatePair:(id)arg2 timeNow:(double)arg3;	// IMP=0x0000000000047d7c
- (id)_createCommandData:(long long)arg1 options:(id)arg2 candidatePair:(id)arg3;	// IMP=0x0000000000045cdd
- (int)_getExpensiveLinkFlags:(_Bool)arg1 candidatePair:(id)arg2;	// IMP=0x0000000000045b01
- (void)_sendUnallocbindRequest:(id)arg1 stunMessage:(id)arg2 reason:(unsigned char)arg3;	// IMP=0x00000000000449eb
- (void)_sendAllocbindRequest:(id)arg1 stunMessage:(id)arg2 isRealloc:(_Bool)arg3 inResponseToNoSessionState:(_Bool)arg4;	// IMP=0x0000000000042ae8
- (long long)_sendStunMessage:(id)arg1 sourceIfIndex:(int)arg2 source:(struct sockaddr *)arg3 destination:(struct sockaddr *)arg4 stunTransport:(long long)arg5 token:(id)arg6 linkID:(BOOL)arg7 delegatedLinkID:(BOOL)arg8 MTULimit:(int)arg9;	// IMP=0x00000000000424a1
- (long long)_sendStunMessage:(id)arg1 candidatePair:(id)arg2;	// IMP=0x00000000000422b7
- (double)_startTimeForStunRequest:(id)arg1;	// IMP=0x0000000000042284
- (void)_removeStunRequest:(id)arg1;	// IMP=0x000000000004221e
- (void)_saveStunRequest:(id)arg1 startTime:(double)arg2 token:(id)arg3;	// IMP=0x00000000000420c7
- (void)_processReallocChannelData:(CDStruct_727fadec *)arg1 channelNumber:(unsigned short)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 arrivalTime:(double)arg5;	// IMP=0x0000000000041ea7
- (void)_processDataOnReallocChannel:(unsigned short)arg1 localAddress:(struct sockaddr *)arg2 remoteAddress:(struct sockaddr *)arg3;	// IMP=0x00000000000406a5
- (_Bool)_processStunPacket:(CDStruct_727fadec *)arg1 fromDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 arrivalTime:(double)arg4 headerOverhead:(unsigned long long)arg5;	// IMP=0x000000000003ebee
- (_Bool)_processGoAwayIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x000000000003e107
- (void)updateURIToParticipantIDs:(id)arg1 relaySessionID:(id)arg2 sessionInfo:(id)arg3;	// IMP=0x000000000003e101
- (void)_destroyVirtualRelayLinksForCandidatePair:(id)arg1;	// IMP=0x000000000003e0fb
- (void)removeParticipantIDs:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 sessionStateCounter:(unsigned int)arg4;	// IMP=0x000000000003e0f5
- (void)manageDesignatedDestinations:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 withType:(unsigned short)arg4 sessionStateCounter:(unsigned int)arg5;	// IMP=0x000000000003e0ef
- (long long)_getQRAllocateType;	// IMP=0x000000000003e0e4
- (_Bool)_processDataIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x000000000003deb5
- (_Bool)_processReallocIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x000000000003bf94
- (_Bool)_processUnallocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remmoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x000000000003ad10
- (_Bool)_processAllocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr *)arg4 remmoteAddress:(struct sockaddr *)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;	// IMP=0x0000000000039835
- (_Bool)_postProcessAllocbindResponse:(id)arg1 candidatePair:(id)arg2 candidatePairToken:(id)arg3;	// IMP=0x000000000003982d
- (id)_getAllocbindReportingDataBlob:(id)arg1;	// IMP=0x0000000000039626
- (void)_setFirstDefaultCandidatePair:(id)arg1;	// IMP=0x00000000000395d5
- (void)_reportAWDAllocateTime;	// IMP=0x0000000000039321
- (void)_notifyLinkDisconnectedWithError:(long long)arg1 reason:(unsigned char)arg2;	// IMP=0x0000000000038c8c
- (void)_notifyDefaultUnderlyingLinkChanged:(id)arg1 error:(long long)arg2;	// IMP=0x000000000003898b
- (void)_notifyCandidatePairDisconnected:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x0000000000038057
- (void)_notifyCandidatePairConnected:(id)arg1;	// IMP=0x0000000000037dbe
- (void)_updateLinkIDForQUIC:(id)arg1;	// IMP=0x00000000000377cf
- (void)_setCandidatePairConnected:(id)arg1;	// IMP=0x0000000000036551
- (void)_setChannelToCandidatePair:(id)arg1 localAddress:(struct sockaddr *)arg2 remoteAddress:(struct sockaddr *)arg3 channelNumber:(unsigned short)arg4;	// IMP=0x000000000003637a
- (void)_sendSessionDisconnectedCommand;	// IMP=0x0000000000035feb
- (void)_removePacketNotificationFilter;	// IMP=0x0000000000035b0e
- (void)_discardSelfAllocateCandidatePairs;	// IMP=0x0000000000035792
- (void)_discardNonAcceptedCandidatePairs;	// IMP=0x0000000000034ebe
- (void)_discardAllCandidatePairs;	// IMP=0x0000000000034d78
- (void)_discardCandidatePairsWithOption:(_Bool)arg1;	// IMP=0x000000000003490e
- (id)_getCandidatePairsWithSessionID:(id)arg1 inState:(unsigned long long)arg2;	// IMP=0x00000000000346af
- (_Bool)_hasConnectingRelayCandidatePair;	// IMP=0x0000000000034690
- (_Bool)_hasCandidatePairInState:(unsigned long long)arg1 anotherState:(unsigned long long)arg2 relayCandidatePairsOnly:(_Bool)arg3 excludeSelfAlloc:(_Bool)arg4;	// IMP=0x0000000000034417
- (_Bool)_hasCandidatePairInState:(unsigned long long)arg1 relayCandidatePairsOnly:(_Bool)arg2 excludeSelfAlloc:(_Bool)arg3;	// IMP=0x00000000000343fc
- (void)_selectBetterDefaultCandidatePair:(id)arg1;	// IMP=0x00000000000343f6
- (void)_updateDefaultCandidatePair:(id)arg1;	// IMP=0x0000000000033c7e
- (void)disconnectWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000033385
- (void)_connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 joinSession:(_Bool)arg3 allocbindFailover:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5 withLocalInterfacePreference:(int)arg6;	// IMP=0x000000000002ffa1
- (_Bool)_isAcceptedRelaySessionForAllocationRequestID:(id)arg1 acceptedRelaySessionID:(id)arg2;	// IMP=0x000000000002ff2b
- (unsigned int)_getExternalIPAddressRAT:(id)arg1;	// IMP=0x000000000002fe1b
- (void)connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 joinSession:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4 withLocalInterfacePreference:(int)arg5;	// IMP=0x000000000002fdf7
- (void)_addQRAAWDBlock:(id)arg1 allocateRequestTime:(double)arg2 inferredExternalRAT:(unsigned int)arg3 stunTransport:(long long)arg4 relayProviderType:(long long)arg5 idsSessionID:(id)arg6 reportingDataBlob:(id)arg7 isInitiator:(_Bool)arg8;	// IMP=0x000000000002f94f
- (_Bool)hasReachableInterface:(unsigned long long)arg1;	// IMP=0x000000000002f7b6
- (unsigned long long)defaultLinkType;	// IMP=0x000000000002f4e3
- (void)startWithOptions:(id)arg1;	// IMP=0x000000000002e3c4
- (void)_parseClientUUID:(id)arg1;	// IMP=0x000000000002dd97
- (id)_addSocketAndInterfaceAddress:(unsigned long long)arg1 wantsWiFi:(_Bool)arg2 wantsCellular:(_Bool)arg3;	// IMP=0x000000000002d9bc
- (_Bool)_synthesizeNAT64ForAddress:(struct sockaddr *)arg1 withPrefix:(CDStruct_330c469e *)arg2 toAddress:(struct sockaddr *)arg3;	// IMP=0x000000000002d5df
- (void)_getNAT64PrefixForInterface:(int)arg1 interfaceName:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002cc77
- (id)_delayProcessingCellularInterfaces:(id)arg1;	// IMP=0x000000000002c78e
- (id)_createInterfaceAddressArray:(unsigned long long)arg1 wantsWiFi:(_Bool)arg2 wantsCellular:(_Bool)arg3;	// IMP=0x000000000002c07c
- (void)_callDisconnectCompletionHandler:(id)arg1;	// IMP=0x000000000002bd85
- (id)_getLink:(int)arg1 stunTransport:(long long)arg2;	// IMP=0x000000000002bd50
- (void)invalidate;	// IMP=0x000000000002b852
- (void)dealloc;	// IMP=0x000000000002b6f3
- (id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;	// IMP=0x000000000002b21f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

