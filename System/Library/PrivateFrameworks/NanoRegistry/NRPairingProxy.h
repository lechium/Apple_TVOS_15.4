//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NanoRegistry/NRPairedDeviceRegistryXPCDaemonDelegate-Protocol.h>

@interface NRPairingProxy <NRPairedDeviceRegistryXPCDaemonDelegate>
{
}

+ (id)clientRemoteObjectInterface;	// IMP=0x000000000000931a
+ (id)clientExportedInterface;	// IMP=0x00000000000092ae
+ (id)serverRemoteObjectInterface;	// IMP=0x0000000000009242
+ (id)serverExportedInterface;	// IMP=0x0000000000008f35
+ (id)machServiceName;	// IMP=0x0000000000008f28
- (void)xpcIsAssertionActive:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000012ad7
- (void)xpcIsPhoneReadyToMigrateDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000001283d
- (void)xpcGetInitialSyncCompletedForPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000001255f
- (void)xpcGetMigrationCountForPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000012468
- (void)xpcGetLastSwitchIndex:(CDUnknownBlockType)arg1;	// IMP=0x00000000000123d2
- (void)xpcFakePairedSyncIsCompleteWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000120f9
- (void)xpcClearRecoveryFlagWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000011e20
- (void)xpcCheckIfFlaggedForRecoveryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000011b37
- (void)xpcSubmitServerRequestReportWithRequestType:(id)arg1 duration:(double)arg2 errorCode:(unsigned int)arg3 block:(CDUnknownBlockType)arg4;	// IMP=0x00000000000118de
- (void)xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000116ff
- (void)xpcStopWatchSetupPushWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000114e0
- (void)xpcStartWatchSetupPushWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000112c1
- (void)xpcScanForMigratableWatchesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000110a2
- (void)xpcPingActiveGizmoWithPriority:(int)arg1 withMessageSize:(unsigned long long)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000010d97
- (void)xpcKeepPhoneUnlockedInternalTestSPI:(CDUnknownBlockType)arg1;	// IMP=0x0000000000010b63
- (void)xpcGetLastMigrationRequestPhoneNameWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000001088a
- (void)xpcBeginMigrationWithDeviceID:(id)arg1 passcode:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000001057f
- (void)xpcGetMigrationPairingCharacteristicReadDataWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000102a6
- (void)xpcPutMigrationChallengeCharacteristicWriteData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000ffa3
- (void)xpcSwitchToSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000fc56
- (void)xpcUnpairWithSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000f909
- (void)xpcPairWithSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000f5bc
- (void)xpcActiveDeviceAssertions:(CDUnknownBlockType)arg1;	// IMP=0x000000000000f2e3
- (void)xpcRetriggerUnpairInfoDialogWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000f03a
- (void)xpcResumePairingClientCrashMonitoring:(CDUnknownBlockType)arg1;	// IMP=0x000000000000ecd1
- (void)xpcSuspendPairingClientCrashMonitoring:(CDUnknownBlockType)arg1;	// IMP=0x000000000000e965
- (void)xpcPairingClientDidEnterPhase:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e67d
- (void)xpcSubmitRTCPairingMetricForMetricID:(id)arg1 withSuccess:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e346
- (void)xpcSubmitAlbertPairingReport:(CDUnknownBlockType)arg1;	// IMP=0x000000000000e0ac
- (void)xpcTriggerVersion4Workaround;	// IMP=0x000000000000e00a
- (void)xpcEndDiscoveryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000dd37
- (void)xpcBeginDiscoveryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000da55
- (void)xpcInvalidateSwitchAssertionWithIdentifier:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x000000000000d687
- (void)xpcSwitchActiveDeviceWithDeviceID:(id)arg1 withAssertionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000d244
- (void)xpcSwitchActiveDeviceWithDeviceID:(id)arg1 isMagicSwitch:(_Bool)arg2 operationHasCompleted:(CDUnknownBlockType)arg3;	// IMP=0x000000000000ce45
- (void)xpcEnterCompatibilityState:(unsigned short)arg1 withDeviceID:(id)arg2;	// IMP=0x000000000000cd38
- (void)xpcPairingShouldContinue;	// IMP=0x000000000000cc7b
- (void)xpcNotifyPasscode:(id)arg1 withDeviceID:(id)arg2;	// IMP=0x000000000000cade
- (void)xpcNotifyActivationCompleted:(id)arg1 withSuccess:(_Bool)arg2;	// IMP=0x000000000000c959
- (void)xpcUnpairWithDeviceID:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x000000000000bec9
- (void)xpcAbortPairingReason:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000000bac5
- (void)xpcBeginMigrationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b7c6
- (void)xpcBeginMigrationWithDeviceID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b479
- (void)xpcSetWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b125
- (void)xpcClearWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x000000000000aee6
- (void)xpcWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x000000000000accb
- (void)xpcPairingClientSetPairingParentName:(id)arg1 pairingParentAltDSID:(id)arg2 forPairingID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000000a927
- (void)xpcPairingClientSetAltAccountName:(id)arg1 altDSID:(id)arg2 forPairingID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000000a583
- (void)xpcGizmoPasscodeAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x000000000000a202
- (void)xpcGizmoOOBAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x0000000000009e3d
- (void)xpcCompanionPasscodePairWithDeviceID:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x0000000000009a1e
- (void)xpcCompanionOOBDiscoverAndPairWithName:(id)arg1 withOutOfBandPairingKey:(id)arg2 withOptions:(id)arg3 operationHasBegun:(CDUnknownBlockType)arg4;	// IMP=0x00000000000095bd

@end

