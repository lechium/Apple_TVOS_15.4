//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSMutableDictionary, NSMutableOrderedSet;

@interface GKDashboardMultiplayerDataSource
{
    _Bool _automatchAddedToMinInHeader;	// 8 = 0x8
    _Bool _addingEnabled;	// 9 = 0x9
    _Bool _removingEnabled;	// 10 = 0xa
    _Bool _autoMatching;	// 11 = 0xb
    _Bool _allowAutoMatch;	// 12 = 0xc
    long long _minPlayers;	// 16 = 0x10
    long long _maxPlayers;	// 24 = 0x18
    long long _automatchPlayers;	// 32 = 0x20
    long long _implicitAutomatchPlayerCount;	// 40 = 0x28
    double _cancellationTimeDelay;	// 48 = 0x30
    NSMutableOrderedSet *_players;	// 56 = 0x38
    NSArray *_participants;	// 64 = 0x40
    CDUnknownBlockType _playersChangedHandler;	// 72 = 0x48
    NSMutableDictionary *_playerStatus;	// 80 = 0x50
    NSMutableOrderedSet *_orderedPlayerIDList;	// 88 = 0x58
    long long _automatchPlayersAddedByUser;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x00000000000dc34a
@property(nonatomic) long long automatchPlayersAddedByUser; // @synthesize automatchPlayersAddedByUser=_automatchPlayersAddedByUser;
@property(retain, nonatomic) NSMutableOrderedSet *orderedPlayerIDList; // @synthesize orderedPlayerIDList=_orderedPlayerIDList;
@property(retain, nonatomic) NSMutableDictionary *playerStatus; // @synthesize playerStatus=_playerStatus;
@property(copy, nonatomic) CDUnknownBlockType playersChangedHandler; // @synthesize playersChangedHandler=_playersChangedHandler;
@property(retain, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(retain, nonatomic) NSMutableOrderedSet *players; // @synthesize players=_players;
@property(nonatomic) double cancellationTimeDelay; // @synthesize cancellationTimeDelay=_cancellationTimeDelay;
@property(nonatomic) _Bool allowAutoMatch; // @synthesize allowAutoMatch=_allowAutoMatch;
@property(nonatomic) _Bool autoMatching; // @synthesize autoMatching=_autoMatching;
@property(nonatomic) _Bool removingEnabled; // @synthesize removingEnabled=_removingEnabled;
@property(nonatomic) _Bool addingEnabled; // @synthesize addingEnabled=_addingEnabled;
@property(nonatomic) _Bool automatchAddedToMinInHeader; // @synthesize automatchAddedToMinInHeader=_automatchAddedToMinInHeader;
@property(nonatomic) long long implicitAutomatchPlayerCount; // @synthesize implicitAutomatchPlayerCount=_implicitAutomatchPlayerCount;
@property(nonatomic) long long automatchPlayers; // @synthesize automatchPlayers=_automatchPlayers;
@property(nonatomic) long long maxPlayers; // @synthesize maxPlayers=_maxPlayers;
@property(nonatomic) long long minPlayers; // @synthesize minPlayers=_minPlayers;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;	// IMP=0x00000000000dc12e
- (void)updateCell:(id)arg1 atIndexPath:(id)arg2 withParticipant:(id)arg3;	// IMP=0x00000000000dc06b
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;	// IMP=0x00000000000dbe9b
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;	// IMP=0x00000000000dbd3d
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;	// IMP=0x00000000000dbce2
- (void)updateRemovabilityForVisibleCells:(id)arg1;	// IMP=0x00000000000dba8b
- (void)setAutoMatching:(_Bool)arg1 withVisibleCells:(id)arg2;	// IMP=0x00000000000db6a6
- (_Bool)participantShouldBeRemovable:(id)arg1 atIndexPath:(id)arg2;	// IMP=0x00000000000db567
- (void)setParticipantsWithPlayers:(id)arg1 automatchPlayerCount:(long long)arg2 andStatuses:(id)arg3;	// IMP=0x00000000000dadb4
- (id)participantAtIndex:(long long)arg1;	// IMP=0x00000000000dad97
- (id)participantForAutoMatchNumber:(long long)arg1;	// IMP=0x00000000000dac19
- (id)participantForPlayer:(id)arg1;	// IMP=0x00000000000daa4d
- (void)setAutomatchPlayers:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000da9c7
@property(readonly, nonatomic) _Bool canCancelCurrentMatchmaking;
- (void)failedToInvitePlayers;	// IMP=0x00000000000da6fc
- (id)playersInvited;	// IMP=0x00000000000da6e5
- (id)playersToBeInvited;	// IMP=0x00000000000da6ce
- (id)readyPlayers;	// IMP=0x00000000000da6b7
- (id)playersWithStatus:(long long)arg1;	// IMP=0x00000000000da508
- (id)guestPlayers;	// IMP=0x00000000000da4b8
- (id)currentRemotePlayers;	// IMP=0x00000000000da2ec
- (id)currentPlayers;	// IMP=0x00000000000da2cf
- (void)finishRevertingPlayers;	// IMP=0x00000000000da01d
- (void)setStatus:(long long)arg1 forPlayers:(id)arg2;	// IMP=0x00000000000d9819
- (_Bool)shouldRevertStatus:(long long)arg1;	// IMP=0x00000000000d9811
- (void)removePlayers:(id)arg1;	// IMP=0x00000000000d95cb
- (void)addPlayers:(id)arg1 withStatus:(long long)arg2 replaceAutomatches:(_Bool)arg3;	// IMP=0x00000000000d9213
- (void)addPlayers:(id)arg1 withStatus:(long long)arg2;	// IMP=0x00000000000d91fe
- (long long)maxAvailablePlayers;	// IMP=0x00000000000d91c8
- (struct _NSRange)playerRange;	// IMP=0x00000000000d8ffe
- (_Bool)havePendingPlayers;	// IMP=0x00000000000d8e61
- (long long)statusForPlayer:(id)arg1;	// IMP=0x00000000000d8dd7
- (long long)itemCount;	// IMP=0x00000000000d8dba
- (void)_updateParticipantsAnimated:(_Bool)arg1;	// IMP=0x00000000000d8455
- (void)restoreOrderOfPlayers;	// IMP=0x00000000000d81db
- (void)updateParticipantsAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000d8105
- (void)updateParticipantsAnimated:(_Bool)arg1;	// IMP=0x00000000000d80f1
- (void)loadDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d8044
@property(readonly, nonatomic) long long participantCount;
- (void)setupCollectionView:(id)arg1;	// IMP=0x00000000000d7eea
- (id)init;	// IMP=0x00000000000d7cf4

@end

