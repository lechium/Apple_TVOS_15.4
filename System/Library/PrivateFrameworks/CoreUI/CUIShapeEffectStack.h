//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface CUIShapeEffectStack : NSObject
{
    float _shapeOpacity;	// 8 = 0x8
    float _outputOpacity;	// 12 = 0xc
    unsigned int _outputBlendMode;	// 16 = 0x10
    unsigned long long _hueSaturationCount;	// 24 = 0x18
    CDStruct_2a8bd0fe *_hueSaturation;	// 32 = 0x20
    unsigned long long _colorOverlayCount;	// 40 = 0x28
    CDStruct_073a3662 *_colorOverlay;	// 48 = 0x30
    unsigned long long _innerGradientCount;	// 56 = 0x38
    CDStruct_bdea167c *_innerGradient;	// 64 = 0x40
    unsigned long long _innerGlowCount;	// 72 = 0x48
    CDStruct_3d979a67 *_innerGlow;	// 80 = 0x50
    unsigned long long _innerShadowCount;	// 88 = 0x58
    CDStruct_a5d4af33 *_innerShadow;	// 96 = 0x60
    unsigned long long _outerGlowCount;	// 104 = 0x68
    CDStruct_265c7ca9 *_outerGlow;	// 112 = 0x70
    unsigned long long _engraveShadowCount;	// 120 = 0x78
    CDStruct_ca46f23f *_engraveShadow;	// 128 = 0x80
    unsigned long long _extraShadowCount;	// 136 = 0x88
    CDStruct_ca46f23f *_extraShadow;	// 144 = 0x90
    unsigned long long _bevelEmbossCount;	// 152 = 0x98
    CDStruct_c78fd0c4 *_emboss;	// 160 = 0xa0
    float _scalefactor;	// 168 = 0xa8
    int _renderStrategy;	// 172 = 0xac
}

+ (struct CGColor *)newColorByAdjustingLightnessOfColor:(struct CGColor *)arg1 darker:(_Bool)arg2;	// IMP=0x00000000000825fa
+ (id)shapeEffectSingleBlurFrom:(id)arg1 withInteriorFill:(id)arg2 offset:(struct CGPoint)arg3 blurSize:(float)arg4 innerGlowRed:(float)arg5 innerGlowGreen:(float)arg6 innerGlowBlue:(float)arg7 innerGlowOpacity:(float)arg8 innerShadowRed:(float)arg9 innerShadowGreen:(float)arg10 innerShadowBlue:(float)arg11 innerShadowOpacity:(float)arg12 outerGlowRed:(float)arg13 outerGlowGreen:(float)arg14 outerGlowBlue:(float)arg15 outerGlowOpacity:(float)arg16 outerShadowRed:(float)arg17 outerShadowGreen:(float)arg18 outerShadowBlue:(float)arg19 outerShadowOpacity:(float)arg20 hasInsideShadowBlur:(_Bool)arg21 hasOutsideShadowBlur:(_Bool)arg22;	// IMP=0x000000000007fc82
+ (id)hueSaturationFrom:(id)arg1 withCenterAngle:(double)arg2 width:(double)arg3 tintRed:(float)arg4 tintGreen:(float)arg5 tintBlue:(float)arg6;	// IMP=0x000000000007fb50
+ (id)bevelEmbossFrom:(id)arg1 withSize:(unsigned int)arg2 soften:(unsigned int)arg3 angle:(float)arg4 altitude:(float)arg5 highlightRed:(float)arg6 highlightGreen:(float)arg7 highlightBlue:(float)arg8 highlightOpacity:(float)arg9 shadowRed:(float)arg10 shadowGreen:(float)arg11 shadowBlue:(float)arg12 shadowOpacity:(float)arg13 bevelStyle:(unsigned int)arg14;	// IMP=0x000000000007f7cf
+ (id)outerShadowFrom:(id)arg1 withOffset:(struct CGPoint)arg2 size:(unsigned int)arg3 spread:(unsigned int)arg4 red:(float)arg5 green:(float)arg6 blue:(float)arg7 opacity:(float)arg8;	// IMP=0x000000000007f5a6
+ (id)outerGlowFrom:(id)arg1 withSize:(unsigned int)arg2 spread:(unsigned int)arg3 red:(float)arg4 green:(float)arg5 blue:(float)arg6 opacity:(float)arg7;	// IMP=0x000000000007f398
+ (id)innerShadowFrom:(id)arg1 withOffset:(struct CGPoint)arg2 radius:(float)arg3 red:(float)arg4 green:(float)arg5 blue:(float)arg6 opacity:(float)arg7;	// IMP=0x000000000007f1cc
+ (id)innerGlowFrom:(id)arg1 withRadius:(float)arg2 red:(float)arg3 green:(float)arg4 blue:(float)arg5 opacity:(float)arg6;	// IMP=0x000000000007f06d
+ (id)imageFromBlendWithMask:(id)arg1 foreground:(id)arg2 background:(id)arg3;	// IMP=0x000000000007efce
+ (id)shadowFrom:(id)arg1 red:(float)arg2 green:(float)arg3 blue:(float)arg4 opacity:(float)arg5;	// IMP=0x000000000007eedd
+ (id)gradientWithParameters:(CDStruct_bdea167c *)arg1 inRect:(struct CGRect)arg2;	// IMP=0x000000000007ed70
+ (id)rectangle:(struct CGRect)arg1 withRed:(float)arg2 green:(float)arg3 blue:(float)arg4 alpha:(float)arg5;	// IMP=0x000000000007ec8f
+ (id)colorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;	// IMP=0x000000000007ec1c
+ (id)colorWithGray:(float)arg1 alpha:(float)arg2;	// IMP=0x000000000007ebab
+ (id)blur:(id)arg1 radius:(float)arg2;	// IMP=0x000000000007eb2f
+ (id)invert:(id)arg1;	// IMP=0x000000000007eae0
+ (id)image:(id)arg1 withOpacity:(float)arg2;	// IMP=0x000000000007ea64
+ (id)blend:(id)arg1 over:(id)arg2 blendKind:(unsigned int)arg3;	// IMP=0x000000000007e620
+ (id)composite:(id)arg1 atop:(id)arg2;	// IMP=0x000000000007e5c2
+ (id)composite:(id)arg1 outOf:(id)arg2;	// IMP=0x000000000007e564
+ (id)composite:(id)arg1 into:(id)arg2;	// IMP=0x000000000007e506
+ (id)composite:(id)arg1 over:(id)arg2;	// IMP=0x000000000007e4a8
+ (id)unsharpMask:(id)arg1 radius:(float)arg2 intensity:(float)arg3;	// IMP=0x000000000007e3fb
+ (id)pixelZoomed:(id)arg1 scale:(int)arg2 about:(struct CGPoint)arg3;	// IMP=0x000000000007e314
+ (id)adjustOpacity:(id)arg1 by:(float)arg2;	// IMP=0x000000000007e21d
+ (id)offset:(id)arg1 by:(struct CGPoint)arg2;	// IMP=0x000000000007e1d1
+ (id)sharedCIContext;	// IMP=0x000000000007baad
+ (id)preferredCIContextOptions;	// IMP=0x000000000007ba81
@property(readonly, nonatomic) int renderStrategy; // @synthesize renderStrategy=_renderStrategy;
@property(readonly, nonatomic) float scalefactor; // @synthesize scalefactor=_scalefactor;
@property(readonly, nonatomic) CDStruct_c78fd0c4 *emboss; // @synthesize emboss=_emboss;
@property(readonly, nonatomic) unsigned long long bevelEmbossCount; // @synthesize bevelEmbossCount=_bevelEmbossCount;
@property(readonly, nonatomic) CDStruct_ca46f23f *extraShadow; // @synthesize extraShadow=_extraShadow;
@property(readonly, nonatomic) unsigned long long extraShadowCount; // @synthesize extraShadowCount=_extraShadowCount;
@property(readonly, nonatomic) CDStruct_ca46f23f *engraveShadow; // @synthesize engraveShadow=_engraveShadow;
@property(nonatomic) unsigned long long engraveShadowCount; // @synthesize engraveShadowCount=_engraveShadowCount;
@property(readonly, nonatomic) CDStruct_265c7ca9 *outerGlow; // @synthesize outerGlow=_outerGlow;
@property(readonly, nonatomic) unsigned long long outerGlowCount; // @synthesize outerGlowCount=_outerGlowCount;
@property(readonly, nonatomic) CDStruct_a5d4af33 *innerShadow; // @synthesize innerShadow=_innerShadow;
@property(nonatomic) unsigned long long innerShadowCount; // @synthesize innerShadowCount=_innerShadowCount;
@property(readonly, nonatomic) CDStruct_3d979a67 *innerGlow; // @synthesize innerGlow=_innerGlow;
@property(nonatomic) unsigned long long innerGlowCount; // @synthesize innerGlowCount=_innerGlowCount;
@property(readonly, nonatomic) CDStruct_bdea167c *innerGradient; // @synthesize innerGradient=_innerGradient;
@property(nonatomic) unsigned long long innerGradientCount; // @synthesize innerGradientCount=_innerGradientCount;
@property(readonly, nonatomic) CDStruct_073a3662 *colorOverlay; // @synthesize colorOverlay=_colorOverlay;
@property(nonatomic) unsigned long long colorOverlayCount; // @synthesize colorOverlayCount=_colorOverlayCount;
@property(readonly, nonatomic) CDStruct_2a8bd0fe *hueSaturation; // @synthesize hueSaturation=_hueSaturation;
@property(readonly, nonatomic) unsigned long long hueSaturationCount; // @synthesize hueSaturationCount=_hueSaturationCount;
@property(readonly, nonatomic) float outputOpacity; // @synthesize outputOpacity=_outputOpacity;
@property(readonly, nonatomic) float shapeOpacity; // @synthesize shapeOpacity=_shapeOpacity;
@property(readonly) unsigned int outputBlendMode; // @synthesize outputBlendMode=_outputBlendMode;
- (id)cacheKey;	// IMP=0x0000000000082978
- (_Bool)expressableByColorFillCheckingOutputBlending:(_Bool)arg1;	// IMP=0x000000000008252b
- (struct CGColor *)newColorByProcessingColor:(struct CGColor *)arg1;	// IMP=0x000000000008251e
- (id)processedImageFromShapePath:(struct CGPath *)arg1 inRect:(struct CGRect)arg2;	// IMP=0x0000000000082516
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1;	// IMP=0x00000000000824fc
- (struct CGImage *)newFlattenedImageFromCGImage:(struct CGImage *)arg1 withScale:(double)arg2 ciContext:(id)arg3;	// IMP=0x00000000000824e4
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1 withScale:(double)arg2 ciContext:(id)arg3;	// IMP=0x00000000000824cf
- (struct CGImage *)_newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1 withScale:(double)arg2 ciContext:(id)arg3 blendOverImage:(_Bool)arg4;	// IMP=0x0000000000082227
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1 withScale:(double)arg2 cache:(_Bool)arg3;	// IMP=0x00000000000820d8
- (struct CGImage *)newFlattenedImageFromShapeCGImage:(struct CGImage *)arg1 withScale:(double)arg2;	// IMP=0x00000000000820c4
- (id)processedImageFromShapeImage:(id)arg1 withScale:(double)arg2 invertShadows:(_Bool)arg3;	// IMP=0x0000000000082006
- (id)processedImageFromShapeImage:(id)arg1 withScale:(double)arg2;	// IMP=0x0000000000081ff2
- (id)processedImageFromShapeImage:(id)arg1;	// IMP=0x0000000000081fd6
- (id)processedImageFromImage:(id)arg1 withScale:(double)arg2;	// IMP=0x0000000000081fbf
- (id)processedImageFromImage:(id)arg1;	// IMP=0x0000000000081fa0
- (CDStruct_3c058996)effectInsetsWithScale:(double)arg1;	// IMP=0x0000000000081f18
- (struct CGRect)effectPaddingWithScale:(double)arg1;	// IMP=0x0000000000081c0e
- (id)compositeEffectStackWithShapeImage:(id)arg1 withScale:(double)arg2 blendOntoImage:(_Bool)arg3;	// IMP=0x0000000000081b5d
- (id)optimizedSingleBlurEffectCompositeWithShapeImage:(id)arg1;	// IMP=0x0000000000081a72
- (id)standardEffectCompositeWithShapeImage:(id)arg1 blendOntoImage:(_Bool)arg2;	// IMP=0x00000000000813a3
- (void)adjustEffectColorsToTemperature:(int)arg1 onlyTintableColors:(_Bool)arg2;	// IMP=0x000000000008121e
- (void)scaleBrightnessOfEffectColorsByAmount:(double)arg1 onlyTintableColors:(_Bool)arg2;	// IMP=0x0000000000081041
- (void)applyCustomForegroundColor:(struct CGColor *)arg1 tintEffectColors:(_Bool)arg2;	// IMP=0x0000000000080b04
- (void)applyCustomForegroundColor:(struct CGColor *)arg1;	// IMP=0x0000000000080af0
- (_Bool)anyEffectAllowsTintSubstitution;	// IMP=0x0000000000080a86
- (void)_normalizeEffectParameters;	// IMP=0x000000000008098a
- (void)scaleEffectParametersBy:(double)arg1;	// IMP=0x0000000000080757
- (void)updateOutputBlendingWithInteriorFillHeuristic;	// IMP=0x0000000000080730
- (int)cgBlendModeForOutputBlending;	// IMP=0x00000000000806fc
- (id)imageWithBevelEmbossOfImage:(id)arg1 effect:(CDStruct_c78fd0c4)arg2;	// IMP=0x0000000000080689
- (id)imageWithExtraShadowOfImage:(id)arg1 effect:(CDStruct_ca46f23f)arg2;	// IMP=0x0000000000080636
- (id)imageWithEngraveShadowOfImage:(id)arg1 effect:(CDStruct_ca46f23f)arg2;	// IMP=0x00000000000805e3
- (id)imageWithOuterGlowOfImage:(id)arg1 effect:(CDStruct_265c7ca9)arg2;	// IMP=0x00000000000805a7
- (id)imageWithInteriorGradientFillOfImage:(id)arg1 effect:(CDStruct_bdea167c)arg2;	// IMP=0x000000000008051d
- (id)imageWithHueSaturationOfImage:(id)arg1 effect:(CDStruct_2a8bd0fe)arg2;	// IMP=0x00000000000804da
- (id)imageWithColorOverlayOfImage:(id)arg1 effect:(CDStruct_073a3662)arg2;	// IMP=0x0000000000080483
- (id)image:(id)arg1 withAdjustedOpacity:(float)arg2;	// IMP=0x0000000000080458
- (id)imageWithInnerShadowOfImage:(id)arg1 effect:(CDStruct_a5d4af33)arg2;	// IMP=0x0000000000080404
- (id)imageWithInnerGlowOfImage:(id)arg1 effect:(CDStruct_3d979a67)arg2;	// IMP=0x00000000000803c7
- (id)imageWithSingleBlurShapeEffectOfImage:(id)arg1 withInteriorFill:(id)arg2;	// IMP=0x000000000007ff9a
- (id)effectPreset;	// IMP=0x000000000007d899
- (id)initWithEffectPreset:(id)arg1;	// IMP=0x000000000007d22d
- (void)_updateRenderStrategyFromEffect:(unsigned int)arg1;	// IMP=0x000000000007ce7d
- (_Bool)_precompositeColorOverlayInnerGradient;	// IMP=0x000000000007ce75
- (_Bool)hasHueSaturation;	// IMP=0x000000000007ce67
- (void)_setHueSaturationAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007cd53
- (_Bool)hasEffects;	// IMP=0x000000000007cc8a
- (_Bool)hasBevelEmboss;	// IMP=0x000000000007cc79
- (void)_setBevelEmbossAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007ca5e
- (_Bool)hasExtraShadow;	// IMP=0x000000000007ca01
- (void)_setExtraShadowAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007c793
- (_Bool)hasEngraveShadow;	// IMP=0x000000000007c739
- (void)_setEngraveShadowAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007c4ce
- (_Bool)hasOuterGlow;	// IMP=0x000000000007c477
- (void)_setOuterGlowAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007c325
- (_Bool)hasInnerShadow;	// IMP=0x000000000007c2ce
- (void)_setInnerShadowAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007c08b
- (_Bool)hasInnerGlow;	// IMP=0x000000000007c034
- (void)_setInnerGlowAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007bf0b
- (float)innerGradientOpacity;	// IMP=0x000000000007bedc
- (_Bool)hasInnerGradient;	// IMP=0x000000000007be85
- (void)_setInteriorGradientAtIndex:(unsigned long long)arg1 fromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007bd1c
- (float)colorOverlayOpacity;	// IMP=0x000000000007bced
- (_Bool)hasColorOverlay;	// IMP=0x000000000007bc96
- (void)_setColorFillAtIndex:(unsigned long long)arg1 FromPreset:(id)arg2 index:(unsigned int)arg3;	// IMP=0x000000000007bb92
- (void)_setOutputOpacityFromPreset:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x000000000007bb5d
- (void)_setShapeOpacityFromPreset:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x000000000007bb28
- (void)_cleanupEffectSettings;	// IMP=0x000000000007b8ab
- (void)dealloc;	// IMP=0x000000000007b86d

@end

