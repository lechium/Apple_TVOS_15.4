//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CNContactStore, NSArray, NSDictionary, NSSet, NSString, NSUserDefaults, PPContactStore, PPTopicStore, _CDInteractionCache, _CDInteractionStore, _PSConfidenceModelForSharing, _PSContactResolver, _PSHeuristics, _PSInteractionAndContactMonitor, _PSKNNModel, _PSRuleMiningModel, _PSSharingContactRankerModel;
@protocol _DKKnowledgeQuerying><_DKKnowledgeSaving;

@interface _PSEnsembleModel : NSObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    _Bool _PSConfidenceModelInUse;	// 12 = 0xc
    _Bool _allowNonSupportedBundleIDs;	// 13 = 0xd
    _CDInteractionStore *_interactionStore;	// 16 = 0x10
    id <_DKKnowledgeQuerying><_DKKnowledgeSaving> _knowledgeStore;	// 24 = 0x18
    PPTopicStore *_topicStore;	// 32 = 0x20
    PPContactStore *_portraitContactStore;	// 40 = 0x28
    _CDInteractionCache *_messageInteractionCache;	// 48 = 0x30
    _CDInteractionCache *_shareInteractionCache;	// 56 = 0x38
    NSArray *_groupActivityInteractionCache;	// 64 = 0x40
    NSUserDefaults *_peopleSuggesterDefaults;	// 72 = 0x48
    CNContactStore *_contactStore;	// 80 = 0x50
    NSArray *_defaultContactKeysToFetch;	// 88 = 0x58
    NSString *_trialID;	// 96 = 0x60
    _PSRuleMiningModel *_ruleMiningModel;	// 104 = 0x68
    _PSSharingContactRankerModel *_sharingContactRankerModel;	// 112 = 0x70
    _PSConfidenceModelForSharing *_confidenceModelForSharing;	// 120 = 0x78
    _PSKNNModel *_knnModel;	// 128 = 0x80
    _PSKNNModel *_knnMapsModel;	// 136 = 0x88
    _PSKNNModel *_knnZkwModel;	// 144 = 0x90
    _PSKNNModel *_knnNameOrContactRankerModel;	// 152 = 0x98
    _PSKNNModel *_knnSiriNLContactRankerModel;	// 160 = 0xa0
    _PSHeuristics *_heuristics;	// 168 = 0xa8
    _PSInteractionAndContactMonitor *_contactMonitor;	// 176 = 0xb0
    NSSet *_cachedSupportedBundleIDs;	// 184 = 0xb8
    _PSContactResolver *_contactResolver;	// 192 = 0xc0
    NSDictionary *_psConfig;	// 200 = 0xc8
    NSDictionary *_psConfigForAdaptableModel;	// 208 = 0xd0
}

- (void).cxx_destruct;	// IMP=0x0000000000025867
@property(retain) NSDictionary *psConfigForAdaptableModel; // @synthesize psConfigForAdaptableModel=_psConfigForAdaptableModel;
@property(retain) NSDictionary *psConfig; // @synthesize psConfig=_psConfig;
@property(nonatomic) _Bool allowNonSupportedBundleIDs; // @synthesize allowNonSupportedBundleIDs=_allowNonSupportedBundleIDs;
@property(retain, nonatomic) _PSContactResolver *contactResolver; // @synthesize contactResolver=_contactResolver;
@property(retain, nonatomic) NSSet *cachedSupportedBundleIDs; // @synthesize cachedSupportedBundleIDs=_cachedSupportedBundleIDs;
@property(retain, nonatomic) _PSInteractionAndContactMonitor *contactMonitor; // @synthesize contactMonitor=_contactMonitor;
@property(retain, nonatomic) _PSHeuristics *heuristics; // @synthesize heuristics=_heuristics;
@property(retain, nonatomic) _PSKNNModel *knnSiriNLContactRankerModel; // @synthesize knnSiriNLContactRankerModel=_knnSiriNLContactRankerModel;
@property(retain, nonatomic) _PSKNNModel *knnNameOrContactRankerModel; // @synthesize knnNameOrContactRankerModel=_knnNameOrContactRankerModel;
@property(retain, nonatomic) _PSKNNModel *knnZkwModel; // @synthesize knnZkwModel=_knnZkwModel;
@property(retain, nonatomic) _PSKNNModel *knnMapsModel; // @synthesize knnMapsModel=_knnMapsModel;
@property(retain, nonatomic) _PSKNNModel *knnModel; // @synthesize knnModel=_knnModel;
@property _Bool PSConfidenceModelInUse; // @synthesize PSConfidenceModelInUse=_PSConfidenceModelInUse;
@property(retain, nonatomic) _PSConfidenceModelForSharing *confidenceModelForSharing; // @synthesize confidenceModelForSharing=_confidenceModelForSharing;
@property(retain, nonatomic) _PSSharingContactRankerModel *sharingContactRankerModel; // @synthesize sharingContactRankerModel=_sharingContactRankerModel;
@property(retain, nonatomic) _PSRuleMiningModel *ruleMiningModel; // @synthesize ruleMiningModel=_ruleMiningModel;
@property(retain, nonatomic) NSString *trialID; // @synthesize trialID=_trialID;
@property(retain, nonatomic) NSArray *defaultContactKeysToFetch; // @synthesize defaultContactKeysToFetch=_defaultContactKeysToFetch;
@property(retain, nonatomic) CNContactStore *contactStore; // @synthesize contactStore=_contactStore;
@property(retain, nonatomic) NSUserDefaults *peopleSuggesterDefaults; // @synthesize peopleSuggesterDefaults=_peopleSuggesterDefaults;
@property(retain, nonatomic) NSArray *groupActivityInteractionCache; // @synthesize groupActivityInteractionCache=_groupActivityInteractionCache;
@property(retain, nonatomic) _CDInteractionCache *shareInteractionCache; // @synthesize shareInteractionCache=_shareInteractionCache;
@property(retain, nonatomic) _CDInteractionCache *messageInteractionCache; // @synthesize messageInteractionCache=_messageInteractionCache;
@property(retain, nonatomic) PPContactStore *portraitContactStore; // @synthesize portraitContactStore=_portraitContactStore;
@property(retain, nonatomic) PPTopicStore *topicStore; // @synthesize topicStore=_topicStore;
@property(retain, nonatomic) id <_DKKnowledgeQuerying><_DKKnowledgeSaving> knowledgeStore; // @synthesize knowledgeStore=_knowledgeStore;
@property(retain, nonatomic) _CDInteractionStore *interactionStore; // @synthesize interactionStore=_interactionStore;
- (id)appExtensionSuggestionsFromContext:(id)arg1;	// IMP=0x0000000000025084
- (id)rankedHandlesFromCandidateHandles:(id)arg1;	// IMP=0x0000000000025001
- (id)rankedSiriMLCRHandles:(id)arg1 context:(id)arg2;	// IMP=0x0000000000024f6a
- (id)autocompleteSearchResultsWithPredictionContext:(id)arg1;	// IMP=0x0000000000024ee7
- (id)rankedAutocompleteSuggestionsFromContext:(id)arg1 candidates:(id)arg2;	// IMP=0x0000000000024e50
- (id)rankedNameSuggestionsWithPredictionContext:(id)arg1 name:(id)arg2;	// IMP=0x0000000000024db9
- (id)rankedGlobalSuggestionsForSiriNLWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2 interactionId:(id)arg3;	// IMP=0x0000000000024b89
- (id)rankedGlobalSuggestionsWithPredictionContext:(id)arg1 contactsOnly:(_Bool)arg2 maxSuggestions:(unsigned long long)arg3;	// IMP=0x00000000000246bc
- (id)_knnZKWSuggestionsWithPredictionContext:(id)arg1 modelConfiguration:(id)arg2 maxSuggestions:(unsigned long long)arg3;	// IMP=0x0000000000024552
- (id)suggestZKWSuggestionsWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2;	// IMP=0x0000000000023f9e
- (id)mapsSuggestionArrayWithArray:(id)arg1 appendingUniqueElementsFromArray:(id)arg2 contactResolver:(id)arg3 meContactId:(id)arg4;	// IMP=0x0000000000023a4b
- (id)predictWithMapsPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2;	// IMP=0x00000000000233d7
- (id)mergedSuggestionsWithFamilySuggestions:(id)arg1 shareSheetSuggestions:(id)arg2 maxSuggestions:(unsigned long long)arg3 supportedBundleIds:(id)arg4;	// IMP=0x0000000000022db8
- (_Bool)excludeSuggestionWithConversationId:(id)arg1;	// IMP=0x0000000000022d3f
- (id)suggestionsFromSuggestionProxies:(id)arg1 supportedBundleIDs:(id)arg2 contactKeysToFetch:(id)arg3 meContactIdentifier:(id)arg4 maxSuggestions:(unsigned long long)arg5;	// IMP=0x000000000001cac7
- (void)addSupportedBundleIDs:(id)arg1;	// IMP=0x000000000001c8c5
- (void)addUTIInfo:(id)arg1 predictionContext:(id)arg2;	// IMP=0x000000000001c50a
- (void)addAdaptedModelUsageInfoToSuggestions:(id)arg1;	// IMP=0x000000000001c224
- (id)predictWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2 contactKeysToFetch:(id)arg3;	// IMP=0x000000000001718f
- (id)familyPredictionsWithMaxSuggestions:(unsigned long long)arg1;	// IMP=0x0000000000017182
- (id)predictWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2;	// IMP=0x0000000000016d93
- (void)refreshCaches;	// IMP=0x0000000000016d8d
- (void)populateCachesWithSupportedBundleIDs:(id)arg1;	// IMP=0x0000000000015685
- (void)populateCaches;	// IMP=0x0000000000015639
- (id)fetchShareSheetSupportedBundleIDs;	// IMP=0x0000000000015590
- (_Bool)allowConcurrentReads;	// IMP=0x0000000000015273
- (void)updateTrialID:(id)arg1;	// IMP=0x0000000000014f48
- (void)loadDefaultAdaptableModelConfig;	// IMP=0x0000000000014e6b
- (_Bool)loadPSConfig:(id)arg1;	// IMP=0x00000000000148a7
- (void)loadDefaultPSConfig;	// IMP=0x00000000000147da
- (id)init;	// IMP=0x000000000001476e

@end

