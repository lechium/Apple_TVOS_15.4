//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TelephonyUtilities/NSCopying-Protocol.h>
#import <TelephonyUtilities/NSSecureCoding-Protocol.h>

@class NSSet, NSString, NSUUID, TUConversationActivitySession, TUConversationLink, TUConversationMember, TUConversationProvider, TUConversationReport, TUHandle;

@interface TUConversation : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _hasReceivedLetMeInRequest;	// 8 = 0x8
    _Bool _audioEnabled;	// 9 = 0x9
    _Bool _videoEnabled;	// 10 = 0xa
    _Bool _screenEnabled;	// 11 = 0xb
    _Bool _locallyCreated;	// 12 = 0xc
    _Bool _hasJoined;	// 13 = 0xd
    _Bool _isAnyOtherAccountDeviceActive;	// 14 = 0xe
    _Bool _video;	// 15 = 0xf
    _Bool _pendingConversation;	// 16 = 0x10
    _Bool _ignoreLMIRequests;	// 17 = 0x11
    _Bool _oneToOneModeEnabled;	// 18 = 0x12
    _Bool _backedByGroupSession;	// 19 = 0x13
    _Bool _fromStorage;	// 20 = 0x14
    NSUUID *_UUID;	// 24 = 0x18
    NSUUID *_groupUUID;	// 32 = 0x20
    TUConversationLink *_link;	// 40 = 0x28
    long long _state;	// 48 = 0x30
    long long _letMeInRequestState;	// 56 = 0x38
    long long _splitSessionUserProfileState;	// 64 = 0x40
    NSSet *_participantHandles;	// 72 = 0x48
    NSSet *_remoteMembers;	// 80 = 0x50
    NSSet *_pendingMembers;	// 88 = 0x58
    NSSet *_kickedMembers;	// 96 = 0x60
    NSSet *_rejectedMembers;	// 104 = 0x68
    NSSet *_lightweightMembers;	// 112 = 0x70
    NSSet *_otherInvitedHandles;	// 120 = 0x78
    NSSet *_activeRemoteParticipants;	// 128 = 0x80
    NSSet *_activeLightweightParticipants;	// 136 = 0x88
    TUConversationReport *_report;	// 144 = 0x90
    NSSet *_activitySessions;	// 152 = 0x98
    TUConversationActivitySession *_stagedActivitySession;	// 160 = 0xa0
    TUConversationProvider *_provider;	// 168 = 0xa8
    long long _avcSessionToken;	// 176 = 0xb0
    NSString *_avcSessionIdentifier;	// 184 = 0xb8
    TUConversationMember *_localMember;	// 192 = 0xc0
    unsigned long long _localParticipantIdentifier;	// 200 = 0xc8
    NSUUID *_messagesGroupUUID;	// 208 = 0xd0
    TUHandle *_initiator;	// 216 = 0xd8
    NSString *_messagesGroupName;	// 224 = 0xe0
    long long _maxVideoDecodesAllowed;	// 232 = 0xe8
    NSObject *_reportingHierarchyToken;	// 240 = 0xf0
    NSObject *_reportingHierarchySubToken;	// 248 = 0xf8
    NSSet *_virtualParticipants;	// 256 = 0x100
    NSSet *_invitationPreferences;	// 264 = 0x108
    NSUUID *_selectiveSharingSessionUUID;	// 272 = 0x110
    id _conversationFailureContext;	// 280 = 0x118
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000031897
+ (id)numberFormatter;	// IMP=0x0000000000030a85
+ (id)emptyConversationWithGroupUUID:(id)arg1;	// IMP=0x000000000002ef20
- (void).cxx_destruct;	// IMP=0x00000000000359c7
@property(retain, nonatomic) id conversationFailureContext; // @synthesize conversationFailureContext=_conversationFailureContext;
@property(retain, nonatomic) NSUUID *selectiveSharingSessionUUID; // @synthesize selectiveSharingSessionUUID=_selectiveSharingSessionUUID;
@property(nonatomic, getter=isFromStorage) _Bool fromStorage; // @synthesize fromStorage=_fromStorage;
@property(copy, nonatomic) NSSet *invitationPreferences; // @synthesize invitationPreferences=_invitationPreferences;
@property(copy, nonatomic) NSSet *virtualParticipants; // @synthesize virtualParticipants=_virtualParticipants;
@property(nonatomic, getter=isBackedByGroupSession) _Bool backedByGroupSession; // @synthesize backedByGroupSession=_backedByGroupSession;
@property(nonatomic, getter=isOneToOneModeEnabled) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(retain, nonatomic) NSObject *reportingHierarchySubToken; // @synthesize reportingHierarchySubToken=_reportingHierarchySubToken;
@property(retain, nonatomic) NSObject *reportingHierarchyToken; // @synthesize reportingHierarchyToken=_reportingHierarchyToken;
@property(nonatomic) long long maxVideoDecodesAllowed; // @synthesize maxVideoDecodesAllowed=_maxVideoDecodesAllowed;
@property(copy, nonatomic) NSString *messagesGroupName; // @synthesize messagesGroupName=_messagesGroupName;
@property(retain, nonatomic) TUHandle *initiator; // @synthesize initiator=_initiator;
@property(retain, nonatomic) NSUUID *messagesGroupUUID; // @synthesize messagesGroupUUID=_messagesGroupUUID;
@property(nonatomic) _Bool ignoreLMIRequests; // @synthesize ignoreLMIRequests=_ignoreLMIRequests;
@property(nonatomic) unsigned long long localParticipantIdentifier; // @synthesize localParticipantIdentifier=_localParticipantIdentifier;
@property(retain, nonatomic) TUConversationMember *localMember; // @synthesize localMember=_localMember;
@property(nonatomic, getter=isPendingConversation) _Bool pendingConversation; // @synthesize pendingConversation=_pendingConversation;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
@property(nonatomic) _Bool isAnyOtherAccountDeviceActive; // @synthesize isAnyOtherAccountDeviceActive=_isAnyOtherAccountDeviceActive;
@property(nonatomic, getter=hasJoined) _Bool hasJoined; // @synthesize hasJoined=_hasJoined;
@property(copy, nonatomic) NSString *avcSessionIdentifier; // @synthesize avcSessionIdentifier=_avcSessionIdentifier;
@property(nonatomic) long long avcSessionToken; // @synthesize avcSessionToken=_avcSessionToken;
@property(readonly, nonatomic) TUConversationProvider *provider; // @synthesize provider=_provider;
@property(copy, nonatomic) TUConversationActivitySession *stagedActivitySession; // @synthesize stagedActivitySession=_stagedActivitySession;
@property(copy, nonatomic) NSSet *activitySessions; // @synthesize activitySessions=_activitySessions;
@property(copy, nonatomic) TUConversationReport *report; // @synthesize report=_report;
@property(copy, nonatomic) NSSet *activeLightweightParticipants; // @synthesize activeLightweightParticipants=_activeLightweightParticipants;
@property(copy, nonatomic) NSSet *activeRemoteParticipants; // @synthesize activeRemoteParticipants=_activeRemoteParticipants;
@property(copy, nonatomic) NSSet *otherInvitedHandles; // @synthesize otherInvitedHandles=_otherInvitedHandles;
@property(copy, nonatomic) NSSet *lightweightMembers; // @synthesize lightweightMembers=_lightweightMembers;
@property(copy, nonatomic) NSSet *rejectedMembers; // @synthesize rejectedMembers=_rejectedMembers;
@property(copy, nonatomic) NSSet *kickedMembers; // @synthesize kickedMembers=_kickedMembers;
@property(copy, nonatomic) NSSet *pendingMembers; // @synthesize pendingMembers=_pendingMembers;
@property(copy, nonatomic) NSSet *remoteMembers; // @synthesize remoteMembers=_remoteMembers;
@property(copy, nonatomic) NSSet *participantHandles; // @synthesize participantHandles=_participantHandles;
@property(nonatomic) long long splitSessionUserProfileState; // @synthesize splitSessionUserProfileState=_splitSessionUserProfileState;
@property(nonatomic, getter=isLocallyCreated) _Bool locallyCreated; // @synthesize locallyCreated=_locallyCreated;
@property(nonatomic, getter=isScreenEnabled) _Bool screenEnabled; // @synthesize screenEnabled=_screenEnabled;
@property(nonatomic, getter=isVideoEnabled) _Bool videoEnabled; // @synthesize videoEnabled=_videoEnabled;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) long long letMeInRequestState; // @synthesize letMeInRequestState=_letMeInRequestState;
@property(nonatomic) _Bool hasReceivedLetMeInRequest; // @synthesize hasReceivedLetMeInRequest=_hasReceivedLetMeInRequest;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) TUConversationLink *link; // @synthesize link=_link;
@property(retain, nonatomic) NSUUID *groupUUID; // @synthesize groupUUID=_groupUUID;
@property(retain, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
- (_Bool)isEqualToConversation:(id)arg1;	// IMP=0x0000000000034849
- (unsigned long long)hash;	// IMP=0x00000000000341f1
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000003418a
- (id)description;	// IMP=0x000000000003367a
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000033642
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000003360a
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000003282f
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000003189f
- (id)contactNamesByHandleWithContactsDataSource:(id)arg1;	// IMP=0x000000000003180e
- (id)handles;	// IMP=0x00000000000313ed
- (id)bundleIdentifier;	// IMP=0x000000000003139d
- (_Bool)shouldShowInvitationRingingUIForAnyHandleType;	// IMP=0x0000000000031264
- (_Bool)shouldShowInvitationRingingUIForHandle:(id)arg1;	// IMP=0x0000000000031244
- (_Bool)shouldShowInvitationUserNotificationForHandle:(id)arg1;	// IMP=0x0000000000031224
- (_Bool)shouldShowInvitationOfStyles:(long long)arg1 forHandle:(id)arg2 defaultValue:(_Bool)arg3;	// IMP=0x0000000000030fe5
- (id)remoteParticipantForLightweightParticipantHandle:(id)arg1;	// IMP=0x0000000000030af3
- (_Bool)isRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x00000000000305bd
- (_Bool)hasJoinedActivitySession;	// IMP=0x000000000003058a
- (id)joinedActivitySession;	// IMP=0x0000000000030435
@property(readonly, nonatomic) unsigned long long avMode;
- (id)messagesGroupPhotoData;	// IMP=0x00000000000300d0
- (id)displayName;	// IMP=0x000000000002f5d3
- (id)initWithConversation:(id)arg1;	// IMP=0x000000000002f368
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2 provider:(id)arg3;	// IMP=0x000000000002f2a4
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2;	// IMP=0x000000000002f20d

@end

