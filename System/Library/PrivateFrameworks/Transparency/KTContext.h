//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class KTAccountKeyServer, KTApplicationPublicKeyStore, KTContextStore, KTContextVerifier, KTLogClient, NSString, TransparencyManagedDataStore, TransparencyTranscript;

@interface KTContext : NSObject
{
    NSString *_applicationID;	// 8 = 0x8
    TransparencyTranscript *_transcript;	// 16 = 0x10
    KTApplicationPublicKeyStore *_applicationKeyStore;	// 24 = 0x18
    TransparencyManagedDataStore *_dataStore;	// 32 = 0x20
    KTContextVerifier *_verifier;	// 40 = 0x28
    KTLogClient *_logClient;	// 48 = 0x30
    KTAccountKeyServer *_accountKeyServer;	// 56 = 0x38
    KTContextStore *_contextStore;	// 64 = 0x40
}

+ (id)failedServerLoggableDatas:(id)arg1;	// IMP=0x0000000000066fdc
+ (_Bool)ktCapable:(id)arg1;	// IMP=0x0000000000066e52
+ (_Bool)hasAccountMismatch:(id)arg1;	// IMP=0x0000000000066cd7
+ (id)validateEventName:(unsigned long long)arg1 application:(id)arg2;	// IMP=0x0000000000066786
- (void).cxx_destruct;	// IMP=0x0000000000093e3b
@property __weak KTContextStore *contextStore; // @synthesize contextStore=_contextStore;
@property(retain) KTAccountKeyServer *accountKeyServer; // @synthesize accountKeyServer=_accountKeyServer;
@property(retain) KTLogClient *logClient; // @synthesize logClient=_logClient;
@property(retain) KTContextVerifier *verifier; // @synthesize verifier=_verifier;
@property(retain) TransparencyManagedDataStore *dataStore; // @synthesize dataStore=_dataStore;
@property(retain) KTApplicationPublicKeyStore *applicationKeyStore; // @synthesize applicationKeyStore=_applicationKeyStore;
@property(retain) TransparencyTranscript *transcript; // @synthesize transcript=_transcript;
@property(retain) NSString *applicationID; // @synthesize applicationID=_applicationID;
- (_Bool)contextShouldGossip;	// IMP=0x0000000000093c4c
- (_Bool)runDutyCycleForActivity:(id)arg1;	// IMP=0x0000000000092f1e
- (_Bool)checkDeferActivity:(id)arg1;	// IMP=0x0000000000092e39
- (void)handleGarbageCollection:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000092d66
- (id)copyState;	// IMP=0x0000000000092d22
- (void)clearState:(CDUnknownBlockType)arg1;	// IMP=0x0000000000092cb3
- (_Bool)ready:(id *)arg1;	// IMP=0x0000000000092bab
- (_Bool)unsupported:(id *)arg1;	// IMP=0x0000000000092a39
- (void)logFinishFailureEvent:(id)arg1 error:(id)arg2;	// IMP=0x000000000009294a
- (void)logFinishSuccessEvent:(id)arg1;	// IMP=0x0000000000092881
- (void)logStartEvent:(id)arg1;	// IMP=0x00000000000927b8
- (id)initWithApplicationKeyStore:(id)arg1 dataStore:(id)arg2 logClient:(id)arg3 applicationID:(id)arg4 contextStore:(id)arg5;	// IMP=0x00000000000924a0
- (void)processSTHsFromPeers:(id)arg1 verifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005dc06
- (void)analyticsForTooNewLogBeginningMs:(unsigned long long)arg1 expectedLogBeginningMS:(unsigned long long)arg2 sth:(id)arg3;	// IMP=0x000000000005daf7
- (void)analyticsForPredateLogBeginningMs:(unsigned long long)arg1 expectedLogBeginningMS:(unsigned long long)arg2 sth:(id)arg3;	// IMP=0x000000000005d9e5
- (void)analyticsForParseFailure:(id)arg1;	// IMP=0x000000000005d931
- (void)analyticsForUnsupportedProtocol:(int)arg1 expected:(int)arg2 sth:(id)arg3;	// IMP=0x000000000005d820
- (void)analyticsForDecodeFailure:(id)arg1 error:(id)arg2;	// IMP=0x000000000005d76c
- (id)parseSTHData:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005d753
- (id)retrieveTLTSTH:(id *)arg1;	// IMP=0x000000000005d60d
- (void)failHeadDownload:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3;	// IMP=0x000000000005d353
- (void)failHeadDownloadRecord:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3 error:(id *)arg4;	// IMP=0x000000000005c76a
- (void)reportFailedRevisions:(id)arg1 failure:(id)arg2 downloadType:(unsigned long long)arg3 application:(id)arg4;	// IMP=0x000000000005c57e
- (void)garbageCollectHeads:(id *)arg1;	// IMP=0x000000000005c497
- (void)handlePendingMapHeadMMDs:(id *)arg1;	// IMP=0x000000000005c22a
- (void)handlePendingHeadInclusionProofs:(id *)arg1;	// IMP=0x000000000005c1ae
- (void)handlePendingConsistencyProofs:(id *)arg1;	// IMP=0x000000000005c194
- (void)handleDownloadOfType:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000005c17d
- (void)handleDownloadOfType:(unsigned long long)arg1 retry:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000005ba40
- (void)handleHeadsWithUnverifiedSignature:(id *)arg1;	// IMP=0x000000000005b7b9
- (void)failExpiredSTHsForType:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000005acf0
- (id)createChainOfErrorsFromSTHFailures:(id)arg1 type:(unsigned long long)arg2;	// IMP=0x000000000005ab23
- (id)createErrorFromSTHFailure:(id)arg1 underlyingError:(id)arg2;	// IMP=0x000000000005aa60
- (unsigned long long)verifyConsistencyProofDownloadRecord:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005a597
- (unsigned long long)verifyConsistencyProofDownload:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000059ee9
- (void)downloadConsistencyProof:(id *)arg1 retry:(_Bool)arg2;	// IMP=0x0000000000058de5
- (_Bool)verifyInclusionProofDownloadRecord:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000058a63
- (_Bool)verifyInclusionProofDownload:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000583ec
- (void)downloadSTHInclusionProofs:(id *)arg1 retry:(_Bool)arg2;	// IMP=0x00000000000581c8
- (void)downloadSMHInclusionProofs:(id *)arg1 retry:(_Bool)arg2;	// IMP=0x0000000000057fa1
- (void)downloadInclusionProofsForRevisions:(id)arg1 downloadType:(unsigned long long)arg2 retry:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000057508
- (void)failRequestDownload:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3;	// IMP=0x0000000000071996
- (void)failRequestDownloadRecord:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3;	// IMP=0x00000000000716c3
- (void)saveRequestFailure:(id)arg1 failure:(id)arg2;	// IMP=0x00000000000715d0
- (_Bool)verifyRequestDownload:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000711df
- (void)verifyRequestDownloadRecord:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007098e
- (unsigned long long)downloadTypeForValidateType:(unsigned long long)arg1;	// IMP=0x0000000000070977
- (void)handlePendingQueryRequests:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007057a
- (void)handleKTRequestDownload:(id)arg1;	// IMP=0x00000000000701e3
- (void)handleKTRequest:(id)arg1 queryRequest:(id)arg2 queryResponse:(id)arg3 error:(id *)arg4;	// IMP=0x000000000006fe36
- (void)handleKTRequestDownload:(id)arg1 retry:(_Bool)arg2;	// IMP=0x000000000006f9f0
- (_Bool)failExpiredRequest:(id)arg1 error:(id)arg2;	// IMP=0x000000000006f5b7
- (id)createChainOfErrorsFromRequestFailures:(id)arg1;	// IMP=0x000000000006f434
- (id)createErrorFromRequestFailure:(id)arg1 underlyingError:(id)arg2;	// IMP=0x000000000006f371
- (void)downloadQueryForKTRequest:(id)arg1 retry:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000006effb
- (unsigned long long)validateEnrollment:(id)arg1 queryRequest:(id)arg2 queryResponse:(id)arg3 transparentData:(id *)arg4 error:(id *)arg5;	// IMP=0x000000000006e9b8
- (unsigned long long)validateSelf:(id)arg1 queryRequest:(id)arg2 queryResponse:(id)arg3 transparentData:(id *)arg4 error:(id *)arg5;	// IMP=0x000000000006e375
- (unsigned long long)validatePeer:(id)arg1 queryRequest:(id)arg2 queryResponse:(id)arg3 transparentData:(id *)arg4 error:(id *)arg5;	// IMP=0x000000000006dd33
- (unsigned long long)validateEnrollmentWithAnalytics:(id)arg1 transparentData:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000006d700
- (unsigned long long)validateSelfWithAnalytics:(id)arg1 transparentData:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000006d016
- (unsigned long long)validatePeerWithAnalytics:(id)arg1 transparentData:(id *)arg2 revalidate:(_Bool)arg3 error:(id *)arg4;	// IMP=0x000000000006c881
- (unsigned long long)validatePeerWithAnalytics:(id)arg1 transparentData:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000006c866
- (unsigned long long)validateEnrollment:(id)arg1 transparentData:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000006bd8e
- (unsigned long long)validateSelf:(id)arg1 transparentData:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000006b5a3
- (unsigned long long)validatePeer:(id)arg1 transparentData:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000006ac9b
- (void)fetchQueryForKTRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000006a3f1
- (id)queryRequestForKTRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000069e02
- (unsigned long long)handleVerifyInsertResponse:(id)arg1 request:(id)arg2 transparentData:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000069496
- (unsigned long long)handleVerifySelfResponse:(id)arg1 queryRequest:(id)arg2 request:(id)arg3 transparentData:(id *)arg4 error:(id *)arg5;	// IMP=0x0000000000069148
- (unsigned long long)handleVerifyPeerResponse:(id)arg1 queryRequest:(id)arg2 request:(id)arg3 transparentData:(id *)arg4 error:(id *)arg5;	// IMP=0x00000000000680fa
- (id)parseQueryRequestFromKTRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000067db3
- (id)analyticsForRequestValidation:(id)arg1 initialResult:(unsigned long long)arg2 result:(unsigned long long)arg3 failure:(id)arg4 transparentData:(id)arg5;	// IMP=0x000000000006721d
- (unsigned long long)writeResult:(unsigned long long)arg1 request:(id)arg2 proof:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000066b0c
- (void)checkInclusionProofEpoch:(id)arg1;	// IMP=0x0000000000066806
- (void)failSMTDownload:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3;	// IMP=0x0000000000085898
- (void)failSMTDownloadRecord:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000000855c2
- (void)failSMTRequest:(id)arg1 failure:(id)arg2 retry:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000085083
- (_Bool)verifySMTDownload:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000084c6d
- (void)verifySMTDownloadRecord:(id)arg1 error:(id *)arg2;	// IMP=0x000000000008471b
- (void)verifySMTQueryResponse:(id)arg1 request:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000843ea
- (void)handleSMTsWithUnverifiedSignature:(id *)arg1;	// IMP=0x000000000008417d
- (void)handleURIsWithPendingSMTs:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000083c07
- (void)handleSMTInclusionDownload:(id)arg1 request:(id)arg2;	// IMP=0x0000000000083804
- (void)handleSMTInclusionDownload:(id)arg1 request:(id)arg2 retry:(_Bool)arg3;	// IMP=0x000000000008323c
- (void)downloadSMTQueryResponse:(id)arg1 retry:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000082e9c

@end

