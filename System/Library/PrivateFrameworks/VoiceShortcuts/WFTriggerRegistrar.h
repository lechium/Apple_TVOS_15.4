//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class VCCoreDuetListener, VCDaemonXPCEventHandler, VCTriggerEventQueue, WFBiomeListener, WFTriggerNotificationScheduler, WFWorkflowRunCoordinator;
@protocol OS_dispatch_queue, WFDatabaseProvider;

@interface WFTriggerRegistrar : NSObject
{
    WFWorkflowRunCoordinator *_runCoordinator;	// 8 = 0x8
    VCCoreDuetListener *_coreDuetListener;	// 16 = 0x10
    WFBiomeListener *_biomeListener;	// 24 = 0x18
    WFTriggerNotificationScheduler *_scheduler;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    id <WFDatabaseProvider> _databaseProvider;	// 48 = 0x30
    VCDaemonXPCEventHandler *_eventHandler;	// 56 = 0x38
    VCTriggerEventQueue *_eventQueue;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x0000000000055b7e
@property(readonly, nonatomic) VCTriggerEventQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(readonly, nonatomic) VCDaemonXPCEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(readonly, nonatomic) id <WFDatabaseProvider> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) WFTriggerNotificationScheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(readonly, nonatomic) WFBiomeListener *biomeListener; // @synthesize biomeListener=_biomeListener;
@property(readonly, nonatomic) VCCoreDuetListener *coreDuetListener; // @synthesize coreDuetListener=_coreDuetListener;
@property(readonly, nonatomic) WFWorkflowRunCoordinator *runCoordinator; // @synthesize runCoordinator=_runCoordinator;
- (id)unableToLoadDatabaseErrorWithUnderlyingError:(id)arg1;	// IMP=0x0000000000055b04
- (long long)triggerBackingForConfiguredTrigger:(id)arg1;	// IMP=0x0000000000055ab5
- (void)getConfiguredTriggerDescriptionsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000055992
- (void)deleteTriggerWithIdentifier:(id)arg1 allowedDeletionClasses:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000005587c
- (void)deleteTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000055865
- (void)fireTriggerWithIdentifier:(id)arg1 force:(_Bool)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000055745
- (void)queue_unregisterConfiguredTriggerWithIdentifier:(id)arg1 triggerBacking:(long long)arg2;	// IMP=0x000000000005569e
- (void)queue_unregisterConfiguredTrigger:(id)arg1;	// IMP=0x00000000000554a7
- (void)unregisterTriggerWithIdentifier:(id)arg1 triggerBacking:(long long)arg2;	// IMP=0x00000000000553f0
- (void)unregisterAllTriggers;	// IMP=0x000000000005537f
- (void)queue_registerConfiguredTrigger:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000055247
- (void)registerTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000005516b
- (void)registerAllTriggersWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000550ba
- (void)removeStalePendingNotifications;	// IMP=0x000000000005507d
- (void)timeChangeDidOccur;	// IMP=0x0000000000055069
- (void)timezoneChangeDidOccur;	// IMP=0x0000000000055055
- (void)deviceDidUnlockForFirstTime;	// IMP=0x0000000000055041
- (void)dealloc;	// IMP=0x0000000000054f57
- (id)initWithDatabaseProvider:(id)arg1 eventHandler:(id)arg2 runCoordinator:(id)arg3;	// IMP=0x0000000000054cb2

@end

