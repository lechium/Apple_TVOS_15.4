//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosPlayer/ISChangeObserver-Protocol.h>
#import <PhotosPlayer/ISWrappedAVPlayerDelegate-Protocol.h>

@class AVPlayer, ISBehavior, ISPlayerItem, ISPlayerOutputContent, ISPlayerState, ISWrappedAVPlayer, NSError, NSHashTable, NSObject, NSString;
@protocol ISBasePlayerDelegate, OS_dispatch_queue;

@interface ISBasePlayer <ISChangeObserver, ISWrappedAVPlayerDelegate>
{
    float _videoVolume;	// 8 = 0x8
    AVPlayer *_providedAVPlayer;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_outputQueue;	// 24 = 0x18
    NSHashTable *_outputs;	// 32 = 0x20
    NSString *_apertureMode;	// 40 = 0x28
    struct {
        _Bool videoPlayer;
        _Bool videoPlayerVolume;
        _Bool contentFromPlayerItem;
        _Bool willPlayToEndObserver;
        _Bool willPlayToPhotoObserver;
        _Bool status;
    } _isValid;	// 48 = 0x30
    long long _mainQueue_mediaServicesResetCounter;	// 56 = 0x38
    _Bool _audioEnabled;	// 64 = 0x40
    float _audioVolume;	// 68 = 0x44
    ISPlayerItem *_playerItem;	// 72 = 0x48
    long long _status;	// 80 = 0x50
    NSError *_error;	// 88 = 0x58
    id <ISBasePlayerDelegate> _delegate;	// 96 = 0x60
    ISWrappedAVPlayer *_videoPlayer;	// 104 = 0x68
    ISBehavior *_activeBehavior;	// 112 = 0x70
    id __videoWillPlayToEndObserver;	// 120 = 0x78
    id __videoWillPlayToPhotoObserver;	// 128 = 0x80
    ISPlayerState *_lastAppliedLayoutInfo;	// 136 = 0x88
    ISPlayerOutputContent *__outputContent;	// 144 = 0x90
    double _lastAppliedScale;	// 152 = 0x98
    CDStruct_1b6d18a9 __videoForwardPlaybackEndTime;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x000000000000710c
@property(nonatomic, setter=_setVideoForwardPlaybackEndTime:) CDStruct_1b6d18a9 _videoForwardPlaybackEndTime; // @synthesize _videoForwardPlaybackEndTime=__videoForwardPlaybackEndTime;
@property(nonatomic, setter=_setLastAppliedScale:) double lastAppliedScale; // @synthesize lastAppliedScale=_lastAppliedScale;
@property(retain, nonatomic, setter=_setOutputContent:) ISPlayerOutputContent *_outputContent; // @synthesize _outputContent=__outputContent;
@property(retain, nonatomic, setter=_setLastAppliedLayoutInfo:) ISPlayerState *lastAppliedLayoutInfo; // @synthesize lastAppliedLayoutInfo=_lastAppliedLayoutInfo;
@property(retain, nonatomic, setter=_setVideoWillPlayToPhotoObserver:) id _videoWillPlayToPhotoObserver; // @synthesize _videoWillPlayToPhotoObserver=__videoWillPlayToPhotoObserver;
@property(retain, nonatomic, setter=_setVideoWillPlayToEndObserver:) id _videoWillPlayToEndObserver; // @synthesize _videoWillPlayToEndObserver=__videoWillPlayToEndObserver;
@property(retain, nonatomic, setter=setActiveBehavior:) ISBehavior *activeBehavior; // @synthesize activeBehavior=_activeBehavior;
@property(readonly, nonatomic) ISWrappedAVPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(nonatomic) __weak id <ISBasePlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) float audioVolume; // @synthesize audioVolume=_audioVolume;
@property(retain, nonatomic, setter=_setError:) NSError *error; // @synthesize error=_error;
@property(nonatomic, setter=_setStatus:) long long status; // @synthesize status=_status;
@property(retain, nonatomic) ISPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
- (void)avPlayer:(id)arg1 itemDidPlayToEnd:(id)arg2;	// IMP=0x0000000000006f74
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;	// IMP=0x0000000000006f25
- (void)behavior:(id)arg1 playVideoToTime:(CDStruct_1b6d18a9)arg2 initialRate:(float)arg3 overDuration:(double)arg4 progressHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000006e45
- (void)behavior:(id)arg1 removeTimeObserver:(id)arg2;	// IMP=0x0000000000006dd3
- (id)behavior:(id)arg1 addBoundaryTimeObserverForTimes:(id)arg2 queue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000006d21
- (void)behavior:(id)arg1 setVideoVolume:(float)arg2;	// IMP=0x0000000000006c08
- (void)behavior:(id)arg1 setVideoForwardPlaybackEndTime:(CDStruct_1b6d18a9)arg2;	// IMP=0x0000000000006ad8
- (_Bool)behavior:(id)arg1 prerollVideoAtRate:(float)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000006900
- (_Bool)behavior:(id)arg1 seekVideoPlayerToTime:(CDStruct_1b6d18a9)arg2 toleranceBefore:(CDStruct_1b6d18a9)arg3 toleranceAfter:(CDStruct_1b6d18a9)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000065cd
- (_Bool)behavior:(id)arg1 seekVideoPlayerToTime:(CDStruct_1b6d18a9)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000006558
- (float)videoPlayRate;	// IMP=0x0000000000006508
- (void)behavior:(id)arg1 setVideoPlayRate:(float)arg2;	// IMP=0x00000000000063c5
- (void)behavior:(id)arg1 didSetOutputInfo:(id)arg2 withTransitionOptions:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000006279
- (void)_setVideoPlayer:(id)arg1;	// IMP=0x00000000000060de
- (void)_mainQueue_resetAVObjectsWithResetCount:(long long)arg1;	// IMP=0x0000000000005f9c
- (void)_mainQueue_handleMediaServicesReset;	// IMP=0x0000000000005ee1
- (void)_handleErrorsIfNeeded;	// IMP=0x0000000000005c96
- (void)_updateVideoPlayerIfNeeded;	// IMP=0x0000000000005bbf
- (void)_invalidateVideoPlayer;	// IMP=0x0000000000005bae
- (void)_updateVideoPlayerVolumeIfNeeded;	// IMP=0x0000000000005ae0
- (void)_invalidateVideoPlayerVolume;	// IMP=0x0000000000005ace
- (void)_updateIfNeeded;	// IMP=0x0000000000005a53
- (_Bool)_needsUpdate;	// IMP=0x0000000000005a1a
- (void)didPerformChanges;	// IMP=0x00000000000059d9
- (id)apertureMode;	// IMP=0x00000000000059c4
- (void)setApertureMode:(id)arg1;	// IMP=0x0000000000005946
- (void)setVideoVolume:(float)arg1;	// IMP=0x000000000000591a
- (float)videoVolume;	// IMP=0x0000000000005908
- (void)_setForwardPlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000058ac
- (void)_updateStatusIfNeeded;	// IMP=0x0000000000005740
- (void)_invalidateStatus;	// IMP=0x000000000000572e
- (void)_updateWillPlayToPhotoObserverIfNeeded;	// IMP=0x0000000000005337
- (void)_invalidateWillPlayToPhotoObserver;	// IMP=0x0000000000005325
- (void)_updateWillPlayToEndObserverIfNeeded;	// IMP=0x0000000000004f73
- (void)_invalidateWillPlayToEndObserver;	// IMP=0x0000000000004f61
- (void)_updateContentFromPlayerItemIfNeeded;	// IMP=0x0000000000004c42
- (void)_invalidateContentFromPlayerItem;	// IMP=0x0000000000004c30
- (void)_configureNewOutput:(id)arg1;	// IMP=0x0000000000004b8b
- (void)enumerateOutputsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000004a5c
- (void)applyOutputInfo:(id)arg1 fromBehavior:(id)arg2 withTransitionOptions:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000047b4
- (void)applyScale:(double)arg1 withTransitionOptions:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000455e
- (double)videoWillPlayToPhotoInterval;	// IMP=0x000000000000435e
- (double)videoWillPlayToEndInterval;	// IMP=0x0000000000004350
- (void)_videoWillPlayToEnd;	// IMP=0x0000000000004313
- (void)_videoWillPlayToPhoto;	// IMP=0x00000000000042d6
- (void)_videoDidPlayToEnd;	// IMP=0x0000000000004299
- (void)willRemoveOutput:(id)arg1;	// IMP=0x0000000000004282
- (void)didAddOutput:(id)arg1;	// IMP=0x0000000000004270
- (_Bool)behaviorIsVideoReadyForDisplay:(id)arg1;	// IMP=0x000000000000425e
@property(readonly, nonatomic) _Bool videoLayersReadyForDisplay;
- (void)_outputVideoReadyForDisplayDidChange:(id)arg1;	// IMP=0x0000000000004087
- (void)removeOutput:(id)arg1;	// IMP=0x000000000000402a
- (void)addOutput:(id)arg1;	// IMP=0x0000000000003ee3
- (void)activeBehaviorDidChange;	// IMP=0x0000000000003edd
- (void)statusDidChange;	// IMP=0x0000000000003e91
- (void)configurePlayerItem;	// IMP=0x0000000000003e8b
- (void)playerItemDidChange;	// IMP=0x0000000000003e3f
- (id)mutableChangeObject;	// IMP=0x0000000000003d9e
- (void)dealloc;	// IMP=0x0000000000003cae
- (id)initWithVideoPlayer:(id)arg1;	// IMP=0x0000000000003b71
- (id)init;	// IMP=0x0000000000003b5d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

