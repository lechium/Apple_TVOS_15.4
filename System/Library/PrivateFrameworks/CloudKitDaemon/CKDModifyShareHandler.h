//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKRecordID, CKShare;

@interface CKDModifyShareHandler
{
    _Bool _haveAddedOwnerToShare;	// 8 = 0x8
    _Bool _isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade;	// 9 = 0x9
}

+ (id)modifyHandlerForDeleteWithShareID:(id)arg1 operation:(id)arg2;	// IMP=0x0000000000169766
+ (id)modifyHandlerWithShare:(id)arg1 operation:(id)arg2;	// IMP=0x00000000001696d4
@property(nonatomic) _Bool isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade; // @synthesize isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade=_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade;
@property(nonatomic) _Bool haveAddedOwnerToShare; // @synthesize haveAddedOwnerToShare=_haveAddedOwnerToShare;
- (void)updateParticipantsForFetchedShare:(id)arg1 error:(id)arg2;	// IMP=0x0000000000177483
- (void)savePCSDataToCache;	// IMP=0x000000000017725c
- (void)setServerRecord:(id)arg1;	// IMP=0x0000000000176b9d
- (void)clearProtectionDataForRecord;	// IMP=0x000000000017671e
- (id)_removePublicKey:(id)arg1 fromInvitedPCS:(struct _OpaquePCSShareProtection *)arg2;	// IMP=0x0000000000176487
- (id)_ensurePrivateParticipant:(id)arg1 isInInvitedSharePCS:(struct _OpaquePCSShareProtection *)arg2;	// IMP=0x0000000000174659
- (unsigned long long)invitedPCSPermissionForParticipant:(id)arg1;	// IMP=0x00000000001745be
- (struct _PCSPublicIdentityData *)createPublicIdentityFromPublicKeyForParticipant:(id)arg1 error:(id *)arg2;	// IMP=0x000000000017421b
- (_Bool)_addedPrivateParticipantNeedsAManateeInvitation:(id)arg1;	// IMP=0x0000000000174182
- (id)_publicKeyForParticipant:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000173bfa
- (id)_removePrivateParticipant:(id)arg1 fromInvitedSharePCS:(struct _OpaquePCSShareProtection *)arg2;	// IMP=0x0000000000173372
- (_Bool)_removePrivateParticipantsFromInvitedPCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;	// IMP=0x000000000017306a
- (_Bool)_modifyRoleForParticipant:(id)arg1 invitedPCS:(struct _OpaquePCSShareProtection *)arg2 shareeIdentities:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000172804
- (void)_setupParticipantsProtectionInfos;	// IMP=0x00000000001711f7
- (void)_addPublicKeyToSelfParticipant;	// IMP=0x00000000001708ef
- (_Bool)_cleanPublicPCSforShareWithError:(id *)arg1;	// IMP=0x00000000001705ba
- (_Bool)_updateSharePublicPCSWithError:(id *)arg1;	// IMP=0x000000000016fcf7
- (_Bool)_serializePCSDataForShareWithError:(id *)arg1;	// IMP=0x000000000016e6f6
- (void)_alignParticipantPermissions;	// IMP=0x000000000016e2e4
- (id)_rollShareAndZonePCSIfNeededForSharePCS:(id)arg1 zonePCSData:(id)arg2;	// IMP=0x000000000016dd8c
- (void)prepareForSave;	// IMP=0x000000000016d5ce
- (void)_prepareDependentPCSUpdateIfNeededForShareWithSharePCS:(id)arg1 error:(id)arg2;	// IMP=0x000000000016c997
- (id)_handleSharePCSData:(id)arg1 zonePCSData:(id)arg2;	// IMP=0x000000000016bfe7
- (id)_createNewSharePCSDataWithError:(id *)arg1;	// IMP=0x000000000016b8ea
- (void)_fetchRootRecordPublicSharingIdentityWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000016b545
- (void)_fetchSharePCSData;	// IMP=0x000000000016a64d
- (void)fetchSharePCSData;	// IMP=0x0000000000169d97
- (void)noteSideEffectRecordPendingDelete:(id)arg1;	// IMP=0x0000000000169c94
- (void)noteSideEffectRecordAbsent:(id)arg1;	// IMP=0x0000000000169c8e
- (void)noteSideEffectRecordPendingModify:(id)arg1;	// IMP=0x0000000000169b69
- (id)sideEffectRecordIDs;	// IMP=0x00000000001699ba
- (unsigned long long)serviceType;	// IMP=0x0000000000169925
- (_Bool)isCloudDocsContainer;	// IMP=0x000000000016988b
- (_Bool)isShare;	// IMP=0x0000000000169883
@property(readonly, nonatomic) CKRecordID *shareID;
@property(readonly, nonatomic) CKShare *share;

@end

