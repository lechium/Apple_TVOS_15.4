//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKitDaemon/CKDCancelling-Protocol.h>
#import <CloudKitDaemon/CKDMMCSItemReaderWriterDelegateProtocol-Protocol.h>

@class CKDMMCS, CKDMMCSItem, CKDMMCSItemGroup, CKDOperation, CKSignpost, NSMapTable, NSNumber;

@interface CKDMMCSItemGroupContext : NSObject <CKDCancelling, CKDMMCSItemReaderWriterDelegateProtocol>
{
    CKDOperation *_operation;	// 8 = 0x8
    id _operationInfo;	// 16 = 0x10
    NSNumber *_hasConformingOperation;	// 24 = 0x18
    CKSignpost *_signpost;	// 32 = 0x20
    CKDMMCS *_MMCS;	// 40 = 0x28
    CKDMMCSItemGroup *_itemGroup;	// 48 = 0x30
    CDUnknownBlockType _progressBlock;	// 56 = 0x38
    CDUnknownBlockType _commandBlock;	// 64 = 0x40
    CDUnknownBlockType _startBlock;	// 72 = 0x48
    CDUnknownBlockType _completionBlock;	// 80 = 0x50
    CKDMMCSItem *_MMCSPackageSectionItem;	// 88 = 0x58
    NSMapTable *_MMCSItemsByItemID;	// 96 = 0x60
    long long _mmcsOperationType;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x00000000001fc74f
@property(nonatomic) long long mmcsOperationType; // @synthesize mmcsOperationType=_mmcsOperationType;
@property(retain, nonatomic) NSMapTable *MMCSItemsByItemID; // @synthesize MMCSItemsByItemID=_MMCSItemsByItemID;
@property(retain, nonatomic) CKDMMCSItem *MMCSPackageSectionItem; // @synthesize MMCSPackageSectionItem=_MMCSPackageSectionItem;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy, nonatomic) CDUnknownBlockType startBlock; // @synthesize startBlock=_startBlock;
@property(copy, nonatomic) CDUnknownBlockType commandBlock; // @synthesize commandBlock=_commandBlock;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(retain, nonatomic) CKDMMCSItemGroup *itemGroup; // @synthesize itemGroup=_itemGroup;
@property(retain, nonatomic) CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
@property(readonly, nonatomic) CKSignpost *signpost; // @synthesize signpost=_signpost;
@property(retain, nonatomic) NSNumber *hasConformingOperation; // @synthesize hasConformingOperation=_hasConformingOperation;
@property(retain, nonatomic) id operationInfo; // @synthesize operationInfo=_operationInfo;
@property(nonatomic) __weak CKDOperation *operation; // @synthesize operation=_operation;
- (_Bool)didReadFromItemReaderWriter:(id)arg1 offset:(unsigned long long)arg2 bytes:(char *)arg3 length:(unsigned long long)arg4 bytesRead:(unsigned long long *)arg5 error:(id *)arg6;	// IMP=0x00000000001fc5fc
- (_Bool)willReadFromItemReaderWriter:(id)arg1 offset:(unsigned long long)arg2 bytes:(char *)arg3 length:(unsigned long long)arg4 bytesRead:(unsigned long long *)arg5 error:(id *)arg6;	// IMP=0x00000000001fc5f4
- (id)didGetFileMetadataItemReaderWriter:(id)arg1 fileMetadata:(id)arg2 error:(id)arg3;	// IMP=0x00000000001fc5e7
- (_Bool)willGetFileMetadataItemReaderWriter:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001fc5df
- (void)didCloseItemReaderWriter:(id)arg1 result:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000001fc5d9
- (_Bool)willCloseItemReaderWriter:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001fc5d1
- (void)didOpenItemReaderWriter:(id)arg1 result:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000001fc512
- (_Bool)willOpenItemReaderWriter:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001fc46e
- (id)getCKDMMCSItemReaderByPathForMMCSItem:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001fc1e4
- (struct MMCSItemReaderWriter *)getMMCSItemReaderForItemID:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000001f9f83
- (id)conformingOperation;	// IMP=0x00000000001f9f3b
- (void)didGetMetricsForRequest:(id)arg1;	// IMP=0x00000000001f9ec9
- (void)didPutSectionWithSignature:(id)arg1 results:(id)arg2;	// IMP=0x00000000001f9b26
- (void)didPutItemID:(unsigned long long)arg1 signature:(id)arg2 results:(id)arg3;	// IMP=0x00000000001f95b9
- (void)didGetItemID:(unsigned long long)arg1 signature:(id)arg2 path:(id)arg3 error:(id)arg4 results:(id)arg5;	// IMP=0x00000000001f83f3
- (void)handleCommand:(id)arg1 forItem:(id)arg2;	// IMP=0x00000000001f834c
- (void)updateProgressForItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 error:(id)arg4;	// IMP=0x00000000001f809b
- (void)updateProgressForPackageSectionState:(int)arg1 progress:(double)arg2 results:(id)arg3;	// IMP=0x00000000001f7da5
- (void)updateProgressForItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 results:(id)arg4;	// IMP=0x00000000001f790d
- (void)didCompleteRequestWithError:(id)arg1;	// IMP=0x00000000001f703a
- (void)_cleanupMMCSItems;	// IMP=0x00000000001f69bb
- (void)_cleanupMMCSRegisterItems;	// IMP=0x00000000001f6864
- (_Bool)_setupMMCSItemsWithError:(id *)arg1;	// IMP=0x00000000001f65a0
- (_Bool)_setupGetMMCSItemsWithError:(id *)arg1;	// IMP=0x00000000001f5311
- (_Bool)_setupPutContentMetadataMMCSItemsWithError:(id *)arg1;	// IMP=0x00000000001f5066
- (_Bool)_setupPutMMCSItemsWithError:(id *)arg1;	// IMP=0x00000000001f3f5b
- (_Bool)_setupRegisterMMCSItemsWithError:(id *)arg1;	// IMP=0x00000000001f25f5
- (id)findTrackedMMCSItemByItemID:(unsigned long long)arg1;	// IMP=0x00000000001f251c
- (void)_stopTrackingMMCSItems:(id)arg1;	// IMP=0x00000000001f2229
- (void)_startTrackingMMCSItems:(id)arg1;	// IMP=0x00000000001f1f14
- (_Bool)shouldFetchAssetContentWithReaderWriter;	// IMP=0x00000000001f1ea9
- (_Bool)shouldFetchAssetContentUsingAssetDownloadStagingManager;	// IMP=0x00000000001f1e3c
- (_Bool)shouldFetchAssetContentInMemory;	// IMP=0x00000000001f1dcf
- (void)start;	// IMP=0x00000000001f1ad8
- (void)cancel;	// IMP=0x00000000001f1a69
- (id)initWithMMCS:(id)arg1 itemGroup:(id)arg2 operation:(id)arg3 progress:(CDUnknownBlockType)arg4 command:(CDUnknownBlockType)arg5 start:(CDUnknownBlockType)arg6 groupCompletion:(CDUnknownBlockType)arg7;	// IMP=0x00000000001f1880

@end

