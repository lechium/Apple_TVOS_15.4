//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <QuartzCore/CALayer.h>

@class CADisplay, GEOMapRegion, GEOPOICategoryFilter, MDARController, NSArray, NSMutableArray, NSSet, NSString, VKARWalkingCameraController, VKClassicGlobeCanvas, VKDaVinciCameraController, VKLabelMarker, VKMapCameraController, VKMapCanvas, VKNavCameraController, VKNavContext, VKNotificationObserver, VKPolylineOverlay, VKPuckAnimator, VKRouteContext, VKSceneConfiguration, VKStateCaptureHandler, VKTimedAnimation;
@protocol VKMapViewCameraDelegate, VKMapViewDelegate;

@interface VKMapView : CALayer
{
    struct optional<VKMapType> _mapType;	// 8 = 0x8
    VKMapCanvas *_canvas;	// 16 = 0x10
    VKClassicGlobeCanvas *_globe;	// 24 = 0x18
    struct mutex _mapDelegateMutex;	// 32 = 0x20
    id <VKMapViewDelegate> _mapDelegate;	// 96 = 0x60
    _Bool _loaderOpen;	// 104 = 0x68
    NSString *_tileLoaderClientID;	// 112 = 0x70
    unsigned char _emphasis;	// 120 = 0x78
    VKTimedAnimation *_edgeInsetAnimation;	// 128 = 0x80
    struct VKEdgeInsets _animatingToEdgeInsets;	// 136 = 0x88
    _Bool _isChangingMapType;	// 152 = 0x98
    double _verticalYaw;	// 160 = 0xa0
    unsigned char _applicationState;	// 168 = 0xa8
    unsigned char _displayedSearchResultsType;	// 169 = 0xa9
    unsigned char _usage;	// 170 = 0xaa
    unsigned char _mapkitUsage;	// 171 = 0xab
    VKNotificationObserver *_notificationObserver;	// 176 = 0xb0
    VKPuckAnimator *_userLocationAnimator;	// 184 = 0xb8
    long long _navigationDisplayRate;	// 192 = 0xc0
    _Bool _isInBackground;	// 200 = 0xc8
    VKMapCameraController *_mapCameraController;	// 208 = 0xd0
    VKDaVinciCameraController *_davinciMapCameraController;	// 216 = 0xd8
    VKNavCameraController *_navigationCameraController;	// 224 = 0xe0
    struct _retain_ptr<VKARWalkingCameraController *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        VKARWalkingCameraController *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _arWalkingCameraController;	// 232 = 0xe8
    VKNavContext *_navContext;	// 256 = 0x100
    Coordinate3D_bc242218 _lastAnimatedUserCoordinate;	// 264 = 0x108
    Unit_3d259e8a _lastAnimatedCourse;	// 288 = 0x120
    struct unique_ptr<md::MapEngine, std::default_delete<md::MapEngine>> _mapEngine;	// 296 = 0x128
    _Bool _didFinishSnapshotting;	// 304 = 0x130
    int _flyoverMode;	// 308 = 0x134
    MDARController *_arController;	// 312 = 0x138
    GEOPOICategoryFilter *_pointsOfInterestFilter;	// 320 = 0x140
    _Bool _compressedBuildingsEnabled;	// 328 = 0x148
    struct _retain_ptr<VKStateCaptureHandler *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        VKStateCaptureHandler *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _stateCaptureHandler;	// 336 = 0x150
    _retain_ptr_c0a21da9 _vkCamera;	// 360 = 0x168
    VKRouteContext *_routeContext;	// 384 = 0x180
    struct _retain_ptr<NSSet<NSNumber *>*, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        NSSet *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _selectedBuildingFeatureIds;	// 392 = 0x188
    struct _retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> _manifestTileGroupObserverProxy;	// 416 = 0x1a0
    long long _lastTerrainMode;	// 440 = 0x1b8
    _Bool _lastEnableGlobe;	// 448 = 0x1c0
    _Bool _lastEnableRoundedBuildings;	// 449 = 0x1c1
    _Bool _lastEnableColorizedBuildings;	// 450 = 0x1c2
    _Bool _lastEnableBuildingHeights;	// 451 = 0x1c3
    _Bool _lastEnableAdvancedLighting;	// 452 = 0x1c4
    _Bool _lastEnableAdvancedWater;	// 453 = 0x1c5
    NSMutableArray *_mapsFeatureListeners;	// 456 = 0x1c8
    CDStruct_80aa614a _mapDisplayStyle;	// 464 = 0x1d0
    _Bool _displayStyleOverrideEnabled;	// 469 = 0x1d5
    unsigned char _mapKitUsage;	// 470 = 0x1d6
}

+ (_Bool)_globeIsEnabled;	// IMP=0x00000000000b0ca7
+ (_Bool)_globeIsAvailable;	// IMP=0x00000000000b0c9d
+ (_Bool)_elevatedGroundIsEnabled;	// IMP=0x00000000000b0b82
+ (_Bool)_elevatedGroundIsAvailable;	// IMP=0x00000000000b0b78
- (id).cxx_construct;	// IMP=0x00000000000c0762
- (void).cxx_destruct;	// IMP=0x00000000000c0629
@property(nonatomic) unsigned char mapKitUsage; // @synthesize mapKitUsage=_mapKitUsage;
@property(nonatomic) _Bool compressedBuildingsEnabled; // @synthesize compressedBuildingsEnabled=_compressedBuildingsEnabled;
@property(retain, nonatomic) GEOPOICategoryFilter *pointsOfInterestFilter; // @synthesize pointsOfInterestFilter=_pointsOfInterestFilter;
@property(readonly, nonatomic) VKPuckAnimator *userLocationAnimator; // @synthesize userLocationAnimator=_userLocationAnimator;
@property(nonatomic) unsigned char displayedSearchResultsType; // @synthesize displayedSearchResultsType=_displayedSearchResultsType;
@property(nonatomic) unsigned char applicationState; // @synthesize applicationState=_applicationState;
@property(nonatomic) id <VKMapViewDelegate> mapDelegate; // @synthesize mapDelegate=_mapDelegate;
- (id)resolveMapCameraController;	// IMP=0x00000000000c0553
- (id)navigationPuck;	// IMP=0x00000000000c0536
@property(readonly, nonatomic) VKSceneConfiguration *sceneConfiguration;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(const void *)arg2;	// IMP=0x00000000000c04ed
- (void)puckAnimatorDidStop:(id)arg1;	// IMP=0x00000000000c04b7
- (void)puckAnimator:(id)arg1 getElevation:(double *)arg2 withCoordinate:(const void *)arg3;	// IMP=0x00000000000c0468
- (void)puckAnimator:(id)arg1 updatedPosition:(const void *)arg2 course:(const void *)arg3;	// IMP=0x00000000000c02f8
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;	// IMP=0x00000000000c0253
- (void)map:(id)arg1 didUpdateVerticalYawTo:(double)arg2;	// IMP=0x00000000000c01f3
- (void)removeExternalAnchor:(id)arg1;	// IMP=0x00000000000c01ab
- (void)addExternalAnchor:(id)arg1;	// IMP=0x00000000000c00ed
- (void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;	// IMP=0x00000000000bffeb
- (void)setUseSmallCache:(_Bool)arg1;	// IMP=0x00000000000bffa4
- (void)forceResolveCameraController;	// IMP=0x00000000000bff6b
- (id)pptTileStatisticsForMapType:(int)arg1 latitude:(double)arg2 longitude:(double)arg3 zoom:(float)arg4 width:(double)arg5 height:(double)arg6 rect:(CDStruct_02837cd9)arg7;	// IMP=0x00000000000bff63
- (void)setRouteLineSplitAnnotation:(id)arg1;	// IMP=0x00000000000bff2e
@property(nonatomic) _Bool rendersInBackground;
- (void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4;	// IMP=0x00000000000bfe14
- (_Bool)gridDisabled;	// IMP=0x00000000000bfdcf
- (_Bool)rastersDisabled;	// IMP=0x00000000000bfd8a
- (_Bool)buildingFootprintsDisabled;	// IMP=0x00000000000bfd45
@property(nonatomic) _Bool renderInverseFills;
@property(nonatomic) _Bool renderOverlayPolygons;
- (_Bool)polygonsDisabled;	// IMP=0x00000000000bfc76
- (_Bool)labelsDisabled;	// IMP=0x00000000000bfc31
- (_Bool)roadsDisabled;	// IMP=0x00000000000bfbec
@property(readonly, nonatomic, getter=getSceneState) unsigned long long sceneState;
@property(readonly, nonatomic, getter=isFullyDrawn) _Bool fullyDrawn;
- (void)setDisableGrid:(_Bool)arg1;	// IMP=0x00000000000bfb44
- (void)setDisableRasters:(_Bool)arg1;	// IMP=0x00000000000bfb04
- (void)setDisableBuildingFootprints:(_Bool)arg1;	// IMP=0x00000000000bfac4
- (void)setDisablePolygons:(_Bool)arg1;	// IMP=0x00000000000bfa04
- (void)setDisableLabels:(_Bool)arg1;	// IMP=0x00000000000bf9c4
- (void)setDisableRoads:(_Bool)arg1;	// IMP=0x00000000000bf984
- (_Bool)tapAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf909
- (void)stopSnappingAnimations;	// IMP=0x00000000000bf8ac
- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;	// IMP=0x00000000000bf86a
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf7f1
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 degrees:(double)arg2;	// IMP=0x00000000000bf76e
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;	// IMP=0x00000000000bf6eb
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf672
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf5f9
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;	// IMP=0x00000000000bf576
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf4fd
- (void)stopPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf484
- (void)willStopPanningAtPoint:(struct CGPoint)arg1 withVelocity:(struct CGPoint)arg2;	// IMP=0x00000000000bf3ff
- (void)updatePanWithTranslation:(struct CGPoint)arg1;	// IMP=0x00000000000bf386
- (void)startPanningAtPoint:(struct CGPoint)arg1 panAtStartPoint:(_Bool)arg2;	// IMP=0x00000000000bf300
- (void)startPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf285
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf20c
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;	// IMP=0x00000000000bf17f
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf106
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bf062
- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;	// IMP=0x00000000000befe7
- (_Bool)wantsTimerTick;	// IMP=0x00000000000befbc
- (void)didPresent;	// IMP=0x00000000000bef4e
- (void)willLayoutWithTimestamp:(double)arg1 withContext:(void *)arg2;	// IMP=0x00000000000bef0b
- (void)setRegionRestriction:(id)arg1 duration:(double)arg2 timingFunction:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bee5e
- (void)setCenterCoordinateDistanceRange:(CDStruct_c3b9c2ee)arg1 duration:(double)arg2 timingFunction:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bedd7
- (void)mapController:(id)arg1 requestsDisplayRate:(long long)arg2;	// IMP=0x00000000000becd9
- (void)_updateMapDisplayStyle;	// IMP=0x00000000000bec30
- (void)mapLabelsDidLayout:(id)arg1;	// IMP=0x00000000000beb6e
- (void)map:(id)arg1 labelMarkerDidChangeState:(const void *)arg2;	// IMP=0x00000000000be932
- (void)map:(id)arg1 selectedLabelMarkerWillDisappear:(const void *)arg2;	// IMP=0x00000000000be6f3
- (void)mapDidFinishChangingMapDisplayStyle:(CDStruct_80aa614a)arg1;	// IMP=0x00000000000be638
- (void)map:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;	// IMP=0x00000000000be578
- (void)labelMarkerDidChangeState:(const void *)arg1;	// IMP=0x00000000000be35f
- (void)selectedLabelMarkerWillDisappear:(const void *)arg1;	// IMP=0x00000000000be15e
- (void)labelManagerDidLayout;	// IMP=0x00000000000be0bd
- (void)didUpdateSceneStatus:(unsigned char)arg1;	// IMP=0x00000000000bdeac
- (void)willBecomeFullyDrawn;	// IMP=0x00000000000bdea6
- (void)mapDidReloadStylesheet:(id)arg1;	// IMP=0x00000000000bde05
- (void)didFinishLoadingDataWithError:(id)arg1;	// IMP=0x00000000000bdd59
- (void)didFinishLoadingData;	// IMP=0x00000000000bdcb8
- (void)didStartLoadingData;	// IMP=0x00000000000bdc17
- (void)injectDebugARUserRouteCoordinate:(struct PolylineCoordinate)arg1;	// IMP=0x00000000000bdc11
- (void)injectDebugARFeatures:(id)arg1;	// IMP=0x00000000000bdc0b
- (void)arWalkingFeatureSetStateDidUpdate:(id)arg1;	// IMP=0x00000000000bdabe
- (void)activeARWalkingFeatureDidUpdate:(id)arg1;	// IMP=0x00000000000bd971
- (void)_postDelegateCallbackBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000bd935
- (id)_mapDelegateQueue;	// IMP=0x00000000000bd8de
@property(retain, nonatomic) VKPolylineOverlay *focusedLabelsPolyline;
- (void)setNavContext:(id)arg1;	// IMP=0x00000000000bd768
- (void)setRouteContext:(id)arg1;	// IMP=0x00000000000bd575
- (void)setCurrentLocationText:(id)arg1;	// IMP=0x00000000000bd481
- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;	// IMP=0x00000000000bd359
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;	// IMP=0x00000000000bd2bc
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;	// IMP=0x00000000000bd21f
- (void)removeOverlay:(id)arg1;	// IMP=0x00000000000bd187
- (void)addOverlay:(id)arg1;	// IMP=0x00000000000bd0ef
- (void)removePersistentRouteOverlay:(id)arg1;	// IMP=0x00000000000bcfc0
- (void)addPersistentRouteOverlay:(id)arg1;	// IMP=0x00000000000bce22
- (void)removeRouteOverlay:(id)arg1;	// IMP=0x00000000000bccf6
- (void)addRouteOverlay:(id)arg1;	// IMP=0x00000000000bcb0f
@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) _Bool animatingToTrackAnnotation;
- (void)stopTrackingAnnotation;	// IMP=0x00000000000bca5b
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(_Bool)arg2 animated:(_Bool)arg3 duration:(double)arg4 timingFunction:(CDUnknownBlockType)arg5;	// IMP=0x00000000000bc9bb
@property(nonatomic) long long annotationTrackingHeadingAnimationDisplayRate;
@property(nonatomic) CDStruct_211b8904 annotationTrackingBehavior;
@property(nonatomic) double trackingZoomScale;
@property(readonly, nonatomic) NSArray *labelMarkers;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (_Bool)shouldHideOffscreenSelectedAnnotation;	// IMP=0x00000000000bc58e
- (CDUnknownBlockType)annotationCoordinateTest;	// IMP=0x00000000000bc563
- (CDUnknownBlockType)annotationRectTest;	// IMP=0x00000000000bc538
- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(_Bool)arg3 duration:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000bc46e
@property(readonly, nonatomic) _Bool canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) _Bool showingFlyover;
@property(readonly, nonatomic) int flyoverMode;
- (void)setFlyoverMode:(int)arg1;	// IMP=0x00000000000bbecd
@property(readonly, nonatomic, getter=maxPitch) double maxPitch;
@property(readonly, nonatomic, getter=minPitch) double minPitch;
@property(readonly, nonatomic, getter=isFullyPitched) _Bool fullyPitched;
@property(readonly, nonatomic, getter=isPitched) _Bool pitched;
- (_Bool)canEnter3DModeFlyoverForTileSize:(long long)arg1;	// IMP=0x00000000000bbdd3
@property(readonly, nonatomic) _Bool canEnter3DMode;
@property(readonly, nonatomic) _Bool supportsGPUFrameCaptureToDestination;
- (void)exit3DMode;	// IMP=0x00000000000bbc63
- (void)enter3DMode;	// IMP=0x00000000000bbb6e
- (void)setSelectedBuildingFeatureIds:(id)arg1;	// IMP=0x00000000000bb86c
- (void)deselectVenuePoiFeatureId;	// IMP=0x00000000000bb79d
- (void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1;	// IMP=0x00000000000bb6c0
- (void)deselectFeatureId;	// IMP=0x00000000000bb60c
- (void)setSelectedFeatureId:(unsigned long long)arg1;	// IMP=0x00000000000bb53f
- (void)deselectTransitLineMarker;	// IMP=0x00000000000bb468
- (void)selectTransitLineMarker:(id)arg1;	// IMP=0x00000000000bb37e
- (id)selectedTransitLineIDs;	// IMP=0x00000000000bb2a8
- (id)transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bb11f
- (id)transitLineMarkersInCurrentViewport;	// IMP=0x00000000000bb053
- (void)setDisableTransitLines:(_Bool)arg1;	// IMP=0x00000000000baf59
- (_Bool)transitLinesDisabled;	// IMP=0x00000000000baf23
- (void)clearPreviouslySelectedLabelMarker;	// IMP=0x00000000000baf04
- (void)deselectLabelMarker;	// IMP=0x00000000000baecd
- (void)selectLabelMarker:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000bae58
- (void)selectLabelMarker:(id)arg1;	// IMP=0x00000000000bae44
- (id)rapMarkerAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bae00
- (id)labelMarkerForCustomFeatureAnnotation:(id)arg1;	// IMP=0x00000000000badb0
- (id)labelMarkerForCustomFeatureAnnotation:(id)arg1 dataSource:(id)arg2;	// IMP=0x00000000000bac5f
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;	// IMP=0x00000000000bab45
- (void)setLabelExclusionRegions:(id)arg1;	// IMP=0x00000000000bab09
- (void)removeCustomFeatureDataSource:(id)arg1;	// IMP=0x00000000000baae2
- (void)addCustomFeatureDataSource:(id)arg1;	// IMP=0x00000000000baabb
- (void)setExternalTrafficFeatures:(id)arg1 areRouteTrafficFeaturesActive:(_Bool)arg2;	// IMP=0x00000000000ba9a2
- (void)setHiddenTrafficIncidentFeatures:(id)arg1;	// IMP=0x00000000000ba8b4
@property(nonatomic) _Bool trackingCameraShouldHandleGestures;
- (void)transitionToTracking:(_Bool)arg1 mapMode:(long long)arg2 startLocation:(CDStruct_c3b9c2ee)arg3 startCourse:(double)arg4 pounceCompletionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000ba5fe
- (void)navigationCameraReturnToPuck;	// IMP=0x00000000000ba542
- (void)pauseTracking;	// IMP=0x00000000000ba486
- (void)stopTracking;	// IMP=0x00000000000ba380
- (id)tileStatistics;	// IMP=0x00000000000b8889
- (void)resetTileStatistics;	// IMP=0x00000000000b8734
- (void)disableTileStatistics;	// IMP=0x00000000000b870b
- (void)enableTileStatistics;	// IMP=0x00000000000b86ad
- (id)testStatistics;	// IMP=0x00000000000b7ed8
- (void)resetTestStatistics;	// IMP=0x00000000000b7e95
- (void)disableTestStatistics;	// IMP=0x00000000000b7e3a
- (void)enableTestStatistics;	// IMP=0x00000000000b7de0
- (void)resumeFlyoverTourAnimation;	// IMP=0x00000000000b7da1
- (void)pauseFlyoverTourAnimation;	// IMP=0x00000000000b7d62
- (void)stopFlyoverAnimation;	// IMP=0x00000000000b7d03
- (void)startFlyoverTourAnimation:(unsigned long long)arg1 animateToStart:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000b7bd3
- (void)moveToFlyoverTourStartPosition:(id)arg1 duration:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000b7aef
- (void)startFlyoverAnimation:(id)arg1 animateToStart:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000b79cb
- (void)_notifyDelegateFlyoverTourLabelChanged:(id)arg1;	// IMP=0x00000000000b791f
- (void)_runFlyoverTourStateChange:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000b7718
- (void)prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000b7629
@property(readonly, nonatomic) _Bool canShowFlyoverAnimation;
- (void)setCameraFramingInsets:(struct VKEdgeInsets)arg1;	// IMP=0x00000000000b74a8
@property(nonatomic) struct VKEdgeInsets labelEdgeInsets;
@property(nonatomic) struct VKEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct VKEdgeInsets edgeInsets;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000b6a66
- (double)distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 fromLayer:(id)arg3 withPrecision:(long long)arg4;	// IMP=0x00000000000b688a
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;	// IMP=0x00000000000b6829
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;	// IMP=0x00000000000b67c8
- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;	// IMP=0x00000000000b6767
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;	// IMP=0x00000000000b66f9
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;	// IMP=0x00000000000b668b
- (double)durationToAnimateToMapRegion:(id)arg1;	// IMP=0x00000000000b6628
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000000b649e
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000000b6484
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3;	// IMP=0x00000000000b633a
- (void)setYaw:(double)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b61fe
- (void)runAnimation:(id)arg1;	// IMP=0x00000000000b61d2
- (void)renderInContext:(struct CGContext *)arg1;	// IMP=0x00000000000b6127
- (void)setContentsScale:(double)arg1;	// IMP=0x00000000000b5fcf
- (id)activeLogics;	// IMP=0x00000000000b5eb3
- (void)_configureDefaultSettings;	// IMP=0x00000000000b5676
- (void)dealloc;	// IMP=0x00000000000b52f4
- (id)initShouldRasterize:(_Bool)arg1 inBackground:(_Bool)arg2 contentScale:(double)arg3 auditToken:(id)arg4 mapViewPurpose:(long long)arg5 allowsAntialiasing:(_Bool)arg6;	// IMP=0x00000000000b457c
- (id)initShouldRasterize:(_Bool)arg1 inBackground:(_Bool)arg2 contentScale:(double)arg3 auditToken:(id)arg4 mapViewPurpose:(long long)arg5;	// IMP=0x00000000000b455a
- (void)activateInternalSettings;	// IMP=0x00000000000b4549
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000000000b42e2
@property(readonly, nonatomic) CDStruct_071ac149 centerCoordinate;
- (id)consoleString:(_Bool)arg1;	// IMP=0x00000000000b425f
@property(readonly, nonatomic) GEOMapRegion *mapRegionIgnoringEdgeInsets;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic) double altitude;
@property(readonly, nonatomic) double pitch;
@property(readonly, nonatomic) double presentationYaw;
@property(readonly, nonatomic) double yaw;
- (struct CGRect)mapRegionBounds;	// IMP=0x00000000000b40e2
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000000b3c80
- (void)_applyMapDisplayStyle:(CDStruct_80aa614a)arg1 animated:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000000b3bd0
- (void)setMapDisplayStyle:(CDStruct_80aa614a)arg1 animated:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000000b3872
- (void)setMapDisplayStyle:(CDStruct_80aa614a)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b3858
@property(nonatomic) CDStruct_80aa614a mapDisplayStyle;
- (void)_updateBackgroundColor;	// IMP=0x00000000000b3717
- (void)setMapType:(int)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b2832
@property(nonatomic) int mapType;
- (_Bool)supportsNightMode;	// IMP=0x00000000000b272d
- (_Bool)supportsMapType:(int)arg1;	// IMP=0x00000000000b26d2
- (void)_createGlobe;	// IMP=0x00000000000b2513
- (void)setCanonicalSkyHeight:(double)arg1;	// IMP=0x00000000000b2437
- (void)setDesiredMapMode:(long long)arg1;	// IMP=0x00000000000b21a5
- (void)setClientLocalizedStrings:(id)arg1;	// IMP=0x00000000000b2168
- (void)venueCreated:(const void *)arg1 building:(const void *)arg2;	// IMP=0x00000000000b20a0
- (void)nearestVenueDidChange:(const void *)arg1 building:(const void *)arg2;	// IMP=0x00000000000b1fbd
- (void)_setFloorSwitcherZoomPadding:(float)arg1;	// IMP=0x00000000000b1f70
- (float)zoomToRevealVenueBuildingFloorplan:(id)arg1;	// IMP=0x00000000000b1f47
- (float)zoomToRevealVenueFloorplan:(id)arg1;	// IMP=0x00000000000b1f1e
- (id)clearVenueBuildingFloorSelections;	// IMP=0x00000000000b1dc2
- (void)setDisplayedFloorOrdinal:(short)arg1 forVenueBuilding:(id)arg2;	// IMP=0x00000000000b1d49
- (short)displayedFloorOrdinalForVenueBuilding:(id)arg1;	// IMP=0x00000000000b1cc3
- (short)defaultFloorOrdinalForVenueBuilding:(id)arg1;	// IMP=0x00000000000b1c74
- (_Bool)displayedFloorIsDefaultForVenueBuilding:(id)arg1;	// IMP=0x00000000000b1bfa
- (id)venueWithID:(unsigned long long)arg1;	// IMP=0x00000000000b1b4d
- (id)venueAtLocation:(CDStruct_c3b9c2ee)arg1 withMarginForError:(_Bool)arg2 includeNonRevealedVenues:(_Bool)arg3;	// IMP=0x00000000000b1a08
- (id)venueAtLocation:(CDStruct_c3b9c2ee)arg1 withMarginForError:(_Bool)arg2;	// IMP=0x00000000000b19f4
- (id)venueAtLocation:(CDStruct_c3b9c2ee)arg1;	// IMP=0x00000000000b19db
- (id)venueBuildingWithFocus;	// IMP=0x00000000000b194e
- (id)venueWithFocus;	// IMP=0x00000000000b18c1
- (_Bool)isDimmingBaseMap;	// IMP=0x00000000000b1889
- (void)setDimmingBaseMap:(_Bool)arg1 animated:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000000b1422
- (void)setDimmingBaseMap:(_Bool)arg1;	// IMP=0x00000000000b1403
- (float)worldSpaceWidthOfView;	// IMP=0x00000000000b13ae
- (void)tileGroupDidChange;	// IMP=0x00000000000b136d
- (void)_reconfigurePermissions;	// IMP=0x00000000000b12b1
@property(readonly, nonatomic) _Bool isShowingCuratedElevatedGround;
@property(nonatomic) _Bool enableAdvancedWater;
- (_Bool)_advancedWaterAllowed;	// IMP=0x00000000000b11a7
@property(nonatomic) _Bool enableAdvancedLighting;
- (_Bool)_advancedLightingAllowed;	// IMP=0x00000000000b10fb
@property(nonatomic) _Bool enableBuildingHeights;
- (_Bool)_buildingHeightsAllowed;	// IMP=0x00000000000b1054
@property(nonatomic) _Bool enableColorizedBuildings;
- (_Bool)_colorizedBuildingsAllowed;	// IMP=0x00000000000b0fbd
@property(nonatomic) _Bool enableRoundedBuildings;
- (_Bool)_roundedBuildingsAllowed;	// IMP=0x00000000000b0f16
@property(nonatomic) _Bool enableGlobe;
- (_Bool)_daVinciDataAvailable;	// IMP=0x00000000000b0ce9
- (void)setModernMapEnabled:(_Bool)arg1;	// IMP=0x00000000000b0cbb
- (_Bool)_modernMapAllowed;	// IMP=0x00000000000b0cb1
@property(nonatomic) long long terrainMode;
@property(nonatomic) _Bool showsVenues;
@property(nonatomic) _Bool showsBuildings;
@property(nonatomic) _Bool showsPointsOfInterest;
@property(nonatomic) _Bool showsPointLabels;
@property(nonatomic) _Bool showsRoadShields;
@property(nonatomic) _Bool showsRoadLabels;
@property(nonatomic) long long shieldIdiom;
@property(nonatomic) long long navigationShieldSize;
@property(nonatomic) long long shieldSize;
- (double)zoomLevelAdjustmentForTileSize:(long long)arg1;	// IMP=0x00000000000affaa
- (double)currentZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000aff6e
- (double)maximumZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000aff32
- (double)topDownMinimumZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000afef6
- (double)minimumZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000afeba
- (_Bool)canZoomOutForTileSize:(long long)arg1;	// IMP=0x00000000000afe7e
- (_Bool)canZoomInForTileSize:(long long)arg1;	// IMP=0x00000000000afe42
@property(nonatomic) _Bool iconsShouldAlignToPixels;
@property(nonatomic, getter=isGesturing) _Bool gesturing;
- (void)disableMapDisplayStyleDebugOverride;	// IMP=0x00000000000af93e
- (void)enableMapDisplayStyleDebugOverride:(CDStruct_80aa614a)arg1;	// IMP=0x00000000000af7f0
- (id)detailedDescriptionDictionaryRepresentation;	// IMP=0x00000000000af7d7
- (id)detailedDescription;	// IMP=0x00000000000af769
@property(nonatomic) _Bool shouldLoadMapMargin;
@property(nonatomic) _Bool shouldLoadFallbackTiles;
- (id)debugLabelString:(_Bool)arg1;	// IMP=0x00000000000af4d8
- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000af361
@property(readonly, nonatomic) _Bool enableDebugLabelHighlighting;
@property(retain, nonatomic) CADisplay *hostDisplay;
- (_Bool)isEffectivelyHidden;	// IMP=0x00000000000af165
- (void)didReceiveLocalChanged;	// IMP=0x00000000000af150
- (void)didReceiveFlushTileCaches;	// IMP=0x00000000000af13b
- (void)didReceiveMemoryWarning;	// IMP=0x00000000000af0aa
- (void)setHidden:(_Bool)arg1;	// IMP=0x00000000000aee6e
- (void)clearScene;	// IMP=0x00000000000aee37
- (void)setNeedsLayout;	// IMP=0x00000000000aee22
@property(nonatomic) _Bool debugLayoutContinuously;
@property(nonatomic) _Bool isPitchable;
@property(nonatomic) _Bool staysCenteredDuringRotation;
@property(nonatomic) _Bool staysCenteredDuringPinch;
@property(nonatomic) long long labelScaleFactor;
@property(nonatomic) _Bool localizeLabels;
- (_Bool)canRotate;	// IMP=0x00000000000ae7b7
- (void)flushTileLoads;	// IMP=0x00000000000ae70e
- (void)didFinishSnapshotting;	// IMP=0x00000000000ae628
- (void)didEnterBackground;	// IMP=0x00000000000ae423
- (void)willEnterForeground;	// IMP=0x00000000000ae29a
- (_Bool)_createDisplayLayer;	// IMP=0x00000000000ae05d
@property(nonatomic) long long navigationDisplayRate;
@property(nonatomic) long long displayRate;
@property(nonatomic) _Bool trafficIncidentsEnabled;
- (void)_updateBuildingCompressionSetting;	// IMP=0x00000000000adc4b
@property(nonatomic) _Bool trafficEnabled;
@property(nonatomic) long long applicationUILayout;
- (void)setEmphasis:(unsigned char)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000ad796
- (unsigned char)emphasis;	// IMP=0x00000000000ad785
@property(nonatomic) CDStruct_b31ca263 vehicleState;
@property(nonatomic) long long targetDisplay;
@property(nonatomic) float styleZOffsetScale;
- (void)reloadStylesheet;	// IMP=0x00000000000ad3e2
- (_Bool)stylesheetIsDevResource;	// IMP=0x00000000000ad349
- (id)attributionsForCurrentRegion;	// IMP=0x00000000000ad31e
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)forceCameraUpdateForFrameResize;	// IMP=0x00000000000ad2c8
- (void)forceLayout;	// IMP=0x00000000000ad1e5
- (void)forceFrame;	// IMP=0x00000000000ad1d3
- (void)_forceLayoutForSuspensionSnapShot;	// IMP=0x00000000000ad110
- (id)secondaryCanvas;	// IMP=0x00000000000ad0d5
- (void)_closeLoaderConnection:(_Bool)arg1;	// IMP=0x00000000000ad04b
- (void)closeLoaderConnection;	// IMP=0x00000000000ad037
- (void)openLoaderConnection;	// IMP=0x00000000000acfc3
@property(nonatomic, getter=isLabelMarkerSelectionEnabled) _Bool labelMarkerSelectionEnabled;
- (void *)_labelSettings;	// IMP=0x00000000000ace56
@property(nonatomic) id <VKMapViewCameraDelegate> cameraDelegate;
- (void)setApplicationState:(unsigned char)arg1 displayedSearchResultsType:(unsigned char)arg2;	// IMP=0x00000000000ac9d9
- (float)currentZoomLevel;	// IMP=0x000000000007f223
- (unordered_map_49c2a10b)clientStyleAttributes;	// IMP=0x000000000007eb7d
- (id)markerAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000007eb36
- (id)buildingMarkerAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000007e91a
- (void)populateDebugNode:(void *)arg1 withOptions:(const void *)arg2;	// IMP=0x00000000000c0aa2
- (long long)currentMapMode;	// IMP=0x00000000000c0a5f
- (void)performStylesheetDidChange;	// IMP=0x00000000000c08fc
@property(readonly, nonatomic) const void *mapEngine;
@property(readonly, nonatomic) VKMapCanvas *mapCanvas;
- (void)debugHighlightFeatureMarker:(const void *)arg1;	// IMP=0x00000000000c0889
- (id)currentCanvas;	// IMP=0x00000000000c082c
- (id)iconForStyleAttributes:(id)arg1 contentScale:(double)arg2 size:(long long)arg3 transparent:(_Bool)arg4;	// IMP=0x00000000000c19cc
- (id)roadLabelTilesInScene;	// IMP=0x000000000064dff5
- (long long)getCurrentSetARInterfaceOrientation;	// IMP=0x00000000006daa21
- (void)setARInterfaceOrientation:(long long)arg1;	// IMP=0x00000000006da8b2
- (void)arController:(id)arg1 didChangeTrackingState:(unsigned long long)arg2 reason:(unsigned long long)arg3;	// IMP=0x00000000006da84a
- (void)arControllerSessionInterruptionEnded:(id)arg1;	// IMP=0x00000000006da7fa
- (void)arController:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2;	// IMP=0x00000000006da7a7
- (void)arController:(id)arg1 didEncounterError:(id)arg2;	// IMP=0x00000000006da754
- (void)map:(id)arg1 didEnterARMode:(_Bool)arg2;	// IMP=0x00000000006da66f
- (void)_postDelegateCallbackBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000006da633
- (id)_mapDelegateQueue;	// IMP=0x00000000006da5dc
- (void)exitARMode;	// IMP=0x00000000006da5d6
- (void)enterARModeAtCoordinate:(CDStruct_c3b9c2ee)arg1;	// IMP=0x00000000006da5d0

@end

