//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DEDSharingInbound, NSMutableDictionary, NSMutableSet, SFDeviceDiscovery, SFService;
@protocol DEDSharingInboundDelegate, OS_dispatch_queue, OS_dispatch_semaphore;

@interface DEDSharingConnection : NSObject
{
    _Bool _listenForClients;	// 8 = 0x8
    _Bool _started;	// 9 = 0x9
    DEDSharingInbound *_sharingInbound;	// 16 = 0x10
    id <DEDSharingInboundDelegate> _controller;	// 24 = 0x18
    NSMutableDictionary *_pongingDevices;	// 32 = 0x20
    NSMutableDictionary *_deviceSessions;	// 40 = 0x28
    NSMutableDictionary *_discoveredDevices;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_run_queue;	// 56 = 0x38
    NSObject<OS_dispatch_semaphore> *_bluetoothSessionSemaphore;	// 64 = 0x40
    SFService *_pingService;	// 72 = 0x48
    SFDeviceDiscovery *_pingDiscovery;	// 80 = 0x50
    NSMutableSet *_visiblePingUUIDs;	// 88 = 0x58
    SFService *_workerService;	// 96 = 0x60
    SFDeviceDiscovery *_pongDiscovery;	// 104 = 0x68
    CDUnknownBlockType _deviceStatusCallback;	// 112 = 0x70
}

+ (void)checkIn;	// IMP=0x000000000004f33a
- (void).cxx_destruct;	// IMP=0x0000000000055a53
@property(copy) CDUnknownBlockType deviceStatusCallback; // @synthesize deviceStatusCallback=_deviceStatusCallback;
@property(retain, nonatomic) SFDeviceDiscovery *pongDiscovery; // @synthesize pongDiscovery=_pongDiscovery;
@property(retain, nonatomic) SFService *workerService; // @synthesize workerService=_workerService;
@property(retain) NSMutableSet *visiblePingUUIDs; // @synthesize visiblePingUUIDs=_visiblePingUUIDs;
@property(retain, nonatomic) SFDeviceDiscovery *pingDiscovery; // @synthesize pingDiscovery=_pingDiscovery;
@property(retain, nonatomic) SFService *pingService; // @synthesize pingService=_pingService;
@property(retain) NSObject<OS_dispatch_semaphore> *bluetoothSessionSemaphore; // @synthesize bluetoothSessionSemaphore=_bluetoothSessionSemaphore;
@property(retain) NSObject<OS_dispatch_queue> *run_queue; // @synthesize run_queue=_run_queue;
@property(retain) NSMutableDictionary *discoveredDevices; // @synthesize discoveredDevices=_discoveredDevices;
@property(retain) NSMutableDictionary *deviceSessions; // @synthesize deviceSessions=_deviceSessions;
@property(retain) NSMutableDictionary *pongingDevices; // @synthesize pongingDevices=_pongingDevices;
@property _Bool started; // @synthesize started=_started;
@property _Bool listenForClients; // @synthesize listenForClients=_listenForClients;
@property __weak id <DEDSharingInboundDelegate> controller; // @synthesize controller=_controller;
@property(retain) DEDSharingInbound *sharingInbound; // @synthesize sharingInbound=_sharingInbound;
- (void)addIncomingSFSession:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x0000000000055592
- (void)stopSession:(id)arg1;	// IMP=0x00000000000554b2
- (void)_verifyPairingForSession:(id)arg1 holdForPIN:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000055177
- (void)createSharingSessionForSFDevice:(id)arg1 holdForPIN:(_Bool)arg2 fromInbound:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000005448f
- (id)blockingSharingSessionForDevice:(id)arg1 fromInbound:(id)arg2;	// IMP=0x00000000000541b0
- (id)_existingSharingSessionForDevice:(id)arg1;	// IMP=0x0000000000054096
- (void)_configureService:(id)arg1 withLabel:(id)arg2 needsSetup:(_Bool)arg3 actionType:(unsigned char)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000053b19
- (void)_saveDevice:(id)arg1;	// IMP=0x0000000000053a68
- (void)updateControllerWithDevice:(id)arg1 andStatus:(long long)arg2;	// IMP=0x00000000000538d2
- (void)sharing_didStartBugSessionWithInfo:(id)arg1 forCaller:(id)arg2;	// IMP=0x000000000005381a
- (void)sharing_startBugSessionWithIdentifier:(id)arg1 configuration:(id)arg2 caller:(id)arg3 target:(id)arg4 fromInbound:(id)arg5;	// IMP=0x0000000000053593
- (id)sharingOutboundForBugSessionIdentifier:(id)arg1 device:(id)arg2 fromInbound:(id)arg3;	// IMP=0x00000000000534a6
- (void)sharing_tryPIN:(id)arg1 forDevice:(id)arg2 fromInbound:(id)arg3;	// IMP=0x000000000005334d
- (void)sharing_startPairSetupForDevice:(id)arg1 fromInbound:(id)arg2;	// IMP=0x0000000000052f0b
- (void)checkReadinessForSFDevice:(id)arg1 session:(id)arg2;	// IMP=0x0000000000052da2
- (void)getSystemInfoForDevice:(id)arg1;	// IMP=0x0000000000052820
- (void)trySessionWithFoundDevice:(id)arg1 fromInbound:(id)arg2;	// IMP=0x0000000000052533
- (void)stopPongDiscovery;	// IMP=0x0000000000052480
- (void)_handleIncomingPongingDevice:(id)arg1 fromInbound:(id)arg2;	// IMP=0x0000000000051fd0
- (void)startPongDiscoveryFromInbound:(id)arg1;	// IMP=0x00000000000513a4
- (void)stopPingDiscovery;	// IMP=0x00000000000512a2
- (void)_handleIncomingPingingDevice:(id)arg1;	// IMP=0x0000000000050f2c
- (void)startPingDiscovery;	// IMP=0x000000000005034e
- (void)startWorkerService;	// IMP=0x0000000000050084
- (void)stopPongAdvertisement;	// IMP=0x000000000004ff7e
- (void)startPongAdvertisement;	// IMP=0x000000000004fe72
- (void)updatePongAdvertisement;	// IMP=0x000000000004fdb5
- (void)stopPingService;	// IMP=0x000000000004fd02
- (void)startPingServiceWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000004fb03
- (void)stopDiscovery;	// IMP=0x000000000004fad5
- (void)discoverDevicesFromInbound:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000004f9be
- (void)setDeviceDiscoveryCallback:(CDUnknownBlockType)arg1;	// IMP=0x000000000004f9ac
- (void)start;	// IMP=0x000000000004f8d2
- (void)configureListenForClients:(_Bool)arg1;	// IMP=0x000000000004f897
- (void)configureSharingInbound:(id)arg1;	// IMP=0x000000000004f84d
- (void)dealloc;	// IMP=0x000000000004f7ac
- (id)initWithController:(id)arg1;	// IMP=0x000000000004f5dd

@end

