//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ANAudioSessionManager, ANTimer, AVAudioSession, AVQueuePlayer, NSMutableArray, NSString, NSURL, NSUUID;
@protocol ANTrackPlayerDelegate, OS_dispatch_group, OS_dispatch_queue, OS_os_log;

@interface ANTrackPlayer : NSObject
{
    _Bool _readyToPlay;	// 8 = 0x8
    _Bool _playbackPending;	// 9 = 0x9
    id <ANTrackPlayerDelegate> _delegate;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_delegateQueue;	// 24 = 0x18
    unsigned long long _playbackState;	// 32 = 0x20
    AVQueuePlayer *_queuePlayer;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_playerStartGroup;	// 48 = 0x30
    double _silenceBetweenEachTrack;	// 56 = 0x38
    NSURL *_audioFileAtStart;	// 64 = 0x40
    double _trimStartTone;	// 72 = 0x48
    NSURL *_audioFileTransition;	// 80 = 0x50
    double _trimTransitionTone;	// 88 = 0x58
    double _previousSkipGoesToPreviousTrackDelta;	// 96 = 0x60
    AVAudioSession *_audioSession;	// 104 = 0x68
    NSMutableArray *_playerItems;	// 112 = 0x70
    NSUUID *_endpointUUID;	// 120 = 0x78
    NSObject<OS_os_log> *_log;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_workQueue;	// 136 = 0x88
    double _interruptionStart;	// 144 = 0x90
    unsigned long long _options;	// 152 = 0x98
    ANAudioSessionManager *_audioSessionManager;	// 160 = 0xa0
    ANTimer *_interruptionTimer;	// 168 = 0xa8
    ANTimer *_playerTimer;	// 176 = 0xb0
    CDUnknownBlockType _handler;	// 184 = 0xb8
}

- (void).cxx_destruct;	// IMP=0x00000000000432e2
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) _Bool playbackPending; // @synthesize playbackPending=_playbackPending;
@property(retain, nonatomic) ANTimer *playerTimer; // @synthesize playerTimer=_playerTimer;
@property(retain, nonatomic) ANTimer *interruptionTimer; // @synthesize interruptionTimer=_interruptionTimer;
@property(nonatomic) _Bool readyToPlay; // @synthesize readyToPlay=_readyToPlay;
@property(readonly, nonatomic) ANAudioSessionManager *audioSessionManager; // @synthesize audioSessionManager=_audioSessionManager;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property double interruptionStart; // @synthesize interruptionStart=_interruptionStart;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property(readonly, nonatomic) NSUUID *endpointUUID; // @synthesize endpointUUID=_endpointUUID;
@property(readonly, nonatomic) NSMutableArray *playerItems; // @synthesize playerItems=_playerItems;
@property(readonly, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property double previousSkipGoesToPreviousTrackDelta; // @synthesize previousSkipGoesToPreviousTrackDelta=_previousSkipGoesToPreviousTrackDelta;
@property double trimTransitionTone; // @synthesize trimTransitionTone=_trimTransitionTone;
@property(retain, nonatomic) NSURL *audioFileTransition; // @synthesize audioFileTransition=_audioFileTransition;
@property double trimStartTone; // @synthesize trimStartTone=_trimStartTone;
@property(retain, nonatomic) NSURL *audioFileAtStart; // @synthesize audioFileAtStart=_audioFileAtStart;
@property double silenceBetweenEachTrack; // @synthesize silenceBetweenEachTrack=_silenceBetweenEachTrack;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *playerStartGroup; // @synthesize playerStartGroup=_playerStartGroup;
@property(retain, nonatomic) AVQueuePlayer *queuePlayer; // @synthesize queuePlayer=_queuePlayer;
@property(nonatomic) unsigned long long playbackState; // @synthesize playbackState=_playbackState;
@property __weak NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property __weak id <ANTrackPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)playerItemPlayedToEndHandler:(id)arg1;	// IMP=0x0000000000042ca8
- (void)playerRateChangedHandler:(id)arg1;	// IMP=0x000000000004291d
- (void)audioSessionInterruptionHandler:(id)arg1;	// IMP=0x000000000004213b
- (void)someSidekickSessionIsPlayingDidChangeHandler:(id)arg1;	// IMP=0x0000000000041c7d
- (void)_handleInterruptionEndedAndShouldResume:(_Bool)arg1;	// IMP=0x000000000004165c
- (void)audioSessionMediaServicesResetHandler:(id)arg1;	// IMP=0x00000000000414b0
- (void)audioSessionMediaServicesLostHandler:(id)arg1;	// IMP=0x000000000004134d
- (void)_resumePlaybackAfterInterruptionAtTimeInterval:(double)arg1;	// IMP=0x000000000004116b
- (void)handleInterruptionDelay:(double)arg1;	// IMP=0x0000000000041165
- (void)previousInternalSync;	// IMP=0x000000000004096a
- (void)nextInternalSync;	// IMP=0x00000000000407e7
- (void)stopInternalSync;	// IMP=0x00000000000406e6
- (void)playInternalWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000406d6
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000003fceb
- (void)_stopPlaybackAndFailWithItem:(id)arg1 error:(id)arg2;	// IMP=0x000000000003fb44
- (id)_stringForPlayerItemStatus:(long long)arg1;	// IMP=0x000000000003fb19
- (id)_stringForPlayerStatus:(long long)arg1;	// IMP=0x000000000003faee
- (id)_stringForTimeControlStatus:(long long)arg1;	// IMP=0x000000000003fab5
- (void)_removeItemObserverForPlayer:(id)arg1;	// IMP=0x000000000003f84b
- (void)_removeObserverForPlayer:(id)arg1;	// IMP=0x000000000003f7d9
- (void)_addObserverForPlayer:(id)arg1;	// IMP=0x000000000003f74c
- (id)_playerInfoForAVPlayerItem:(id)arg1;	// IMP=0x000000000003f614
- (void)_callDelegateWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000003f4d2
- (void)_configureAudioSession;	// IMP=0x000000000003f30b
- (void)_deregisterForNotificationsWithAudioSession:(id)arg1;	// IMP=0x000000000003f117
- (void)_registerForNotificationsWithAudioSession:(id)arg1;	// IMP=0x000000000003ee07
@property(readonly, nonatomic) int numberActiveTracks;
- (void)previousWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003e980
- (void)nextWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003e78f
- (void)end;	// IMP=0x000000000003e63c
- (void)_stopAndUpdatePlaybackState:(unsigned long long)arg1;	// IMP=0x000000000003e573
- (void)stop;	// IMP=0x000000000003e45c
@property(readonly, nonatomic) NSString *whatIsPlaying;
- (void)_playWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d7f5
- (void)playWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d54b
- (id)prepareToPlay;	// IMP=0x000000000003d4bf
- (_Bool)_insertAudioBetween;	// IMP=0x000000000003d3f6
- (_Bool)_addURL:(id)arg1 announcementID:(id)arg2 trackType:(long long)arg3;	// IMP=0x000000000003d2cd
- (_Bool)_add:(id)arg1 announcementID:(id)arg2 trackType:(long long)arg3;	// IMP=0x000000000003d198
- (_Bool)add:(id)arg1 announcementID:(id)arg2;	// IMP=0x000000000003d080
- (void)dealloc;	// IMP=0x000000000003cee7
- (id)initWithOptions:(unsigned long long)arg1 endpointUUID:(id)arg2;	// IMP=0x000000000003c9ef
- (id)initWithOptions:(unsigned long long)arg1;	// IMP=0x000000000003c9db

@end

