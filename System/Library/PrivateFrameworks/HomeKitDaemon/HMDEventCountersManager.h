//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HMFUnfairLock, NSDate, NSMutableDictionary, NSObject;
@protocol HMDEventCountersStoring, OS_dispatch_queue;

@interface HMDEventCountersManager : HMFObject
{
    HMFUnfairLock *_lock;	// 8 = 0x8
    NSMutableDictionary *_eventCounters;	// 16 = 0x10
    NSDate *_lastSaveTime;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_workQueue;	// 32 = 0x20
    id <HMDEventCountersStoring> _counterStorage;	// 40 = 0x28
    double _saveInterval;	// 48 = 0x30
}

+ (id)sharedEventCountersManager;	// IMP=0x00000000009cb862
- (void).cxx_destruct;	// IMP=0x00000000009cb16f
@property(nonatomic) double saveInterval; // @synthesize saveInterval=_saveInterval;
@property(readonly) id <HMDEventCountersStoring> counterStorage; // @synthesize counterStorage=_counterStorage;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSDate *lastSaveTime; // @synthesize lastSaveTime=_lastSaveTime;
@property(retain, nonatomic) NSMutableDictionary *eventCounters; // @synthesize eventCounters=_eventCounters;
- (void)archiveEventCountersWithEventCountersSnapshot:(id)arg1;	// IMP=0x00000000009cb029
- (id)unarchivedEventCounters;	// IMP=0x00000000009cae3d
- (void)_save;	// IMP=0x00000000009cada2
- (void)_performOnUpdate;	// IMP=0x00000000009cacd1
- (void)forceSave;	// IMP=0x00000000009cac5e
- (void)_resetEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009caa44
- (void)_resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009ca819
- (void)_copyEventCounterFromEventName:(id)arg1 requestGroup:(id)arg2 toNewEventName:(id)arg3 newRequestGroup:(id)arg4;	// IMP=0x00000000009ca6d8
- (id)_fetchAllEventCounters;	// IMP=0x00000000009ca4a3
- (id)_fetchEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009ca392
- (unsigned long long)_fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009ca2c2
- (id)_getOrCreateEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009ca1a7
- (void)_incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;	// IMP=0x00000000009c9fbe
- (void)resetAllEventCounters;	// IMP=0x00000000009c9e03
- (void)resetEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009c9d68
- (void)resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009c9ca6
- (void)copyEventCounterFromEventName:(id)arg1 requestGroup:(id)arg2 toNewEventName:(id)arg3 newRequestGroup:(id)arg4;	// IMP=0x00000000009c9bb8
- (void)copyEventCountersFromRequestGroup:(id)arg1 toNewRequestGroup:(id)arg2;	// IMP=0x00000000009c9995
- (id)fetchAllEventCounters;	// IMP=0x00000000009c98e2
- (unsigned long long)fetchAggregatedEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009c96e0
- (id)fetchEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009c960c
- (unsigned long long)fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009c9556
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009c949e
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;	// IMP=0x00000000009c93e4
- (void)addObserver:(id)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;	// IMP=0x00000000009c91ff
- (id)initWithEventCountersStorage:(id)arg1 saveInterval:(double)arg2;	// IMP=0x00000000009c905a
- (id)init;	// IMP=0x00000000009c8f71

@end

