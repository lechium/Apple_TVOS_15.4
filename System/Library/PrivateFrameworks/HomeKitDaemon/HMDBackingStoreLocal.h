//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMFLogging-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString;

@interface HMDBackingStoreLocal : HMFObject <HMFLogging>
{
    struct sqlite3 *context;	// 8 = 0x8
    void *sqlite3_cache;	// 16 = 0x10
    struct sqlite3_stmt *insertZone;	// 24 = 0x18
    struct sqlite3_stmt *deleteZone;	// 32 = 0x20
    struct sqlite3_stmt *selectZones;	// 40 = 0x28
    struct sqlite3_stmt *insertStore;	// 48 = 0x30
    struct sqlite3_stmt *selectStores;	// 56 = 0x38
    struct sqlite3_stmt *insertGroup;	// 64 = 0x40
    struct sqlite3_stmt *deleteGroup;	// 72 = 0x48
    struct sqlite3_stmt *selectGroups;	// 80 = 0x50
    struct sqlite3_stmt *updateGroupToken;	// 88 = 0x58
    struct sqlite3_stmt *updateGroupSubscription;	// 96 = 0x60
    struct sqlite3_stmt *insertShare;	// 104 = 0x68
    struct sqlite3_stmt *updateShareShare;	// 112 = 0x70
    struct sqlite3_stmt *updateShareUsers;	// 120 = 0x78
    struct sqlite3_stmt *deleteShare;	// 128 = 0x80
    struct sqlite3_stmt *selectShares;	// 136 = 0x88
    struct sqlite3_stmt *insertRecord;	// 144 = 0x90
    struct sqlite3_stmt *updateRecordSchema;	// 152 = 0x98
    struct sqlite3_stmt *selectRecordCountGroup;	// 160 = 0xa0
    struct sqlite3_stmt *selectRecordGroupTypeSchema;	// 168 = 0xa8
    struct sqlite3_stmt *selectRecordGroup;	// 176 = 0xb0
    struct sqlite3_stmt *selectRecordGroupMap;	// 184 = 0xb8
    struct sqlite3_stmt *selectRecordUUID;	// 192 = 0xc0
    struct sqlite3_stmt *selectRecordParentUUID;	// 200 = 0xc8
    struct sqlite3_stmt *selectRecordParent;	// 208 = 0xd0
    struct sqlite3_stmt *selectRecordName;	// 216 = 0xd8
    struct sqlite3_stmt *selectRecordUUIDNoShare;	// 224 = 0xe0
    struct sqlite3_stmt *selectRecordParentNoShare;	// 232 = 0xe8
    struct sqlite3_stmt *selectRecordNameNoShare;	// 240 = 0xf0
    struct sqlite3_stmt *selectRecords;	// 248 = 0xf8
    struct sqlite3_stmt *selectStoreRecords;	// 256 = 0x100
    struct sqlite3_stmt *deleteRecord;	// 264 = 0x108
    struct sqlite3_stmt *flushPushedXact;	// 272 = 0x110
    struct sqlite3_stmt *insertLog;	// 280 = 0x118
    struct sqlite3_stmt *updateLogToDiskCommited;	// 288 = 0x120
    struct sqlite3_stmt *updateLogXactID;	// 296 = 0x128
    struct sqlite3_stmt *selectLog;	// 304 = 0x130
    struct sqlite3_stmt *selectChangeExistsLog;	// 312 = 0x138
    struct sqlite3_stmt *selectAllLog;	// 320 = 0x140
    struct sqlite3_stmt *insertLogOptions;	// 328 = 0x148
    struct sqlite3_stmt *selectLogOptions;	// 336 = 0x150
    struct sqlite3_stmt *updateLog;	// 344 = 0x158
    struct sqlite3_stmt *deleteLog;	// 352 = 0x160
    struct sqlite3_stmt *insertArchive;	// 360 = 0x168
    struct sqlite3_stmt *selectArchive;	// 368 = 0x170
    struct sqlite3_stmt *commit;	// 376 = 0x178
    struct sqlite3_stmt *rollback;	// 384 = 0x180
    struct sqlite3_stmt *begin;	// 392 = 0x188
    _Bool _isTransactionReplayFeatureEnabled;	// 400 = 0x190
    NSString *_datastoreFile;	// 408 = 0x198
    NSMutableArray *_zoneCache;	// 416 = 0x1a0
    NSMutableDictionary *_storeCache;	// 424 = 0x1a8
}

+ (id)logCategory;	// IMP=0x000000000075eab0
+ (void)cleanDatastoreFilesAt:(id)arg1 everything:(_Bool)arg2;	// IMP=0x000000000075e4ac
- (void).cxx_destruct;	// IMP=0x000000000075cb95
@property(retain, nonatomic) NSMutableDictionary *storeCache; // @synthesize storeCache=_storeCache;
@property(retain, nonatomic) NSMutableArray *zoneCache; // @synthesize zoneCache=_zoneCache;
@property(readonly) _Bool isTransactionReplayFeatureEnabled; // @synthesize isTransactionReplayFeatureEnabled=_isTransactionReplayFeatureEnabled;
@property(readonly, nonatomic) NSString *datastoreFile; // @synthesize datastoreFile=_datastoreFile;
- (id)logIdentifier;	// IMP=0x000000000075cb1b
- (_Bool)_selectArchiveWithIdentifier:(id)arg1 archive:(id *)arg2 controllerUserName:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000075c93e
- (unsigned long long)_insertArchive:(id)arg1 identifier:(id)arg2 controllerUserName:(id)arg3 error:(id *)arg4;	// IMP=0x000000000075c823
- (id)_deleteLog:(long long)arg1;	// IMP=0x000000000075c7a8
- (id)_updateLog:(long long)arg1 mask:(long long)arg2 set:(long long)arg3;	// IMP=0x000000000075c6ad
- (void)_selectAllLog:(CDUnknownBlockType)arg1;	// IMP=0x000000000075c4fb
- (id)_selectLogOptionsWithID:(long long)arg1;	// IMP=0x000000000075c237
- (id)_insertLogOptionsWithID:(long long)arg1 options:(id)arg2;	// IMP=0x000000000075c134
- (void)_selectLogWithMask:(long long)arg1 compare:(long long)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x000000000075bf1f
- (void)_selectLogWithRoot:(id)arg1 after:(long long)arg2 mask:(long long)arg3 compare:(long long)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x000000000075bc69
- (unsigned long long)_insertLogWithRoot:(id)arg1 transaction:(id)arg2 set:(long long)arg3 error:(id *)arg4;	// IMP=0x000000000075b55d
- (void)_selectAllRecords:(CDUnknownBlockType)arg1;	// IMP=0x000000000075b333
- (void)_fetchRecordsWithGroupID:(long long)arg1 names:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x000000000075b0c6
- (void)_fetchRecordsWithGroupID:(long long)arg1 parent:(id)arg2 type:(id)arg3 callback:(CDUnknownBlockType)arg4;	// IMP=0x000000000075af3d
- (void)_fetchRecordsWithGroupID:(long long)arg1 parentUuids:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x000000000075ac9e
- (id)_fetchRecordWithUUID:(id)arg1 root:(id)arg2 error:(id *)arg3;	// IMP=0x000000000075aa64
- (void)_fetchRecordsWithGroupID:(long long)arg1 uuids:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x000000000075a7b4
- (void)_fetchRecordsWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x000000000075a4a6
- (void)_fetchRecordMapWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x000000000075a28c
- (void)_fetchRecordTypeSchemaWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x000000000075a0fe
- (void)_fetchRecordCountWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000000759ff2
- (id)_deleteRecordWithGroupID:(long long)arg1 recordName:(id)arg2;	// IMP=0x0000000000759f0b
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 name:(id)arg3 model:(id)arg4;	// IMP=0x0000000000759dcf
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 record:(id)arg3;	// IMP=0x0000000000759c28
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 record:(id)arg3 data:(id)arg4 encoding:(long long)arg5;	// IMP=0x00000000007598eb
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 name:(id)arg3 record:(id)arg4 uuid:(id)arg5 parentUUID:(id)arg6 type:(id)arg7 data:(id)arg8 encoding:(long long)arg9 schema:(id)arg10;	// IMP=0x000000000075940f
- (id)_fetchGroupsForZone:(id)arg1 withError:(id *)arg2;	// IMP=0x000000000075907b
- (id)_updateGroupWithID:(long long)arg1 subscription:(id)arg2;	// IMP=0x0000000000758f7d
- (id)_updateGroupWithID:(long long)arg1 serverChangeToken:(id)arg2;	// IMP=0x0000000000758e7f
- (id)_deleteGroupWithID:(long long)arg1;	// IMP=0x0000000000758e12
- (long long)_insertGroupWithZoneID:(long long)arg1 root:(id)arg2 owner:(id)arg3 subscription:(id)arg4 error:(id *)arg5;	// IMP=0x0000000000758d11
- (id)_fetchZonesWithError:(id *)arg1;	// IMP=0x0000000000758b12
- (id)_deleteZoneWithID:(long long)arg1;	// IMP=0x0000000000758aa5
- (long long)_insertZoneWithName:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000758a57
- (id)_fillZoneCache;	// IMP=0x00000000007587f9
- (unsigned long long)_fetchIDForStore:(id)arg1 error:(id *)arg2;	// IMP=0x000000000075864d
- (id)_fetchUncommittedAndPushedTransactions;	// IMP=0x00000000007585b2
- (id)_dropUncommittedUnpushedTransactions;	// IMP=0x00000000007584b7
- (long long)_numUncommittedTransactions;	// IMP=0x0000000000758263
- (id)_fillStoreCache;	// IMP=0x0000000000758097
- (void)_rollback;	// IMP=0x0000000000757f6f
- (id)_commit;	// IMP=0x0000000000757f28
- (id)_begin;	// IMP=0x0000000000757f13
- (id)_instanceResources:(_Bool)arg1 migrate:(_Bool)arg2;	// IMP=0x00000000007552df
- (id)_updateRecordWithGroupID:(long long)arg1 name:(id)arg2 schema:(id)arg3;	// IMP=0x00000000007550c9
- (void)_freeResources;	// IMP=0x0000000000754cbd
- (id)flush:(_Bool)arg1;	// IMP=0x0000000000754b0d
- (void)dealloc;	// IMP=0x0000000000754acf
- (id)initWithDatastore:(id)arg1 shouldEnableTransactionReplayMode:(_Bool)arg2;	// IMP=0x00000000007549a1
- (id)initWithDatastore:(id)arg1;	// IMP=0x000000000075494e
- (id)initWithDB:(id)arg1 migrate:(_Bool)arg2 shouldEnableTransactionReplayMode:(_Bool)arg3 error:(id *)arg4;	// IMP=0x000000000075478d
- (id)initWithDB:(id)arg1 migrate:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000075471c
- (id)_createDatastoreTables:(id)arg1;	// IMP=0x00000000007541a4
- (id)_createNewDatastore:(id)arg1;	// IMP=0x0000000000753d3c
- (id)_runSQLite3:(const char *)arg1 bind:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000753d1e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

