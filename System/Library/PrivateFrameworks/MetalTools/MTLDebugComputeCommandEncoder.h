//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MTLDebugCommandBuffer;
@protocol MTLComputePipelineState;

@interface MTLDebugComputeCommandEncoder
{
    CDStruct_0f4bf8df _buffers[31];	// 40 = 0x28
    CDStruct_0f4bf8df _textures[96];	// 2520 = 0x9d8
    CDStruct_0f4bf8df _samplers[16];	// 10200 = 0x27d8
    CDStruct_0f4bf8df _threadgroupMemoryLengths[31];	// 11480 = 0x2cd8
    CDStruct_da2e99ad _imageBlockSize;	// 13960 = 0x3688
    MTLDebugCommandBuffer *_commandBuffer;	// 13984 = 0x36a0
    _Bool canDealloc;	// 13992 = 0x36a8
    _Bool canEndEncoding;	// 13993 = 0x36a9
    _Bool canSetComputePipelineState;	// 13994 = 0x36aa
    _Bool hasEndEncoding;	// 13995 = 0x36ab
    _Bool hasSetComputePipelineState;	// 13996 = 0x36ac
    _Bool hasSetStageInRegion;	// 13997 = 0x36ad
    CDStruct_1e3be3a8 stageInRegion;	// 14000 = 0x36b0
    _Bool hasIndirectSetStageInRegion;	// 14048 = 0x36e0
    _Bool allowsNullBufferBinds;	// 14049 = 0x36e1
    struct deque<id, std::allocator<id>> updatedFences;	// 14056 = 0x36e8
    id <MTLComputePipelineState> _computePipelineState;	// 14104 = 0x3718
}

- (id).cxx_construct;	// IMP=0x0000000000056d8d
- (void).cxx_destruct;	// IMP=0x0000000000056d7c
@property(readonly, nonatomic) id <MTLComputePipelineState> computePipelineState; // @synthesize computePipelineState=_computePipelineState;
- (void)enableNullBufferBinds:(_Bool)arg1;	// IMP=0x0000000000056cea
- (void)sampleCountersInBuffer:(id)arg1 atSampleIndex:(unsigned long long)arg2 withBarrier:(_Bool)arg3;	// IMP=0x0000000000056b37
- (void)executeCommandsInBuffer:(id)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned long long)arg3;	// IMP=0x0000000000056a84
- (void)executeCommandsInBuffer:(id)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x0000000000056967
- (void)memoryBarrierWithResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000567eb
- (void)memoryBarrierWithScope:(unsigned long long)arg1;	// IMP=0x0000000000056739
- (void)useHeaps:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000005661b
- (void)useHeap:(id)arg1;	// IMP=0x000000000005657b
- (void)useResources:(const id *)arg1 count:(unsigned long long)arg2 usage:(unsigned long long)arg3;	// IMP=0x0000000000056421
- (void)useResource:(id)arg1 usage:(unsigned long long)arg2;	// IMP=0x0000000000056347
- (void)enumerateThreadgroupMemoryLengthsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000562fa
- (void)enumerateSamplersUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000562ad
- (void)enumerateTexturesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000056260
- (void)enumerateBuffersUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000561b5
- (void)filterCounterRangeWithFirstBatch:(unsigned int)arg1 lastBatch:(unsigned int)arg2 filterIndex:(unsigned int)arg3;	// IMP=0x0000000000056138
- (void)endEncoding;	// IMP=0x000000000005604a
- (void)waitForFence:(id)arg1;	// IMP=0x0000000000055f51
- (void)updateFence:(id)arg1;	// IMP=0x0000000000055eb7
- (void)dispatchThreadsWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2;	// IMP=0x0000000000055af1
- (void)dispatchThreads:(CDStruct_14f26992)arg1 threadsPerThreadgroup:(CDStruct_14f26992)arg2;	// IMP=0x0000000000055709
- (void)dispatchThreadgroupsWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2 threadsPerThreadgroup:(CDStruct_14f26992)arg3;	// IMP=0x00000000000552dc
- (void)dispatchThreadgroups:(CDStruct_14f26992)arg1 threadsPerThreadgroup:(CDStruct_14f26992)arg2;	// IMP=0x0000000000053855
- (void)_validateThreadsPerThreadgroup:(CDStruct_14f26992)arg1;	// IMP=0x0000000000053490
- (void)_validateAllFunctionArguments;	// IMP=0x00000000000533da
- (void)setStageInRegionWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2;	// IMP=0x000000000005333d
- (void)setStageInRegion:(CDStruct_1e3be3a8)arg1;	// IMP=0x00000000000532db
- (void)validateStageInRegion:(CDStruct_14f26992)arg1;	// IMP=0x00000000000531d9
- (void)setImageblockWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x0000000000053094
- (void)setThreadgroupMemoryLength:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000052e0f
- (void)setSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;	// IMP=0x00000000000529e7
- (void)setSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x000000000005271a
- (void)setSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000005235d
- (void)setSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000000000520d2
- (void)setTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x0000000000051c74
- (void)setTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000051943
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x00000000000514a5
- (void)setBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000051226
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x0000000000050eec
- (void)setBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x0000000000050cd5
- (void)setComputePipelineState:(id)arg1;	// IMP=0x0000000000050aeb
- (id)description;	// IMP=0x0000000000050ad7
- (id)formattedDescription:(unsigned long long)arg1;	// IMP=0x00000000000505fa
- (void)dealloc;	// IMP=0x0000000000050549
- (id)initWithComputeCommandEncoder:(id)arg1 commandBuffer:(id)arg2;	// IMP=0x00000000000504dd
- (void)_setDefaults;	// IMP=0x000000000005040c

@end

