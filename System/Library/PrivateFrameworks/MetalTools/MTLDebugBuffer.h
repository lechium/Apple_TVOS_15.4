//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MetalTools/MTLDebugResourcePurgeable-Protocol.h>

@class MTLDebugDevice, MTLDebugResource, NSMutableArray;

@interface MTLDebugBuffer <MTLDebugResourcePurgeable>
{
    MTLDebugResource *_common;	// 48 = 0x30
    unsigned long long _length;	// 56 = 0x38
    MTLDebugDevice *_debugDevice;	// 64 = 0x40
    NSMutableArray *_debugMarkers;	// 72 = 0x48
    struct atomic<int> _purgeableStateToken;	// 80 = 0x50
    _Bool _purgeableStateHasBeenSet;	// 84 = 0x54
    _Bool _isContentExposedToCPU;	// 85 = 0x55
    const void *_pointer;	// 88 = 0x58
}

@property(nonatomic) _Bool isContentExposedToCPU; // @synthesize isContentExposedToCPU=_isContentExposedToCPU;
@property(readonly, nonatomic) const void *pointer; // @synthesize pointer=_pointer;
@property(readonly, nonatomic) MTLDebugResource *common; // @synthesize common=_common;
- (_Bool)purgeableStateValidForRendering;	// IMP=0x0000000000043a93
- (void)unlockPurgeableState;	// IMP=0x0000000000043a82
- (void)lockPurgeableState;	// IMP=0x0000000000043a71
- (void)removeAllDebugMarkers;	// IMP=0x0000000000043a28
- (void)addDebugMarker:(id)arg1 range:(struct _NSRange)arg2;	// IMP=0x0000000000043964
- (id)copyDebugMarkers;	// IMP=0x0000000000043921
- (void *)contents;	// IMP=0x00000000000438db
- (void)didModifyRange:(struct _NSRange)arg1;	// IMP=0x000000000004389b
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;	// IMP=0x00000000000437cc
- (id)newLinearTextureWithDescriptor:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3 bytesPerImage:(unsigned long long)arg4;	// IMP=0x0000000000043201
- (id)newTextureWithDescriptor:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3;	// IMP=0x00000000000428e2
- (id)description;	// IMP=0x00000000000428ce
- (_Bool)doesAliasAnyResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000428b1
- (_Bool)doesAliasAllResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000042894
- (void)setParentGPUSize:(unsigned long long)arg1;	// IMP=0x0000000000042863
- (unsigned long long)parentGPUSize;	// IMP=0x0000000000042838
- (void)setParentGPUAddress:(unsigned long long)arg1;	// IMP=0x0000000000042807
- (unsigned long long)parentGPUAddress;	// IMP=0x00000000000427dc
- (unsigned long long)gpuAddress;	// IMP=0x00000000000427b1
- (void)makeAliasable;	// IMP=0x000000000004273b
- (_Bool)doesAliasResource:(id)arg1;	// IMP=0x000000000004271e
- (unsigned long long)resourceIndex;	// IMP=0x00000000000426f3
- (void)dealloc;	// IMP=0x000000000004269b
- (id)initWithBuffer:(id)arg1 device:(id)arg2 bytes:(const void *)arg3 options:(unsigned long long)arg4;	// IMP=0x00000000000425be
- (id)initWithBuffer:(id)arg1 heap:(id)arg2 device:(id)arg3 options:(unsigned long long)arg4;	// IMP=0x00000000000424ff
- (id)initWithBuffer:(id)arg1 device:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000042443
- (unsigned long long)length;	// IMP=0x0000000000042432

@end

