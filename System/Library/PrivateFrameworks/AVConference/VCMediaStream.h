//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVConference/RTCPReportProvider-Protocol.h>
#import <AVConference/VCConnectionChangedHandler-Protocol.h>
#import <AVConference/VCMediaStreamProtocol-Protocol.h>
#import <AVConference/VCSecurityEventHandler-Protocol.h>

@class AVCBasebandCongestionDetector, AVCRateControlFeedbackController, AVCStatisticsCollector, NSArray, NSError, NSMutableArray, NSObject, NSString, VCCallInfoBlob, VCDatagramChannelIDS, VCMediaKeyIndex, VCMediaStreamConfig, VCMediaStreamTransport, VCNetworkFeedbackController, VCTransportSession, VCWeakObjectHolder;
@protocol OS_dispatch_queue, OS_dispatch_source, RTCPReportProvider, VCMediaStreamDelegate, VCMediaStreamNotification, VCMomentsCollectorDelegate;

__attribute__((visibility("hidden")))
@interface VCMediaStream <VCMediaStreamProtocol, RTCPReportProvider, VCSecurityEventHandler, VCConnectionChangedHandler>
{
    NSObject<OS_dispatch_queue> *_delegateNotificationQueue;	// 16 = 0x10
    struct _opaque_pthread_mutex_t _streamLock;	// 24 = 0x18
    VCDatagramChannelIDS *_datagramChannel;	// 88 = 0x58
    NSString *_idsDestination;	// 96 = 0x60
    id <VCMediaStreamDelegate> _delegate;	// 104 = 0x68
    id <VCMomentsCollectorDelegate> _momentsCollectorDelegate;	// 112 = 0x70
    NSString *_callID;	// 120 = 0x78
    _Bool _isSRTPInitialized;	// 128 = 0x80
    _Bool _useRandomTS;	// 129 = 0x81
    _Bool _isReportingAgentOwner;	// 130 = 0x82
    double _rtpTimeoutEnabledTime;	// 136 = 0x88
    double _rtcpTimeoutEnabledTime;	// 144 = 0x90
    double _decryptionTimeoutEnabledTime;	// 152 = 0x98
    NSObject<OS_dispatch_source> *_rtcpSendHeartbeat;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_timeoutHeartbeat;	// 168 = 0xa8
    double _lastRTPTimeoutReportTime;	// 176 = 0xb0
    double _lastRTCPTimeoutReportTime;	// 184 = 0xb8
    double _lastDecryptionTimeoutReportTime;	// 192 = 0xc0
    double _lastDecryptionMKMRecoveryTime;	// 200 = 0xc8
    double _decryptionErrorStartTime;	// 208 = 0xd0
    unsigned int _localSSRC;	// 216 = 0xd8
    unsigned int _transportSessionID;	// 220 = 0xdc
    int _clientPID;	// 224 = 0xe0
    VCWeakObjectHolder *_notificationDelegate;	// 232 = 0xe8
    VCWeakObjectHolder *_rtcpReportProvider;	// 240 = 0xf0
    int _operatingMode;	// 248 = 0xf8
    struct _VCMediaStreamTransportSetupInfo _transportSetupInfo;	// 256 = 0x100
    NSMutableArray *_transportArray;	// 360 = 0x168
    CDUnknownFunctionPointerType _vcMediaCallback;	// 368 = 0x170
    struct tagVCMediaQueue *_mediaQueue;	// 376 = 0x178
    VCMediaKeyIndex *_lastReceivedMKI;	// 384 = 0x180
    VCCallInfoBlob *_remoteEndpointInfo;	// 392 = 0x188
    VCTransportSession *_transportSession;	// 400 = 0x190
    NSError *_cachedError;	// 408 = 0x198
    CDUnknownFunctionPointerType _notificationHandler;	// 416 = 0x1a0
    CDUnknownFunctionPointerType _packetEventHandler;	// 424 = 0x1a8
    struct tagVCNWConnectionMonitor *_nwMonitor;	// 432 = 0x1b0
    long long _streamToken;	// 440 = 0x1b8
    void *_mediaControlInfoGenerator;	// 448 = 0x1c0
    void *_oneToOneControlInfoGenerator;	// 456 = 0x1c8
    unsigned int _mediaControlInfoGeneratorType;	// 464 = 0x1d0
    AVCRateControlFeedbackController *_feedbackController;	// 472 = 0x1d8
    AVCRateControlFeedbackController *_oneToOneFeedbackController;	// 480 = 0x1e0
    _Bool _mediaControlInfoCallbacksRegistered;	// 488 = 0x1e8
    CDUnknownFunctionPointerType _statisticsHandler;	// 496 = 0x1f0
    VCNetworkFeedbackController *_networkFeedbackController;	// 504 = 0x1f8
    _Bool _isWRMinitialized;	// 512 = 0x200
    NSArray *_compoundStreamIDs;	// 520 = 0x208
    _Bool _isNWMonitorSignalEnabled;	// 528 = 0x210
    _Bool _isRTTBasedFIRThrottlingEnabled;	// 529 = 0x211
    _Bool _areStatisticsRegistered;	// 530 = 0x212
    AVCStatisticsCollector *_statisticsCollector;	// 536 = 0x218
    int _nwMonitorHandlerIndex;	// 544 = 0x220
    int _rttMonitorHandlerIndex;	// 548 = 0x224
    int _state;	// 552 = 0x228
    AVCBasebandCongestionDetector *_basebandCongestionDetector;	// 560 = 0x230
}

+ (_Bool)isSameSRTPKey:(id)arg1 newKey:(id)arg2;	// IMP=0x000000000023c86c
@property(readonly, nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) VCNetworkFeedbackController *networkFeedbackController; // @synthesize networkFeedbackController=_networkFeedbackController;
@property(copy) NSArray *compoundStreamIDs; // @synthesize compoundStreamIDs=_compoundStreamIDs;
@property(retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector; // @synthesize basebandCongestionDetector=_basebandCongestionDetector;
@property(readonly, nonatomic) NSArray *transportArray; // @synthesize transportArray=_transportArray;
@property(readonly, nonatomic) unsigned int mediaControlInfoGeneratorType; // @synthesize mediaControlInfoGeneratorType=_mediaControlInfoGeneratorType;
@property(readonly, nonatomic) void *mediaControlInfoGenerator; // @synthesize mediaControlInfoGenerator=_mediaControlInfoGenerator;
@property(readonly, retain, nonatomic) AVCRateControlFeedbackController *feedbackController; // @synthesize feedbackController=_feedbackController;
@property(readonly, nonatomic) long long streamToken; // @synthesize streamToken=_streamToken;
@property(nonatomic) int operatingMode; // @synthesize operatingMode=_operatingMode;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(readonly, nonatomic) unsigned int localSSRC; // @synthesize localSSRC=_localSSRC;
- (int)handleMediaCallbackNotification:(int)arg1 inData:(void *)arg2 outData:(void *)arg3;	// IMP=0x000000000024b792
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x000000000024b731
- (void)collectTxChannelMetrics:(CDStruct_4c7d81d2 *)arg1;	// IMP=0x000000000024b6d0
- (void)collectRxChannelMetrics:(CDStruct_4c7d81d2 *)arg1;	// IMP=0x000000000024b66f
- (void)collectRxChannelMetrics:(CDStruct_4c7d81d2 *)arg1 interval:(float)arg2;	// IMP=0x000000000024b60e
@property(readonly, nonatomic) double rtcpHeartbeatLeeway;
@property(readonly, nonatomic) double lastReceivedRTCPPacketTime;
@property(readonly, nonatomic) double lastReceivedRTPPacketTime;
- (void)onRTCPTimeout;	// IMP=0x000000000024b48a
- (void)onRTPTimeout;	// IMP=0x000000000024b429
- (void)onSendRTCPPacket;	// IMP=0x000000000024b3c8
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000024b367
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000024b306
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000024b2a5
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000024b244
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x000000000024b1e3
- (id)supportedPayloads;	// IMP=0x000000000024b182
- (void)onCallIDChanged;	// IMP=0x000000000024b121
@property(nonatomic) id <VCMediaStreamNotification> notificationDelegate;
- (void)stopTimeoutHeartbeat;	// IMP=0x000000000024aca3
- (void)startTimeoutHeartbeat;	// IMP=0x000000000024a2f0
- (void)timeoutHeartbeat;	// IMP=0x0000000000249eaa
- (void)checkForDecryptionTimeout;	// IMP=0x0000000000249e04
- (void)checkDecryptionTimeoutForMKMRecoveryAgainstTime:(double)arg1 decryptionErrorStartTime:(double)arg2;	// IMP=0x0000000000249bab
- (void)checkDecryptionTimeoutAgainstTime:(double)arg1 decryptionErrorStartTime:(double)arg2;	// IMP=0x0000000000249922
- (void)checkRTCPPacketTimeoutAgainstTime:(double)arg1 lastReceivedPacketTime:(double)arg2;	// IMP=0x000000000024967c
- (void)checkRTPPacketTimeoutAgainstTime:(double)arg1 lastReceivedPacketTime:(double)arg2;	// IMP=0x00000000002493d6
- (double)computeNextTimoutWithEnabledTime:(double)arg1 timeoutInterval:(double)arg2 lastReceivedPacketTime:(double)arg3 currentTime:(double)arg4 lastTimeoutReportTime:(double)arg5;	// IMP=0x0000000000249354
- (void)resetTimeoutHeartbeatWithRTPTimeout:(double)arg1 rtcpTimeout:(double)arg2 decryptionTimeout:(double)arg3 currentTime:(double)arg4;	// IMP=0x0000000000249079
- (void)resetTimeoutHeartbeatTimer:(unsigned long long)arg1;	// IMP=0x0000000000249050
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x0000000000248fef
- (void)destroyNWMonitorInternal;	// IMP=0x0000000000248fc3
- (void)destroyNWMonitor;	// IMP=0x0000000000248f2a
- (void)createNWMonitor;	// IMP=0x0000000000248e4e
- (void)stopRTCPSendHeartbeat;	// IMP=0x0000000000248c67
- (void)startRTCPSendHeartbeat;	// IMP=0x00000000002484b8
- (void)rtcpSendHeartbeat;	// IMP=0x00000000002481b1
- (void)resetRTCPSendHeartbeatTimer:(unsigned long long)arg1;	// IMP=0x00000000002480e5
- (unsigned int)getExtendedSequenceNumberForSequenceNumber:(unsigned short)arg1;	// IMP=0x00000000002480b6
- (unsigned int)getRTCPReportNTPTimeMiddle32ForReportId:(unsigned char)arg1;	// IMP=0x0000000000248087
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x0000000000247cef
@property(nonatomic) id <RTCPReportProvider> rtcpReportProvider;
- (void)setRtcpSendInterval:(double)arg1;	// IMP=0x0000000000247751
- (void)setDecryptionTimeOutInterval:(double)arg1;	// IMP=0x0000000000247468
- (void)setRtcpTimeOutInterval:(double)arg1;	// IMP=0x000000000024717f
- (void)setRtpTimeOutInterval:(double)arg1;	// IMP=0x0000000000246e96
- (void)setDecryptionTimeOutEnabled:(_Bool)arg1;	// IMP=0x0000000000246bb2
- (void)setRtcpTimeOutEnabled:(_Bool)arg1;	// IMP=0x00000000002468ce
- (void)setRtpTimeOutEnabled:(_Bool)arg1;	// IMP=0x00000000002465ea
- (void)processDecryptionTimeoutSettingChange;	// IMP=0x0000000000246594
- (void)processRTCPTimeoutSettingChange;	// IMP=0x000000000024653e
- (void)processRTPTimeoutSettingChange;	// IMP=0x00000000002464e8
- (_Bool)isRTCPSendEnabled;	// IMP=0x00000000002464bd
- (_Bool)isDecryptionTimeoutEnabled;	// IMP=0x0000000000246492
- (_Bool)isRTCPTimeoutEnabled;	// IMP=0x0000000000246467
- (_Bool)isRTPTimeoutEnabled;	// IMP=0x000000000024643c
- (void)setRtcpEnabled:(_Bool)arg1;	// IMP=0x00000000002461b1
- (void)sendControlPacketWithParameters:(struct _RTCP_SEND_CONTROL_PARAMETERS *)arg1;	// IMP=0x000000000024605a
- (long long)streamDirection;	// IMP=0x0000000000245ee8
- (void)setStreamDirection:(long long)arg1;	// IMP=0x0000000000245c70
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x0000000000245937
- (void)setPause:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000024523a
- (id)getInvalidParamErrorForSetPause:(_Bool)arg1 didSucceed:(_Bool)arg2;	// IMP=0x0000000000244e1e
- (id)setPause:(_Bool)arg1;	// IMP=0x0000000000244a96
- (void)stopInternalWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000243fcc
- (id)stop;	// IMP=0x0000000000243aa2
- (void)stopMediaTransports;	// IMP=0x000000000024399e
- (_Bool)startMediaTransportsWithError:(id *)arg1;	// IMP=0x00000000002437f1
- (void)notifyDelegateDidReceiveRTCPPackets:(struct _RTCPPacketList *)arg1;	// IMP=0x0000000000243653
- (void)handleStartDidSucceed:(_Bool)arg1 withError:(id)arg2;	// IMP=0x00000000002435c6
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x00000000002435c0
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x00000000002435ba
- (void)setState:(int)arg1;	// IMP=0x0000000000243307
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000242a01
- (id)start;	// IMP=0x000000000024269d
- (_Bool)setStreamConfig:(id)arg1 withError:(id *)arg2;	// IMP=0x0000000000241dec
- (_Bool)updateRemoteAddressWithConfig:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000241ac8
- (void)didEncryptionKeyRollTimeout;	// IMP=0x0000000000241ac2
- (void)resetDecryptionTimeout;	// IMP=0x00000000002418ff
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x00000000002412b0
- (void)unregisterMediaControlInfoGenerator;	// IMP=0x0000000000241068
- (void)registerCallbacksForMediaControlInfoGenerator:(void *)arg1 forDirection:(long long)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000240c59
- (void)createLocalMediaControlInfoGeneratorWithType:(unsigned int)arg1 version:(unsigned char)arg2;	// IMP=0x0000000000240af0
- (id)getMediaStreamConfigForControlInfoGenerator:(id)arg1;	// IMP=0x0000000000240989
- (void)registerMediaControlInfoGeneratorWithConfigs:(id)arg1;	// IMP=0x000000000024020b
- (void)unregisterWRMCallback;	// IMP=0x0000000000240187
- (void)initializeWRMUsingRtpHandle:(struct tagHANDLE *)arg1;	// IMP=0x00000000002400bc
- (void)registerStatistics:(id)arg1;	// IMP=0x000000000023ffe8
- (int)registerStatisticsHandler:(id)arg1 statisticType:(int)arg2;	// IMP=0x000000000023fe6b
- (void)unregisterStatistics;	// IMP=0x000000000023fdf8
- (id)createTransportWithStreamConfig:(id)arg1 ssrc:(unsigned int)arg2;	// IMP=0x000000000023faa7
- (struct tagHANDLE *)createRTPHandleWithStreamConfig:(id)arg1 payloadType:(int)arg2 localSSRC:(unsigned int)arg3;	// IMP=0x000000000023f7c0
- (char *)streamStateToString:(int)arg1;	// IMP=0x000000000023f79d
- (void)unlock;	// IMP=0x000000000023f78c
- (void)lock;	// IMP=0x000000000023f77b
- (void)dealloc;	// IMP=0x000000000023f45e
- (void)setupMediaStream;	// IMP=0x000000000023f108
- (id)initWithTransportSessionID:(unsigned int)arg1 localSSRC:(unsigned int)arg2;	// IMP=0x000000000023f075
- (id)initWithTransportSessionID:(unsigned int)arg1;	// IMP=0x000000000023efe5
- (id)init;	// IMP=0x000000000023ef36
- (id)setupRTPWithIPInfo:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023ed26
- (_Bool)initializeTransportSetupInfoWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023e863
- (_Bool)initializeTransportSessionWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023e7f6
- (id)setupRTPWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023e5ee
- (id)setupRTPForIDS;	// IMP=0x000000000023e3e2
- (id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023e270
- (void)setupCallbacksWithNWConnectionMonitor:(struct tagVCNWConnectionMonitor *)arg1;	// IMP=0x000000000023e1d3
- (_Bool)setupNWConnectionWithID:(id)arg1;	// IMP=0x000000000023dada
- (void)dupNWConnectionBackingSocket:(int *)arg1;	// IMP=0x000000000023d908
- (id)setupRTPWithNWConnectionID:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023d643
- (_Bool)initializeTransportSessionWithNWConnectionID:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023d50b
- (void)cleanupNWConnection:(id *)arg1;	// IMP=0x000000000023d4d0
- (void)initializeTransportSetupInfoWithRTPSocket:(int)arg1 RTCPSocket:(int)arg2;	// IMP=0x000000000023d3ae
- (void)initializeTransportSetupInfoWithSocketDictionary:(id)arg1;	// IMP=0x000000000023d33f
- (_Bool)initializeTransportSessionWithSocketDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023d2e3
- (void)handleTransportSessionEvent:(unsigned int)arg1 info:(id)arg2;	// IMP=0x000000000023d16e
- (_Bool)initializeTransportSetupInfoWithTransportSession:(id *)arg1;	// IMP=0x000000000023cf67
- (id)setupRTPWithSocketDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x000000000023cdd0
- (void)decryptionStatusChanged:(_Bool)arg1;	// IMP=0x000000000023cc19
@property(readonly, nonatomic) _Bool isSendingMedia;
@property(readonly, nonatomic) VCMediaStreamConfig *oneToOneStreamConfig;
@property(readonly, nonatomic) VCMediaStreamConfig *defaultStreamConfig;
@property(readonly, nonatomic) VCMediaStreamTransport *defaultTransport;
@property(nonatomic) id <VCMomentsCollectorDelegate> momentsCollectorDelegate; // @synthesize momentsCollectorDelegate=_momentsCollectorDelegate;
@property(nonatomic) id <VCMediaStreamDelegate> delegate;
- (id)copyDelegate;	// IMP=0x000000000023c8a2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

