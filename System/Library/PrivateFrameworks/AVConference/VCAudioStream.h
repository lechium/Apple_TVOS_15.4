//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVConference/VCAudioIODelegate-Protocol.h>
#import <AVConference/VCAudioIOSink-Protocol.h>
#import <AVConference/VCMediaStreamSyncSource-Protocol.h>

@class AVCStatisticsCollector, AVTelephonyInterface, DTMFEventHandler, NSMutableArray, NSNumber, NSObject, NSString, VCAudioIO, VCAudioPayload, VCAudioPowerSpectrumSource, VCAudioTransmitter, WRMClient;
@protocol OS_dispatch_source, VCMediaStreamSyncSourceDelegate;

__attribute__((visibility("hidden")))
@interface VCAudioStream <VCMediaStreamSyncSource, VCAudioIOSink, VCAudioIODelegate>
{
    int _clientPid;	// 516 = 0x204
    int numBufferBytesAvailable;	// 520 = 0x208
    NSObject<OS_dispatch_source> *pausedAudioHeartBeat;	// 528 = 0x210
    double dAudioHostTime;	// 536 = 0x218
    _Bool lastVoiceActive;	// 544 = 0x220
    double _remoteMediaStallTimeout;	// 552 = 0x228
    unsigned int conferenceID;	// 560 = 0x230
    unsigned int lastInputAudioTimeStamp;	// 564 = 0x234
    unsigned int lastSentAudioSampleTime;	// 568 = 0x238
    struct _opaque_pthread_rwlock_t stateLock;	// 576 = 0x240
    NSMutableArray *audioPayloads;	// 776 = 0x308
    struct tagVCAudioFrameFormat _vpioFormat;	// 784 = 0x310
    _Bool _useExternalIO;	// 832 = 0x340
    int preferredAudioCodec;	// 836 = 0x344
    DTMFEventHandler *dtmfEventHandler;	// 840 = 0x348
    WRMClient *wrmClient;	// 848 = 0x350
    VCAudioPayload *currentAudioPayload;	// 856 = 0x358
    VCAudioPayload *currentDTXPayload;	// 864 = 0x360
    VCAudioTransmitter *_audioTransmitter;	// 872 = 0x368
    int _reportingModuleID;	// 880 = 0x370
    AVTelephonyInterface *_telephonyInterface;	// 888 = 0x378
    _Bool isValid;	// 896 = 0x380
    int deviceRole;	// 900 = 0x384
    id syncSourceDelegate;	// 904 = 0x388
    VCAudioIO *_audioIO;	// 912 = 0x390
    _Bool _isMuted;	// 920 = 0x398
    unsigned int *_reportingSSRCList;	// 928 = 0x3a0
    unsigned int _reportingSSRCCount;	// 936 = 0x3a8
    _Bool _sendActiveVoiceOnly;	// 940 = 0x3ac
    _Bool _currentDTXEnable;	// 941 = 0x3ad
    NSNumber *_targetStreamID;	// 944 = 0x3b0
    _Bool _rtpEnabledBeforeInterrupt;	// 952 = 0x3b8
    _Bool _rtcpEnabledBeforeInterrupt;	// 953 = 0x3b9
    unsigned int _pullAudioSamplesCount;	// 956 = 0x3bc
    struct _VCAudioStreamSinkContext _sinkContext;	// 960 = 0x3c0
    struct _VCAudioStreamSourceContext _sourceContext;	// 976 = 0x3d0
    long long _inputAudioPowerSpectrumToken;	// 1160 = 0x488
    long long _outputAudioPowerSpectrumToken;	// 1168 = 0x490
    VCAudioPowerSpectrumSource *_inputAudioPowerSpectrumSource;	// 1176 = 0x498
    VCAudioPowerSpectrumSource *_outputAudioPowerSpectrumSource;	// 1184 = 0x4a0
    unsigned int _abnormalOWRDCount;	// 1192 = 0x4a8
    double _lastAbnormalOWRDVerificationTime;	// 1200 = 0x4b0
    double _lastNetworkHealthPrintTime;	// 1208 = 0x4b8
    double _packetLossRateAccum;	// 1216 = 0x4c0
    int _packetLossRateCount;	// 1224 = 0x4c8
    double _packetLossRate5Secs;	// 1232 = 0x4d0
    double _timeLastPLR5Secs;	// 1240 = 0x4d8
    unsigned int _preferredMediaBitrate;	// 1248 = 0x4e0
    AVCStatisticsCollector *_statsCollector;	// 1256 = 0x4e8
    _Bool _enableAudioPowerSpectrum;	// 1264 = 0x4f0
}

+ (id)capabilities;	// IMP=0x00000000000913a1
+ (id)supportedAudioPayloads;	// IMP=0x00000000000912ec
+ (unsigned char)audioIODirectionWithMediaStreamDirection:(long long)arg1;	// IMP=0x000000000008ebf8
+ (int)operatingModeForAudioStreamMode:(long long)arg1;	// IMP=0x000000000008ebd8
@property(retain, nonatomic) NSNumber *targetStreamID; // @synthesize targetStreamID=_targetStreamID;
@property(nonatomic, getter=isCurrentDTXEnabled) _Bool currentDTXEnable; // @synthesize currentDTXEnable=_currentDTXEnable;
@property(retain) VCAudioIO *audioIO; // @synthesize audioIO=_audioIO;
@property(retain) VCAudioTransmitter *audioTransmitter; // @synthesize audioTransmitter=_audioTransmitter;
@property(nonatomic) int deviceRole; // @synthesize deviceRole;
@property(nonatomic) _Bool isValid; // @synthesize isValid;
@property(readonly) unsigned int conferenceID; // @synthesize conferenceID;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x0000000000097540
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000000974a5
- (void)collectTxChannelMetrics:(CDStruct_4c7d81d2 *)arg1;	// IMP=0x00000000000973ff
- (void)collectRxChannelMetrics:(CDStruct_4c7d81d2 *)arg1;	// IMP=0x0000000000097287
- (void)collectRxChannelMetrics:(CDStruct_4c7d81d2 *)arg1 interval:(float)arg2;	// IMP=0x0000000000097275
- (void)didResumeAudioIO:(id)arg1;	// IMP=0x00000000000971ad
- (void)didSuspendAudioIO:(id)arg1;	// IMP=0x000000000009707f
- (void)handleCodecRateModeChange:(int)arg1 payload:(int)arg2;	// IMP=0x0000000000096f99
- (void)unregisterCodecRateModeChangeNotifications;	// IMP=0x0000000000096f7f
- (void)registerActiveAudioStreamChangeNotifications;	// IMP=0x0000000000096da4
- (void)registerCodecRateModeChangeNotifications;	// IMP=0x0000000000096cfc
- (long long)getSyncSourceSampleRate;	// IMP=0x0000000000096ce9
@property(nonatomic) NSObject<VCMediaStreamSyncSourceDelegate> *syncSourceDelegate; // @synthesize syncSourceDelegate;
- (void)setCanProcessAudio:(_Bool)arg1;	// IMP=0x0000000000096c24
- (_Bool)canProcessAudio;	// IMP=0x0000000000096c12
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x0000000000096a86
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x0000000000096a72
- (void)reportingAlgosAudioStreamEvent:(unsigned short)arg1;	// IMP=0x0000000000096980
- (void)reportingAudioStreamEvent:(unsigned short)arg1;	// IMP=0x0000000000096779
- (id)getReportingServiceID;	// IMP=0x000000000009674c
- (struct __CFString *)getReportingClientName;	// IMP=0x00000000000966da
- (int)getReportingClientType;	// IMP=0x00000000000966ad
- (struct __CFDictionary *)getClientSpecificUserInfo:(id)arg1;	// IMP=0x000000000009634e
- (void)setupReportingAgent:(id)arg1;	// IMP=0x0000000000095fb7
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x0000000000095cee
- (double)rtcpHeartbeatLeeway;	// IMP=0x0000000000095ce0
- (void)onSendRTCPPacket;	// IMP=0x0000000000095be7
- (void)onRTCPTimeout;	// IMP=0x0000000000095be1
- (void)onRTPTimeout;	// IMP=0x0000000000095bdb
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000009587c
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000009563d
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;	// IMP=0x0000000000095620
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000953e6
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000009507b
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000093974
- (id)streamIDsFromTransport;	// IMP=0x0000000000093743
- (void)cleanupBeforeReconfigure:(id)arg1;	// IMP=0x00000000000934ed
- (void)createReportSSRCListWithStreamConfigs:(id)arg1;	// IMP=0x00000000000932c3
- (id)createTransportWithStreamConfig:(id)arg1;	// IMP=0x0000000000092d67
- (_Bool)setupSourceTransport:(id)arg1;	// IMP=0x0000000000092c67
- (_Bool)validateAudioStreamConfigurations:(id)arg1;	// IMP=0x000000000009280f
- (void)onCallIDChanged;	// IMP=0x00000000000926e4
- (id)supportedPayloads;	// IMP=0x00000000000926cb
@property(readonly, nonatomic) unsigned int actualAudioSendingBitrate;
- (void)setTargetBitrate:(unsigned int)arg1 rateChangeCounter:(unsigned int)arg2;	// IMP=0x0000000000092666
- (void)setVCStatistics:(CDStruct_87b99198)arg1;	// IMP=0x0000000000092623
- (CDUnknownFunctionPointerType)pullSamplesCallback;	// IMP=0x0000000000091972
@property(readonly, nonatomic) void *realtimeSourceContext;
@property(nonatomic) float volume;
@property(nonatomic, getter=isRemoteMuted) _Bool remoteMuted;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_isMuted;
@property(nonatomic) _Bool sendActiveVoiceOnly;
- (void)setStreamDirection:(long long)arg1;	// IMP=0x000000000009168e
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x0000000000091612
- (void)cleanupAudio;	// IMP=0x000000000009157f
- (void)prepareAudio;	// IMP=0x0000000000091540
- (void)updateSoundMeter:(struct _METER_INFO *)arg1 isInputMeter:(_Bool)arg2 sampleBuffer:(struct opaqueVCAudioBufferList *)arg3;	// IMP=0x00000000000914d2
- (void)pushSamplesOutputPowerSpectrum:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000914a6
- (void)setFrequencyMeteringEnabled:(_Bool)arg1 meterType:(int)arg2;	// IMP=0x0000000000091459
- (_Bool)isFrequencyMeteringEnabled:(int)arg1;	// IMP=0x0000000000091444
- (struct _METER_INFO *)meterWithType:(int)arg1;	// IMP=0x0000000000091420
- (void)stopSendDTMFEvent;	// IMP=0x00000000000912b5
- (void)sendDTMFEvent:(id)arg1;	// IMP=0x000000000009127e
- (_Bool)createAudioTransmitter:(long long)arg1 streamIDs:(id)arg2;	// IMP=0x0000000000090a51
- (_Bool)createAudioReceiver;	// IMP=0x000000000008fbf6
- (void)configureAudioJBAlgos:(struct tagVCAudioReceiverConfig *)arg1;	// IMP=0x000000000008faae
- (int)getPacketsPerBundleForStreamConfig:(id)arg1;	// IMP=0x000000000008f965
- (void)dealloc;	// IMP=0x000000000008f542
- (_Bool)setupAudioStreamWithClientPid:(int)arg1 enableAudioPowerSpectrum:(_Bool)arg2;	// IMP=0x000000000008efc5
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x000000000008eea8
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2 transportSessionID:(unsigned int)arg3;	// IMP=0x000000000008ee1b
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2;	// IMP=0x000000000008ed8c
- (id)initWithClientPid:(int)arg1;	// IMP=0x000000000008ecfd
- (void)setupAudioPowerSpectrum;	// IMP=0x000000000008ec1b
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x000000000008eba5
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x000000000008eb80
- (double)lastReceivedRTCPPacketTime;	// IMP=0x000000000008e9f2
- (double)lastReceivedRTPPacketTime;	// IMP=0x000000000008e9dc
- (_Bool)setReceiverPayloads;	// IMP=0x000000000008e120
- (void)setDTXPayload:(id)arg1;	// IMP=0x000000000008de35
- (id)addAudioPayload:(int)arg1;	// IMP=0x000000000008ddbe
- (id)configForPayloadType:(int)arg1;	// IMP=0x000000000008dc7d
- (id)newPayloadConfigForCodecConfig:(id)arg1 streamConfig:(id)arg2;	// IMP=0x000000000008d506
- (unsigned int)preferredAudioBitrateForPayload:(int)arg1;	// IMP=0x000000000008d3ae
- (void)getCodecConfigForPayload:(int)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x000000000008d03b
- (_Bool)setupPayloads;	// IMP=0x000000000008cd8e
- (id)getSupportedPayloads;	// IMP=0x000000000008caa8
- (void)stopAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000008c918
- (void)startAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000008c530
- (unsigned int)codecTypeFromAudioPayload:(int)arg1;	// IMP=0x000000000008c428
- (int)captureMeshMode:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x000000000008c233
- (void)setInputTimestamp:(unsigned int)arg1 packetTimestamp:(int)arg2 hostTime:(double)arg3;	// IMP=0x000000000008c20d
- (void)_computeInternalFormatForStreamConfigurations:(id)arg1;	// IMP=0x000000000008bf0c
- (unsigned int)internalSampleRateForCodecType:(long long)arg1;	// IMP=0x000000000008be72
- (unsigned int)computePacketTimestampWithInputTimestamp:(unsigned int)arg1 numSamples:(int)arg2 hostTime:(double)arg3;	// IMP=0x000000000008bc1c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

