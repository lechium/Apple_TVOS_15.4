//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVConferenceXPCClient, CALayer, NSDictionary, NSMutableDictionary, NSTimer;
@protocol AVConferenceDelegate, OS_dispatch_queue;

@interface AVConference : NSObject
{
    AVConferenceXPCClient *connection;	// 8 = 0x8
    id opaqueConf;	// 16 = 0x10
    _Bool useServer;	// 24 = 0x18
    id _delegate;	// 32 = 0x20
    NSDictionary *serverBag;	// 40 = 0x28
    _Bool _isUsingFrontCamera;	// 48 = 0x30
    _Bool _microphoneMuted;	// 49 = 0x31
    NSMutableDictionary *_stateCacheForCallID;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_stateQueue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 72 = 0x48
    long long _inputAudioPowerSpectrumToken;	// 80 = 0x50
    long long _outputAudioPowerSpectrumToken;	// 88 = 0x58
    _Bool shouldDisplayNetworkQualityGraph_;	// 96 = 0x60
    NSTimer *networkQualityUpdateTimer_;	// 104 = 0x68
    CALayer *networkQualityGraphLayer_;	// 112 = 0x70
}

+ (unsigned int)doBlockingConnectionCheck:(_Bool)arg1;	// IMP=0x000000000001ff19
+ (unsigned int)doBlockingConnectionCheck;	// IMP=0x000000000001fefb
+ (_Bool)hasActiveAudioSession;	// IMP=0x000000000001d957
+ (void)stopAudioSession;	// IMP=0x000000000001d93e
+ (void)startAudioSessionWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001d925
+ (void)startAudioSession;	// IMP=0x000000000001d90c
+ (void)setAudioSessionProperties:(id)arg1;	// IMP=0x000000000001d8f3
+ (id)externalAddressForSelfConnectionBlob:(id)arg1;	// IMP=0x000000000001d85b
+ (short)addressPointerFromBlob:(id)arg1;	// IMP=0x000000000001d842
+ (void)refreshLoggingParameters;	// IMP=0x000000000001cc7e
@property(readonly) long long outputAudioPowerSpectrumToken; // @synthesize outputAudioPowerSpectrumToken=_outputAudioPowerSpectrumToken;
@property(readonly) long long inputAudioPowerSpectrumToken; // @synthesize inputAudioPowerSpectrumToken=_inputAudioPowerSpectrumToken;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted; // @synthesize microphoneMuted=_microphoneMuted;
@property(retain) CALayer *networkQualityGraphLayer; // @synthesize networkQualityGraphLayer=networkQualityGraphLayer_;
@property(retain) NSTimer *networkQualityUpdateTimer; // @synthesize networkQualityUpdateTimer=networkQualityUpdateTimer_;
@property _Bool shouldDisplayNetworkQualityGraph; // @synthesize shouldDisplayNetworkQualityGraph=shouldDisplayNetworkQualityGraph_;
- (void)setPeerProtocolVersion:(unsigned int)arg1 forCallID:(long long)arg2;	// IMP=0x0000000000021c72
- (void)setConferenceVisualRectangle:(struct CGRect)arg1 forCallID:(long long)arg2;	// IMP=0x0000000000021c5c
- (void)setConferenceState:(unsigned int)arg1 forCallID:(long long)arg2;	// IMP=0x0000000000021b4c
- (void)shouldSendBlackFrames:(_Bool)arg1 callID:(long long)arg2;	// IMP=0x0000000000021b46
- (void)processCancelRelayRequest:(long long)arg1 cancelDict:(id)arg2 didOriginateRequest:(_Bool)arg3;	// IMP=0x0000000000021b40
- (void)processRelayUpdate:(long long)arg1 updateDict:(id)arg2 didOriginateRequest:(_Bool)arg3;	// IMP=0x00000000000218cd
- (void)processRelayRequestResponse:(long long)arg1 responseDict:(id)arg2 didOriginateRequest:(_Bool)arg3;	// IMP=0x000000000002165a
- (void)videoConference:(id)arg1 closeConnectionForCallID:(long long)arg2;	// IMP=0x00000000000215e2
- (void)videoConference:(id)arg1 reinitializeCallForCallID:(unsigned int)arg2;	// IMP=0x000000000002156a
- (void)videoConference:(id)arg1 remoteCallingModeChanged:(unsigned int)arg2 forCallID:(unsigned int)arg3;	// IMP=0x00000000000214ec
- (void)videoConference:(id)arg1 localAudioEnabled:(_Bool)arg2 forCallID:(unsigned int)arg3 error:(id)arg4;	// IMP=0x0000000000021465
- (void)videoConference:(id)arg1 remoteAudioEnabled:(_Bool)arg2 forCallID:(unsigned int)arg3;	// IMP=0x00000000000213e6
- (void)videoConference:(id)arg1 didChangeLocalVariablesForCallID:(unsigned int)arg2;	// IMP=0x000000000002136e
- (void)videoConference:(id)arg1 didReceiveData:(id)arg2 forCallID:(unsigned int)arg3;	// IMP=0x00000000000212dd
- (void)videoConference:(id)arg1 didReceiveARPLData:(id)arg2 forCallID:(unsigned int)arg3;	// IMP=0x000000000002125f
- (void)videoConference:(id)arg1 withCallID:(unsigned int)arg2 networkHint:(_Bool)arg3;	// IMP=0x00000000000211e0
- (void)videoConference:(id)arg1 videoQualityNotificationForCallID:(unsigned int)arg2 isDegraded:(_Bool)arg3 isRemote:(_Bool)arg4;	// IMP=0x0000000000021159
- (void)videoConference:(id)arg1 cancelRelayRequest:(unsigned int)arg2 requestDict:(id)arg3;	// IMP=0x00000000000210db
- (void)videoConference:(id)arg1 sendRelayUpdate:(unsigned int)arg2 updateDict:(id)arg3;	// IMP=0x000000000002105d
- (void)videoConference:(id)arg1 inititiateRelayRequest:(unsigned int)arg2 requestDict:(id)arg3;	// IMP=0x0000000000020fdf
- (void)videoConference:(id)arg1 isRemoteAudioBelowThreshold:(_Bool)arg2;	// IMP=0x0000000000020f66
- (void)videoConference:(id)arg1 updateOutputMeterLevel:(float)arg2;	// IMP=0x0000000000020eed
- (void)videoConference:(id)arg1 updateInputMeterLevel:(float)arg2;	// IMP=0x0000000000020e74
- (void)videoConference:(id)arg1 updateOutputFrequencyLevel:(id)arg2;	// IMP=0x0000000000020dfc
- (void)videoConference:(id)arg1 updateInputFrequencyLevel:(id)arg2;	// IMP=0x0000000000020d84
- (void)videoConference:(id)arg1 didRemoteScreenAttributesChange:(id)arg2 forCallID:(unsigned int)arg3;	// IMP=0x0000000000020d06
- (void)videoConference:(id)arg1 remoteVideoPaused:(_Bool)arg2 callID:(unsigned int)arg3;	// IMP=0x0000000000020c74
- (void)videoConference:(id)arg1 remoteAudioPaused:(_Bool)arg2 callID:(unsigned int)arg3;	// IMP=0x0000000000020be2
- (void)videoConference:(id)arg1 didRemoteVideoAttributesChange:(id)arg2 forCallID:(unsigned int)arg3;	// IMP=0x0000000000020b4a
- (void)videoConference:(id)arg1 didReceiveFirstRemoteFrameForCallID:(unsigned int)arg2;	// IMP=0x0000000000020a02
- (void)videoConference:(id)arg1 remoteMediaStalled:(_Bool)arg2 callID:(unsigned int)arg3;	// IMP=0x00000000000208ac
- (void)videoConference:(id)arg1 localIPChange:(id)arg2 withCallID:(unsigned int)arg3;	// IMP=0x000000000002072b
- (void)videoConference:(id)arg1 didStopWithCallID:(unsigned int)arg2 error:(id)arg3 callMetadata:(id)arg4;	// IMP=0x00000000000204b8
- (void)videoConference:(id)arg1 withCallID:(long long)arg2 didPauseVideo:(_Bool)arg3 error:(id)arg4;	// IMP=0x000000000002041e
- (void)videoConference:(id)arg1 withCallID:(long long)arg2 didPauseAudio:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000020384
- (void)videoConference:(id)arg1 withCallID:(long long)arg2 isSendingAudio:(_Bool)arg3 error:(id)arg4;	// IMP=0x00000000000202ea
- (void)videoConference:(id)arg1 didStopWithCallID:(unsigned int)arg2 error:(id)arg3;	// IMP=0x0000000000020190
- (void)videoConference:(id)arg1 didStartSession:(_Bool)arg2 withCallID:(unsigned int)arg3 withUserInfo:(id)arg4 error:(id)arg5;	// IMP=0x000000000001ffd4
- (void)videoConference:(id)arg1 didStartSession:(_Bool)arg2 withCallID:(unsigned int)arg3 error:(id)arg4;	// IMP=0x000000000001ff3a
- (unsigned int)doBlockingConnectionCheck;	// IMP=0x000000000001ff21
- (void)setLocalScreenAttributes:(id)arg1;	// IMP=0x000000000001fec3
- (id)localScreenAttributesForVideoAttributes:(id)arg1;	// IMP=0x000000000001fe8b
- (_Bool)setServerInfo:(id)arg1;	// IMP=0x000000000001fd5d
- (id)capabilitiesForCallID:(long long)arg1;	// IMP=0x000000000001fd55
- (void)updateCapabilities:(id)arg1 forCallID:(long long)arg2;	// IMP=0x000000000001fa12
- (_Bool)setPauseVideo:(_Bool)arg1 callID:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000001f9c6
- (_Bool)setPauseAudio:(_Bool)arg1 callID:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000001f97a
- (_Bool)setSendingAudio:(_Bool)arg1 callID:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000001f95f
@property(readonly) unsigned int natType;
@property(getter=isSpeakerPhoneEnabled) _Bool enableSpeakerPhone;
- (id)statsForCallID:(long long)arg1;	// IMP=0x000000000001f70b
- (double)roundTripTimeForCallID:(long long)arg1;	// IMP=0x000000000001f6f5
- (double)localPacketLossRateForCallID:(long long)arg1;	// IMP=0x000000000001f6df
- (double)remotePacketLossRateForCallID:(long long)arg1;	// IMP=0x000000000001f6c9
- (int)remoteFrameWidthForCallID:(long long)arg1;	// IMP=0x000000000001f6ae
- (int)remoteFrameHeightForCallID:(long long)arg1;	// IMP=0x000000000001f693
@property(readonly) int localFrameWidth;
@property(readonly) int localFrameHeight;
- (double)remoteBitrateForCallID:(long long)arg1;	// IMP=0x000000000001f651
- (double)remoteFramerateForCallID:(long long)arg1;	// IMP=0x000000000001f63b
- (double)localBitrateForCallID:(long long)arg1;	// IMP=0x000000000001f625
- (double)localFramerateForCallID:(long long)arg1;	// IMP=0x000000000001f60f
- (long long)videoStreamTokenForCallID:(long long)arg1;	// IMP=0x000000000001f606
- (void)setRemoteVideoBackLayer:(void *)arg1;	// IMP=0x000000000001f54b
- (void)setRemoteVideoLayer:(void *)arg1;	// IMP=0x000000000001f490
- (void *)remoteVideoBackLayer;	// IMP=0x000000000001f3d3
- (void *)remoteVideoLayer;	// IMP=0x000000000001f316
- (void)stopNetworkQualityUpdateTimer;	// IMP=0x000000000001f2d9
- (void)startNetworkQualityUpdateTimer;	// IMP=0x000000000001f20c
- (_Bool)updateNetworkQualityGraph;	// IMP=0x000000000001ee80
- (float)networkQuality;	// IMP=0x000000000001ee54
- (_Bool)setAudioOutputDevice:(id)arg1;	// IMP=0x000000000001ee3b
- (_Bool)setAudioInputDevice:(id)arg1;	// IMP=0x000000000001ee22
- (id)currentAudioOutputDevice;	// IMP=0x000000000001ee09
- (id)currentAudioInputDevice;	// IMP=0x000000000001edf0
@property(readonly) float inputMeterLevel;
- (_Bool)getIsVideoPaused:(_Bool *)arg1 callID:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000001ed9d
- (_Bool)getIsAudioPaused:(_Bool *)arg1 callID:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000001ed87
- (_Bool)getIsSendingAudio:(_Bool *)arg1 callID:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000001ed7f
@property(readonly) float outputMeterLevel;
@property(nonatomic, getter=isOutputFrequencyMeteringEnabled) _Bool outputFrequencyMeteringEnabled;
@property(nonatomic, getter=isInputFrequencyMeteringEnabled) _Bool inputFrequencyMeteringEnabled;
@property(nonatomic, getter=isInputMeteringEnabled) _Bool inputMeteringEnabled;
@property(nonatomic, getter=isOutputMeteringEnabled) _Bool outputMeteringEnabled;
- (void)processRemoteIPChange:(id)arg1 callID:(long long)arg2;	// IMP=0x000000000001eca3
- (void)setLastActiveCallID:(long long)arg1;	// IMP=0x000000000001ec8d
- (long long)lastActiveCallID;	// IMP=0x000000000001ec74
- (_Bool)setActive:(_Bool)arg1;	// IMP=0x000000000001ec5e
- (void)setCallReport:(long long)arg1 withReport:(id)arg2;	// IMP=0x000000000001ec48
- (void)sendProtobuf:(id)arg1 withType:(long long)arg2 forCallID:(long long)arg3;	// IMP=0x000000000001ec42
- (void)remoteCancelledCallID:(long long)arg1;	// IMP=0x000000000001ec0a
- (void)cancelCallID:(long long)arg1;	// IMP=0x000000000001eaea
- (void)stopCallID:(long long)arg1;	// IMP=0x000000000001e9ca
- (_Bool)startConnectionWithCallID:(long long)arg1 usingInviteData:(id)arg2 isCaller:(_Bool)arg3 relayResponseDict:(id)arg4 didOriginateRelayRequest:(_Bool)arg5 capabilities:(id)arg6 error:(id *)arg7;	// IMP=0x000000000001e958
- (_Bool)startConnectionWithCallID:(long long)arg1 oldCallID:(long long)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(_Bool)arg6 capabilities:(id)arg7 error:(id *)arg8;	// IMP=0x000000000001e8e9
- (_Bool)startConnectionWithCallID:(long long)arg1 usingInviteData:(id)arg2 isCaller:(_Bool)arg3 relayResponseDict:(id)arg4 didOriginateRelayRequest:(_Bool)arg5 capabilities:(id)arg6 idsSocket:(int)arg7 error:(id *)arg8;	// IMP=0x000000000001e87a
- (_Bool)startConnectionWithCallID:(long long)arg1 inviteData:(id)arg2 isCaller:(_Bool)arg3 capabilities:(id)arg4 destination:(id)arg5 error:(id *)arg6;	// IMP=0x000000000001e7f7
- (_Bool)startConnectionWithCallID:(long long)arg1 oldCallID:(long long)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(_Bool)arg6 capabilities:(id)arg7 idsSocket:(int)arg8 error:(id *)arg9;	// IMP=0x000000000001e788
- (_Bool)startConnectionWithCallID:(long long)arg1 oldCallID:(long long)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(_Bool)arg6 capabilities:(id)arg7 idsSocket:(int)arg8 destination:(id)arg9 error:(id *)arg10;	// IMP=0x000000000001e2c0
- (id)convertBlobtoNewBlob:(id)arg1;	// IMP=0x000000000001e1f7
- (id)convertBlobtoOldBlob:(id)arg1;	// IMP=0x000000000001e12e
@property(nonatomic) _Bool requiresWifi;
- (double)networkQualityForCallID:(long long)arg1;	// IMP=0x000000000001e0ec
- (void)setSessionID:(id)arg1 callID:(long long)arg2;	// IMP=0x000000000001e0d6
- (void)setPeerReportingIdentifier:(id)arg1 sessionIdentifier:(id)arg2 forCallID:(long long)arg3;	// IMP=0x000000000001dfa2
- (void)setPeerCN:(id)arg1 callID:(long long)arg2;	// IMP=0x000000000001df8c
- (id)callMetadataForCallID:(long long)arg1;	// IMP=0x000000000001df76
- (void)inviteDictionaryForCallID:(long long)arg1 remoteInviteDictionary:(id)arg2 nonCellularCandidateTimeout:(double)arg3 block:(CDUnknownBlockType)arg4 queue:(id)arg5;	// IMP=0x000000000001deda
- (id)newRandomParticipantID;	// IMP=0x000000000001de9f
- (void)sendData:(id)arg1 forCallID:(long long)arg2 encrypted:(_Bool)arg3;	// IMP=0x000000000001de53
- (void)sendARPLData:(id)arg1 toCallID:(long long)arg2;	// IMP=0x000000000001dd14
- (void)addGKSCallEvent:(id)arg1 sessionID:(id)arg2;	// IMP=0x000000000001dd0e
- (void)setSetSessionID:(id)arg1 forCallID:(long long)arg2;	// IMP=0x000000000001dd08
@property(getter=isUsingViceroyBlobFormat) _Bool useViceroyBlobFormat;
- (void)dealloc;	// IMP=0x000000000001d970
- (void)warmupForCall;	// IMP=0x000000000001d668
- (long long)initializeNewCallWithDeviceRole:(int)arg1 reportingHierarchyToken:(id)arg2;	// IMP=0x000000000001d4b2
- (long long)initializeNewCallWithDeviceRole:(int)arg1;	// IMP=0x000000000001d49e
- (long long)initializeNewCall;	// IMP=0x000000000001d488
@property(nonatomic) NSObject<AVConferenceDelegate> *delegate;
- (id)initWithClientUUID:(id)arg1 transportType:(unsigned int)arg2;	// IMP=0x000000000001ccd0
- (id)initWithClientUUID:(id)arg1;	// IMP=0x000000000001ccbc
- (id)init;	// IMP=0x000000000001cca8
- (void)handleGKSConnectivitySettingsUpdate:(id)arg1;	// IMP=0x000000000001cc6c
- (void)updateGKSConnectivitySettings;	// IMP=0x000000000001cc66
- (void)stopListeningForNotifications;	// IMP=0x000000000001cc2e
- (void)listenForNotifications;	// IMP=0x000000000001cbe2
- (void)setCallState:(id)arg1 forCallID:(id)arg2;	// IMP=0x000000000002550e
- (id)callStateForCallID:(id)arg1;	// IMP=0x00000000000253d5
- (void)serverDied;	// IMP=0x0000000000025259
- (void)serverReconnected;	// IMP=0x00000000000250f5
- (void)deregisterBlocksForVCNotifications;	// IMP=0x0000000000024ed0
- (void)registerBlocksForVCNotifications;	// IMP=0x0000000000021d07

@end

