//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVCStatisticsCollector, SenderLargeFrameInfo, VCRateControlServerBag;

__attribute__((visibility("hidden")))
@interface VCRateControlMediaController : NSObject
{
    id _mediaControllerDelegate;	// 8 = 0x8
    AVCStatisticsCollector *_statisticsCollector;	// 16 = 0x10
    struct tagHANDLE *_hMediaQueue;	// 24 = 0x18
    unsigned int _videoSendingBitrate;	// 32 = 0x20
    unsigned int _audioSendingBitrate;	// 36 = 0x24
    unsigned int _minTargetBitrate;	// 40 = 0x28
    unsigned int _targetBitrate;	// 44 = 0x2c
    _Bool _isVideoStoppedByVCRateControl;	// 48 = 0x30
    _Bool _isVideoStoppedByBaseband;	// 49 = 0x31
    _Bool _isVideoPausedByUser;	// 50 = 0x32
    _Bool _isAudioOnly;	// 51 = 0x33
    _Bool _isBasebandFlushing;	// 52 = 0x34
    _Bool _isAudioStall;	// 53 = 0x35
    _Bool _isInThrottlingMode;	// 54 = 0x36
    _Bool _allowVideoStop;	// 55 = 0x37
    _Bool _isRemoteAudioPaused;	// 56 = 0x38
    int _audioFractionTier;	// 60 = 0x3c
    double _lastAudioFractionChangeTime;	// 64 = 0x40
    double _lastAudioEnoughRateTime;	// 72 = 0x48
    unsigned char _videoPayloadType;	// 80 = 0x50
    unsigned int _videoRefreshFrameTimestamp;	// 84 = 0x54
    unsigned int _videoRefreshFramePacketCount;	// 88 = 0x58
    double _lastVideoRefreshFrameTime;	// 96 = 0x60
    double _lastVideoKeyFrameTime;	// 104 = 0x68
    SenderLargeFrameInfo *_senderLargeFrameInfo;	// 112 = 0x70
    unsigned int _probingLargeFrameSize;	// 120 = 0x78
    unsigned int _probingLargeFrameSizeCap;	// 124 = 0x7c
    unsigned int _probingSequencePacketSize;	// 128 = 0x80
    unsigned int _probingSequencePacketCount;	// 132 = 0x84
    _Bool _shouldDisableLargeFrameRequestsWhenInitialRampUp;	// 136 = 0x88
    _Bool _isRateLimitedMaxTimeExceeded;	// 137 = 0x89
    _Bool _isSenderProbingEnabled;	// 138 = 0x8a
    _Bool _enableAggressiveProbingSequence;	// 139 = 0x8b
    VCRateControlServerBag *_serverBag;	// 144 = 0x90
    double _minProbingSpacingAggressive;	// 152 = 0x98
    int _basebandFlushCount;	// 160 = 0xa0
    int _basebandFlushedVideoCount;	// 164 = 0xa4
    int _basebandFlushedAudioCount;	// 168 = 0xa8
    double _lastBasebandFlushCountChangeTime;	// 176 = 0xb0
    double _lastBasebandFlushAudioTime;	// 184 = 0xb8
    double _lastBasebandFlushVideoTime;	// 192 = 0xc0
    unsigned short _videoFlushTransactionID;	// 200 = 0xc8
    unsigned int _audioStallBitrate;	// 204 = 0xcc
    double _lastAudioStallFlushTime;	// 208 = 0xd0
    _Bool _isRTPFlushBasebandFromVCRateControl;	// 216 = 0xd8
    unsigned int _basebandAverageBitrate;	// 220 = 0xdc
    unsigned int _basebandAverageBitrateShort;	// 224 = 0xe0
    unsigned int _basebandTotalQueueDepth;	// 228 = 0xe4
    unsigned int _basebandFlushableQueueDepth;	// 232 = 0xe8
    double _basebandExpectedQueuingDelay;	// 240 = 0xf0
    double _basebandNBDCD;	// 248 = 0xf8
    double _lastBasebandHighNBDCDTime;	// 256 = 0x100
    _Bool _isBasebandQueuingDelayHigh;	// 264 = 0x108
    void *_logBasebandDump;	// 272 = 0x110
    void *_logBWEDump;	// 280 = 0x118
    unsigned int _afrcRemoteEstimatedBandwidth;	// 288 = 0x120
}

@property(retain, nonatomic) VCRateControlServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(nonatomic) _Bool enableAggressiveProbingSequence; // @synthesize enableAggressiveProbingSequence=_enableAggressiveProbingSequence;
@property(readonly, nonatomic) double lastVideoRefreshFrameTime; // @synthesize lastVideoRefreshFrameTime=_lastVideoRefreshFrameTime;
@property(readonly, nonatomic) double lastVideoKeyFrameTime; // @synthesize lastVideoKeyFrameTime=_lastVideoKeyFrameTime;
@property(nonatomic) int audioFractionTier; // @synthesize audioFractionTier=_audioFractionTier;
@property(nonatomic) _Bool isRTPFlushBasebandFromVCRateControl; // @synthesize isRTPFlushBasebandFromVCRateControl=_isRTPFlushBasebandFromVCRateControl;
@property(nonatomic) unsigned int afrcRemoteEstimatedBandwidth; // @synthesize afrcRemoteEstimatedBandwidth=_afrcRemoteEstimatedBandwidth;
@property(nonatomic) _Bool shouldDisableLargeFrameRequestsWhenInitialRampUp; // @synthesize shouldDisableLargeFrameRequestsWhenInitialRampUp=_shouldDisableLargeFrameRequestsWhenInitialRampUp;
@property(nonatomic) _Bool isRateLimitedMaxTimeExceeded; // @synthesize isRateLimitedMaxTimeExceeded=_isRateLimitedMaxTimeExceeded;
@property(nonatomic) _Bool allowVideoStop; // @synthesize allowVideoStop=_allowVideoStop;
@property(nonatomic) _Bool isRemoteAudioPaused; // @synthesize isRemoteAudioPaused=_isRemoteAudioPaused;
@property(readonly, nonatomic) _Bool isInThrottlingMode; // @synthesize isInThrottlingMode=_isInThrottlingMode;
@property(nonatomic) _Bool isAudioOnly; // @synthesize isAudioOnly=_isAudioOnly;
@property(nonatomic) _Bool isSenderProbingEnabled; // @synthesize isSenderProbingEnabled=_isSenderProbingEnabled;
@property(readonly, nonatomic) _Bool isVideoStoppedByVCRateControl; // @synthesize isVideoStoppedByVCRateControl=_isVideoStoppedByVCRateControl;
@property(readonly, nonatomic) int basebandFlushedAudioCount; // @synthesize basebandFlushedAudioCount=_basebandFlushedAudioCount;
@property(readonly, nonatomic) int basebandFlushedVideoCount; // @synthesize basebandFlushedVideoCount=_basebandFlushedVideoCount;
@property(nonatomic) double lastBasebandFlushCountChangeTime; // @synthesize lastBasebandFlushCountChangeTime=_lastBasebandFlushCountChangeTime;
@property(nonatomic) int basebandFlushCount; // @synthesize basebandFlushCount=_basebandFlushCount;
@property(nonatomic) unsigned int targetBitrate; // @synthesize targetBitrate=_targetBitrate;
@property(nonatomic) unsigned int minTargetBitrate; // @synthesize minTargetBitrate=_minTargetBitrate;
@property(nonatomic) unsigned int audioSendingBitrate; // @synthesize audioSendingBitrate=_audioSendingBitrate;
@property(nonatomic) unsigned int videoSendingBitrate; // @synthesize videoSendingBitrate=_videoSendingBitrate;
@property(retain, nonatomic) AVCStatisticsCollector *statisticsCollector; // @synthesize statisticsCollector=_statisticsCollector;
- (void)updateLargeFrameSizeWithBandwidth:(unsigned int)arg1;	// IMP=0x00000000000e41d6
- (void)updateProbingLargeFrameSizeCap;	// IMP=0x00000000000e4120
- (_Bool)isProbingLargeFrameRequiredAtTime:(double)arg1;	// IMP=0x00000000000e3e54
- (void)printLargeFrameStatsAtTime:(double)arg1 timestamp:(unsigned int)arg2 timeSinceLastProbingSequence:(double)arg3 frameSize:(unsigned int)arg4 wastedBytes:(unsigned int)arg5 fecRatio:(double)arg6 isFrameRequested:(_Bool)arg7;	// IMP=0x00000000000e3c89
- (void)scheduleProbingSequenceAtTime:(double)arg1;	// IMP=0x00000000000e3b85
- (void)increaseBasebandFlushCountInternallyWithSuggestion:(struct VCRateControlMediaSuggestion *)arg1;	// IMP=0x00000000000e3add
- (_Bool)increaseFlushCountForVideoRefresh:(int)arg1 transactionID:(unsigned short)arg2;	// IMP=0x00000000000e3a6c
- (void)recordVideoRefreshFrameWithTimestamp:(unsigned int)arg1 payloadType:(unsigned char)arg2 packetCount:(unsigned int)arg3 isKeyFrame:(_Bool)arg4;	// IMP=0x00000000000e39d9
- (void)scheduleProbingSequenceWithFrameSize:(unsigned int)arg1 paddingBytes:(unsigned int)arg2 timestamp:(unsigned int)arg3 fecRatio:(double)arg4 isProbingSequenceScheduled:(_Bool *)arg5;	// IMP=0x00000000000e381c
@property(readonly, nonatomic) unsigned int probingSequencePacketSize; // @synthesize probingSequencePacketSize=_probingSequencePacketSize;
@property(readonly, nonatomic) unsigned int probingSequencePacketCount; // @synthesize probingSequencePacketCount=_probingSequencePacketCount;
@property(readonly, nonatomic) unsigned int probingLargeFrameSize; // @synthesize probingLargeFrameSize=_probingLargeFrameSize;
- (_Bool)rampUpAudioFraction;	// IMP=0x00000000000e3570
- (_Bool)rampDownAudioFraction;	// IMP=0x00000000000e34d3
- (_Bool)didMediaGetFlushedWithPayloadType:(unsigned char)arg1 transactionID:(unsigned short)arg2 packetDropped:(unsigned short)arg3 sequenceNumberArray:(unsigned short *)arg4;	// IMP=0x00000000000e32fd
- (void)decreaseFlushCount:(int)arg1;	// IMP=0x00000000000e31cb
@property(readonly, nonatomic) _Bool isVideoStopped;
- (void)resumeVideoByVCRateControl;	// IMP=0x00000000000e2f0c
- (void)stopVideoByVCRateControl;	// IMP=0x00000000000e2dc0
- (void)pauseVideoByUser:(_Bool)arg1;	// IMP=0x00000000000e2c07
- (void)updateAudioStallInMediaSuggestion:(struct VCRateControlMediaSuggestion *)arg1 isSuggestionNeeded:(_Bool *)arg2 atTime:(double)arg3;	// IMP=0x00000000000e2b19
- (void)updateBasebandSuggestionWithStatistics:(CDStruct_87b99198)arg1;	// IMP=0x00000000000e23c4
- (void)computePacketLossWithRemoteInfo:(struct VCRCMediaPLPFromRemoteInfo *)arg1;	// IMP=0x00000000000e234c
- (void)getMediaQueueRateChangeCounter:(unsigned int *)arg1 rateChangeTime:(double *)arg2;	// IMP=0x00000000000e232f
- (void)getMediaQueueInVideoBitrate:(double *)arg1 outVideoBitrate:(double *)arg2 inAudioBitrate:(double *)arg3 outAudioBitrate:(double *)arg4;	// IMP=0x00000000000e22e2
- (void)enableBWELogDump:(void *)arg1;	// IMP=0x00000000000e1ef7
- (void)enableBasebandLogDump:(void *)arg1;	// IMP=0x00000000000e1eea
- (void)dealloc;	// IMP=0x00000000000e1e68
- (id)initWithMediaQueue:(struct tagHANDLE *)arg1 delegate:(id)arg2;	// IMP=0x00000000000e1d2a

@end

