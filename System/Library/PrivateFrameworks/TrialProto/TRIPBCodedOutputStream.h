//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableData;

@interface TRIPBCodedOutputStream : NSObject
{
    struct TRIPBOutputBufferState state_;	// 8 = 0x8
    NSMutableData *buffer_;	// 40 = 0x28
}

+ (id)streamWithData:(id)arg1;	// IMP=0x0000000000051de3
+ (id)streamWithOutputStream:(id)arg1;	// IMP=0x0000000000051d87
- (void)writeRawLittleEndian64:(long long)arg1;	// IMP=0x0000000000054f47
- (void)writeRawLittleEndian32:(int)arg1;	// IMP=0x0000000000054f37
- (void)writeRawVarint64:(long long)arg1;	// IMP=0x0000000000054f26
- (void)writeRawVarintSizeTAs32:(unsigned long long)arg1;	// IMP=0x0000000000054f16
- (void)writeRawVarint32:(int)arg1;	// IMP=0x0000000000054f06
- (void)writeTag:(unsigned int)arg1 format:(int)arg2;	// IMP=0x0000000000054ee0
- (void)writeRawPtr:(const void *)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;	// IMP=0x0000000000054dd3
- (void)writeRawData:(id)arg1;	// IMP=0x0000000000054d7f
- (void)writeRawByte:(unsigned char)arg1;	// IMP=0x0000000000054d46
- (void)flush;	// IMP=0x0000000000054ca5
- (void)writeRawMessageSetExtension:(int)arg1 value:(id)arg2;	// IMP=0x0000000000054c2b
- (void)writeMessageSetExtension:(int)arg1 value:(id)arg2;	// IMP=0x0000000000054bb1
- (void)writeUnknownGroupArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054a8e
- (void)writeGroupArray:(int)arg1 values:(id)arg2;	// IMP=0x000000000005496b
- (void)writeBytesArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054848
- (void)writeMessageArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054725
- (void)writeStringArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054602
- (void)writeEnumArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000000000543ca
- (void)writeBoolArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000000000541f9
- (void)writeSFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000054027
- (void)writeSFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053e53
- (void)writeSInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053c5c
- (void)writeSInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053a14
- (void)writeFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053842
- (void)writeFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000000005366e
- (void)writeUInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053436
- (void)writeInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000000000531e8
- (void)writeInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053004
- (void)writeUInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000052e20
- (void)writeFloatArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000052c52
- (void)writeDoubleArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000052a84
- (void)writeSInt64:(int)arg1 value:(long long)arg2;	// IMP=0x0000000000052a49
- (void)writeSInt64NoTag:(long long)arg1;	// IMP=0x0000000000052a30
- (void)writeSInt32:(int)arg1 value:(int)arg2;	// IMP=0x00000000000529f5
- (void)writeSInt32NoTag:(int)arg1;	// IMP=0x00000000000529df
- (void)writeSFixed64:(int)arg1 value:(long long)arg2;	// IMP=0x00000000000529a9
- (void)writeSFixed64NoTag:(long long)arg1;	// IMP=0x0000000000052998
- (void)writeSFixed32:(int)arg1 value:(int)arg2;	// IMP=0x0000000000052962
- (void)writeSFixed32NoTag:(int)arg1;	// IMP=0x0000000000052952
- (void)writeEnum:(int)arg1 value:(int)arg2;	// IMP=0x000000000005291f
- (void)writeEnumNoTag:(int)arg1;	// IMP=0x000000000005290f
- (void)writeUInt32:(int)arg1 value:(unsigned int)arg2;	// IMP=0x00000000000528ce
- (void)writeUInt32NoTag:(unsigned int)arg1;	// IMP=0x00000000000528be
- (void)writeBytes:(int)arg1 value:(id)arg2;	// IMP=0x0000000000052877
- (void)writeBytesNoTag:(id)arg1;	// IMP=0x000000000005282a
- (void)writeMessage:(int)arg1 value:(id)arg2;	// IMP=0x00000000000527e3
- (void)writeMessageNoTag:(id)arg1;	// IMP=0x0000000000052796
- (void)writeUnknownGroup:(int)arg1 value:(id)arg2;	// IMP=0x000000000005274a
- (void)writeUnknownGroupNoTag:(int)arg1 value:(id)arg2;	// IMP=0x000000000005270b
- (void)writeGroup:(int)arg1 value:(id)arg2;	// IMP=0x00000000000526bf
- (void)writeGroupNoTag:(int)arg1 value:(id)arg2;	// IMP=0x0000000000052680
- (void)writeString:(int)arg1 value:(id)arg2;	// IMP=0x0000000000052639
- (void)writeStringNoTag:(id)arg1;	// IMP=0x0000000000052372
- (void)writeBool:(int)arg1 value:(_Bool)arg2;	// IMP=0x000000000005231a
- (void)writeBoolNoTag:(_Bool)arg1;	// IMP=0x00000000000522e1
- (void)writeFixed32:(int)arg1 value:(unsigned int)arg2;	// IMP=0x00000000000522ab
- (void)writeFixed32NoTag:(unsigned int)arg1;	// IMP=0x000000000005229b
- (void)writeFixed64:(int)arg1 value:(unsigned long long)arg2;	// IMP=0x0000000000052265
- (void)writeFixed64NoTag:(unsigned long long)arg1;	// IMP=0x0000000000052254
- (void)writeInt32:(int)arg1 value:(int)arg2;	// IMP=0x0000000000052221
- (void)writeInt32NoTag:(int)arg1;	// IMP=0x00000000000521fa
- (void)writeInt64:(int)arg1 value:(long long)arg2;	// IMP=0x00000000000521c7
- (void)writeInt64NoTag:(long long)arg1;	// IMP=0x00000000000521b6
- (void)writeUInt64:(int)arg1 value:(unsigned long long)arg2;	// IMP=0x0000000000052183
- (void)writeUInt64NoTag:(unsigned long long)arg1;	// IMP=0x00000000000520e8
- (void)writeFloat:(int)arg1 value:(float)arg2;	// IMP=0x00000000000520a9
- (void)writeFloatNoTag:(float)arg1;	// IMP=0x0000000000051fd6
- (void)writeDouble:(int)arg1 value:(double)arg2;	// IMP=0x0000000000051f96
- (void)writeDoubleNoTag:(double)arg1;	// IMP=0x0000000000051e12
- (id)initWithOutputStream:(id)arg1 data:(id)arg2;	// IMP=0x0000000000051ce4
- (id)initWithData:(id)arg1;	// IMP=0x0000000000051ccd
- (id)initWithOutputStream:(id)arg1;	// IMP=0x0000000000051c81
- (void)dealloc;	// IMP=0x0000000000051c26

@end

