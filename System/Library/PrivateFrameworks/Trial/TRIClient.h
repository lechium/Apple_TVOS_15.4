//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Trial/TRIFactorProviding-Protocol.h>

@class NSString, TRIDefaultFactorProvider, TRIFactorsState, TRILogger, TRITrackingId, _PASLock;
@protocol OS_dispatch_queue, TRIPaths;

@interface TRIClient : NSObject <TRIFactorProviding>
{
    id <TRIPaths> _paths;	// 8 = 0x8
    TRIDefaultFactorProvider *_defaultFactorProvider;	// 16 = 0x10
    int _projectId;	// 24 = 0x18
    double _staleFactorsUsageGracePeriod;	// 32 = 0x20
    _PASLock *_lock;	// 40 = 0x28
    struct atomic_flag _isLazyInitComplete;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_notificationQueue;	// 56 = 0x38
    TRIFactorsState *_factorsState;	// 64 = 0x40
    TRILogger *_logger;	// 72 = 0x48
}

+ (id)sysdiagnoseInfoWithError:(id *)arg1;	// IMP=0x000000000003c996
+ (id)printedNCVInformation;	// IMP=0x000000000003c4e2
+ (id)printedExperimentInformation:(id *)arg1;	// IMP=0x000000000003bb78
+ (id)activeExperimentInformation:(id *)arg1;	// IMP=0x000000000003bb5f
+ (id)printedRolloutInformation:(id *)arg1;	// IMP=0x000000000003b05b
+ (id)activeRolloutInformation:(id *)arg1;	// IMP=0x000000000003b00f
+ (id)clientWithProjectId:(int)arg1 factorsState:(id)arg2;	// IMP=0x0000000000033cd5
+ (id)clientWithIdentifier:(int)arg1 unit:(int)arg2;	// IMP=0x0000000000033b7e
+ (id)clientWithIdentifier:(int)arg1;	// IMP=0x0000000000033b60
+ (_Bool)requiresTrialDataVaultAccess;	// IMP=0x0000000000033b4e
+ (_Bool)requiresLogging;	// IMP=0x0000000000033b3c
+ (_Bool)isPlatformBinary;	// IMP=0x0000000000033b34
- (void).cxx_destruct;	// IMP=0x000000000003cac6
@property(readonly, nonatomic) TRILogger *logger; // @synthesize logger=_logger;
- (_Bool)_hasAppropriatePermissionsForNamespaceName:(id)arg1;	// IMP=0x000000000003ae48
- (_Bool)immediateDownloadForNamespaceNames:(id)arg1 allowExpensiveNetworking:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000003aaf6
- (void)dispose;	// IMP=0x000000000003aae4
- (void)_invalidateFactors;	// IMP=0x000000000003aa51
- (void)downloadNamespaceWithName:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000003aa39
- (id)experimentIdWithNamespace:(unsigned int)arg1;	// IMP=0x000000000003a9c4
- (id)treatmentIdWithNamespace:(unsigned int)arg1;	// IMP=0x000000000003a94f
- (id)addUpdateHandlerForNamespaceId:(unsigned int)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000003a8a2
- (id)addUpdateHandlerForNamespaceId:(unsigned int)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000003a80e
- (id)factorLevelsWithNamespace:(unsigned int)arg1;	// IMP=0x000000000003a799
- (id)levelForFactor:(id)arg1 withNamespace:(unsigned int)arg2;	// IMP=0x000000000003a6fc
- (void)removeDownloadStatusHandlersWithToken:(id)arg1;	// IMP=0x000000000003a698
- (unsigned long long)statusOfDownloadForFactors:(id)arg1 withNamespace:(id)arg2 token:(id *)arg3 queue:(id)arg4 progress:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000000039aab
- (_Bool)promoteFactorsForNamespace:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000398a0
- (_Bool)setFactorsProvisionalForNamespace:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000039746
- (id)purgeabilityLevelsForFactorsWithNamespaceName:(id)arg1;	// IMP=0x000000000003940f
- (_Bool)setPurgeabilityLevelsForFactors:(id)arg1 withNamespaceName:(id)arg2;	// IMP=0x00000000000391ae
- (void)removeLevelsForFactorsImmediately:(id)arg1 withNamespace:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000038ea2
- (void)removeLevelsForFactors:(id)arg1 withNamespace:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000038b96
- (void)downloadLevelsForFactors:(id)arg1 withNamespace:(id)arg2 queue:(id)arg3 options:(id)arg4 progress:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000000038657
- (id)sizesForFactors:(id)arg1 withNamespaceName:(id)arg2 forMetric:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x00000000000375d9
- (void)downloadNamespaceWithName:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000036d44
- (_Bool)hasDownloadedNamespaceWithName:(id)arg1;	// IMP=0x0000000000036c00
- (_Bool)deregisterNamespaceName:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000036b6a
- (_Bool)registerNamespaceName:(id)arg1 compatibilityVersion:(unsigned int)arg2 defaultsFileURL:(id)arg3 applicationGroup:(id)arg4 cloudKitContainerId:(int)arg5 error:(id *)arg6;	// IMP=0x0000000000036783
- (unsigned int)compatibilityVersionWithNamespaceName:(id)arg1;	// IMP=0x000000000003676d
- (_Bool)hasRegisteredNamespaceWithName:(id)arg1;	// IMP=0x0000000000036757
- (long long)_appContainerType:(id)arg1;	// IMP=0x0000000000036665
- (id)experimentIdWithNamespaceName:(id)arg1;	// IMP=0x0000000000036604
- (_Bool)trialIdentifiersWithNamespaceName:(id)arg1 experimentId:(id *)arg2 deploymentId:(int *)arg3 treatmentId:(id *)arg4;	// IMP=0x00000000000364c4
- (id)_rampIdForRolloutDeployment:(id)arg1;	// IMP=0x0000000000036299
- (id)rolloutIdentifiersWithNamespaceName:(id)arg1;	// IMP=0x0000000000035f8b
- (id)experimentIdentifiersWithNamespaceName:(id)arg1;	// IMP=0x0000000000035cbb
- (id)treatmentIdWithNamespaceName:(id)arg1;	// IMP=0x0000000000035c38
- (id)rolloutIdWithNamespaceName:(id)arg1;	// IMP=0x0000000000035bb5
- (void)_registerUpdateHandlerForNamespaceName:(id)arg1 notificationCallback:(id)arg2 clientMethodNameForLogging:(const char *)arg3 callingFunctionReturnAddressForLogging:(void *)arg4;	// IMP=0x0000000000035200
- (void)_setupExcessiveStaleFactorsUsageTimerWithGuardedData:(id)arg1 namespace:(id)arg2 clientMethodNameForLogging:(const char *)arg3 callingFunctionReturnAddressForLogging:(void *)arg4;	// IMP=0x0000000000034e44
- (void)removeUpdateHandlerForToken:(id)arg1;	// IMP=0x0000000000034be2
- (id)addUpdateHandlerForNamespaceName:(id)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000034af7
- (id)addUpdateHandlerForNamespaceName:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000034a37
- (id)factorLevelsWithNamespaceName:(id)arg1;	// IMP=0x000000000003498e
- (id)levelForFactor:(id)arg1 withNamespaceName:(id)arg2;	// IMP=0x00000000000348c6
- (id)newTrackingIdWithTreatmentRefresh:(_Bool)arg1;	// IMP=0x00000000000348ab
- (id)newTrackingId;	// IMP=0x000000000003488b
@property(readonly, nonatomic) TRITrackingId *trackingId;
- (id)_refresh:(_Bool)arg1;	// IMP=0x0000000000034483
- (void)refresh;	// IMP=0x0000000000034463
- (void)_checkEntitlements;	// IMP=0x00000000000342ad
- (void)_lazyInit;	// IMP=0x0000000000034271
- (void)dealloc;	// IMP=0x00000000000341af
- (id)initWithNonLoggingClientIdentifier:(int)arg1 paths:(id)arg2;	// IMP=0x0000000000034189
- (id)initWithClientIdentifier:(int)arg1 paths:(id)arg2 unit:(int)arg3 factorsState:(id)arg4 staleFactorsUsageGracePeriod:(double)arg5 logger:(id)arg6;	// IMP=0x0000000000033f1d
- (void)setLogger:(id)arg1;	// IMP=0x0000000000033f0c
- (id)initWithClientIdentifier:(int)arg1 paths:(id)arg2 unit:(int)arg3 staleFactorsUsageGracePeriod:(double)arg4 logger:(id)arg5;	// IMP=0x0000000000033e57

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

