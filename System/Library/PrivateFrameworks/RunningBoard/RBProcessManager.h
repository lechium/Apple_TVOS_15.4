//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <RunningBoard/RBProcessManaging-Protocol.h>
#import <RunningBoard/RBStateCapturing-Protocol.h>

@class NSCountedSet, NSMutableDictionary, NSString, RBLaunchdJobManager, RBProcess, RBProcessIndex, RBProcessMap, RBSystemState;
@protocol RBBundlePropertiesManaging, RBEntitlementManaging, RBProcessManagerDelegate;

@interface RBProcessManager : NSObject <RBProcessManaging, RBStateCapturing>
{
    RBLaunchdJobManager *_jobManager;	// 8 = 0x8
    id <RBBundlePropertiesManaging> _bundlePropertiesManager;	// 16 = 0x10
    id <RBEntitlementManaging> _entitlementManager;	// 24 = 0x18
    id <RBProcessManagerDelegate> _delegate;	// 32 = 0x20
    struct os_unfair_lock_s _lock;	// 40 = 0x28
    struct os_unfair_lock_s _pendingExitBlockLock;	// 44 = 0x2c
    _Atomic unsigned long long _counter;	// 48 = 0x30
    RBProcess *_cachedLastResolvedAndNotTrackedProcess;	// 56 = 0x38
    RBProcessIndex *_processIndex;	// 64 = 0x40
    RBProcessIndex *_processGraveyard;	// 72 = 0x48
    RBSystemState *_systemState;	// 80 = 0x50
    RBProcessMap *_processState;	// 88 = 0x58
    NSMutableDictionary *_identityToPendingExitBlock;	// 96 = 0x60
    NSMutableDictionary *_identityToProcessLifecycleQueue;	// 104 = 0x68
    NSCountedSet *_lifecycleQueuesInUse;	// 112 = 0x70
    _Bool _systemPreventsIdleSleep;	// 120 = 0x78
}

+ (id)stateApplicationQueue;	// IMP=0x0000000000050634
- (void).cxx_destruct;	// IMP=0x000000000005725b
- (void)_removeProcess:(id)arg1;	// IMP=0x000000000005703d
- (id)_lifecycleQueue_addProcessWithInstance:(id)arg1 properties:(id)arg2;	// IMP=0x0000000000056297
- (void)_releaseLifecycleQueueForIdentity:(id)arg1;	// IMP=0x0000000000056186
- (id)_getLifecycleQueueForIdentity:(id)arg1;	// IMP=0x0000000000055ef3
- (void)_executeLifecycleEventForIdentity:(id)arg1 sync:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000055d0d
- (id)_resolveProcessWithIdentifier:(id)arg1 auditToken:(id)arg2 properties:(id *)arg3;	// IMP=0x00000000000553c9
- (id)_processForInstance:(id)arg1;	// IMP=0x0000000000055302
- (id)_processForIdentifier:(id)arg1;	// IMP=0x0000000000055284
- (id)captureState;	// IMP=0x0000000000055272
@property(readonly, copy, nonatomic) NSString *stateCaptureTitle;
- (void)removeStateForProcessIdentity:(id)arg1;	// IMP=0x000000000005524a
- (void)applySystemState:(id)arg1;	// IMP=0x00000000000551e0
- (void)didUpdateProcessStates:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000054712
- (id)busyExtensionInstancesFromSet:(id)arg1;	// IMP=0x000000000005445f
- (void)executeTerminateRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000534fb
- (_Bool)_canTerminateProcess:(id)arg1 withContext:(id)arg2 error:(out id *)arg3;	// IMP=0x00000000000531f6
- (id)executeLaunchRequest:(id)arg1 withError:(out id *)arg2;	// IMP=0x000000000005204a
- (void)_validateBundleIDForProcess:(id)arg1 launchedWithContext:(id)arg2;	// IMP=0x0000000000051f51
- (void)systemPreventIdleSleepStateDidChange:(_Bool)arg1;	// IMP=0x0000000000051d28
- (_Bool)isActiveProcess:(id)arg1;	// IMP=0x0000000000051d12
- (id)processesMatchingPredicate:(id)arg1;	// IMP=0x000000000005192c
- (id)processForInstance:(id)arg1;	// IMP=0x0000000000051865
- (id)processForIdentity:(id)arg1;	// IMP=0x000000000005184f
- (id)_processForIdentifier:(id)arg1 withAuditToken:(id)arg2 forceStartTracking:(_Bool)arg3;	// IMP=0x0000000000050fa6
- (id)processForIdentifierWithoutStartingTracking:(id)arg1;	// IMP=0x0000000000050f3b
- (id)processForIdentifier:(id)arg1;	// IMP=0x0000000000050ecd
- (id)processForAuditToken:(id)arg1;	// IMP=0x0000000000050e2a
- (void)start;	// IMP=0x0000000000050a9f
@property(readonly, copy) NSString *debugDescription;
- (id)initWithBundlePropertiesManager:(id)arg1 entitlementManager:(id)arg2 delegate:(id)arg3;	// IMP=0x000000000005071f
- (id)init;	// IMP=0x0000000000050698

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

