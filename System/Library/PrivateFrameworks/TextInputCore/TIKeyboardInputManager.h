//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TextInputCore/TILanguageSelectionControllerDelegate-Protocol.h>
#import <TextInputCore/TIRevisionHistoryDelegate-Protocol.h>

@class NSArray, NSCharacterSet, NSMutableDictionary, NSMutableSet, NSMutableString, NSString, TIAutocorrectionList, TIAutoshiftRegularExpressionLoader, TICharacterSetDescription, TICounterChangeCache, TIEmojiCandidateGenerator, TIFilterParameterLoader, TIInputContextHistory, TIKeyboardCandidate, TIKeyboardFeatureSpecialization, TIKeyboardInputManagerConfig, TIKeyboardInputManagerState, TIKeyboardLayout, TIKeyboardLayoutState, TIKeyboardState, TILRUDictionary, TILanguageSelectionController, TIRevisionHistory, TISmartPunctuationOptions, TISmartSelector, TISupplementalLexiconController, TITextCheckerExemptions, TITypingSessionMonitor;
@protocol TICandidateHandler;

@interface TIKeyboardInputManager <TIRevisionHistoryDelegate, TILanguageSelectionControllerDelegate>
{
    void *m_impl;	// 16 = 0x10
    NSMutableString *m_composedText;	// 24 = 0x18
    unsigned long long m_initialSelectedIndex;	// 32 = 0x20
    TIKeyboardLayout *_keyLayout;	// 40 = 0x28
    TIKeyboardLayoutState *_layoutState;	// 48 = 0x30
    TIKeyboardInputManagerState *_currentState;	// 56 = 0x38
    TIKeyboardFeatureSpecialization *_keyboardFeatureSpecialization;	// 64 = 0x40
    NSCharacterSet *_allowPredictionCharacterSet;	// 72 = 0x48
    NSMutableDictionary *_cachedLayoutTags;	// 80 = 0x50
    struct shared_ptr<KB::TypologyLogger> m_typology_recorder;	// 88 = 0x58
    shared_ptr_e9f752ce m_lightweight_language_model;	// 104 = 0x68
    TILanguageSelectionController *_languageSelectionController;	// 120 = 0x78
    TIEmojiCandidateGenerator *_emojiCandidateGenerator;	// 128 = 0x80
    TIInputContextHistory *_synchronizedInputContextHistory;	// 136 = 0x88
    TICharacterSetDescription *_wordCharacters;	// 144 = 0x90
    TICharacterSetDescription *_closingQuotes;	// 152 = 0x98
    TICharacterSetDescription *_openingQuotes;	// 160 = 0xa0
    TISmartPunctuationOptions *_smartOptions;	// 168 = 0xa8
    int _lastHitTestKeycode;	// 176 = 0xb0
    _Bool _didInitialSync;	// 180 = 0xb4
    _Bool _wordLearningEnabled;	// 181 = 0xb5
    _Bool _isEditingWordPrefix;	// 182 = 0xb6
    unsigned short _supplementalPrefix;	// 184 = 0xb8
    TIKeyboardState *_keyboardState;	// 192 = 0xc0
    TISupplementalLexiconController *_currentCandidateGenerationContextSupplementalLexicons;	// 200 = 0xc8
    TIKeyboardInputManagerConfig *_config;	// 208 = 0xd0
    TIRevisionHistory *_revisionHistory;	// 216 = 0xd8
    TILRUDictionary *_autocorrectionHistory;	// 224 = 0xe0
    TILRUDictionary *_recentAutocorrections;	// 232 = 0xe8
    TILRUDictionary *_recentPredictiveInputSelections;	// 240 = 0xf0
    TILRUDictionary *_rejectedAutocorrections;	// 248 = 0xf8
    TILRUDictionary *_autocorrectionForCurrentStem;	// 256 = 0x100
    TILRUDictionary *_rejectedAutocorrectionsDisplayedOrInserted;	// 264 = 0x108
    TILRUDictionary *_autocorrectionListsSuggestedForCurrentInput;	// 272 = 0x110
    TILRUDictionary *_autocorrectionListsForWordsInDocument;	// 280 = 0x118
    TIAutoshiftRegularExpressionLoader *_autoshiftRegexLoader;	// 288 = 0x120
    TITextCheckerExemptions *_textCheckerExemptions;	// 296 = 0x128
    unsigned long long _linguisticResourceStatus;	// 304 = 0x130
    long long _deleteKeyCount;	// 312 = 0x138
    TIKeyboardCandidate *_hitTestCorrectedInputMatchingCandidate;	// 320 = 0x140
    TIKeyboardCandidate *_lastAcceptedText;	// 328 = 0x148
    NSMutableSet *_rejectedConversionsForCurrentContinuousPath;	// 336 = 0x150
    TITypingSessionMonitor *_typingSessionMonitor;	// 344 = 0x158
    TICounterChangeCache *_counterChangeCache;	// 352 = 0x160
    TISmartSelector *_smartSelector;	// 360 = 0x168
    CDUnknownBlockType _proactiveSuggestionsGenerationBlock;	// 368 = 0x170
    TIAutocorrectionList *_lastContinuousPathAutocorrection;	// 376 = 0x178
    id <TICandidateHandler> _candidateHandlerForOpenRequest;	// 384 = 0x180
    unsigned long long _lastNumCandidatesRequest;	// 392 = 0x188
    TIFilterParameterLoader *_filterParameterLoader;	// 400 = 0x190
    CDUnknownBlockType _candidateGenerationCompletionHandler;	// 408 = 0x198
    long long _userInterfaceIdiom;	// 416 = 0x1a0
    struct _NSRange _candidateRange;	// 424 = 0x1a8
}

+ (id)offlineLearningHandleForInputMode:(id)arg1;	// IMP=0x00000000000f7b22
+ (int)shiftContextForShiftState:(int)arg1 autocapitalizationType:(unsigned long long)arg2;	// IMP=0x00000000000f7ae8
+ (void)clearRecentsFileForIdentifier:(id)arg1;	// IMP=0x00000000000fd680
+ (id)recentsFilePathForIdentifier:(id)arg1;	// IMP=0x00000000000fd5b8
+ (void)removeAllDynamicDictionaries;	// IMP=0x00000000000fd322
+ (void)removeDynamicDictionaryForInputMode:(id)arg1;	// IMP=0x00000000000fd29b
+ (id)dynamicDictionaryFilePathForInputMode:(id)arg1;	// IMP=0x00000000000fd193
+ (id)userDictionaryWordKeyPairsFilePath;	// IMP=0x00000000000fd13c
+ (id)keyboardUserDirectory;	// IMP=0x00000000000fd0ee
+ (void)resetResponseKit;	// IMP=0x00000000000fd0aa
- (id).cxx_construct;	// IMP=0x00000000000f4b8b
- (void).cxx_destruct;	// IMP=0x00000000000f48c9
@property(nonatomic) long long userInterfaceIdiom; // @synthesize userInterfaceIdiom=_userInterfaceIdiom;
@property(copy, nonatomic) CDUnknownBlockType candidateGenerationCompletionHandler; // @synthesize candidateGenerationCompletionHandler=_candidateGenerationCompletionHandler;
@property(readonly, nonatomic) TIFilterParameterLoader *filterParameterLoader; // @synthesize filterParameterLoader=_filterParameterLoader;
@property(nonatomic) unsigned long long lastNumCandidatesRequest; // @synthesize lastNumCandidatesRequest=_lastNumCandidatesRequest;
@property(retain, nonatomic) id <TICandidateHandler> candidateHandlerForOpenRequest; // @synthesize candidateHandlerForOpenRequest=_candidateHandlerForOpenRequest;
@property(retain, nonatomic) TIAutocorrectionList *lastContinuousPathAutocorrection; // @synthesize lastContinuousPathAutocorrection=_lastContinuousPathAutocorrection;
@property(copy, nonatomic) CDUnknownBlockType proactiveSuggestionsGenerationBlock; // @synthesize proactiveSuggestionsGenerationBlock=_proactiveSuggestionsGenerationBlock;
@property(retain, nonatomic) TISmartSelector *smartSelector; // @synthesize smartSelector=_smartSelector;
@property(retain, nonatomic) TICounterChangeCache *counterChangeCache; // @synthesize counterChangeCache=_counterChangeCache;
@property(retain, nonatomic) TITypingSessionMonitor *typingSessionMonitor; // @synthesize typingSessionMonitor=_typingSessionMonitor;
@property(retain, nonatomic) NSMutableSet *rejectedConversionsForCurrentContinuousPath; // @synthesize rejectedConversionsForCurrentContinuousPath=_rejectedConversionsForCurrentContinuousPath;
@property(copy, nonatomic) TIKeyboardCandidate *lastAcceptedText; // @synthesize lastAcceptedText=_lastAcceptedText;
@property(retain, nonatomic) TIKeyboardCandidate *hitTestCorrectedInputMatchingCandidate; // @synthesize hitTestCorrectedInputMatchingCandidate=_hitTestCorrectedInputMatchingCandidate;
@property(nonatomic) long long deleteKeyCount; // @synthesize deleteKeyCount=_deleteKeyCount;
@property(readonly, nonatomic) unsigned long long linguisticResourceStatus; // @synthesize linguisticResourceStatus=_linguisticResourceStatus;
@property(readonly, nonatomic) TITextCheckerExemptions *textCheckerExemptions; // @synthesize textCheckerExemptions=_textCheckerExemptions;
@property(retain, nonatomic) TIAutoshiftRegularExpressionLoader *autoshiftRegexLoader; // @synthesize autoshiftRegexLoader=_autoshiftRegexLoader;
@property(nonatomic) _Bool isEditingWordPrefix; // @synthesize isEditingWordPrefix=_isEditingWordPrefix;
@property(readonly, nonatomic) TILRUDictionary *autocorrectionListsForWordsInDocument; // @synthesize autocorrectionListsForWordsInDocument=_autocorrectionListsForWordsInDocument;
@property(readonly, nonatomic) TILRUDictionary *autocorrectionListsSuggestedForCurrentInput; // @synthesize autocorrectionListsSuggestedForCurrentInput=_autocorrectionListsSuggestedForCurrentInput;
@property(retain, nonatomic) TILRUDictionary *rejectedAutocorrectionsDisplayedOrInserted; // @synthesize rejectedAutocorrectionsDisplayedOrInserted=_rejectedAutocorrectionsDisplayedOrInserted;
@property(retain, nonatomic) TILRUDictionary *autocorrectionForCurrentStem; // @synthesize autocorrectionForCurrentStem=_autocorrectionForCurrentStem;
@property(readonly, nonatomic) TILRUDictionary *rejectedAutocorrections; // @synthesize rejectedAutocorrections=_rejectedAutocorrections;
@property(readonly, nonatomic) TILRUDictionary *recentPredictiveInputSelections; // @synthesize recentPredictiveInputSelections=_recentPredictiveInputSelections;
@property(readonly, nonatomic) TILRUDictionary *recentAutocorrections; // @synthesize recentAutocorrections=_recentAutocorrections;
@property(readonly, nonatomic) TILRUDictionary *autocorrectionHistory; // @synthesize autocorrectionHistory=_autocorrectionHistory;
@property(readonly, nonatomic) TIRevisionHistory *revisionHistory; // @synthesize revisionHistory=_revisionHistory;
@property(nonatomic) struct _NSRange candidateRange; // @synthesize candidateRange=_candidateRange;
@property(nonatomic, getter=isWordLearningEnabled) _Bool wordLearningEnabled; // @synthesize wordLearningEnabled=_wordLearningEnabled;
@property(readonly, nonatomic) TIKeyboardInputManagerConfig *config; // @synthesize config=_config;
@property(readonly, nonatomic) unsigned short supplementalPrefix; // @synthesize supplementalPrefix=_supplementalPrefix;
@property(readonly, nonatomic) __weak TISupplementalLexiconController *currentCandidateGenerationContextSupplementalLexicons; // @synthesize currentCandidateGenerationContextSupplementalLexicons=_currentCandidateGenerationContextSupplementalLexicons;
@property(retain, nonatomic) TIKeyboardState *keyboardState; // @synthesize keyboardState=_keyboardState;
@property(readonly, nonatomic) TIEmojiCandidateGenerator *emojiCandidateGenerator;
- (void)didUpdateInputModeProbabilities:(id)arg1;	// IMP=0x00000000000f4499
- (void)didUpdateInputModes:(id)arg1;	// IMP=0x00000000000f4427
- (id)primaryInputMode;	// IMP=0x00000000000f4415
@property(readonly, nonatomic) TILanguageSelectionController *languageSelectionController;
- (id)resourceInputModes;	// IMP=0x00000000000f4328
- (void)installTypologyTraceLogger;	// IMP=0x00000000000f4115
- (_Bool)acceptsRange:(struct _NSRange)arg1 inString:(id)arg2;	// IMP=0x00000000000f4080
- (_Bool)acceptsCharacter:(unsigned int)arg1;	// IMP=0x00000000000f402d
- (id)candidateResultSet;	// IMP=0x00000000000f3fce
- (_Bool)doesSelectedTextGenerateEmojiCandidates;	// IMP=0x00000000000f3ebb
- (id)typedStringForEmptyAutocorrection;	// IMP=0x00000000000f3c4c
- (_Bool)shouldGeneratePredictionsForCurrentContext;	// IMP=0x00000000000f3a15
@property(readonly, nonatomic) NSCharacterSet *allowPredictionCharacterSet;
- (void)reconcileConversions:(id)arg1;	// IMP=0x00000000000f3206
- (id)extendedAutocorrection:(id)arg1 spanningInputsForCandidates:(id)arg2 emojis:(id)arg3;	// IMP=0x00000000000f2b06
- (id)completionCandidates:(unsigned long long)arg1;	// IMP=0x00000000000f287c
- (int)shiftContext;	// IMP=0x00000000000f27d4
- (id)autocorrectionListForEmptyInputWithDesiredCandidateCount:(unsigned long long)arg1;	// IMP=0x00000000000f223c
- (id)indexesOfDuplicatesInCandidates:(id)arg1;	// IMP=0x00000000000f215d
- (id)continuousPathCandidates:(unsigned long long)arg1;	// IMP=0x00000000000f0d07
- (id)predictionCandidates:(unsigned long long)arg1 predictionType:(int)arg2;	// IMP=0x00000000000f0820
- (_Bool)shouldInsertSpaceBeforePredictions;	// IMP=0x00000000000f0614
- (_Bool)stringEndsWithClosingQuote:(id)arg1;	// IMP=0x00000000000f03b4
- (struct _NSRange)rangeOfUnclosedQuoteMatchingQuote:(id)arg1 inString:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x00000000000efefb
- (_Bool)shouldAutocapitalizePredictionAfterSpace;	// IMP=0x00000000000efe3d
- (_Bool)shouldGenerateSuggestionsForSelectedText;	// IMP=0x00000000000efd42
- (void)reconcileCandidates:(void *)arg1 forTypedString:(struct String *)arg2 withPhraseCandidate:(void *)arg3 replacing:(const struct String *)arg4;	// IMP=0x00000000000efb85
- (id)autocorrectionListForSelectedText;	// IMP=0x00000000000ef69c
- (void)generateCannedResponseCandidatesAsyncForString:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ef525
- (id)cannedResponseCandidatesForString:(id)arg1;	// IMP=0x00000000000ef32c
- (void)updateResponseModelForKeyboardState:(id)arg1;	// IMP=0x00000000000ef2b0
- (_Bool)shouldAllowContextTokenID:(struct TITokenID)arg1;	// IMP=0x00000000000ef225
- (_Bool)shouldDropInputStem;	// IMP=0x00000000000ef110
- (_Bool)suggestionBlacklistMatchesStrings:(id)arg1;	// IMP=0x00000000000eef09
- (_Bool)usesRetrocorrection;	// IMP=0x00000000000eee95
- (id)shortcutConversionForInput:(id)arg1 andExistingString:(id)arg2 existingStringStartsInMiddleOfWord:(_Bool)arg3;	// IMP=0x00000000000eedb9
- (id)shortcutConversionForString:(id)arg1 stringStartsInMiddleOfWord:(_Bool)arg2;	// IMP=0x00000000000eec15
- (struct _NSRange)shortcutSearchRangeForString:(id)arg1;	// IMP=0x00000000000eeb4b
- (_Bool)shouldSkipShortcutConversionForDocumentState:(id)arg1;	// IMP=0x00000000000eea1e
- (void)enumerateWordSuffixesOfString:(id)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ee7ee
- (_Bool)supportsShortcutConversion;	// IMP=0x00000000000ee7e6
- (id)autocorrectionCandidateForInput:(id)arg1 withCandidate:(const void *)arg2 insertingSpace:(_Bool)arg3 sharedPrefixLength:(unsigned long long)arg4;	// IMP=0x00000000000edcc8
- (id)autocorrectionCandidateForInput:(id)arg1 withCandidate:(const void *)arg2;	// IMP=0x00000000000edca9
- (_Bool)isEditingExistingWord;	// IMP=0x00000000000edb3f
- (id)phraseCandidateCompletedByWord:(const struct String *)arg1 allowNoSuggest:(_Bool)arg2 forAutocorrection:(_Bool)arg3 shiftContext:(int)arg4;	// IMP=0x00000000000ed5cf
- (unsigned long long)prefixLengthOfInput:(id)arg1 sharedWithCandidate:(const void *)arg2;	// IMP=0x00000000000ed2df
- (void)checkAutocorrectionDictionaries;	// IMP=0x00000000000ed26c
- (void)setAutoshiftFromInputContext;	// IMP=0x00000000000ed18b
- (_Bool)canStartSentenceAfterString:(id)arg1;	// IMP=0x00000000000ecfca
- (_Bool)_canStartSentenceAfterString:(id)arg1 maxRecursionDepth:(unsigned long long)arg2;	// IMP=0x00000000000ecd33
- (_Bool)spaceAndNextInputWouldStartSentence;	// IMP=0x00000000000ecce0
- (_Bool)nextInputWouldStartSentenceAfterInput:(id)arg1;	// IMP=0x00000000000ecaf0
- (id)sentenceTrailingCharacters;	// IMP=0x00000000000ecaa0
- (id)sentenceDelimitingCharacters;	// IMP=0x00000000000eca50
- (id)sentencePrefixingCharacters;	// IMP=0x00000000000eca00
- (id)wordCharacters;	// IMP=0x00000000000ec985
- (const struct USet *)precomposedCharacterSet;	// IMP=0x00000000000ec941
- (id)nonstopPunctuationCharacters;	// IMP=0x00000000000ec889
- (void)updateForRevisitedString:(id)arg1;	// IMP=0x00000000000ec650
- (id)autocorrectionRecordForWord:(id)arg1;	// IMP=0x00000000000ec590
- (void)recordRejectedAutocorrectionForAcceptedText:(id)arg1 fromPredictiveInputBar:(_Bool)arg2;	// IMP=0x00000000000ebf6b
- (void)recordAcceptedAutocorrection:(id)arg1 fromPredictiveInputBar:(_Bool)arg2;	// IMP=0x00000000000ebba2
- (id)revisionListFromAutocorrectionList:(id)arg1 afterAcceptingCandidate:(id)arg2;	// IMP=0x00000000000eb0fb
- (id)originatingAutocorrectionListForCandidate:(id)arg1;	// IMP=0x00000000000eae84
- (_Bool)isContinuousPathCandidate:(id)arg1 replacementForOriginalConversion:(id)arg2;	// IMP=0x00000000000ead6c
- (void)recordSuggestedAutocorrectionList:(id)arg1;	// IMP=0x00000000000eabef
- (void)candidateRejected:(id)arg1;	// IMP=0x00000000000ea9bb
- (struct TITokenID)tokenIDForWordSeparator:(unsigned short)arg1;	// IMP=0x00000000000ea987
- (struct TITokenID)addWord:(id)arg1 context:(const struct TITokenID *)arg2 contextLength:(unsigned long long)arg3 surfaceFormPtr:(id *)arg4 contextStringTokens:(id)arg5;	// IMP=0x00000000000ea1e0
- (struct TITokenID)findTokenIDForWord:(id)arg1 context:(const struct TITokenID *)arg2 contextLength:(unsigned long long)arg3 tokenLookupMode:(unsigned int)arg4 contextStringTokens:(id)arg5;	// IMP=0x00000000000ea1a5
- (struct TITokenID)findTokenIDForWord:(id)arg1 context:(const struct TITokenID *)arg2 contextLength:(unsigned long long)arg3 tokenLookupMode:(unsigned int)arg4 surfaceFormPtr:(id *)arg5 hasCaseInsensitiveStaticVariant:(_Bool *)arg6 contextStringTokens:(id)arg7;	// IMP=0x00000000000e9c5f
- (void)learnRecentMessageUserIsRespondingTo;	// IMP=0x00000000000e9a1b
- (void)synchronizeConversationHistoryWithInputContextHistory:(id)arg1;	// IMP=0x00000000000e983b
- (void)resetConversationHistory;	// IMP=0x00000000000e97b7
- (void)addItemToConversationHistoryWithText:(id)arg1 timestamp:(id)arg2 senderID:(id)arg3;	// IMP=0x00000000000e97b1
- (void)registerNegativeEvidence:(id)arg1 tokenID:(struct TITokenID)arg2 context:(const struct TITokenID *)arg3 contextLength:(unsigned long long)arg4 intendedTokenID:(struct TITokenID *)arg5 hint:(int)arg6 contextStringTokens:(id)arg7;	// IMP=0x00000000000e944e
- (void)decrementLanguageModelCount:(id)arg1 tokenID:(struct TITokenID)arg2 context:(const struct TITokenID *)arg3 contextLength:(unsigned long long)arg4 contextStringTokens:(id)arg5;	// IMP=0x00000000000e9051
- (void)incrementLanguageModelCount:(id)arg1 tokenID:(struct TITokenID)arg2 context:(const struct TITokenID *)arg3 contextLength:(unsigned long long)arg4 contextStringTokens:(id)arg5 saveToDifferentialPrivacy:(int)arg6;	// IMP=0x00000000000e8b65
- (_Bool)isStringBasedModel;	// IMP=0x00000000000e8b3f
- (_Bool)shouldLearnWord:(id)arg1;	// IMP=0x00000000000e8a86
- (_Bool)shouldSuppressLanguageSelectionEvidence;	// IMP=0x00000000000e8a13
- (_Bool)shouldSuppressLearning;	// IMP=0x00000000000e8943
- (_Bool)shouldSuppressTokenIDLookups;	// IMP=0x00000000000e888f
- (_Bool)shouldAllowCorrectionOfAcceptedCandidate:(id)arg1;	// IMP=0x00000000000e8748
- (void)displayedCandidateRejected;	// IMP=0x00000000000e86ab
- (void)setOriginalInput:(id)arg1;	// IMP=0x00000000000e85c9
- (id)currentWordStem;	// IMP=0x00000000000e851f
- (id)inputStem;	// IMP=0x00000000000e8462
- (id)inputString;	// IMP=0x00000000000e83a3
- (unsigned int)inputCount;	// IMP=0x00000000000e836b
- (unsigned int)inputIndex;	// IMP=0x00000000000e8342
- (void)setInputIndex:(unsigned int)arg1;	// IMP=0x00000000000e82b6
- (void)updateInputContext;	// IMP=0x00000000000e8037
- (id)internalInputContext;	// IMP=0x00000000000e801a
- (id)inputContext;	// IMP=0x00000000000e7fbd
- (void)acceptInput;	// IMP=0x00000000000e7eb6
- (void)clearInput;	// IMP=0x00000000000e7d3e
- (id)deleteFromInput:(unsigned long long *)arg1;	// IMP=0x00000000000e7933
- (void)setInput:(id)arg1 withIndex:(unsigned int)arg2;	// IMP=0x00000000000e78f6
- (void)setInput:(id)arg1;	// IMP=0x00000000000e77a1
- (void)didDropInputStem;	// IMP=0x00000000000e779b
- (void)willDropInputStem;	// IMP=0x00000000000e766f
- (void)dropInput;	// IMP=0x00000000000e760b
- (void)dropInputPrefix:(unsigned int)arg1;	// IMP=0x00000000000e75ab
- (void)trimInputAfterLathamConversion;	// IMP=0x00000000000e7456
- (id)trimmedInputStemAfterLathamConversion;	// IMP=0x00000000000e7293
- (void)trimInput;	// IMP=0x00000000000e7113
- (_Bool)canRetrocorrectInputAtIndex:(unsigned int)arg1;	// IMP=0x00000000000e6ff3
- (_Bool)canTrimInputAtIndex:(unsigned int)arg1;	// IMP=0x00000000000e6ecd
- (unsigned long long)internalIndexOfInputStemSuffix:(id)arg1;	// IMP=0x00000000000e6cbb
- (unsigned long long)countOfWordsIninputStem:(id)arg1;	// IMP=0x00000000000e6b59
- (id)trimmedInputStem;	// IMP=0x00000000000e697d
- (unsigned long long)maxPriorWordTokensAfterTrimming;	// IMP=0x00000000000e6939
- (struct LanguageModelContext)sentenceContextForInputStem:(id)arg1;	// IMP=0x00000000000e62bd
- (_Bool)canComputeSentenceContextForInputStem:(id)arg1;	// IMP=0x00000000000e6102
- (void)setInputStringFromDocumentState:(id)arg1 isDeleteEvent:(_Bool)arg2;	// IMP=0x00000000000e5cd7
- (struct _NSRange)inputStringRangeFromRevisionHistory;	// IMP=0x00000000000e5aa7
- (struct _NSRange)acceptableRangeFromRange:(struct _NSRange)arg1 inText:(id)arg2 withSelectionLocation:(unsigned long long)arg3;	// IMP=0x00000000000e58be
- (struct _NSRange)legacyInputRangeForTokenRange:(struct _NSRange)arg1;	// IMP=0x00000000000e5784
- (unsigned int)simulateAutoshiftIfNecessaryForFlags:(unsigned int)arg1;	// IMP=0x00000000000e562e
- (_Bool)hasLegacyInputString;	// IMP=0x00000000000e55b2
- (_Bool)hasLegacyInputStem;	// IMP=0x00000000000e555c
- (id)addInput:(id)arg1 flags:(unsigned int)arg2 point:(struct CGPoint)arg3 firstDelete:(unsigned long long *)arg4;	// IMP=0x00000000000e4d20
- (void)mobileAssetsChanged:(id)arg1;	// IMP=0x00000000000e4c34
- (void)setLinguisticResourceStatus:(unsigned long long)arg1 reason:(id)arg2;	// IMP=0x00000000000e4ab0
- (shared_ptr_e9f752ce)loadedLightweightLanguageModel;	// IMP=0x00000000000e478d
- (void)loadFavoniusTypingModel;	// IMP=0x00000000000e462a
- (_Bool)updateLanguageModelForKeyboardState;	// IMP=0x00000000000e3eb9
- (id)dynamicResourcePath;	// IMP=0x00000000000e3e69
- (id)pathToDynamicDictionary;	// IMP=0x00000000000e3de9
- (void)mergeLanguageModelParameters:(id)arg1 toTestingParameters:(id)arg2 withLexiconID:(id)arg3 andSuffix:(id)arg4;	// IMP=0x00000000000e3c99
- (id)testingParameters;	// IMP=0x00000000000e3b44
- (void)logTestingParametersToTypology;	// IMP=0x00000000000e3aaf
@property(readonly, nonatomic) NSArray *languageModelAssets;
- (id)languageModelAssetsForInputMode:(id)arg1;	// IMP=0x00000000000e37c5
- (id)dynamicDictionaryPathForInputMode:(id)arg1;	// IMP=0x00000000000e3712
- (id)pathToPhraseDictionary;	// IMP=0x00000000000e36b3
- (id)phraseDictionaryPathForInputMode:(id)arg1;	// IMP=0x00000000000e3465
- (id)pathToDeltaStaticDictionary;	// IMP=0x00000000000e3406
- (id)deltaDictionaryPathForInputMode:(id)arg1;	// IMP=0x00000000000e31eb
- (id)pathToStaticDictionary;	// IMP=0x00000000000e318c
- (id)staticDictionaryPathForInputMode:(id)arg1;	// IMP=0x00000000000e2db6
- (id)dictionaryPathForContentType:(id)arg1 inputMode:(id)arg2 filePrefix:(id)arg3;	// IMP=0x00000000000e28fa
- (void)loadDictionaries;	// IMP=0x00000000000e24d5
- (CDStruct_69b8fb94)lexiconInformation;	// IMP=0x00000000000e2242
- (id)dictionaryInputMode;	// IMP=0x00000000000e21a9
- (void *)initImplementation;	// IMP=0x00000000000e20df
- (id)externalStringForDictionaryString:(id)arg1;	// IMP=0x00000000000e2077
- (id)dictionaryStringForExternalString:(id)arg1;	// IMP=0x00000000000e1fe7
- (_Bool)dictionaryUsesExternalEncoding;	// IMP=0x00000000000e1fa3
- (unsigned int)externalIndexToInternal:(unsigned int)arg1;	// IMP=0x00000000000e1e95
- (unsigned int)internalIndexToExternal:(unsigned int)arg1;	// IMP=0x00000000000e1da2
- (id)internalStringToExternal:(id)arg1;	// IMP=0x00000000000e1d1f
- (id)externalStringToInternal:(id)arg1;	// IMP=0x00000000000e1c9c
- (void)updateComposedText;	// IMP=0x00000000000e1ba1
- (_Bool)deletesComposedTextByComposedCharacterSequence;	// IMP=0x00000000000e1b99
- (_Bool)acceptInputString:(id)arg1;	// IMP=0x00000000000e1b91
- (_Bool)stringEndsWord:(id)arg1;	// IMP=0x00000000000e1b1a
- (id)remainingInput;	// IMP=0x00000000000e1b12
- (id)didAcceptCandidate:(id)arg1;	// IMP=0x00000000000e1b0a
- (void)clearInputContext;	// IMP=0x00000000000e1b04
- (_Bool)removeSuffixOfInputContext:(id)arg1;	// IMP=0x00000000000e1afc
- (void)appendToInputContext:(id)arg1;	// IMP=0x00000000000e1af6
- (void)inputLocationChanged;	// IMP=0x00000000000e1af0
- (id)deletedSuffixOfInputContext:(id)arg1 whenDeletingFromInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 deletionCount:(unsigned long long)arg4;	// IMP=0x00000000000e19ac
- (id)suffixOfDesiredString:(id)arg1 toAppendToInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 afterDeletionCount:(unsigned long long *)arg4;	// IMP=0x00000000000e185d
- (_Bool)shouldInsertSpaceBeforeInput:(id)arg1;	// IMP=0x00000000000e152f
- (void)textAccepted:(id)arg1 fromPredictiveInputBar:(_Bool)arg2 withInput:(id)arg3;	// IMP=0x00000000000e06b7
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 granularity:(int)arg2;	// IMP=0x00000000000e0591
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1;	// IMP=0x00000000000e057d
- (struct _NSRange)smartSelectionRangeForTextInDocument:(id)arg1 inRange:(struct _NSRange)arg2 language:(id)arg3 tokenizedRanges:(id)arg4 options:(unsigned long long)arg5;	// IMP=0x00000000000e0560
- (void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000e04d9
- (long long)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000e044a
@property(retain, nonatomic) TIKeyboardLayout *keyLayout;
- (id)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2;	// IMP=0x00000000000e01c7
- (id)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000dfe8f
- (void)candidatesOfferedFeedback:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000dfe09
- (void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000dfcfe
- (void)generateAutocorrectionsWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange)arg2 candidateHandler:(id)arg3;	// IMP=0x00000000000ded94
- (id)generateAutofillFormWithKeyboardState:(id)arg1;	// IMP=0x00000000000dec28
- (void)trackProactiveMetrics:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000deb01
- (void)deleteFromInputWithContext:(id)arg1;	// IMP=0x00000000000de055
- (void)continuousPathCandidateRejected:(id)arg1;	// IMP=0x00000000000ddf08
- (void)addInput:(id)arg1 withContext:(id)arg2;	// IMP=0x00000000000dd4bc
- (id)handleKeyboardInput:(id)arg1;	// IMP=0x00000000000dd06a
- (id)keyboardConfiguration;	// IMP=0x00000000000dce9c
- (_Bool)syncToKeyboardState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000dce94
- (void)logDiscoverabilityEvent:(int)arg1 userInfo:(id)arg2;	// IMP=0x00000000000dcdb4
- (void)syncToKeyboardState:(id)arg1;	// IMP=0x00000000000dcba0
- (void)_recalcSupplementalPrefix;	// IMP=0x00000000000dc7c3
- (void)resume;	// IMP=0x00000000000dc62c
- (void)releaseMRLBuffers;	// IMP=0x00000000000dc622
- (void)runMaintenanceTask;	// IMP=0x00000000000dc5c3
- (void)analyzeTypingSession:(id)arg1;	// IMP=0x00000000000dc4bc
- (void)suspend;	// IMP=0x00000000000dbf1e
- (id)currentInputModeIdentifier;	// IMP=0x00000000000dbece
- (void)acceptCurrentCandidateIfSelectedWithContext:(id)arg1;	// IMP=0x00000000000dbda3
- (void)acceptCurrentCandidateWithContext:(id)arg1;	// IMP=0x00000000000dbc90
- (id)candidateResultSetFromCandidates:(id)arg1 proactiveTriggers:(id)arg2;	// IMP=0x00000000000db7d0
- (id)candidateResultSetFromCandidates:(id)arg1;	// IMP=0x00000000000db7bc
- (id)sortMethodsShowExtensionCandidates;	// IMP=0x00000000000db545
- (id)sortMethodIndexes;	// IMP=0x00000000000db2f2
- (id)sortMethodsGroupsForCandidates:(id)arg1;	// IMP=0x00000000000db05a
- (id)sortMethodTitles;	// IMP=0x00000000000dae5a
- (_Bool)shouldSkipCandidateSelection;	// IMP=0x00000000000dae16
- (id)markedText;	// IMP=0x00000000000dad52
- (void)setMarkedText;	// IMP=0x00000000000dabb5
- (_Bool)shouldOmitEmojiCandidates;	// IMP=0x00000000000dab35
- (_Bool)shouldDelayUpdateComposedText;	// IMP=0x00000000000dab2d
- (_Bool)shouldClearInputOnMarkedTextOutOfSync;	// IMP=0x00000000000dab25
- (_Bool)isProgressivelyPathing;	// IMP=0x00000000000dab1d
- (id)contextBeforeWithDesiredLength:(unsigned long long)arg1;	// IMP=0x00000000000daa41
- (id)inputStringFromDocumentState:(id)arg1;	// IMP=0x00000000000da9e0
- (id)inputsToReject;	// IMP=0x00000000000da9d8
- (_Bool)shouldAddModifierSymbolsToWordCharacters;	// IMP=0x00000000000da994
- (id)keyboardBehaviors;	// IMP=0x00000000000da944
- (id)rawInputString;	// IMP=0x00000000000da932
- (_Bool)shouldCommitInputString;	// IMP=0x00000000000da92a
- (_Bool)keyboardConfigurationAssertDefaultKeyPlane;	// IMP=0x00000000000da922
- (id)keyboardConfigurationAccentKeyString;	// IMP=0x00000000000da91a
- (id)keyboardConfigurationLayoutTag;	// IMP=0x00000000000da534
- (id)layoutTagsForLayout:(id)arg1;	// IMP=0x00000000000da136
- (void)syncToKeyboardState:(id)arg1 from:(id)arg2 afterContextChange:(_Bool)arg3;	// IMP=0x00000000000d9ac1
- (_Bool)updateAdaptationContextToKeyboardState:(id)arg1 from:(id)arg2;	// IMP=0x00000000000d9995
- (void)willChangeToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;	// IMP=0x00000000000d963d
- (void)syncInputStringToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;	// IMP=0x00000000000d9588
- (void)syncMarkedTextForKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;	// IMP=0x00000000000d92ad
- (void)syncToLayoutState:(id)arg1;	// IMP=0x00000000000d91a1
- (void)incrementUsageTrackingKeysForDeleteFromInput;	// IMP=0x00000000000d8e8e
- (void)incrementUsageTrackingKeyForAppWithIsSentence:(_Bool)arg1;	// IMP=0x00000000000d8cbc
- (void)incrementUsageTrackingKey:(id)arg1;	// IMP=0x00000000000d8c87
- (void)incrementUsageTrackingKeyForAutocorrectionStatistic:(id)arg1 autocorrectionTypes:(unsigned int)arg2;	// IMP=0x00000000000d8bd8
- (id)usageTrackingKeyForStatistic:(id)arg1;	// IMP=0x00000000000d8b1c
- (_Bool)closeCandidateGenerationContextWithResults:(id)arg1;	// IMP=0x00000000000d8956
- (void)openCandidateGenerationContextWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d88a5
- (_Bool)shouldUpdateLanguageModel;	// IMP=0x00000000000d87e2
- (_Bool)shouldUpdateDictionary;	// IMP=0x00000000000d8648
- (void)updateDictionaryAndLanguageModel;	// IMP=0x00000000000d85b7
- (_Bool)isLinguisticResourceUpdateScheduled;	// IMP=0x00000000000d857a
- (void)scheduleLinguisticResourceUpdateWithReason:(id)arg1;	// IMP=0x00000000000d852b
- (void)scheduleLinguisticResourceUpdate;	// IMP=0x00000000000d8512
- (void)refreshInputManagerState;	// IMP=0x00000000000d7df9
@property(readonly, nonatomic) TISmartPunctuationOptions *smartOptions;
@property(readonly, nonatomic) TIKeyboardInputManagerState *currentState;
- (id)newInputManagerState;	// IMP=0x00000000000d795e
@property(readonly, nonatomic) TIKeyboardFeatureSpecialization *keyboardFeatureSpecialization;
- (void)dealloc;	// IMP=0x00000000000d762d
- (id)initWithConfig:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000d677a
- (id)initWithInputMode:(id)arg1 keyboardState:(id)arg2;	// IMP=0x00000000000d66f4
- (_Bool)usesPunctuationKeysForRowNavigation;	// IMP=0x00000000000fba99
- (_Bool)supportsNumberKeySelection;	// IMP=0x00000000000fba91
- (id)indexTitlesForGroupTitles:(id)arg1 sortingMethod:(id)arg2;	// IMP=0x00000000000fba7b
- (void)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000fba75
- (id)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2;	// IMP=0x00000000000fb950
- (_Bool)alwaysShowExtensionCandidatesForSortingMethod:(id)arg1;	// IMP=0x00000000000fb948
- (id)titleForSortingMethod:(id)arg1;	// IMP=0x00000000000fb8c7
- (id)sortingMethods;	// IMP=0x00000000000fb876
- (id)openingQuotes;	// IMP=0x00000000000fb74d
- (id)closingQuotes;	// IMP=0x00000000000fb624
- (id)terminatorsPrecedingAutospace;	// IMP=0x00000000000fb5f4
- (id)terminatorsDeletingAutospace;	// IMP=0x00000000000fb5a4
- (id)terminatorsPreventingAutocorrection;	// IMP=0x00000000000fb574
- (_Bool)nextInputWouldStartSentence;	// IMP=0x00000000000fb4f1
- (id)wordSeparator;	// IMP=0x00000000000fb4a1
- (id)replacementForDoubleSpace;	// IMP=0x00000000000fb451
- (_Bool)suppressCompletionsForFieldEditor;	// IMP=0x00000000000fb449
- (_Bool)suppliesCompletions;	// IMP=0x00000000000fb441
- (id)searchStringForMarkedText;	// IMP=0x00000000000fb434
- (id)shadowTyping;	// IMP=0x00000000000fb37d
- (unsigned long long)initialCandidateBatchCount;	// IMP=0x00000000000fb372
- (unsigned long long)initialSelectedIndex;	// IMP=0x00000000000fb361
- (id)defaultCandidate;	// IMP=0x00000000000fb2f8
- (_Bool)suppressPlaceholderCandidate;	// IMP=0x00000000000fb2f0
- (unsigned long long)autoquoteType;	// IMP=0x00000000000fb2e5
- (_Bool)usesAutoDeleteWord;	// IMP=0x00000000000fb2dd
- (_Bool)newInputAcceptsUserSelectedCandidate;	// IMP=0x00000000000fb22b
- (_Bool)commitsAcceptedCandidate;	// IMP=0x00000000000fb223
- (_Bool)delayedCandidateList;	// IMP=0x00000000000fb21b
- (_Bool)usesLiveConversion;	// IMP=0x00000000000fb213
- (_Bool)acceptAutocorrectionCommitsInline;	// IMP=0x00000000000fb20b
- (_Bool)shouldFixupIncompleteRomaji;	// IMP=0x00000000000fb203
- (double)continuousPathLanguageWeight;	// IMP=0x00000000000fb1b3
- (_Bool)usesMLTapTyping;	// IMP=0x00000000000fb0d7
- (_Bool)usesContinuousPath;	// IMP=0x00000000000fb078
- (_Bool)usesCandidateSelection;	// IMP=0x00000000000fb070
- (_Bool)supportsSetPhraseBoundary;	// IMP=0x00000000000fb068
- (unsigned long long)phraseBoundary;	// IMP=0x00000000000fb058
- (void)setPhraseBoundaryIfNecessary;	// IMP=0x00000000000faf79
- (void)setPhraseBoundary:(unsigned long long)arg1;	// IMP=0x00000000000faf73
- (id)candidatesForString:(id)arg1;	// IMP=0x00000000000faca0
- (id)candidates;	// IMP=0x00000000000faab4
- (id)autocorrectionListWithCandidateCount:(unsigned long long)arg1;	// IMP=0x00000000000f9c0d
- (id)autocorrectionList;	// IMP=0x00000000000f9bf6
- (void)transferErrorCorrectionFlagsToInputCandidate:(void *)arg1;	// IMP=0x00000000000f9b6a
- (id)autocorrection;	// IMP=0x00000000000f9141
- (id)supplementalAutocorrection;	// IMP=0x00000000000f8fb5
- (id)_supplementalCompletionCandidates:(unsigned long long)arg1;	// IMP=0x00000000000f8e56
- (void)setLearnsCorrection:(_Bool)arg1;	// IMP=0x00000000000fcf59
- (void)setInSplitKeyboardMode:(_Bool)arg1;	// IMP=0x00000000000fcf53
- (_Bool)inHardwareKeyboardMode;	// IMP=0x00000000000fcf2f
- (void)setInHardwareKeyboardMode:(_Bool)arg1;	// IMP=0x00000000000fcf13
- (void)setKeyboardEventsLagging:(_Bool)arg1;	// IMP=0x00000000000fcefc
- (void)setAutocapitalizationType:(unsigned long long)arg1;	// IMP=0x00000000000fcef6
- (void)setAutocapitalizationEnabled:(_Bool)arg1;	// IMP=0x00000000000fcef0
- (void)setAutoCorrects:(_Bool)arg1;	// IMP=0x00000000000fceea
- (_Bool)ignoresDeadKeys;	// IMP=0x00000000000fcee2
- (_Bool)supportsLearning;	// IMP=0x00000000000fce9e
- (_Bool)shouldExtendPriorWord;	// IMP=0x00000000000fce5a
- (_Bool)doesComposeText;	// IMP=0x00000000000fce16
- (void)dynamicDictionariesRemoved:(id)arg1;	// IMP=0x00000000000fd07c
- (void)releaseDynamicLanguageModel;	// IMP=0x00000000000fcf71
- (void)clearDynamicDictionary;	// IMP=0x00000000000fcf6b
- (id)keyEventMap;	// IMP=0x00000000000fce0e
- (long long)addTouch:(id)arg1 shouldHitTest:(_Bool)arg2;	// IMP=0x00000000000f7cf9
- (_Bool)canHandleKeyHitTest;	// IMP=0x00000000000f7c13
- (id)shortcutConversionForDocumentState:(id)arg1;	// IMP=0x00000000000f8c9b
- (id)shortcutCompletionsForDocumentState:(id)arg1;	// IMP=0x00000000000f8af2
- (unsigned long long)maximumShortcutLengthAllowed;	// IMP=0x00000000000f8ac0
- (void)addSynthesizedTouchToInput:(id)arg1;	// IMP=0x00000000000f8647
- (_Bool)isHardwareKeyboardAutocorrectionEnabled;	// IMP=0x00000000000f85b6
- (id)generateAndRenderProactiveSuggestionsWithTriggers:(id)arg1 withAdditionalPredictions:(id)arg2 withInput:(id)arg3;	// IMP=0x00000000000fccc0
- (void)generateAndRenderProactiveSuggestionsWithTriggers:(id)arg1 withAdditionalPredictions:(id)arg2 withInput:(id)arg3 async:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000fc065
- (_Bool)enablesProactiveQuickType;	// IMP=0x00000000000fbf91
- (void)fetchAssetAvailabilityStatusForInputMode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f8178
- (void)fetchTypingSessionParams:(CDUnknownBlockType)arg1;	// IMP=0x00000000000f7ff4
- (void)tearDown;	// IMP=0x00000000000f7fee
- (id)getTestingStateObject;	// IMP=0x00000000000f7fe6
- (unsigned long long)userFrequencyOfWord:(id)arg1 lexiconID:(unsigned int)arg2;	// IMP=0x00000000000f7f30
- (unsigned long long)userFrequencyOfWord:(id)arg1;	// IMP=0x00000000000f7f19
- (RefPtr_9bddf3b2)getDictionary;	// IMP=0x00000000000f8591
- (_Bool)dictionaryContainsWord:(id)arg1;	// IMP=0x00000000000f8481
- (id)configurationPropertyList;	// IMP=0x00000000000f8431
- (void)logToTypologyRecorderWithString:(id)arg1;	// IMP=0x00000000000f83ed
- (_Bool)isTypologyEnabled;	// IMP=0x00000000000f839d
- (void)storeLanguageModelDynamicDataIncludingCache;	// IMP=0x00000000000f832a
- (void)clearHumanReadableTrace;	// IMP=0x00000000000f830e
- (id)humanReadableTrace;	// IMP=0x00000000000f82e3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

