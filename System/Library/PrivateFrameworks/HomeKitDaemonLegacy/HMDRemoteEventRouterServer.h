//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HomeKitDaemonLegacy/HMEMessageDatagramServerDataSource-Protocol.h>
#import <HomeKitDaemonLegacy/HMEMessageDatagramServerDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMFLogging-Protocol.h>
#import <HomeKitDaemonLegacy/HMFMessageReceiver-Protocol.h>

@class HMDEventRouterTimerProvider, HMDRemoteEventRouterServerMessageReceiver, HMEMessageDatagramServer, HMFMessageDispatcher, NSMutableArray, NSMutableDictionary, NSNotificationCenter, NSString, NSUUID;
@protocol HMDRemoteEventRouterServerDataSource, HMMLogEventSubmitting, OS_dispatch_queue, OS_os_log;

@interface HMDRemoteEventRouterServer : NSObject <HMFLogging, HMFMessageReceiver, HMEMessageDatagramServerDataSource, HMEMessageDatagramServerDelegate>
{
    NSObject<OS_os_log> *_logger;	// 8 = 0x8
    _Bool _isPrimaryResident;	// 16 = 0x10
    _Bool _isResidentEventProviding;	// 17 = 0x11
    NSObject<OS_dispatch_queue> *_workQueue;	// 24 = 0x18
    NSUUID *_homeUUID;	// 32 = 0x20
    NSUUID *_accessoryUUID;	// 40 = 0x28
    NSString *_routerRequestMessageName;	// 48 = 0x30
    NSString *_routerUpdateMessageName;	// 56 = 0x38
    HMFMessageDispatcher *_messageDispatcher;	// 64 = 0x40
    NSNotificationCenter *_notificationCenter;	// 72 = 0x48
    HMDEventRouterTimerProvider *_timerProvider;	// 80 = 0x50
    HMEMessageDatagramServer *_connectionServer;	// 88 = 0x58
    NSMutableArray *_currentConnections;	// 96 = 0x60
    id <HMDRemoteEventRouterServerDataSource> _dataSource;	// 104 = 0x68
    NSMutableDictionary *_accessControls;	// 112 = 0x70
    HMDRemoteEventRouterServerMessageReceiver *_accessoryMessageReceiver;	// 120 = 0x78
    id <HMMLogEventSubmitting> _logEventSubmitter;	// 128 = 0x80
}

+ (id)logCategory;	// IMP=0x00000000004bb191
- (void).cxx_destruct;	// IMP=0x00000000004ba27f
- (id)dumpStateDescription;	// IMP=0x00000000004ba178
- (void)didAddCurrentAccessory:(id)arg1 additionalPolicies:(id)arg2;	// IMP=0x00000000004ba097
- (void)configureIsPrimaryResident:(_Bool)arg1 isResidentEventProviding:(_Bool)arg2 additionalPolicies:(id)arg3;	// IMP=0x00000000004b9f12
- (_Bool)shouldAllowEvent:(id)arg1 topic:(id)arg2 connection:(id)arg3;	// IMP=0x00000000004b9c2e
- (void)server:(id)arg1 sendEvents:(id)arg2 connection:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000004b9681
- (void)server:(id)arg1 connectionDidExpire:(id)arg2;	// IMP=0x00000000004b967b
- (unsigned long long)serverFragmentEventsDataSize:(id)arg1;	// IMP=0x00000000004b9673
- (id)serverTimerProvider:(id)arg1;	// IMP=0x00000000004b964b
- (double)server:(id)arg1 timeoutIntervalForConnection:(id)arg2;	// IMP=0x00000000004b963d
- (_Bool)server:(id)arg1 shouldProcessEventsForConnection:(id)arg2;	// IMP=0x00000000004b94c5
- (_Bool)server:(id)arg1 isConnectionTerminatingError:(id)arg2;	// IMP=0x00000000004b94bd
- (void)sendMessageWithPayloadMessage:(id)arg1 destination:(id)arg2 messageType:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000004b9231
- (void)submitLogEvent:(id)arg1;	// IMP=0x00000000004b91ce
- (void)submitLogEvent:(id)arg1 error:(id)arg2;	// IMP=0x00000000004b9153
- (void)_handleFetchEventsRequest:(id)arg1 originalMessage:(id)arg2;	// IMP=0x00000000004b8c5b
- (void)_handleKeepAliveRequest:(id)arg1 originalMessage:(id)arg2;	// IMP=0x00000000004b88ed
- (void)_handleChangeRegistrationsRequest:(id)arg1 originalMessage:(id)arg2;	// IMP=0x00000000004b84d5
- (void)_handleDisconnectRequest:(id)arg1 originalMessage:(id)arg2;	// IMP=0x00000000004b817f
- (void)_handleConnectRequest:(id)arg1 originalMessage:(id)arg2 connectionMode:(long long)arg3;	// IMP=0x00000000004b7b40
- (id)_underlyingMessageDataFromFragmentMessageData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000004b7a14
- (void)_handleProtoRequest:(id)arg1 originalMessage:(id)arg2 connectionMode:(long long)arg3;	// IMP=0x00000000004b77c2
- (void)_handleRequestMessage:(id)arg1 connectionMode:(long long)arg2;	// IMP=0x00000000004b7471
- (void)_handlePrimaryRequestMessage:(id)arg1;	// IMP=0x00000000004b745d
- (void)respondToMessage:(id)arg1 underlyingResponseData:(id)arg2 supportsFragmentMessage:(_Bool)arg3 label:(id)arg4;	// IMP=0x00000000004b7071
- (void)respondToMessage:(id)arg1 underlyingResponseData:(id)arg2 connection:(id)arg3 label:(id)arg4;	// IMP=0x00000000004b6fdf
- (id)messageTargetForMode:(long long)arg1;	// IMP=0x00000000004b6fa7
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)_handleUpdatedPrimaryResidentNotification:(id)arg1;	// IMP=0x00000000004b6ef0
- (void)_registerForAccessoryMessages:(id)arg1;	// IMP=0x00000000004b6c90
- (void)_registerForMessages:(id)arg1;	// IMP=0x00000000004b6aa4
- (id)logIdentifier;	// IMP=0x00000000004b6a77
@property(readonly, copy) NSString *description;
- (id)initWithPrimaryModeUUID:(id)arg1 residentModeUUID:(id)arg2 queue:(id)arg3 messageDispatcher:(id)arg4 dataSource:(id)arg5 notificationCenter:(id)arg6 requestMessageName:(id)arg7 updateMessageName:(id)arg8 logCategory:(const char *)arg9 logEventSubmitter:(id)arg10 connectionServerFactory:(CDUnknownBlockType)arg11;	// IMP=0x00000000004b66d7
- (id)initWithPrimaryModeUUID:(id)arg1 residentModeUUID:(id)arg2 queue:(id)arg3 messageDispatcher:(id)arg4 dataSource:(id)arg5 notificationCenter:(id)arg6 requestMessageName:(id)arg7 updateMessageName:(id)arg8 subscriptionProvider:(id)arg9 registrationEventRouter:(id)arg10 storeReadHandle:(id)arg11;	// IMP=0x00000000004b644e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

