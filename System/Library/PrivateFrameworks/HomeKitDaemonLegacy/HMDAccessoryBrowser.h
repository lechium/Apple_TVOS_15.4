//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemonLegacy/HAPAccessoryServerBrowserDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HAPAccessoryServerDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMDAccessoryBrowserHapProtocol-Protocol.h>
#import <HomeKitDaemonLegacy/HMDAccessoryBrowserProtocol-Protocol.h>
#import <HomeKitDaemonLegacy/HMDAuthServerDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMDMediaBrowserDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMDWACAccessoryConfigurationDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMDWACBrowserDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMDWatchSystemStateDelegate-Protocol.h>
#import <HomeKitDaemonLegacy/HMFLogging-Protocol.h>
#import <HomeKitDaemonLegacy/HMFMessageReceiver-Protocol.h>
#import <HomeKitDaemonLegacy/HMFTimerDelegate-Protocol.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMDAccessoryServerBrowserDemo, HMDAuthServer, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMFUnfairLock, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface HMDAccessoryBrowser : HMFObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMFMessageReceiver, HMFTimerDelegate, HMDMediaBrowserDelegate, HMDWACBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWatchSystemStateDelegate, HMDAuthServerDelegate, HMFLogging, HMDAccessoryBrowserProtocol, HMDAccessoryBrowserHapProtocol>
{
    HMFUnfairLock *_lock;	// 8 = 0x8
    NSMutableSet *_unpairedHAPAccessories;	// 16 = 0x10
    NSMutableSet *_unassociatedMediaAccessories;	// 24 = 0x18
    NSMutableSet *_deviceSetupMediaAccessories;	// 32 = 0x20
    NSMutableSet *_unassociatedWACAccessories;	// 40 = 0x28
    NSMutableSet *_mediaAccessoryControlConnections;	// 48 = 0x30
    NSMutableSet *_browsingConnections;	// 56 = 0x38
    NSHashTable *_activeAssertions;	// 64 = 0x40
    _Bool _btlePowerState;	// 72 = 0x48
    _Bool _internalDiscoveryRequest;	// 73 = 0x49
    _Bool _active;	// 74 = 0x4a
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;	// 80 = 0x50
    id <HMDAccessoryBrowserManagerDelegate> _managerDelegate;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_workQueue;	// 96 = 0x60
    NSUUID *_uuid;	// 104 = 0x68
    HMFMessageDispatcher *_messageDispatcher;	// 112 = 0x70
    unsigned long long _generationCounter;	// 120 = 0x78
    HMDHomeManager *_homeManager;	// 128 = 0x80
    NSMutableArray *_accessoryServerBrowsers;	// 136 = 0x88
    NSHashTable *_discoveringAccessoryServerBrowsers;	// 144 = 0x90
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;	// 152 = 0x98
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;	// 160 = 0xa0
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;	// 168 = 0xa8
    HMDHAP2Storage *_hap2Storage;	// 176 = 0xb0
    HMDMediaBrowser *_mediaBrowser;	// 184 = 0xb8
    HMDWACBrowser *_wacBrowser;	// 192 = 0xc0
    HMDAuthServer *_authServer;	// 200 = 0xc8
    HMDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;	// 208 = 0xd0
    HMFTimer *_stopReprovisioningTimer;	// 216 = 0xd8
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;	// 224 = 0xe0
    NSString *_identifierOfAccessoryBeingReprovisioned;	// 232 = 0xe8
    NSData *_wiFiPSKForAccessoryReprovisioning;	// 240 = 0xf0
    NSString *_countrycodeForAccessoryReprovisioning;	// 248 = 0xf8
    NSMutableArray *_pairedAccessories;	// 256 = 0x100
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;	// 264 = 0x108
    NSMutableArray *_currentlyPairingAccessories;	// 272 = 0x110
    NSMutableArray *_currentlyPairingProgressHandlers;	// 280 = 0x118
    NSHashTable *_tombstonedHAPAccessoryServers;	// 288 = 0x120
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;	// 296 = 0x128
    NSMutableSet *_discoveredAccessoryServerIdentifiers;	// 304 = 0x130
    NSArray *_browseableLinkTypes;	// 312 = 0x138
}

+ (id)logCategory;	// IMP=0x000000000082d7d1
- (void).cxx_destruct;	// IMP=0x00000000008234a6
@property(retain, nonatomic) NSArray *browseableLinkTypes; // @synthesize browseableLinkTypes=_browseableLinkTypes;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property(retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property(retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property(readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property(readonly, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property(retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property(retain, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property(retain, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property(retain, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property(retain, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property(retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers; // @synthesize discoveringAccessoryServerBrowsers=_discoveringAccessoryServerBrowsers;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) __weak id <HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property(nonatomic) _Bool btlePowerState; // @synthesize btlePowerState=_btlePowerState;
- (id)dumpRegisteredPairedAccessories;	// IMP=0x0000000000822e3b
- (id)dumpUnassociatedAccessories;	// IMP=0x0000000000822b59
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;	// IMP=0x0000000000822924
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;	// IMP=0x000000000082281c
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;	// IMP=0x0000000000822740
- (void)didFinishActivation:(id)arg1 context:(id)arg2;	// IMP=0x0000000000822664
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;	// IMP=0x00000000008225b3
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;	// IMP=0x000000000082250a
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;	// IMP=0x0000000000822459
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;	// IMP=0x00000000008223a8
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;	// IMP=0x000000000082230e
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;	// IMP=0x0000000000822274
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;	// IMP=0x0000000000822190
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;	// IMP=0x000000000082206c
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;	// IMP=0x0000000000821d97
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;	// IMP=0x00000000008219a2
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x00000000008217c1
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x0000000000821715
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x000000000082153f
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;	// IMP=0x000000000082144f
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x0000000000821196
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x0000000000820fbc
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;	// IMP=0x0000000000820f08
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;	// IMP=0x0000000000820e74
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x0000000000820dc7
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x0000000000820b95
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000820ab9
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x0000000000820291
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;	// IMP=0x000000000081ff84
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x000000000081fd6c
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x000000000081f27a
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x000000000081f0b1
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;	// IMP=0x000000000081ef59
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;	// IMP=0x000000000081eb10
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;	// IMP=0x000000000081da97
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000081d867
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;	// IMP=0x000000000081d460
- (void)_continueAfterPPIDValidation:(_Bool)arg1 server:(id)arg2;	// IMP=0x000000000081d44b
- (void)removeAccessoryCacheForIdentifier:(id)arg1;	// IMP=0x000000000081d434
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000081d41a
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x000000000081d400
- (_Bool)isServerLinkTypeBrowseable:(long long)arg1;	// IMP=0x000000000081d1b1
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;	// IMP=0x000000000081d13f
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000081d097
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;	// IMP=0x000000000081d005
- (void)_notifyDelegateOfReachabilityChangeChange:(_Bool)arg1 forBTLEAccessories:(id)arg2;	// IMP=0x000000000081ce4a
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(_Bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;	// IMP=0x000000000081ce33
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;	// IMP=0x000000000081cb08
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;	// IMP=0x000000000081c80e
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;	// IMP=0x000000000081c52a
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;	// IMP=0x000000000081c40b
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;	// IMP=0x000000000081beff
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;	// IMP=0x000000000081ba99
- (void)_startPairingInterruptionTimer:(id)arg1;	// IMP=0x000000000081b748
- (void)_stopReconfirmTimer:(id)arg1;	// IMP=0x000000000081b553
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;	// IMP=0x000000000081b3a2
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;	// IMP=0x000000000081b1cc
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x000000000081b116
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;	// IMP=0x000000000081af40
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;	// IMP=0x000000000081af28
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;	// IMP=0x000000000081ad9e
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;	// IMP=0x000000000081aaec
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(_Bool)arg3 stateNumber:(id)arg4;	// IMP=0x000000000081a76b
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;	// IMP=0x000000000081a49b
- (void)_removePairingInformation:(id)arg1 error:(id)arg2;	// IMP=0x000000000081a2c8
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(_Bool)arg5;	// IMP=0x000000000081a066
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(_Bool)arg2 stateNumber:(id)arg3;	// IMP=0x0000000000819dc7
- (void)_resurrectAccessoryServer:(id)arg1;	// IMP=0x0000000000819c36
- (void)_discoverAccessories:(id)arg1;	// IMP=0x00000000008198d2
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;	// IMP=0x0000000000819776
- (void)_tombstoneAccessoryServer:(id)arg1;	// IMP=0x00000000008195ad
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;	// IMP=0x00000000008193e7
- (_Bool)_shouldAccessoryServerBeTombstoned:(id)arg1;	// IMP=0x0000000000819333
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;	// IMP=0x0000000000819160
- (_Bool)_isAccessoryServerTombstoned:(id)arg1;	// IMP=0x00000000008190e9
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)messageDestination;	// IMP=0x000000000081905c
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000818e9c
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;	// IMP=0x0000000000818c29
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;	// IMP=0x00000000008186c7
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000817732
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000008159f1
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x00000000008154ef
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;	// IMP=0x0000000000815193
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x0000000000814b29
- (void)_handleSetupCodeAvailable:(id)arg1;	// IMP=0x00000000008147b4
- (void)_notifyManagerOfNewAccessory;	// IMP=0x00000000008146ab
- (id)unpairedAccessoryForServer:(id)arg1;	// IMP=0x00000000008145ff
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x000000000081442c
- (void)_setBTLEPowerChangeCompletionHandler;	// IMP=0x0000000000814396
- (void)handleXPCConnectionInvalidated:(id)arg1;	// IMP=0x00000000008142e5
- (void)_handleRequestSearchForNewAccessories:(id)arg1;	// IMP=0x0000000000813c3a
- (void)_handleRequestFetchNewAccessories:(id)arg1;	// IMP=0x00000000008136a1
- (void)__handleProcessStateChange:(id)arg1;	// IMP=0x000000000081355b
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1;	// IMP=0x000000000081306d
- (void)_registerForNotifications;	// IMP=0x0000000000812fb9
- (void)_registerForMessages;	// IMP=0x0000000000812d4b
- (void)resurrectAccessoryServer:(id)arg1;	// IMP=0x0000000000812bcf
- (void)tombstoneAccessoryServer:(id)arg1;	// IMP=0x0000000000812b1e
- (void)discoverAccessories:(id)arg1;	// IMP=0x0000000000812a6d
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000812688
- (void)startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000812617
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000812539
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;	// IMP=0x0000000000812520
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000008120e5
- (void)_stopDiscoveringMediaAccessories;	// IMP=0x0000000000811f2a
- (void)_startDiscoveringMediaAccessories;	// IMP=0x0000000000811e87
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000811da9
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;	// IMP=0x0000000000811a79
- (void)handleStartDiscoveringAssociatedMediaAccessories:(_Bool)arg1 forTransport:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000811994
- (void)_startDiscoveringPairedAccessories:(id)arg1;	// IMP=0x0000000000811666
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000081143b
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000810fbe
- (void)timerDidFire:(id)arg1;	// IMP=0x00000000008107d2
- (void)_stopReprovisioningTimerHandler;	// IMP=0x000000000081053b
- (_Bool)_isBrowsingAllowed;	// IMP=0x0000000000810533
- (void)_startOrStopAccessoryDiscovery;	// IMP=0x000000000081052d
- (void)_stopBtleAccessoryReachabilityProbeTimer;	// IMP=0x00000000008103cc
- (void)_btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x000000000080fdaa
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x000000000080fcce
- (void)handleSetupCodeAvailable:(id)arg1;	// IMP=0x000000000080fc1d
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(_Bool)arg2;	// IMP=0x000000000080fb66
- (void)removePairingInformationForAccessoryServer:(id)arg1;	// IMP=0x000000000080fb1f
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;	// IMP=0x000000000080fac0
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000080f985
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000080f87b
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;	// IMP=0x000000000080f79f
- (id)discoveredAccessoryServers;	// IMP=0x000000000080f6a8
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;	// IMP=0x000000000080f5cc
- (void)deregisterPairedAccessory:(id)arg1;	// IMP=0x000000000080f39d
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;	// IMP=0x000000000080ef5a
- (void)_addUnpairedAccessoryForServer:(id)arg1;	// IMP=0x000000000080e10a
- (void)_handleWACAccessoryFound;	// IMP=0x000000000080def0
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x000000000080dcb3
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;	// IMP=0x000000000080dca1
- (void)removeUnpairedHAPAccessory:(id)arg1;	// IMP=0x000000000080dbc6
- (void)addUnpairedHAPAccessory:(id)arg1;	// IMP=0x000000000080daeb
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;	// IMP=0x000000000080d93d
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;	// IMP=0x000000000080d832
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000080d662
@property(retain, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
- (void)updateUnassociatedWACAccessory:(id)arg1;	// IMP=0x000000000080d465
- (void)removeUnassociatedWACAccessory:(id)arg1;	// IMP=0x000000000080d38a
- (void)addUnassociatedWACAccessory:(id)arg1;	// IMP=0x000000000080d2af
- (void)removeUnassociatedMediaAccessory:(id)arg1;	// IMP=0x000000000080d1d4
- (void)_associateMediaAccessoryForServer:(id)arg1;	// IMP=0x000000000080cf81
- (void)_associate:(_Bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;	// IMP=0x000000000080ceaf
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x000000000080cdcc
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;	// IMP=0x000000000080cbf9
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;	// IMP=0x000000000080c9b9
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x000000000080c83c
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;	// IMP=0x000000000080c6bf
- (id)unpairedAccessoryWithUUID:(id)arg1;	// IMP=0x000000000080c63c
@property(readonly, nonatomic) NSArray *unpairedHAPAccessories;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 onQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000080c434
- (_Bool)isBrowsingAllowed;	// IMP=0x000000000080c36a
- (id)acessoryBrowserHapProtocol;	// IMP=0x000000000080c361
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;	// IMP=0x000000000080c2aa
- (void)homeLocationChangeNotification:(id)arg1;	// IMP=0x000000000080c118
- (void)handleConnectionDeactivation:(id)arg1;	// IMP=0x000000000080c067
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000000080bba3
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000000080ba68
- (void)activate:(_Bool)arg1;	// IMP=0x000000000080b9ec
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000080b904
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;	// IMP=0x000000000080b853
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x000000000080b7d7
- (void)stopDiscoveringMediaAccessories;	// IMP=0x000000000080b766
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000080b6ea
- (void)stopDiscoveringAccessories;	// IMP=0x000000000080b679
- (void)startDiscoveringMediaAccessories;	// IMP=0x000000000080b608
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000080b58c
- (void)startDiscoveringAccessories;	// IMP=0x000000000080b51b
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000080b49f
- (void)startDiscoveringPairedAccessories;	// IMP=0x000000000080b42e
- (_Bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x000000000080b331
- (void)resetConfiguration;	// IMP=0x000000000080b2c0
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;	// IMP=0x000000000080ad6f
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;	// IMP=0x000000000080a0e3
- (void)_notifyDelegateOfReachabilityChange:(_Bool)arg1 forAccessoryWithIdentifier:(id)arg2;	// IMP=0x0000000000809f46
- (void)__inactivate;	// IMP=0x0000000000809ed5
- (void)__activate;	// IMP=0x0000000000809e64
- (void)endActiveAssertion:(id)arg1;	// IMP=0x0000000000809c20
- (id)beginActiveAssertionWithReason:(id)arg1;	// IMP=0x0000000000809a99
- (unsigned long long)numPairedIPAccessories;	// IMP=0x0000000000809a50
- (_Bool)areThereAnyAssociatedAirPlayAccessories;	// IMP=0x0000000000809a08
- (id)identifiersOfAssociatedMediaAccessories;	// IMP=0x00000000008099f1
- (_Bool)areThereAnyPairedBTLEAccessories;	// IMP=0x00000000008099a9
- (id)identifiersOfPairedBTLEAccessories;	// IMP=0x0000000000809992
- (_Bool)areThereAnyPairedAccessories;	// IMP=0x000000000080994a
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;	// IMP=0x0000000000809720
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;	// IMP=0x00000000008095fa
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;	// IMP=0x00000000008093f8
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;	// IMP=0x0000000000809225
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;	// IMP=0x000000000080915a
- (void)resetPairedAccessories;	// IMP=0x00000000008090b8
- (void)removePairedAccessory:(id)arg1;	// IMP=0x0000000000808fdd
- (void)addPairedAccessory:(id)arg1;	// IMP=0x0000000000808f02
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;	// IMP=0x0000000000808c58
- (void)__addBrowsingConnection:(id)arg1;	// IMP=0x00000000008084af
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;	// IMP=0x0000000000807fe7
- (_Bool)__isMediaAccessoryBrowsingRequested;	// IMP=0x0000000000807df9
- (_Bool)__isAccessoryBrowsingRequested;	// IMP=0x0000000000807db1
- (void)__resetBrowsingConnections;	// IMP=0x0000000000807d0f
- (id)browsingConnections;	// IMP=0x0000000000807be3
@property _Bool internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
- (void)_removeMediaAccessoryControlObserverMatchingConnection:(id)arg1;	// IMP=0x00000000008078ea
- (void)__addMediaAccessoryControlObserver:(id)arg1;	// IMP=0x00000000008076b2
- (void)__removeMediaAccessoryControlObserver:(id)arg1;	// IMP=0x0000000000807457
- (_Bool)hasClientRequestedMediaAccessoryControl:(id)arg1;	// IMP=0x00000000008073bc
- (void)resetMediaAccessoryControlConnections;	// IMP=0x000000000080731a
- (id)mediaAccessoryControlConnections;	// IMP=0x00000000008071ee
- (id)dumpBrowsingConnections;	// IMP=0x0000000000806db9
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;	// IMP=0x0000000000806a47
- (void)_handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000806911
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000806860
- (void)_handleAddedAccessory:(id)arg1;	// IMP=0x000000000080671d
- (void)handleAddedAccessory:(id)arg1;	// IMP=0x000000000080666c
@property(readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property(readonly, nonatomic) NSArray *unassociatedMediaAccessories;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;	// IMP=0x0000000000806241
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;	// IMP=0x0000000000805f2e
@property(readonly, copy) NSArray *unassociatedAccessories;
- (void)removeUnassociatedAccessory:(id)arg1;	// IMP=0x0000000000805bc2
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;	// IMP=0x000000000080592d
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x000000000080577e
- (void)_handleTestModeConfigRequest:(id)arg1;	// IMP=0x0000000000805182
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(_Bool)arg2;	// IMP=0x0000000000804fc6
- (void)validateLinkTypes:(id)arg1;	// IMP=0x0000000000804dc0
- (void)dealloc;	// IMP=0x0000000000804d18
- (void)updateBroadcastKeyForIdentifer:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;	// IMP=0x0000000000804c01
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;	// IMP=0x0000000000804b25
- (void)retrieveCurrentStateForIdentifer:(id)arg1 stateNumber:(id *)arg2 isReachable:(_Bool *)arg3 linkQuality:(unsigned long long *)arg4 lastSeen:(id *)arg5;	// IMP=0x0000000000804a95
- (void)setQOS:(long long)arg1;	// IMP=0x0000000000804a19
- (void)configureAccessory:(id)arg1 trackState:(_Bool)arg2 connectionPriority:(_Bool)arg3;	// IMP=0x000000000080495a
- (void)configureWithHomeManager:(id)arg1;	// IMP=0x00000000008048a9
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;	// IMP=0x0000000000804196
- (id)initWithMessageDispatcher:(id)arg1;	// IMP=0x0000000000804132

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

