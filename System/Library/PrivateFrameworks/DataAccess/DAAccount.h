//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ACAccount, DAStatusReport, DATaskManager, DATrustHandler, NSArray, NSData, NSDate, NSMapTable, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSURL;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface DAAccount : NSObject
{
    ACAccount *_backingAccountInfo;	// 8 = 0x8
    _Bool _hasInitted;	// 16 = 0x10
    _Bool _shouldUseOpportunisticSockets;	// 17 = 0x11
    _Bool _wasUserInitiated;	// 18 = 0x12
    DAStatusReport *_statusReport;	// 24 = 0x18
    NSMapTable *_consumers;	// 32 = 0x20
    struct __CFURLStorageSession *_storageSession;	// 40 = 0x28
    NSString *_clientToken;	// 48 = 0x30
    DATaskManager *_taskManager;	// 56 = 0x38
    NSObject<OS_xpc_object> *_xpcActivity;	// 64 = 0x40
    int _continueCount;	// 72 = 0x48
    _Bool _isFetchingAutomatically;	// 76 = 0x4c
    _Bool _shouldFailAllTasks;	// 77 = 0x4d
    _Bool _isValidating;	// 78 = 0x4e
    DATrustHandler *_trustHandler;	// 80 = 0x50
    NSArray *_appIdsForPasswordPrompt;	// 88 = 0x58
    NSString *_sourceApplicationBundleIdentifier;	// 96 = 0x60
    NSMutableDictionary *_dataclassPropertyURLsByDataclass;	// 104 = 0x68
    NSMutableArray *_pendingQueries;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_pendingQueryQueue;	// 120 = 0x78
    NSDate *_lastQueryStartedTime;	// 128 = 0x80
}

+ (_Bool)shouldCreateAccountForBackingAccountInfo:(id)arg1;	// IMP=0x0000000000002aa7
+ (id)daAccountSubclassWithBackingAccountInfo:(id)arg1;	// IMP=0x000000000000292d
+ (void)reacquireClientRestrictions:(id)arg1;	// IMP=0x000000000000a902
+ (id)oneshotListOfAccountIDs;	// IMP=0x000000000000a8fa
+ (id)_leafAccountTypes;	// IMP=0x000000000000a84d
+ (id)_leafAccountTypes;	// IMP=0x000000000000a908
- (void).cxx_destruct;	// IMP=0x00000000000096d5
@property(retain, nonatomic) NSDate *lastQueryStartedTime; // @synthesize lastQueryStartedTime=_lastQueryStartedTime;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pendingQueryQueue; // @synthesize pendingQueryQueue=_pendingQueryQueue;
@property(retain, nonatomic) NSMutableArray *pendingQueries; // @synthesize pendingQueries=_pendingQueries;
@property(retain, nonatomic) NSMutableDictionary *dataclassPropertyURLsByDataclass; // @synthesize dataclassPropertyURLsByDataclass=_dataclassPropertyURLsByDataclass;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(nonatomic) _Bool isValidating; // @synthesize isValidating=_isValidating;
@property(readonly, nonatomic) NSArray *appIdsForPasswordPrompt; // @synthesize appIdsForPasswordPrompt=_appIdsForPasswordPrompt;
@property(retain, nonatomic) DATrustHandler *trustHandler; // @synthesize trustHandler=_trustHandler;
@property(readonly, nonatomic) DATaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(nonatomic) _Bool wasUserInitiated; // @synthesize wasUserInitiated=_wasUserInitiated;
@property(nonatomic) _Bool shouldUseOpportunisticSockets; // @synthesize shouldUseOpportunisticSockets=_shouldUseOpportunisticSockets;
@property(retain, nonatomic) DAStatusReport *statusReport; // @synthesize statusReport=_statusReport;
@property(readonly, nonatomic) ACAccount *backingAccountInfo; // @synthesize backingAccountInfo=_backingAccountInfo;
- (_Bool)getFetchingAutomaticallyState;	// IMP=0x00000000000095ba
- (void)saveFetchingAutomaticallyState:(_Bool)arg1;	// IMP=0x00000000000095b1
- (void)removeXpcActivity;	// IMP=0x000000000000945c
- (void)decrementXpcActivityContinueCount;	// IMP=0x000000000000935b
- (void)incrementXpcActivityContinueCount;	// IMP=0x0000000000009274
- (_Bool)hasXpcActivity;	// IMP=0x0000000000009266
- (void)saveXpcActivity:(id)arg1;	// IMP=0x000000000000915d
- (_Bool)shouldCancelTaskDueToOnPowerFetchMode;	// IMP=0x00000000000090d2
- (id)accountTypeIdentifier;	// IMP=0x000000000000907e
- (id)protocolVersion;	// IMP=0x0000000000009076
- (void)reload;	// IMP=0x0000000000008fd6
- (void)shutdown;	// IMP=0x0000000000008f4e
- (id)description;	// IMP=0x0000000000008e7a
- (struct __CFURLStorageSession *)copyStorageSession;	// IMP=0x0000000000008cd8
- (_Bool)isSubscribedCalendarAccount;	// IMP=0x0000000000008cd0
- (_Bool)isGoogleAccount;	// IMP=0x0000000000008cc8
- (_Bool)isHotmailAccount;	// IMP=0x0000000000008cc0
- (_Bool)isCalDAVChildAccount;	// IMP=0x0000000000008cb8
- (_Bool)isDelegateAccount;	// IMP=0x0000000000008cb0
- (_Bool)isCardDAVAccount;	// IMP=0x0000000000008ca8
- (_Bool)isCalDAVAccount;	// IMP=0x0000000000008ca0
- (_Bool)isLDAPAccount;	// IMP=0x0000000000008c98
- (_Bool)isActiveSyncAccount;	// IMP=0x0000000000008c90
- (_Bool)accountHasSignificantPropertyChangesWithChangeInfo:(id)arg1;	// IMP=0x000000000000866e
- (_Bool)isEqualToAccount:(id)arg1;	// IMP=0x00000000000085d0
@property(readonly, nonatomic) _Bool shouldFailAllTasks; // @synthesize shouldFailAllTasks=_shouldFailAllTasks;
- (void)resetStatusReport;	// IMP=0x00000000000080de
- (_Bool)resetCertWarnings;	// IMP=0x000000000000809a
@property(readonly, nonatomic) _Bool isChildAccount;
- (void)cleanupAccountFiles;	// IMP=0x0000000000007fc3
- (void)setExceptions:(struct __CFData *)arg1 forDigest:(id)arg2;	// IMP=0x0000000000007e7b
- (struct __CFData *)exceptionsForDigest:(id)arg1;	// IMP=0x0000000000007dd8
- (id)exceptionsDict;	// IMP=0x0000000000007dbf
- (_Bool)_isIdentityManagedByProfile;	// IMP=0x0000000000007d74
- (void)setIdentityCertificatePersistentID:(id)arg1 managedByProfile:(_Bool)arg2;	// IMP=0x0000000000007c37
@property(readonly, copy, nonatomic) NSData *identityPersist;
- (_Bool)canSaveWithAccountProvider:(CDUnknownBlockType)arg1;	// IMP=0x000000000000760b
- (_Bool)preflightSaveWithAccountProvider:(CDUnknownBlockType)arg1;	// IMP=0x000000000000757b
- (id)addUsernameToURL:(id)arg1;	// IMP=0x00000000000073d1
@property(readonly, nonatomic) int keychainAccessibilityType;
- (void)updateExistingAccountProperties;	// IMP=0x00000000000071c2
- (void)saveAccountProperties;	// IMP=0x00000000000070a3
- (void)saveAccountPropertiesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000006da7
- (void)removeClientCertificateData;	// IMP=0x0000000000006d43
- (id)defaultContainerIdentifierForDADataclass:(long long)arg1;	// IMP=0x0000000000006d3b
- (void)stopMonitoringFolders;	// IMP=0x0000000000006c5c
- (void)stopMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000006b7d
- (_Bool)monitorFolderWithID:(id)arg1;	// IMP=0x0000000000006acd
- (_Bool)monitorFoldersWithIDs:(id)arg1;	// IMP=0x0000000000006ac5
- (void)tearDown;	// IMP=0x00000000000069e6
- (id)oauthInfoProvider;	// IMP=0x00000000000069dd
- (id)oauth2Token;	// IMP=0x00000000000066fa
- (id)customConnectionProperties;	// IMP=0x00000000000065cb
- (id)additionalHeaderValues;	// IMP=0x00000000000063b1
- (_Bool)handleCertificateError:(id)arg1;	// IMP=0x00000000000063a9
@property(readonly, nonatomic) NSSet *serverComplianceClasses;
@property(readonly, nonatomic) NSString *serverRoot;
@property(readonly, nonatomic) NSString *userAgentHeader;
- (void)_handleSignificantPropertyChanges;	// IMP=0x0000000000006361
- (void)accountDidChangeWithChangeInfo:(id)arg1;	// IMP=0x000000000000626c
- (void)removeDBSyncData;	// IMP=0x0000000000005b3a
- (_Bool)shouldRemoveDBSyncDataOnAccountChange;	// IMP=0x0000000000005ada
- (id)onBehalfOfBundleIdentifier;	// IMP=0x0000000000005a3c
@property(readonly, nonatomic) _Bool shouldAutodiscoverAccountProperties;
@property(nonatomic) _Bool shouldDoInitialAutodiscovery;
- (_Bool)autodiscoverAccountConfigurationWithConsumer:(id)arg1;	// IMP=0x000000000000591c
- (void)discoverInitialPropertiesWithConsumer:(id)arg1;	// IMP=0x0000000000005872
- (_Bool)saveModifiedPropertiesOnBackingAccount;	// IMP=0x000000000000586a
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2 inQueue:(id)arg3;	// IMP=0x0000000000005485
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2;	// IMP=0x0000000000005411
@property(copy, nonatomic) NSURL *principalURL;
@property(readonly, copy, nonatomic) NSString *scheme;
@property(copy, nonatomic) NSString *principalPath;
@property(nonatomic) long long port;
@property(retain, nonatomic) NSData *encryptionIdentityPersistentReference;
@property(retain, nonatomic) NSData *signingIdentityPersistentReference;
@property(readonly, nonatomic) NSString *preferredAddress;
- (_Bool)accountContainsEmailAddress:(id)arg1;	// IMP=0x0000000000004dbf
@property(copy, nonatomic) NSArray *emailAddresses;
@property(copy, nonatomic) NSString *emailAddress;
@property(nonatomic) _Bool useSSL;
@property(copy, nonatomic) NSString *host;
- (id)domainOnly;	// IMP=0x0000000000004ade
- (id)usernameWithoutDomain;	// IMP=0x0000000000004acc
- (long long)portFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000004a5e
- (_Bool)useSSLFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x00000000000049c2
- (id)hostFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000004972
- (id)urlFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000004616
- (void)performUsingAccountPersona:(CDUnknownBlockType)arg1;	// IMP=0x0000000000004606
@property(copy, nonatomic) NSString *password;
- (id)passwordWithExpected:(_Bool)arg1;	// IMP=0x000000000000423b
- (void)clientTokenRequestedByServer;	// IMP=0x00000000000040f3
@property(readonly, copy, nonatomic) NSString *clientToken;
- (void)removeConsumerForTask:(id)arg1;	// IMP=0x0000000000003f07
- (id)consumerForTask:(id)arg1;	// IMP=0x0000000000003ef1
- (void)setConsumer:(id)arg1 forTask:(id)arg2;	// IMP=0x0000000000003da9
- (id)stateString;	// IMP=0x0000000000003b9e
- (void)stopMonitoringFolderWithID:(id)arg1;	// IMP=0x0000000000003abf
- (void)suspendMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x00000000000039e0
- (void)resumeMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000003936
- (void)setAccountIntProperty:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000003899
- (int)accountIntPropertyForKey:(id)arg1;	// IMP=0x0000000000003803
- (void)setAccountBoolProperty:(_Bool)arg1 forKey:(id)arg2;	// IMP=0x0000000000003766
- (_Bool)accountBoolPropertyForKey:(id)arg1;	// IMP=0x00000000000036d0
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x000000000000364d
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x00000000000035c7
- (void)removeAccountPropertyForKey:(id)arg1;	// IMP=0x0000000000003553
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000034cd
- (id)accountPropertyForKey:(id)arg1;	// IMP=0x000000000000344a
- (id)spinnerIdentifiers;	// IMP=0x000000000000339e
- (id)dataclassProperties;	// IMP=0x0000000000003388
@property(readonly, nonatomic) long long enabledDataclassesBitmask;
- (void)setEnabled:(_Bool)arg1 forDADataclass:(long long)arg2;	// IMP=0x00000000000031a3
- (_Bool)enabledForDADataclass:(long long)arg1;	// IMP=0x000000000000315e
- (_Bool)enabledForAnyDADataclasses:(long long)arg1;	// IMP=0x0000000000003076
- (void)setEnabled:(_Bool)arg1 forDataclass:(id)arg2;	// IMP=0x0000000000003060
- (_Bool)isEnabledForDataclass:(id)arg1;	// IMP=0x000000000000304a
- (_Bool)isDisabled;	// IMP=0x00000000000021f8
@property(copy, nonatomic) NSString *user;
@property(copy, nonatomic) NSString *username;
- (id)displayName;	// IMP=0x0000000000002fe8
@property(copy, nonatomic) NSString *accountDescription;
- (id)redactedDescription;	// IMP=0x0000000000002f63
@property(readonly, nonatomic) NSString *publicDescription;
@property(readonly, nonatomic) NSString *changeTrackingID;
- (void)_setPersistentUUID:(id)arg1;	// IMP=0x0000000000002e47
@property(readonly, copy, nonatomic) NSString *persistentUUID;
@property(readonly, nonatomic) NSString *scheduleIdentifier;
- (id)syncStoreIdentifier;	// IMP=0x0000000000001f54
@property(readonly, nonatomic) NSString *accountID;
- (void)resetAccountID;	// IMP=0x0000000000002ce6
- (_Bool)upgradeAccount;	// IMP=0x0000000000002c82
@property(nonatomic, setter=setDAAccountVersion:) int daAccountVersion;
- (id)containerProviderWithDBHelper:(id)arg1;	// IMP=0x0000000000002b8c
- (id)accountsProviderWithDBHelper:(id)arg1;	// IMP=0x0000000000002aaf
- (void)ingestBackingAccountInfoProperties;	// IMP=0x0000000000002927
- (void)_refreshCredential;	// IMP=0x00000000000027b0
- (id)initWithBackingAccountInfo:(id)arg1;	// IMP=0x0000000000002644
- (void)dealloc;	// IMP=0x0000000000001f66
- (_Bool)handleTrustChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000097f3
- (_Bool)handleTrustChallenge:(id)arg1;	// IMP=0x0000000000009779
- (id)getAppleIDSession;	// IMP=0x0000000000009881
- (void)removeFromCoreDAVLoggingDelegates;	// IMP=0x000000000000988f
- (void)addToCoreDAVLoggingDelegates;	// IMP=0x0000000000009889
- (void)handleValidationError:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000a561
- (void)webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 inQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000a45c
- (void)_webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 inQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000a137
- (void)dropAssertionsAndRenewCredentialsInQueue:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000099d1
- (id)localizedInvalidPasswordMessage;	// IMP=0x0000000000009933
- (id)localizedIdenticalAccountFailureMessage;	// IMP=0x0000000000009895
- (void)accountDidChangeFromOldAccountInfo:(id)arg1;	// IMP=0x000000000000abb7
- (_Bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1;	// IMP=0x000000000000a921
- (void)cancelOfficeHoursRequestWithID:(id)arg1;	// IMP=0x000000000000bdf1
- (id)setOfficeHours:(id)arg1 withConsumer:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000bce4
- (id)fetchOfficeHoursWithConsumer:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000bbd7
- (void)cancelShareResponseInstance:(id)arg1 error:(id)arg2;	// IMP=0x000000000000bbd1
- (id)reportShareRequestAsJunkForCalendar:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000ba7f
- (id)respondToShareRequestForCalendar:(id)arg1 withResponse:(long long)arg2 consumer:(id)arg3;	// IMP=0x000000000000b92d
- (void)cancelCalendarDirectorySearchWithID:(id)arg1;	// IMP=0x000000000000b842
- (void)performGroupExpansionForPrincipalPath:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000b715
- (id)performCalendarDirectorySearchForTerms:(id)arg1 recordTypes:(id)arg2 resultLimit:(unsigned long long)arg3 consumer:(id)arg4;	// IMP=0x000000000000b5e6
- (void)cancelUpdateGrantedDelegatePermissionRequestWithID:(id)arg1;	// IMP=0x000000000000b520
- (id)updateGrantedDelegatePermission:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000b3f3
- (void)cancelGrantedDelegatesListRequestWithID:(id)arg1;	// IMP=0x000000000000b32d
- (id)requestGrantedDelegatesListWithConsumer:(id)arg1;	// IMP=0x000000000000b1fe
- (void)cancelCalendarAvailabilityRequestWithID:(id)arg1;	// IMP=0x000000000000b138
- (id)requestCalendarAvailabilityForStartDate:(id)arg1 endDate:(id)arg2 ignoredEventID:(id)arg3 addresses:(id)arg4 consumer:(id)arg5;	// IMP=0x000000000000b00a
- (void)cancelDownloadingInstance:(id)arg1 error:(id)arg2;	// IMP=0x000000000000b004
- (id)beginDownloadingAttachmentWithUUID:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000aeb2
- (_Bool)sendEmailsForCalEvents:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000aeaa
- (void)synchronizeEventsFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;	// IMP=0x000000000000aea4
- (id)eventsFolders;	// IMP=0x000000000000ae9c
- (id)defaultEventsFolder;	// IMP=0x000000000000ae94
- (void)synchronizeContactsFolder:(id)arg1 previousTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 highestIdContext:(id)arg5 isInitialUberSync:(_Bool)arg6 isResyncAfterConnectionFailed:(_Bool)arg7 previousTagIsSuspect:(_Bool)arg8 moreLocalChangesAvailable:(_Bool)arg9 consumer:(id)arg10;	// IMP=0x000000000000c5d1
- (id)contactsFolders;	// IMP=0x000000000000c5c9
- (id)defaultContactsFolder;	// IMP=0x000000000000c5c1
- (id)draftsFolder;	// IMP=0x000000000000c613
- (id)deletedItemsFolder;	// IMP=0x000000000000c60b
- (id)sentItemsFolder;	// IMP=0x000000000000c603
- (id)inboxFolder;	// IMP=0x000000000000c5fb
- (id)unactionableICSRepresentationForMetaData:(id)arg1 inFolderWithId:(id)arg2 outSummary:(id *)arg3;	// IMP=0x000000000000c623
- (_Bool)reattemptInvitationLinkageForMetaData:(id)arg1 inFolderWithId:(id)arg2;	// IMP=0x000000000000c61b
- (_Bool)isOofSupported;	// IMP=0x000000000001daee
- (void)retrieveOofSettingsForConsumer:(id)arg1;	// IMP=0x000000000001d9e0
- (void)updateOofSettingsWithParams:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000001d8d2
- (int)supportsEmailFlagging;	// IMP=0x000000000001eafd
- (int)supportsMailboxSearch;	// IMP=0x000000000001eaf5
- (_Bool)searchQueriesRunning;	// IMP=0x000000000001e9b1
- (void)cancelAllSearchQueries;	// IMP=0x000000000001e6a3
- (void)cancelSearchQuery:(id)arg1;	// IMP=0x000000000001e3ed
- (void)performSearchQuery:(id)arg1;	// IMP=0x000000000001e089
- (void)_dequeueQuery;	// IMP=0x000000000001dcb3
- (id)getPendingQueryQueue;	// IMP=0x000000000001db92
- (_Bool)_reallySearchQueriesRunning;	// IMP=0x000000000001ec43
- (void)_reallyCancelAllSearchQueries;	// IMP=0x000000000001ec3d
- (void)_reallyCancelPendingSearchQuery:(id)arg1;	// IMP=0x000000000001ec37
- (void)_reallyCancelSearchQuery:(id)arg1;	// IMP=0x000000000001ec31
- (void)_reallyPerformSearchQuery:(id)arg1;	// IMP=0x000000000001eb05
- (void)setToDosNumberOfPastDaysToSync:(int)arg1;	// IMP=0x000000000001ec69
- (int)toDosNumberOfPastDaysToSync;	// IMP=0x000000000001ec61
- (void)synchronizeToDosFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;	// IMP=0x000000000001ec5b
- (id)toDosFolders;	// IMP=0x000000000001ec53
- (id)defaultToDosFolder;	// IMP=0x000000000001ec4b
- (void)synchronizeNotesFolder:(id)arg1 noteContext:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 changeSet:(id)arg5 notesToDeleteAfterSync:(id)arg6 isInitialUberSync:(_Bool)arg7 isResyncAfterConnectionFailed:(_Bool)arg8 moreLocalChangesAvailable:(_Bool)arg9 consumer:(id)arg10;	// IMP=0x0000000000036b3f
- (id)notesFolders;	// IMP=0x0000000000036b37
- (id)defaultNotesFolder;	// IMP=0x0000000000036b2f

@end

