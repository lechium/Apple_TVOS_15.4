//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreCDPInternal/CDPDDeviceSecretValidatorDelegate-Protocol.h>
#import <CoreCDPInternal/CDPDRecoveryKeyValidatorInternalDelegate-Protocol.h>

@class CDPContext, CDPDPCSController, CDPDSecureBackupController, NSString;
@protocol CDPAuthProviderInternal, CDPDAuthProviderInternal, CDPDCircleProxy, CDPDOctagonTrustProxy, CDPDSecureBackupProxy, CDPStateUIProviderInternal;

@interface CDPDRecoveryKeyController : NSObject <CDPDRecoveryKeyValidatorInternalDelegate, CDPDDeviceSecretValidatorDelegate>
{
    CDPContext *_context;	// 8 = 0x8
    CDPDPCSController *_pcsController;	// 16 = 0x10
    CDPDSecureBackupController *_secureBackupController;	// 24 = 0x18
    id <CDPStateUIProviderInternal> _uiProvider;	// 32 = 0x20
    id <CDPDCircleProxy> _circleProxy;	// 40 = 0x28
    id <CDPDSecureBackupProxy> _sbProxy;	// 48 = 0x30
    id <CDPDOctagonTrustProxy> _otProxy;	// 56 = 0x38
    id <CDPAuthProviderInternal> _recoveryAuthProvider;	// 64 = 0x40
    id <CDPDAuthProviderInternal> _internalAuthProvider;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x00000000000169ec
@property(retain, nonatomic) id <CDPDAuthProviderInternal> internalAuthProvider; // @synthesize internalAuthProvider=_internalAuthProvider;
@property(retain, nonatomic) id <CDPAuthProviderInternal> recoveryAuthProvider; // @synthesize recoveryAuthProvider=_recoveryAuthProvider;
@property(retain, nonatomic) id <CDPDOctagonTrustProxy> otProxy; // @synthesize otProxy=_otProxy;
@property(retain, nonatomic) id <CDPDSecureBackupProxy> sbProxy; // @synthesize sbProxy=_sbProxy;
@property(retain, nonatomic) id <CDPDCircleProxy> circleProxy; // @synthesize circleProxy=_circleProxy;
@property(retain, nonatomic) id <CDPStateUIProviderInternal> uiProvider; // @synthesize uiProvider=_uiProvider;
- (void)dealloc;	// IMP=0x00000000000168de
- (_Bool)secretValidator:(id)arg1 shouldContinueValidationAfterError:(id)arg2;	// IMP=0x00000000000168d6
- (void)secretValidator:(id)arg1 recoverSecureBackupWithContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000168ba
- (id)generateRecoveryKeyWithInfo:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000168a4
- (void)enableBackupWithRecoveryKey:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016762
- (void)recoverDataUsingMasterKeyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000164dc
- (void)generateRandomRecoveryKey:(CDUnknownBlockType)arg1;	// IMP=0x00000000000160e4
- (void)deleteRecoveryKey:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015f31
- (void)generateNewRecoveryKey:(CDUnknownBlockType)arg1;	// IMP=0x00000000000159c0
- (void)verifyRecoveryKey:(CDUnknownBlockType)arg1;	// IMP=0x00000000000156c8
- (_Bool)isRecoveryKeyAvailable;	// IMP=0x0000000000015674
- (void)recoverAndSynchronizeStateWithServer:(CDUnknownBlockType)arg1;	// IMP=0x000000000001565e
- (void)recoverState:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015648
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2 authProvider:(id)arg3 circleProxy:(id)arg4 secureBackupProxy:(id)arg5 octagonTrustProxy:(id)arg6 pcsProxy:(id)arg7;	// IMP=0x000000000001549f
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2 authProvider:(id)arg3;	// IMP=0x000000000001536c
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2;	// IMP=0x0000000000015357
- (id)initWithContext:(id)arg1;	// IMP=0x0000000000015343

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

