//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreCDPInternal/CDPDCircleDelegate-Protocol.h>
#import <CoreCDPInternal/CDPDSecureBackupDelegate-Protocol.h>

@class CDPContext, CDPDCircleController, CDPDPCSController, CDPDSecureBackupController, CDPInheritanceTrustController;
@protocol CDPStateUIProviderInternal, OS_dispatch_queue;

@interface CDPDStateMachine : NSObject <CDPDSecureBackupDelegate, CDPDCircleDelegate>
{
    CDPContext *_context;	// 8 = 0x8
    id <CDPStateUIProviderInternal> _uiProvider;	// 16 = 0x10
    CDPDPCSController *_pcsController;	// 24 = 0x18
    CDPDCircleController *_circleController;	// 32 = 0x20
    CDPDSecureBackupController *_secureBackupController;	// 40 = 0x28
    CDPInheritanceTrustController *_inheritanceTrustController;	// 48 = 0x30
    _Bool _attemptedCDPEnable;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_beneficiaryTrustQueue;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x0000000000030e39
@property(nonatomic) _Bool attemptedCDPEnable; // @synthesize attemptedCDPEnable=_attemptedCDPEnable;
@property(retain, nonatomic) id <CDPStateUIProviderInternal> uiProvider; // @synthesize uiProvider=_uiProvider;
@property(retain, nonatomic) CDPContext *context; // @synthesize context=_context;
@property(retain, nonatomic) CDPDPCSController *pcsController; // @synthesize pcsController=_pcsController;
@property(retain, nonatomic) CDPDCircleController *circleController; // @synthesize circleController=_circleController;
@property(retain, nonatomic) CDPDSecureBackupController *secureBackupController; // @synthesize secureBackupController=_secureBackupController;
- (id)secureChannelContextForController:(id)arg1;	// IMP=0x0000000000030d0d
- (id)contextForController:(id)arg1;	// IMP=0x0000000000030cff
- (void)circleController:(id)arg1 secureBackupRecordsArePresentWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000030ce6
- (void)promptForLocalSecretWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030cc9
- (void)promptForAdoptionOfMultipleICSCWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030cac
- (_Bool)synchronizeCircleViewsForSecureBackupContext:(id)arg1;	// IMP=0x0000000000030ba2
- (id)circlePeerIDForSecureBackupController:(id)arg1;	// IMP=0x0000000000030b8c
- (void)_disableCloudDataProtectionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000308e3
- (void)_resetAccountCDPStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000306ca
- (void)_enableSecureBackupWithCircleJoinResult:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002fea5
- (void)_postRecoveryEnableSecureBackupWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002fbd1
- (_Bool)_disableAsyncModeRequested;	// IMP=0x000000000002fb4e
- (void)_enableCustodianRecoveryIfAvailableForContext:(id)arg1;	// IMP=0x000000000002fa39
- (void)_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:(id)arg1 localSecretType:(unsigned long long)arg2 useCachedSecret:(_Bool)arg3 circleJoinResult:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000000002f2c0
- (void)_attemptBackupRecoveryWithLocalSecret:(id)arg1 type:(unsigned long long)arg2 useCachedSecret:(_Bool)arg3 circleJoinResult:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000000002ebb2
- (void)_handleInteractiveRecoveryFlowWithCircleJoinResult:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002e605
- (void)_recoverSecureBackupWithCircleJoinResult:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002e30b
- (void)_confirmCDPEligibilityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e1f1
- (void)_enableKVSForAccount:(id)arg1 store:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002de97
- (void)_preflightAccountStateWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002dae9
- (_Bool)_isICloudKeychainDisabledByManagementProfile;	// IMP=0x000000000002da94
- (_Bool)shouldAllowCDPEnrollment;	// IMP=0x000000000002da8c
- (void)_authenticatedRepairCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d9e2
- (void)_refreshAndAuthenticateWithContext:(id)arg1;	// IMP=0x000000000002d82e
- (void)_performInteractivelyAuthenticatedRepair:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d565
- (void)_performSilentlyAuthenticatedRepair:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d28a
- (void)repairCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002cfce
- (id)_predicateForRecordUpgradeCheck;	// IMP=0x000000000002ce4e
- (id)_predicateForRecordUpgradeCheckIgnoringBottled;	// IMP=0x000000000002ccff
- (id)_predicateForRepair;	// IMP=0x000000000002cbee
- (void)_authenticatedShouldPerformRepairWithOptionForceFetch:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c6b1
- (void)shouldPerformRepairWithOptionForceFetch:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c322
- (void)_attemptCDPEnable:(CDUnknownBlockType)arg1;	// IMP=0x000000000002becf
- (void)_handlePreflightError:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002bda5
- (void)_handleJoinResult:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b82a
- (void)_handleRecoveryResetRequestWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002b304
- (void)_enrollOrDisableCDPAfterEnabledStateVerified:(CDUnknownBlockType)arg1;	// IMP=0x000000000002addc
- (void)_attemptBeneficiaryTrustWithInheritanceKey:(id)arg1 retryCount:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002a8b7
- (id)_beneficiaryTrustQueue;	// IMP=0x000000000002a850
- (void)_handleBeneficiaryTrustWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002a433
- (void)_handleiCDPStatusCheckError:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002a360
- (void)_handleCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000029d3c
- (void)handleCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000029368
- (void)dealloc;	// IMP=0x00000000000292fc
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2;	// IMP=0x0000000000029103

@end

