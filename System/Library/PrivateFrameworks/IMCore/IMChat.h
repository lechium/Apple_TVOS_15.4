//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <IMCore/IMPhotoLibraryPersistenceManagerListener-Protocol.h>
#import <IMCore/IMSendProgressDelegate-Protocol.h>
#import <IMCore/IMStateLoggable-Protocol.h>
#import <IMCore/INSpeakable-Protocol.h>

@class IMAccount, IMBrand, IMChatRegistry, IMChatScrutinyController, IMHandle, IMInlineReplyController, IMMessage, IMMessageItem, IMOrderingTools, IMScheduledUpdater, IMSendProgress, IMTimingCollection, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString;
@protocol IMChatItemRules;

@interface IMChat <IMPhotoLibraryPersistenceManagerListener, IMStateLoggable, INSpeakable, IMSendProgressDelegate>
{
    NSString *_guid;	// 24 = 0x18
    NSString *_typingGUID;	// 32 = 0x20
    NSString *_localUserIsComposing;	// 40 = 0x28
    NSString *_identifier;	// 48 = 0x30
    IMAccount *_account;	// 56 = 0x38
    NSString *_displayName;	// 64 = 0x40
    NSString *_roomName;	// 72 = 0x48
    NSString *_roomNameWithoutSuffix;	// 80 = 0x50
    NSString *_lastAddressedHandleID;	// 88 = 0x58
    NSString *_lastAddressedSIMID;	// 96 = 0x60
    NSString *_groupID;	// 104 = 0x68
    NSData *_engramID;	// 112 = 0x70
    NSArray *_participants;	// 120 = 0x78
    NSMutableDictionary *_participantStates;	// 128 = 0x80
    IMMessage *_invitationForPendingParticipants;	// 136 = 0x88
    NSMutableArray *_messagesPendingJoin;	// 144 = 0x90
    NSMutableSet *_guids;	// 152 = 0x98
    NSMutableDictionary *_chatProperties;	// 160 = 0xa0
    NSMutableDictionary *_participantProperties;	// 168 = 0xa8
    NSArray *_frequentReplies;	// 176 = 0xb0
    NSArray *_attachments;	// 184 = 0xb8
    NSNumber *_countOfAttachmentsNotCachedLocally;	// 192 = 0xc0
    NSNumber *_countOfMessagesMarkedAsSpam;	// 200 = 0xc8
    IMTimingCollection *_timingCollection;	// 208 = 0xd0
    id <IMChatItemRules> _chatItemRules;	// 216 = 0xd8
    IMScheduledUpdater *_chatItemsUpdater;	// 224 = 0xe0
    IMSendProgress *_sendProgress;	// 232 = 0xe8
    BOOL _downgradeState;	// 240 = 0xf0
    IMScheduledUpdater *_downgradeStateUpdater;	// 248 = 0xf8
    long long _joinState;	// 256 = 0x100
    unsigned char _style;	// 264 = 0x108
    unsigned long long _dbFailedCount;	// 272 = 0x110
    unsigned long long _dbUnreadCount;	// 280 = 0x118
    void *_context;	// 288 = 0x120
    unsigned int _hasBeenConfigured:1;	// 296 = 0x128
    unsigned int _isFirstMessageInvitation:1;	// 296 = 0x128
    unsigned int _wasInvitationHandled:1;	// 296 = 0x128
    unsigned int _didSendAFinishedMessage:1;	// 296 = 0x128
    unsigned int _isUpdatingChatItems:1;	// 296 = 0x128
    unsigned int _ignoreDowngradeStatusUpdates:1;	// 296 = 0x128
    long long _isFiltered;	// 304 = 0x130
    unsigned int _forceMMS:1;	// 312 = 0x138
    _Bool _hasRefreshedServiceForSending;	// 313 = 0x139
    _Bool _hasHadSuccessfulQuery;	// 314 = 0x13a
    long long _lastMessageTimeStampOnLoad;	// 320 = 0x140
    NSString *_currentUnreadHistoryQuery;	// 328 = 0x148
    _Bool _hasEarlierMessagesToLoad;	// 336 = 0x150
    _Bool _hasMoreRecentMessagesToLoad;	// 337 = 0x151
    _Bool _isCurrentlyDownloadingPurgedAssets;	// 338 = 0x152
    _Bool _hasSurfRequest;	// 339 = 0x153
    _Bool _unregistered;	// 340 = 0x154
    _Bool _allowedByScreenTime;	// 341 = 0x155
    IMInlineReplyController *_inlineReplyController;	// 344 = 0x158
    NSSet *_mergedPinningIdentifiers;	// 352 = 0x160
    NSString *_personCentricID;	// 360 = 0x168
    long long _autoDonationBehavior;	// 368 = 0x170
    NSMutableArray *_mentionMessageGuidsToRemove;	// 376 = 0x178
    NSDictionary *_bizIntent;	// 384 = 0x180
    unsigned long long _senderBlackholeWarningStatus;	// 392 = 0x188
    NSString *_groupChatIdentifierUppercase;	// 400 = 0x190
    long long _hasKnownParticipantsCacheStatus;	// 408 = 0x198
    double _latestTypingIndicatorTimeInterval;	// 416 = 0x1a0
    IMOrderingTools *_orderingTools;	// 424 = 0x1a8
    NSString *_currentLocationGUID;	// 432 = 0x1b0
    long long _cachedShouldShowReportSpam;	// 440 = 0x1b8
    long long _cachedShouldShowSpam;	// 448 = 0x1c0
    NSString *_originalGroupID;	// 456 = 0x1c8
}

+ (Class)chatItemRulesClass;	// IMP=0x00000000000abb17
+ (void)setChatItemRulesClass:(Class)arg1;	// IMP=0x00000000000abb0a
+ (void)_initializeFMF;	// IMP=0x00000000000aba9a
+ (CDUnknownBlockType)watermarkComparator;	// IMP=0x000000000001ad00
+ (void)cleanWatermarkCache;	// IMP=0x000000000001bbcf
+ (id)__im_adjustMessageSummaryInfoForSending:(id)arg1;	// IMP=0x000000000004266e
+ (void)removeGUIDInAttemptingListInScrutinyMode:(id)arg1;	// IMP=0x00000000000c2293
+ (_Bool)isGUIDInAttemptingListInScrutinyMode:(id)arg1;	// IMP=0x00000000000c221d
+ (void)storeGUIDInAttemptingListInScrutinyMode:(id)arg1;	// IMP=0x00000000000c2205
+ (id)stateCaptureRecents;	// IMP=0x00000000000c89d9
- (void).cxx_destruct;	// IMP=0x00000000000c04bd
@property(retain, nonatomic) NSString *originalGroupID; // @synthesize originalGroupID=_originalGroupID;
@property(retain, nonatomic) NSString *lastAddressedSIMID; // @synthesize lastAddressedSIMID=_lastAddressedSIMID;
@property(nonatomic) long long cachedShouldShowSpam; // @synthesize cachedShouldShowSpam=_cachedShouldShowSpam;
@property(nonatomic) long long cachedShouldShowReportSpam; // @synthesize cachedShouldShowReportSpam=_cachedShouldShowReportSpam;
@property(nonatomic) _Bool allowedByScreenTime; // @synthesize allowedByScreenTime=_allowedByScreenTime;
@property(retain, nonatomic) NSString *currentLocationGUID; // @synthesize currentLocationGUID=_currentLocationGUID;
@property(retain, nonatomic) IMOrderingTools *orderingTools; // @synthesize orderingTools=_orderingTools;
@property(nonatomic) double latestTypingIndicatorTimeInterval; // @synthesize latestTypingIndicatorTimeInterval=_latestTypingIndicatorTimeInterval;
@property(nonatomic, getter=isUnregistered) _Bool unregistered; // @synthesize unregistered=_unregistered;
@property(nonatomic) long long hasKnownParticipantsCacheStatus; // @synthesize hasKnownParticipantsCacheStatus=_hasKnownParticipantsCacheStatus;
@property(retain, nonatomic) NSString *groupChatIdentifierUppercase; // @synthesize groupChatIdentifierUppercase=_groupChatIdentifierUppercase;
@property(copy, nonatomic) NSDictionary *bizIntent; // @synthesize bizIntent=_bizIntent;
@property(readonly, nonatomic) long long lastMessageTimeStampOnLoad; // @synthesize lastMessageTimeStampOnLoad=_lastMessageTimeStampOnLoad;
@property(retain, nonatomic) NSMutableArray *mentionMessageGuidsToRemove; // @synthesize mentionMessageGuidsToRemove=_mentionMessageGuidsToRemove;
@property(nonatomic) _Bool hasSurfRequest; // @synthesize hasSurfRequest=_hasSurfRequest;
@property(nonatomic) long long autoDonationBehavior; // @synthesize autoDonationBehavior=_autoDonationBehavior;
@property(readonly, nonatomic) NSData *engramID; // @synthesize engramID=_engramID;
@property(retain, nonatomic) NSString *personCentricID; // @synthesize personCentricID=_personCentricID;
@property(retain, nonatomic) NSSet *mergedPinningIdentifiers; // @synthesize mergedPinningIdentifiers=_mergedPinningIdentifiers;
@property(readonly, nonatomic) IMInlineReplyController *inlineReplyController; // @synthesize inlineReplyController=_inlineReplyController;
@property(retain, nonatomic) IMMessage *invitationForPendingParticipants; // @synthesize invitationForPendingParticipants=_invitationForPendingParticipants;
@property(readonly, nonatomic) long long joinState; // @synthesize joinState=_joinState;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *roomName; // @synthesize roomName=_roomName;
@property(nonatomic) void *contextInfo; // @synthesize contextInfo=_context;
@property(readonly, nonatomic) unsigned char chatStyle; // @synthesize chatStyle=_style;
@property(readonly, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(readonly, nonatomic) IMAccount *account; // @synthesize account=_account;
@property(readonly, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(retain, nonatomic, setter=_setGUIDs:) NSMutableSet *_guids; // @synthesize _guids;
@property(retain, nonatomic) NSString *groupID; // @synthesize groupID=_groupID;
@property(retain, nonatomic) NSString *lastAddressedHandleID; // @synthesize lastAddressedHandleID=_lastAddressedHandleID;
@property(retain, nonatomic) NSArray *frequentReplies; // @synthesize frequentReplies=_frequentReplies;
- (void)setMuteUntilDate:(id)arg1;	// IMP=0x00000000000c009e
- (id)muteUntilDate;	// IMP=0x00000000000c0038
- (_Bool)isMuted;	// IMP=0x00000000000bffde
- (void)_updateRepliesIfNecessaryWithRemovedItems:(id)arg1 threadIdentifiersOfRemovedParts:(id)arg2;	// IMP=0x00000000000bf1f2
- (void)_updateRepliesIfNecessaryWithItem:(id)arg1;	// IMP=0x00000000000bebed
- (void)dismissInlineReplies;	// IMP=0x00000000000bebcc
- (void)loadInlineRepliesForThreadIdentifier:(id)arg1 threadOriginator:(id)arg2 messageGuid:(id)arg3;	// IMP=0x00000000000bea29
@property(readonly, nonatomic) NSArray *replyChatItems;
- (void)downloadPurgedAttachments;	// IMP=0x00000000000be98d
- (void)sendProgress:(id)arg1 progressDidChange:(float)arg2 sendingMessages:(id)arg3 sendCount:(unsigned long long)arg4 totalCount:(unsigned long long)arg5 finished:(_Bool)arg6;	// IMP=0x00000000000be8f0
- (id)sendProgressDelegate;	// IMP=0x00000000000be8d3
- (void)setSendProgressDelegate:(id)arg1;	// IMP=0x00000000000be731
- (id)_initWithDictionaryRepresentation:(id)arg1 items:(id)arg2 participantsHint:(id)arg3 accountHint:(id)arg4;	// IMP=0x00000000000bdbc1
- (_Bool)hasStoredMessageWithGUID:(id)arg1;	// IMP=0x00000000000bd93a
@property(readonly, copy) NSString *description;
- (void)_daemonDied:(id)arg1;	// IMP=0x00000000000bd420
- (void)_daemonAlive:(id)arg1;	// IMP=0x00000000000bd33a
- (void)_accountControllerUpdated:(id)arg1;	// IMP=0x00000000000bd203
- (_Bool)_sanityCheckAccounts;	// IMP=0x00000000000bcd8e
- (void)_handleAddressBookChangeForRecipientUID:(id)arg1;	// IMP=0x00000000000bcbd8
- (_Bool)isMessagesAuthorizedToAccessFocusStatus;	// IMP=0x00000000000bcacc
@property(readonly, nonatomic) _Bool canShareFocusStatus;
- (void)autoInviteToViewAvailabilityIfNeeded;	// IMP=0x00000000000bc7b8
- (void)_reloadChatItemsForHandleAvailabilityChange;	// IMP=0x00000000000bc738
- (void)endObservingHandleAvailability;	// IMP=0x00000000000bc6df
- (void)beginObservingHandleAvailability;	// IMP=0x00000000000bc686
- (void)isInvitedToViewMyFocusStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000bc4df
@property(readonly, nonatomic) NSDate *availabilityStatusPublishedDate;
@property(readonly, nonatomic) _Bool shouldDisplayUnavailabilityIndicator;
@property(readonly, nonatomic) _Bool isPinned;
@property(readonly, nonatomic) _Bool hasMessageFromMe;
- (void)addPendingParticipants:(id)arg1;	// IMP=0x00000000000bbe7b
- (void)_removeParticipantsFromChat:(id)arg1 reason:(id)arg2 fromiMessageChat:(_Bool)arg3;	// IMP=0x00000000000bb990
- (void)removeParticipantsFromiMessageChat:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000bb978
- (void)removeParticipants:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000bb963
- (void)_inviteParticipantsToChat:(id)arg1 reason:(id)arg2 toiMessageChat:(_Bool)arg3;	// IMP=0x00000000000bb306
- (void)inviteParticipantsToiMessageChat:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000bb2ee
- (void)inviteParticipants:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000bb2d9
- (void)_invitePendingParticipants;	// IMP=0x00000000000bb152
- (void)_inviteParticipants:(id)arg1 reason:(id)arg2 toiMessageChat:(_Bool)arg3;	// IMP=0x00000000000bad6e
- (id)_pendingParticipants;	// IMP=0x00000000000bad11
- (_Bool)canAddParticipants:(id)arg1;	// IMP=0x00000000000ba961
- (_Bool)canAddParticipant:(id)arg1;	// IMP=0x00000000000ba68f
@property(readonly, nonatomic) _Bool canLeaveChat;
- (void)_addParticipants:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x00000000000ba2f2
- (void)remove;	// IMP=0x00000000000ba256
- (void)_leaveChat:(_Bool)arg1;	// IMP=0x00000000000ba168
- (void)leave;	// IMP=0x00000000000ba154
- (void)leaveiMessageGroup;	// IMP=0x00000000000ba13d
- (void)join;	// IMP=0x00000000000ba087
@property(retain, nonatomic) IMHandle *recipient;
- (void)setRecipient:(id)arg1 locally:(_Bool)arg2;	// IMP=0x00000000000b9b76
- (void)_setAccount:(id)arg1 locally:(_Bool)arg2;	// IMP=0x00000000000b945c
- (void)_setAccount:(id)arg1;	// IMP=0x00000000000b9448
- (_Bool)_hasCommunicatedOnService:(id)arg1;	// IMP=0x00000000000b9380
- (id)_generatePersonCentricID;	// IMP=0x00000000000b90ac
- (void)setValue:(id)arg1 forProperty:(id)arg2 ofParticipant:(id)arg3;	// IMP=0x00000000000b8ef8
- (id)valueForProperty:(id)arg1 ofParticipant:(id)arg2;	// IMP=0x00000000000b8e6f
- (id)allPropertiesOfParticipant:(id)arg1;	// IMP=0x00000000000b8e05
- (void)userToggledReadReceiptSwitch:(_Bool)arg1;	// IMP=0x00000000000b8ab7
- (void)setValue:(id)arg1 forChatProperty:(id)arg2;	// IMP=0x00000000000b8592
- (id)valueForChatProperty:(id)arg1;	// IMP=0x00000000000b853f
- (id)allChatProperties;	// IMP=0x00000000000b852a
- (void)_setChatProperties:(id)arg1;	// IMP=0x00000000000b8379
- (_Bool)_isDuplicate:(id)arg1;	// IMP=0x00000000000b8371
- (void)resortMessages;	// IMP=0x00000000000b835f
- (void)markAllMessagesAsRead;	// IMP=0x00000000000b822e
- (void)markMessagesAsRead:(id)arg1;	// IMP=0x00000000000b7d2f
- (void)markMessageAsRead:(id)arg1;	// IMP=0x00000000000b7ce8
- (void)_setTimerForReadMessageCache;	// IMP=0x00000000000b7c8d
- (void)__clearReadMessageCache;	// IMP=0x00000000000b7c17
- (void)updateMessage:(id)arg1 withIndexesOfDeletedItems:(id)arg2 withIndexToRangeMapOfDeletedItems:(id)arg3;	// IMP=0x00000000000b7a41
- (_Bool)authorizationToSendCurrentLocationMessageDenied;	// IMP=0x00000000000b79f6
- (_Bool)authorizedToSendCurrentLocationMessage;	// IMP=0x00000000000b7967
- (_Bool)authorizationToSendCurrentLocationMessageDetermined;	// IMP=0x00000000000b791c
- (_Bool)canSendCurrentLocationMessage;	// IMP=0x00000000000b7907
- (_Bool)canSendTransfer:(id)arg1;	// IMP=0x00000000000b7836
- (_Bool)canSendMessage:(id)arg1;	// IMP=0x00000000000b75d8
@property(nonatomic) _Bool localUserIsRecording;
@property(nonatomic) _Bool localUserIsTyping;
@property(retain, nonatomic) NSString *localUserIsComposing;
- (void)setLocalUserIsComposing:(id)arg1 typingIndicatorData:(id)arg2;	// IMP=0x00000000000b7550
- (void)_setLocalUserIsComposing:(id)arg1 suppliedGUID:(id)arg2 typingIndicatorData:(id)arg3;	// IMP=0x00000000000b6e7b
- (void)_setLocalUserIsComposing:(id)arg1 suppliedGUID:(id)arg2;	// IMP=0x00000000000b6e66
- (_Bool)_chatStyleSupportsTypingAndCancelTypingIndicators;	// IMP=0x00000000000b6e4e
- (unsigned long long)_flagsForCancelTypingIndicatorMessage;	// IMP=0x00000000000b6e43
- (unsigned long long)_flagsForTypingIndicatorMessage:(_Bool)arg1;	// IMP=0x00000000000b6e33
- (_Bool)_shouldSendCancelTypingIndicator;	// IMP=0x00000000000b6d7a
@property(readonly, nonatomic) NSString *localTypingMessageGUID;
- (void)retryGroupPhotoUploadIfNecessary;	// IMP=0x00000000000b6c0a
- (void)sendGroupPhotoUpdate:(id)arg1;	// IMP=0x00000000000b6a61
- (void)sendCurrentLocationMessage;	// IMP=0x00000000000b69d6
- (void)sendMessage:(id)arg1;	// IMP=0x00000000000b62df
- (void)_fixItemForSendingMessageTime:(id)arg1;	// IMP=0x00000000000b5f6e
- (void)_refreshServiceForSendingIfNeededWithMessage:(id)arg1;	// IMP=0x00000000000b5f13
- (void)_updateFileAttachmentGUIDsForMessageIfNeeded:(id)arg1 withPayloadAttachments:(id)arg2;	// IMP=0x00000000000b5c28
- (void)_updatePayloadForMessageIfNeeded:(id)arg1;	// IMP=0x00000000000b58a0
- (_Bool)_updateJoinStateWithMessageIfNeeded:(id)arg1;	// IMP=0x00000000000b579c
- (void)_updateTypingGUIDForMessageIfNeeded:(id)arg1;	// IMP=0x00000000000b5570
- (id)_getCurrentLocale;	// IMP=0x00000000000b5519
- (void)_updateLocaleForMessageIfNeeded:(id)arg1;	// IMP=0x00000000000b53d5
- (void)_updateBizIntentForMessageIfNeeded:(id)arg1;	// IMP=0x00000000000b52c2
- (void)_updateSenderForMessageIfNeeded:(id)arg1 adjustingSender:(_Bool)arg2;	// IMP=0x00000000000b51ef
- (void)_updateMessageItemTimeIfNeeded:(id)arg1;	// IMP=0x00000000000b51a5
- (void)_sendMessage:(id)arg1 adjustingSender:(_Bool)arg2 shouldQueue:(_Bool)arg3;	// IMP=0x00000000000b4e8d
- (void)cancelMessage:(id)arg1;	// IMP=0x00000000000b4e87
- (void)declineInvitation;	// IMP=0x00000000000b4d82
- (void)acceptInvitation;	// IMP=0x00000000000b4c50
@property(readonly, nonatomic) _Bool hasUnhandledInvitation;
@property(readonly, nonatomic) NSString *roomNameWithoutSuffix;
@property(readonly, nonatomic) NSString *identityHash;
@property(readonly, nonatomic) NSString *pinningIdentifier;
@property(readonly, nonatomic) NSString *deviceIndependentID;
@property(readonly, nonatomic) NSString *persistentID;
- (void)_updateLastAddressedSIMID:(id)arg1;	// IMP=0x00000000000b4313
- (void)_updateLastAddressedHandleID:(id)arg1;	// IMP=0x00000000000b40c4
- (id)displayNameWithRawAddress:(_Bool)arg1 isSpamFilteringEnabled:(_Bool)arg2;	// IMP=0x00000000000b3a62
- (void)_updateEngramID:(id)arg1;	// IMP=0x00000000000b38b1
- (void)_updateDisplayName:(id)arg1 sender:(id)arg2;	// IMP=0x00000000000b375b
- (void)_updateDisplayName:(id)arg1;	// IMP=0x00000000000b3747
- (void)_setDisplayName:(id)arg1;	// IMP=0x00000000000b3407
- (void)setRoomName:(id)arg1;	// IMP=0x00000000000b33a1
@property(readonly, nonatomic, getter=isGroupChat) _Bool groupChat;
@property(readonly, nonatomic) unsigned long long overallChatStatus;
@property(readonly, nonatomic) _Bool canHaveMultipleParticipants;
@property(readonly, nonatomic) NSString *chatIdentifier;
- (void)_clearCachedIdentifier;	// IMP=0x00000000000b31bb
- (unsigned long long)stateForParticipant:(id)arg1;	// IMP=0x00000000000b30c8
- (id)participantsWithState:(unsigned long long)arg1;	// IMP=0x00000000000b2ef2
- (void)_validateChatRegistrationWithRegistry;	// IMP=0x00000000000b2eba
- (void)_engroupParticipantsUpdated;	// IMP=0x00000000000b2e6b
- (void)_handleAttributionChanged;	// IMP=0x00000000000b2e4e
- (void)beginListeningToAttributionChanges;	// IMP=0x00000000000b2bff
- (void)endListeningToAttributionChanges;	// IMP=0x00000000000b2b9f
- (id)_performQueryWithKey:(id)arg1 loadImmediately:(_Bool)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000000b2b8a
- (id)_performQueryWithKey:(id)arg1 loadImmediately:(_Bool)arg2 block:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000b23a4
- (void)_showErrorMessage:(id)arg1;	// IMP=0x00000000000b2318
- (void)_participant:(id)arg1 statusChanged:(int)arg2;	// IMP=0x00000000000b202e
- (void)_setJoinState:(long long)arg1 quietly:(_Bool)arg2;	// IMP=0x00000000000b1fc5
- (void)_clearPendingMessages;	// IMP=0x00000000000b1dd1
- (void)_setJoinState:(long long)arg1;	// IMP=0x00000000000b1dbd
- (_Bool)_handleIncomingItem:(id)arg1 updateRecipient:(_Bool)arg2;	// IMP=0x00000000000b0e4a
- (_Bool)_handleIncomingItem:(id)arg1;	// IMP=0x00000000000b0e33
- (void)_fixSendingItemDateAndSortID:(id)arg1;	// IMP=0x00000000000b0820
- (_Bool)hasSurfRequestNotFromMe:(id)arg1;	// IMP=0x00000000000b073d
- (_Bool)hasSurfRequestForPaymentType:(unsigned long long)arg1;	// IMP=0x00000000000b0730
- (unsigned long long)paymentTypeForMessage:(id)arg1;	// IMP=0x00000000000b045c
- (void)_resetChatIdToLastMessageItemMap;	// IMP=0x00000000000b03ec
- (void)_handleMessageGUIDDeletions:(id)arg1;	// IMP=0x00000000000b00f0
- (void)_setParticipantState:(unsigned long long)arg1 forHandles:(id)arg2 quietly:(_Bool)arg3;	// IMP=0x00000000000afcb1
- (void)_setParticipantState:(unsigned long long)arg1 forHandle:(id)arg2 quietly:(_Bool)arg3;	// IMP=0x00000000000afb2b
- (void)_postIMChatItemsDidChangeNotificationWithInserted:(id)arg1 removed:(id)arg2 reload:(id)arg3 regenerate:(id)arg4 oldChatItems:(id)arg5 shouldLog:(_Bool)arg6;	// IMP=0x00000000000af872
- (void)_postNotification:(id)arg1 userInfo:(id)arg2 shouldLog:(_Bool)arg3;	// IMP=0x00000000000af745
- (void)_postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x00000000000af72d
- (void)_endTiming;	// IMP=0x00000000000af70c
- (void)_startTiming:(id)arg1;	// IMP=0x00000000000af6bb
- (id)_timingCollection;	// IMP=0x00000000000af6a6
- (void)_accountLoggedOut:(id)arg1;	// IMP=0x00000000000af585
- (void)_handleHandleStatusChanged:(id)arg1;	// IMP=0x00000000000af57f
- (void)_recomputeOverallChatStatusQuietly:(_Bool)arg1;	// IMP=0x00000000000af579
- (void)didUnregisterFromRegistry:(id)arg1;	// IMP=0x00000000000af481
- (void)clear;	// IMP=0x00000000000af3be
@property(nonatomic) _Bool hasHadSuccessfulQuery;
- (long long)numberOfTimesRespondedToThread;	// IMP=0x00000000000af2f5
- (_Bool)containsMessageFromContactOrMe;	// IMP=0x00000000000af22d
- (void)updateIsEmergencyChat:(_Bool)arg1;	// IMP=0x00000000000af1d0
- (_Bool)isEmergencyChat;	// IMP=0x00000000000af182
- (void)updateLastMessageGUID:(id)arg1 forLanguageCode:(id)arg2;	// IMP=0x00000000000af0d0
- (id)lastTranslatableMessageGUIDWithLanguageCode:(id)arg1;	// IMP=0x00000000000af009
@property(readonly, nonatomic, getter=isAutoDonatingMessages) _Bool autoDonateMessages;
@property(readonly, nonatomic) _Bool shouldShowAutoDonationAction;
- (void)_updateLastSeenMessageGuid:(id)arg1;	// IMP=0x00000000000aee5e
@property(readonly, nonatomic) NSString *lastSeenMessageGuid;
- (void)_updateChatItemsWithDataDetectorResultsForReason:(id)arg1;	// IMP=0x00000000000aeb4e
- (_Bool)isCategorized;	// IMP=0x00000000000aeab4
- (void)clearSMSCategory;	// IMP=0x00000000000aeaa0
@property(readonly, nonatomic) long long filterCategory;
- (long long)chatPropertyValueFor:(long long)arg1;	// IMP=0x00000000000aea77
- (void)updateSMSCategory:(long long)arg1;	// IMP=0x00000000000ae8e1
- (void)updateShouldForceToSMS:(_Bool)arg1;	// IMP=0x00000000000ae82f
- (_Bool)shouldForceToSMS;	// IMP=0x00000000000ae7e4
- (_Bool)isSMS;	// IMP=0x00000000000ae6c3
- (_Bool)allParticipantsAreContacts;	// IMP=0x00000000000ae58d
- (_Bool)hasKnownParticipantsCache;	// IMP=0x00000000000ae543
- (void)setHasKnownParticipantsCache:(_Bool)arg1;	// IMP=0x00000000000ae52f
- (void)invalidateHasKnownParticipantsCache;	// IMP=0x00000000000ae516
- (_Bool)hasKnownParticipants;	// IMP=0x00000000000ae18e
- (void)loadParticipantContactsIfNecessary;	// IMP=0x00000000000ae048
- (void)updateLineSwitchedTo:(id)arg1;	// IMP=0x00000000000adfd7
- (void)updateIsBlackholed:(_Bool)arg1;	// IMP=0x00000000000adf27
- (void)updateIsFiltered:(long long)arg1;	// IMP=0x00000000000ade9d
@property(nonatomic) long long isFiltered; // @dynamic isFiltered;
- (void)markAsHasBeenBlockContact;	// IMP=0x00000000000adde6
- (void)autoReportSpam;	// IMP=0x00000000000add02
- (void)markAsAutoSpamReported;	// IMP=0x00000000000adce2
- (unsigned long long)markAsSpam:(unsigned long long)arg1;	// IMP=0x00000000000adafb
- (_Bool)deleteAllHistory;	// IMP=0x00000000000ad9f2
@property(readonly, nonatomic) unsigned long long messageFailureCount;
@property(readonly, nonatomic) unsigned long long unreadMessageCount;
@property(readonly, nonatomic) unsigned long long messageCount;
- (void)removeMentionMessageGUID:(id)arg1;	// IMP=0x00000000000ad62f
- (id)messageGuidsForMyUnreadMentions;	// IMP=0x00000000000ad419
@property(readonly, nonatomic) long long lastFinishedMessageID;
@property(readonly, nonatomic) NSDate *lastSentMessageDate;
@property(readonly, nonatomic) IMMessage *lastSentMessage;
@property(readonly, nonatomic) NSDate *lastTUConversationCreatedDate;
@property(readonly, nonatomic) NSDate *lastFinishedMessageDate;
@property(readonly, nonatomic) _Bool lastMessageExists;
@property(readonly, nonatomic) IMMessage *lastMessage;
- (id)lastRelatedIncomingFinishedMessageTextContentWithLimit:(long long)arg1;	// IMP=0x00000000000ad1f8
@property(readonly, nonatomic) IMMessage *lastIncomingFinishedMessageWithTextContent;
@property(readonly, nonatomic) IMMessage *lastIncomingFinishedMessage;
@property(readonly, nonatomic) IMMessage *lastIncomingMessage;
@property(readonly, nonatomic) IMMessageItem *lastFinishedMessageItem;
@property(readonly, nonatomic) IMMessage *lastFinishedMessage;
@property(readonly, nonatomic) IMMessage *firstMessage;
- (id)messageItemForGUID:(id)arg1;	// IMP=0x00000000000ad044
- (id)messageForGUID:(id)arg1;	// IMP=0x00000000000acfa0
- (id)_lastFinishedMessage;	// IMP=0x00000000000ace18
- (id)_archivedItemsToReplace:(id)arg1 isReplacingItems:(_Bool)arg2;	// IMP=0x00000000000acd6b
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(_Bool)arg3 isHistoryQuery:(_Bool)arg4 isReplacingItems:(_Bool)arg5 limit:(unsigned long long)arg6 hasMessagesBefore:(_Bool)arg7 hasMessagesAfter:(_Bool)arg8;	// IMP=0x00000000000ac4e7
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(_Bool)arg3 isHistoryQuery:(_Bool)arg4 limit:(unsigned long long)arg5;	// IMP=0x00000000000ac4c7
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(_Bool)arg3 isHistoryQuery:(_Bool)arg4;	// IMP=0x00000000000ac43c
- (_Bool)_shouldAnnouncePeopleJoin;	// IMP=0x00000000000ac434
- (void)_setDBFailedCount:(unsigned long long)arg1;	// IMP=0x00000000000ac3b3
- (void)_setDBUnreadCount:(unsigned long long)arg1 postNotification:(_Bool)arg2;	// IMP=0x00000000000ac287
- (void)_setDBUnreadCount:(unsigned long long)arg1;	// IMP=0x00000000000ac270
- (void)_clearUnreadCount;	// IMP=0x00000000000ac0d5
@property(readonly, nonatomic) _Bool _shouldRegisterChat;
- (void)_replaceItems:(id)arg1;	// IMP=0x00000000000ac039
- (void)_removeItem:(id)arg1;	// IMP=0x00000000000abfa5
- (void)_handleItem:(id)arg1 forChatStyle:(unsigned char)arg2 updateReplyCounts:(_Bool)arg3;	// IMP=0x00000000000abe8a
- (void)_handleItem:(id)arg1 forChatStyle:(unsigned char)arg2;	// IMP=0x00000000000abe25
- (void)_handleItem:(id)arg1;	// IMP=0x00000000000abdd0
- (void)_itemsDidChange:(id)arg1;	// IMP=0x00000000000abd0b
- (id)_initWithItems:(id)arg1;	// IMP=0x00000000000abcba
- (void)dealloc;	// IMP=0x00000000000abb3c
- (id)init;	// IMP=0x00000000000ababc
- (void)_initialize;	// IMP=0x00000000000aba94
- (id)_initWithGUID:(id)arg1 account:(id)arg2 style:(unsigned char)arg3 roomName:(id)arg4 displayName:(id)arg5 lastAddressedHandle:(id)arg6 lastAddressedSIMID:(id)arg7 items:(id)arg8 participants:(id)arg9 isFiltered:(long long)arg10 hasHadSuccessfulQuery:(_Bool)arg11;	// IMP=0x00000000000aaef1
- (void)_setupObservation;	// IMP=0x00000000000aad09
@property(readonly, nonatomic) IMChatScrutinyController *chatScrutinyController;
@property(nonatomic) _Bool forceMMS;
@property(readonly, nonatomic) _Bool suppressAccountRetargetingForNamedGroupConversation;
- (_Bool)_recipientIsPhoneNumber;	// IMP=0x0000000000005401
- (void)_calculateDowngradeState;	// IMP=0x0000000000004f34
- (void)_setAndIncrementDowngradeMarkersForManual:(_Bool)arg1;	// IMP=0x0000000000004dd0
- (void)_clearDowngradeMarkers;	// IMP=0x0000000000004d6d
- (id)_consecutiveDowngradeAttemptsViaManualDowngrades:(_Bool)arg1;	// IMP=0x0000000000004d44
- (void)_calculateDowngradeStateTimerFired;	// IMP=0x0000000000004cfe
- (void)_updateDowngradeState:(BOOL)arg1 checkAgainInterval:(double)arg2;	// IMP=0x0000000000004b03
- (void)_invalidateDowngradeState;	// IMP=0x0000000000004af1
- (_Bool)isDowngraded;	// IMP=0x0000000000004ada
- (void)_targetToService:(id)arg1 newComposition:(_Bool)arg2;	// IMP=0x00000000000045fd
- (void)_setPreviousAccount:(id)arg1 forService:(id)arg2;	// IMP=0x0000000000004459
- (id)_previousAccountForService:(id)arg1;	// IMP=0x0000000000004357
- (_Bool)_accountIsOperational:(id)arg1 forService:(id)arg2;	// IMP=0x00000000000042c1
- (void)_delayedInvalidateDowngradeState;	// IMP=0x000000000000425b
- (void)downgradeMessage:(id)arg1 manualDowngrade:(_Bool)arg2 downgradeChat:(_Bool)arg3;	// IMP=0x0000000000004193
- (void)downgradeMessage:(id)arg1 manualDowngrade:(_Bool)arg2;	// IMP=0x000000000000417e
- (void)refreshServiceForSending;	// IMP=0x0000000000003368
- (_Bool)__im_ff_isExpanseEnabled;	// IMP=0x000000000000cc9a
- (id)remoteMembersForTUConversation;	// IMP=0x000000000000dfa1
- (id)activeParticipantsForTUConversation;	// IMP=0x000000000000df51
- (id)currentTUCall;	// IMP=0x000000000000dc68
- (id)callDurationStringForTuCall;	// IMP=0x000000000000dc0f
- (void)initiateTUDialRequestWithVideoEnabled:(_Bool)arg1;	// IMP=0x000000000000daf4
- (void)initiateTUConversationWithVideoEnabled:(_Bool)arg1;	// IMP=0x000000000000d8c8
- (void)joinExistingTUConversation;	// IMP=0x000000000000d7ba
- (id)conversation;	// IMP=0x000000000000d60a
- (void)addHandlesToGoupFaceTimeChatIfRegistered:(id)arg1;	// IMP=0x000000000000d094
- (_Bool)mapsToTUConversation:(id)arg1;	// IMP=0x000000000000cce5
- (long long)_compareChat:(id)arg1 withDate:(id)arg2 withDate:(id)arg3;	// IMP=0x000000000001bb4b
- (id)_tuDateForChat:(id)arg1;	// IMP=0x000000000001ba9e
- (long long)compareChatByTUDateAndLastFinishedMessageDate:(id)arg1;	// IMP=0x000000000001ba04
- (long long)compareChatByDate:(id)arg1;	// IMP=0x000000000001b96d
- (_Bool)_hasJustSentAMessage;	// IMP=0x000000000001b908
- (_Bool)shouldBeAllowListed;	// IMP=0x000000000001b7e3
- (void)verifyFiltering;	// IMP=0x000000000001b5d6
- (void)saveWatermark;	// IMP=0x000000000001b4a2
- (void)updateWatermarks;	// IMP=0x000000000001b2a0
@property(readonly, copy, nonatomic) NSDate *watermarkDate;
@property(readonly, nonatomic) long long watermarkMessageID;
- (id)_storedWatermarkMessageID;	// IMP=0x000000000001ae98
- (id)messageAcknowledgmentSummaryForConversationListWithMessage:(id)arg1;	// IMP=0x0000000000042e60
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2 withAssociatedMessageInfo:(id)arg3 withGuid:(id)arg4;	// IMP=0x0000000000042e4e
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2 withAssociatedMessageInfo:(id)arg3;	// IMP=0x0000000000042e3c
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2 withMessageSummaryInfo:(id)arg3 withGuid:(id)arg4;	// IMP=0x00000000000427a4
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2 withMessageSummaryInfo:(id)arg3;	// IMP=0x000000000004278f
- (void)createIMChatItemForTransientAttachmentWithAssetUUID:(id)arg1 parentChatItemGUID:(id)arg2;	// IMP=0x00000000000430ae
- (void)deleteExtensionPayloadData;	// IMP=0x000000000006ab13
- (void)closeSession;	// IMP=0x000000000006aa96
@property(readonly, nonatomic) _Bool isAppleChat;
@property(readonly, nonatomic) _Bool isMakoChat;
@property(readonly, nonatomic) _Bool hasVerifiedBusiness;
@property(readonly, nonatomic) _Bool isBusinessChat;
@property(readonly, nonatomic) IMHandle *businessHandle;
@property(readonly, nonatomic) _Bool isReplyEnabled;
@property(readonly, nonatomic) IMBrand *brand;
- (_Bool)__im_ff_isInterstellarEnabled;	// IMP=0x000000000006b006
- (void)sendAutoDonationUpdate:(_Bool)arg1;	// IMP=0x000000000006b70c
- (void)sendSyndicationAction:(unsigned char)arg1 forMessagePartGUID:(id)arg2 syndicatedMessagePartRange:(struct _NSRange)arg3;	// IMP=0x000000000006b523
- (void)_updateExistingMessageWithSyndicationAction:(id)arg1;	// IMP=0x000000000006b2b8
- (id)_existingMessageFromMessagePartGUID:(id)arg1;	// IMP=0x000000000006b051
- (void)photoLibraryPersistedSyndicatedAssetSetDidChange;	// IMP=0x000000000009b3da
- (id)localizedUnreadShortcutTitle;	// IMP=0x00000000000a422b
- (_Bool)__im_ff_isInterstellarEnabled;	// IMP=0x00000000000aaba4
- (_Bool)__im_ff_improvedPriorityInversionFixEnabled;	// IMP=0x00000000000aabef
- (_Bool)__im_ff_commSafetyUIEnabled;	// IMP=0x00000000000aac3a
- (_Bool)__im_ff_chatCacheEnabled;	// IMP=0x00000000000aaca5
- (id)_privateInitWithAccount:(id)arg1 style:(unsigned char)arg2 roomName:(id)arg3 messages:(id)arg4 participants:(id)arg5 isFiltered:(long long)arg6 hasHadSuccessfulQuery:(_Bool)arg7;	// IMP=0x00000000000c0752
- (void)clearScrutinyMode;	// IMP=0x00000000000c22ad
- (void)watermarkOutForScrutinyMode;	// IMP=0x00000000000c2187
- (_Bool)isInScrutinyMode;	// IMP=0x00000000000c20c3
- (_Bool)_serverBagPreventsScrutinyMode;	// IMP=0x00000000000c200f
- (unsigned long long)scrutinyModeAttemptCount;	// IMP=0x00000000000c1f78
- (void)watermarkInForScrutinyMode;	// IMP=0x00000000000c1eb6
- (void)deleteTransfers:(id)arg1;	// IMP=0x00000000000c1722
@property(readonly, copy, nonatomic) NSArray *attachments;
@property(readonly, nonatomic) _Bool isCurrentlyDownloadingPurgedAttachments;
@property(readonly, copy, nonatomic) NSNumber *countOfAttachmentsNotCachedLocally;
- (void)loadAttachments:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c11c9
- (void)_setIsDownloadingPurgedAssets:(_Bool)arg1;	// IMP=0x00000000000c11b9
- (void)_setCountOfAttachmentsNotCachedLocally:(id)arg1;	// IMP=0x00000000000c114b
- (void)_setCountOfMessagesMarkedAsSpam:(id)arg1;	// IMP=0x00000000000c110d
- (void)_setAttachments:(id)arg1;	// IMP=0x00000000000c10cf
- (id)loadUnreadMessagesWithLimit:(unsigned long long)arg1 fallbackToMessagesUpToGUID:(id)arg2;	// IMP=0x00000000000c0f84
- (id)loadFrequentRepliesLimit:(unsigned long long)arg1 loadImmediately:(_Bool)arg2;	// IMP=0x00000000000c0e98
- (id)loadMessagesBeforeAndAfterGUID:(id)arg1 numberOfMessagesToLoadBeforeGUID:(unsigned long long)arg2 numberOfMessagesToLoadAfterGUID:(unsigned long long)arg3 loadImmediately:(_Bool)arg4 threadIdentifier:(id)arg5;	// IMP=0x00000000000c0c25
- (id)loadInlineReplyMessagesUpToGUID:(id)arg1 limit:(unsigned long long)arg2 threadIdentifier:(id)arg3 loadImmediately:(_Bool)arg4;	// IMP=0x00000000000c0ab9
- (id)loadMessagesUpToGUID:(id)arg1 date:(id)arg2 limit:(unsigned long long)arg3 loadImmediately:(_Bool)arg4;	// IMP=0x00000000000c0967
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2 loadImmediately:(_Bool)arg3;	// IMP=0x00000000000c094a
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2;	// IMP=0x00000000000c0935
- (id)loadMessagesUpToGUID:(id)arg1 limit:(unsigned long long)arg2;	// IMP=0x00000000000c089d
@property(readonly, nonatomic) _Bool hasMoreRecentMessagesToLoad;
@property(readonly, nonatomic) _Bool hasMoreMessagesToLoad;
@property(nonatomic) unsigned long long numberOfMessagesToKeepLoaded;
- (id)messagesToReportAsSpamFromChatItems:(id)arg1;	// IMP=0x00000000000c743b
- (id)allMessagesToReportAsSpam;	// IMP=0x00000000000c73dc
- (id)chatItemsForItems:(id)arg1;	// IMP=0x00000000000c726b
- (void)_setRenderingDataDictionary:(id)arg1;	// IMP=0x00000000000c71e1
- (id)_renderingDataDictionary;	// IMP=0x00000000000c7123
- (void)updateCommSafety:(long long)arg1 forChatItems:(id)arg2;	// IMP=0x00000000000c6bed
- (void)updateCommSafety:(long long)arg1 forChatItem:(id)arg2;	// IMP=0x00000000000c698c
@property(readonly, nonatomic) _Bool allParticipantsBlocked;
@property(readonly, nonatomic) _Bool isCommSafetySensitiveMessageRecent;
@property(readonly, nonatomic) _Bool hasCommSafetySensitiveMessage;
- (void)markChatItemAsPlayedExpressiveSend:(id)arg1;	// IMP=0x00000000000c5e6d
- (void)_markItemAsPlayed:(id)arg1;	// IMP=0x00000000000c5c54
- (void)markChatItemAsPlayed:(id)arg1;	// IMP=0x00000000000c5c05
- (void)markChatItemAsNotifyRecipient:(id)arg1;	// IMP=0x00000000000c5a58
- (void)markChatItemAsSaved:(id)arg1;	// IMP=0x00000000000c589e
- (void)deleteIMMessageItems:(id)arg1;	// IMP=0x00000000000c54d1
- (void)deleteChatItems:(id)arg1;	// IMP=0x00000000000c462d
- (id)_getMessageChatItemMap:(id)arg1 withDeleteMap:(id)arg2 andAllChatItems:(id)arg3;	// IMP=0x00000000000c4129
- (id)_getDeleteChatItemMap:(id)arg1;	// IMP=0x00000000000c3cc9
- (void)_replaceStaleChatItems;	// IMP=0x00000000000c387f
- (void)_updateChatItemsWithReason:(id)arg1 block:(CDUnknownBlockType)arg2 shouldPost:(_Bool)arg3;	// IMP=0x00000000000c2bd2
- (void)_updateChatItemsWithReason:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c2bba
- (void)_updateChatItemsForChatItemUpdater;	// IMP=0x00000000000c2b94
- (void)updateChatItemsIfNeeded;	// IMP=0x00000000000c2abf
- (void)endHoldingUpdatesForAllKeys;	// IMP=0x00000000000c2a45
- (_Bool)isHoldingUpdatesForKey:(id)arg1;	// IMP=0x00000000000c299e
- (void)endHoldingUpdatesForKey:(id)arg1;	// IMP=0x00000000000c2933
- (void)beginHoldingUpdatesForKey:(id)arg1;	// IMP=0x00000000000c28c8
@property(readonly, nonatomic) _Bool wantsSenderBlackholeWarning;
@property(readonly, copy, nonatomic) NSArray *chatItems;
- (void)_updateLocationShareItemsForSender:(id)arg1;	// IMP=0x00000000000c77ad
- (void)_configureLocationShareItem:(id)arg1;	// IMP=0x00000000000c7652
- (void)stopTrackingParticipantLocations;	// IMP=0x00000000000c8296
- (void)startTrackingParticipantLocations;	// IMP=0x00000000000c8243
- (void)stopSharingLocation;	// IMP=0x00000000000c81f0
- (void)shareLocationUntilDate:(id)arg1;	// IMP=0x00000000000c8174
@property(readonly, nonatomic) _Bool allRecipientsSharingLocation;
@property(readonly, nonatomic) _Bool hasSiblingRecipientsSharingLocation;
@property(readonly, nonatomic) _Bool hasRecipientsSharingLocation;
@property(readonly, nonatomic) _Bool allRecipientsFollowingLocation;
@property(readonly, nonatomic) _Bool hasRecipientsFollowingLocation;
@property(readonly, nonatomic) NSSet *allSiblingFMFHandles;
- (void)markAllLocationShareItemsAsUnactionable;	// IMP=0x00000000000c7cc5
@property(readonly, nonatomic) NSSet *fmfHandles;
@property(readonly, nonatomic) IMChatRegistry *chatRegistry;
- (void)_automation_markAsRead:(_Bool)arg1 messageGUID:(id)arg2 forChatGUID:(id)arg3 fromMe:(_Bool)arg4;	// IMP=0x00000000000c8579
- (id)testChatItems;	// IMP=0x00000000000c855c
@property(nonatomic) unsigned int ignoreDowngradeStatusUpdates;
- (_Bool)canEditChatItem:(id)arg1;	// IMP=0x00000000000c8744
- (_Bool)receivedResponseForChat;	// IMP=0x00000000000c89a6
- (_Bool)repliedToChat;	// IMP=0x00000000000c8973
- (id)stateDictionaryForDiagnosticsRequest;	// IMP=0x00000000000c8a65
- (void)invalidateSpamIndicatorCachedValuesIfNeeded;	// IMP=0x00000000000c92d2
- (void)invalidateSpamIndicatorCachedValues;	// IMP=0x00000000000c92a0
@property(readonly, nonatomic) NSArray *alternativeSpeakableMatches;
@property(readonly, nonatomic) NSString *vocabularyIdentifier;
@property(readonly, nonatomic) NSString *pronunciationHint;
@property(readonly, nonatomic) NSString *spokenPhrase;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly) Class superclass;

@end

