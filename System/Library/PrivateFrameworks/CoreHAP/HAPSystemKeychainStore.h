//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

#import <CoreHAP/HAPKeyStore-Protocol.h>
#import <CoreHAP/HAPSystemKeychainStore-Protocol.h>
#import <CoreHAP/HMFDumpState-Protocol.h>
#import <CoreHAP/HMFLogging-Protocol.h>

@class NSObject, NSString;
@protocol OS_dispatch_queue;

@interface HAPSystemKeychainStore : HMFObject <HAPKeyStore, HMFDumpState, HMFLogging, HAPSystemKeychainStore>
{
    int _keychainStoreUpdatedNotificationToken;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    NSString *_activeControllerIdentifier;	// 24 = 0x18
}

+ (id)viewHintForType:(id)arg1;	// IMP=0x000000000008809a
+ (id)logCategory;	// IMP=0x000000000008806a
+ (id)serializeDictionary:(id)arg1;	// IMP=0x0000000000087f08
+ (id)updateAccessoryPairingGenericData:(id)arg1 updatedControllerKeyIdentifier:(id)arg2;	// IMP=0x0000000000087e1b
+ (id)getDictionaryFromGenericData:(id)arg1;	// IMP=0x0000000000087da4
+ (id)systemStore;	// IMP=0x0000000000087d74
- (void).cxx_destruct;	// IMP=0x0000000000083b60
@property int keychainStoreUpdatedNotificationToken; // @synthesize keychainStoreUpdatedNotificationToken=_keychainStoreUpdatedNotificationToken;
@property(retain, nonatomic) NSString *activeControllerIdentifier; // @synthesize activeControllerIdentifier=_activeControllerIdentifier;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (id)getAssociatedControllerKeyForAccessory:(id)arg1;	// IMP=0x00000000000832e3
- (id)getHH2ControllerKey;	// IMP=0x0000000000082e04
- (_Bool)getOrCreateHH2ControllerKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4;	// IMP=0x0000000000082902
- (int)createHH2ControllerKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4;	// IMP=0x00000000000823bc
- (id)allAccessoryPairingKeys;	// IMP=0x0000000000082300
- (id)allKeysForType:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000082140
- (_Bool)isAccessoryAssociatedWithControllerKey:(id)arg1 controllerID:(id *)arg2;	// IMP=0x0000000000081dec
- (_Bool)deletePairingKeysForAccessory:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000081ce0
- (_Bool)createAccessoryPairingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000081bab
- (_Bool)updateAccessoryPairingKey:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000081a9e
- (id)readAccessoryPairingKeyForAccessory:(id)arg1 error:(id *)arg2;	// IMP=0x000000000008196f
- (_Bool)updateKeychainItem:(id)arg1 createIfNeeded:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000008161a
- (_Bool)deleteKeychainItem:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000081467
- (id)allKeychainItemsForType:(id)arg1 identifier:(id)arg2 syncable:(id)arg3 error:(id *)arg4;	// IMP=0x000000000008111e
- (_Bool)_getFirstAvailableControllerKeyChainItemForAccount:(id)arg1 publicKey:(id *)arg2 secretKey:(id *)arg3 userName:(id *)arg4 keyPair:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000080b39
- (_Bool)_getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4 allowCreation:(_Bool)arg5 forAccessory:(id)arg6 error:(id *)arg7;	// IMP=0x00000000000802a7
- (_Bool)getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4 allowCreation:(_Bool)arg5 forAccessory:(id)arg6 error:(id *)arg7;	// IMP=0x0000000000080295
- (_Bool)getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 username:(id *)arg3 allowCreation:(_Bool)arg4 forAccessory:(id)arg5 error:(id *)arg6;	// IMP=0x0000000000080264
- (id)readControllerPairingKeyForAccessory:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007fe83
- (int)_deleteAllPeripheralIdentifiers;	// IMP=0x000000000007fcb9
- (_Bool)deleteAllPeripheralIdentifiers:(id *)arg1;	// IMP=0x000000000007fbe4
- (id)getPeripherialIdentifiersAndAccessoryNames;	// IMP=0x000000000007fab1
- (int)_getPeripheralIdentifier:(id *)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long *)arg3 resumeSessionID:(unsigned long long *)arg4;	// IMP=0x000000000007f749
- (id)readPeripheralIdentifierForAccessoryIdentifier:(id)arg1 protocolVersion:(unsigned long long *)arg2 resumeSessionID:(unsigned long long *)arg3 error:(id *)arg4;	// IMP=0x000000000007f5eb
- (int)_deletePeripheralIdentifierForAccessoryIdentifier:(id)arg1;	// IMP=0x000000000007f3f5
- (_Bool)deletePeripheralIdentifierForAccessoryIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007f2e1
- (_Bool)updatePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 previousVersion:(unsigned long long *)arg4 resumeSessionID:(unsigned long long)arg5 error:(id *)arg6;	// IMP=0x000000000007f16c
- (int)_savePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 resumeSessionID:(unsigned long long)arg4;	// IMP=0x000000000007ee7a
- (_Bool)savePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 resumeSessionID:(unsigned long long)arg4 error:(id *)arg5;	// IMP=0x000000000007ed15
- (int)_removeKeychainItem:(id)arg1 leaveTombstone:(_Bool)arg2;	// IMP=0x000000000007e95a
- (int)_addKeychainItem:(id)arg1 logDuplicateItemError:(_Bool)arg2;	// IMP=0x000000000007e3a2
- (id)_getKeychainItemsForAccessGroup:(id)arg1 type:(id)arg2 account:(id)arg3 shouldReturnData:(_Bool)arg4 error:(int *)arg5;	// IMP=0x000000000007de09
- (_Bool)_updateKeychainItemWithPlatformIdentifier:(void *)arg1 keychainItem:(id)arg2 error:(id *)arg3;	// IMP=0x000000000007db44
- (void)_updateKeychainItemToInvisible:(id)arg1;	// IMP=0x000000000007d94e
- (id)_auditKeychainItems:(id)arg1 managedAccessories:(id)arg2;	// IMP=0x000000000007d0a8
- (id)auditKeysOfManagedAccessories:(id)arg1;	// IMP=0x000000000007cf6e
- (int)_removeAccessoryKeyForName:(id)arg1;	// IMP=0x000000000007cd78
- (_Bool)removeAllAccessoryKeys:(id *)arg1;	// IMP=0x000000000007cca3
- (_Bool)removeAccessoryKeyForName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007cb8f
- (_Bool)registerAccessoryWithHomeKit:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007ca7b
- (_Bool)establishRelationshipBetweenAccessoryAndControllerKey:(id)arg1 error:(id *)arg2;	// IMP=0x000000000007c201
- (int)_savePublicKey:(id)arg1 forAccessoryName:(id)arg2;	// IMP=0x000000000007bf97
- (_Bool)savePublicKey:(id)arg1 forAccessoryName:(id)arg2 error:(id *)arg3;	// IMP=0x000000000007be51
- (int)_getPublicKey:(id *)arg1 registeredWithHomeKit:(_Bool *)arg2 forAccessoryName:(id)arg3;	// IMP=0x000000000007b856
- (id)readPublicKeyForAccessoryName:(id)arg1 registeredWithHomeKit:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x000000000007b704
- (int)_removeControllerKeyPairForKeyType:(id)arg1 identifier:(id)arg2 leaveTombstone:(_Bool)arg3;	// IMP=0x000000000007b438
- (int)_removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(_Bool)arg2;	// IMP=0x000000000007b33a
- (_Bool)removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000007b129
- (_Bool)removeControllerKeyPairLeaveTombstone:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000000007b042
- (_Bool)removeControllerKeyPairWithError:(id *)arg1;	// IMP=0x000000000007b028
- (_Bool)getCurrentiCloudIdentifier:(id *)arg1 controllerPairingIdentifier:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000007af38
- (int)_updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2;	// IMP=0x000000000007acf5
- (_Bool)updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000000007aa5a
@property(readonly, nonatomic) NSString *activeControllerPairingIdentifier;
- (_Bool)updateActiveControllerPairingIdentifier:(id)arg1;	// IMP=0x000000000007a85b
- (int)_getAllAvailableControllerPublicKeys:(id *)arg1 secretKeys:(id *)arg2 userNames:(id *)arg3;	// IMP=0x000000000007a1ae
- (_Bool)getAllAvailableControllerPublicKeys:(id *)arg1 secretKeys:(id *)arg2 userNames:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000007a0a9
- (_Bool)deserializeKeyPair:(id)arg1 publicKey:(id *)arg2 secretKey:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000079f68
- (int)_saveKeyPair:(id)arg1 username:(id)arg2 syncable:(_Bool)arg3 keyType:(id)arg4;	// IMP=0x0000000000079d5d
- (_Bool)saveKeyPair:(id)arg1 username:(id)arg2 syncable:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000079c01
- (int)_createControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4;	// IMP=0x00000000000792ee
- (_Bool)saveHH2PairingIdentity:(id)arg1 syncable:(_Bool)arg2;	// IMP=0x0000000000078efc
- (_Bool)saveLocalPairingIdentity:(id)arg1 syncable:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000078d47
- (id)_getControllerKeychainItemForKeyType:(id)arg1 error:(int *)arg2;	// IMP=0x0000000000078a35
- (id)_getControllerKeychainItemError:(int *)arg1;	// IMP=0x0000000000078787
- (int)_getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4;	// IMP=0x00000000000785ad
- (_Bool)getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 keyPair:(id *)arg3 username:(id *)arg4 allowCreation:(_Bool)arg5 error:(id *)arg6;	// IMP=0x000000000007849a
- (_Bool)getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 username:(id *)arg3 allowCreation:(_Bool)arg4 error:(id *)arg5;	// IMP=0x0000000000078476
- (id)_getLocalPairingIdentityAllowingCreation:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000000007809e
- (id)getOrCreateLocalPairingIdentity:(id *)arg1;	// IMP=0x0000000000078084
- (id)getLocalPairingIdentity:(id *)arg1;	// IMP=0x000000000007806d
- (void)ensureControllerKeyExistsForAllViews;	// IMP=0x0000000000077ebe
- (id)dumpState;	// IMP=0x0000000000077b91
- (void)dealloc;	// IMP=0x0000000000077b4c
- (void)configure;	// IMP=0x0000000000077979
- (id)init;	// IMP=0x00000000000778e2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

