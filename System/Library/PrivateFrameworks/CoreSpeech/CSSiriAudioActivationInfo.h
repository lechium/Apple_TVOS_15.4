//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AFClientConfiguration, AFExperimentContext, AFLanguageDetectionUserContext, AFSpeechRecordingAlertPolicy, NSString, NSUUID;

@interface CSSiriAudioActivationInfo : NSObject
{
    long long _activationMode;	// 8 = 0x8
    long long _storedActivationMode;	// 16 = 0x10
    long long _csAudioRecordType;	// 24 = 0x18
    AFClientConfiguration *_currentClientConfiguration;	// 32 = 0x20
    _Bool _suppressStartAlert;	// 40 = 0x28
    AFExperimentContext *_experimentContext;	// 48 = 0x30
    _Bool _isActivated;	// 56 = 0x38
    float _activeMediaPlaybackVolume;	// 60 = 0x3c
    _Bool _useBorealisBuffer;	// 64 = 0x40
    _Bool _usePrelistening;	// 65 = 0x41
    _Bool _isOnPhoneCall;	// 66 = 0x42
    _Bool _hasPlayedStartAlert;	// 67 = 0x43
    _Bool _isSpokenNotification;	// 68 = 0x44
    long long _speechEvent;	// 72 = 0x48
    long long _audioAlertStyle;	// 80 = 0x50
    NSString *_deviceIdentifier;	// 88 = 0x58
    double _activationSystemUptime;	// 96 = 0x60
    unsigned long long _activationHostTime;	// 104 = 0x68
    unsigned long long _buttonDownHostTime;	// 112 = 0x70
    unsigned long long _voiceTriggerEndHostTime;	// 120 = 0x78
    long long _speechRecordingMode;	// 128 = 0x80
    long long _speechEndpointerOperationMode;	// 136 = 0x88
    long long _speechEndpointerStopRecordingMode;	// 144 = 0x90
    AFSpeechRecordingAlertPolicy *_speechRecordingAlertPolicy;	// 152 = 0x98
    long long _presentationMode;	// 160 = 0xa0
    AFLanguageDetectionUserContext *_languageDetectionUserContext;	// 168 = 0xa8
    long long _dictationInputOrigin;	// 176 = 0xb0
    NSUUID *_turnIdentifier;	// 184 = 0xb8
    NSString *_applicationDisplayName;	// 192 = 0xc0
    NSString *_applicationBundleIdentifier;	// 200 = 0xc8
    unsigned long long _dictationVoiceTriggerAbsStartSampleId;	// 208 = 0xd0
}

- (void).cxx_destruct;	// IMP=0x0000000000077936
@property(readonly, nonatomic) unsigned long long dictationVoiceTriggerAbsStartSampleId; // @synthesize dictationVoiceTriggerAbsStartSampleId=_dictationVoiceTriggerAbsStartSampleId;
@property(readonly, copy, nonatomic) NSString *applicationBundleIdentifier; // @synthesize applicationBundleIdentifier=_applicationBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(readonly, copy, nonatomic) NSUUID *turnIdentifier; // @synthesize turnIdentifier=_turnIdentifier;
@property(readonly, nonatomic) long long dictationInputOrigin; // @synthesize dictationInputOrigin=_dictationInputOrigin;
@property(readonly, copy, nonatomic) AFLanguageDetectionUserContext *languageDetectionUserContext; // @synthesize languageDetectionUserContext=_languageDetectionUserContext;
@property(readonly, nonatomic) _Bool isSpokenNotification; // @synthesize isSpokenNotification=_isSpokenNotification;
@property(readonly, nonatomic) long long presentationMode; // @synthesize presentationMode=_presentationMode;
@property(readonly, nonatomic) AFSpeechRecordingAlertPolicy *speechRecordingAlertPolicy; // @synthesize speechRecordingAlertPolicy=_speechRecordingAlertPolicy;
@property(readonly, nonatomic) long long speechEndpointerStopRecordingMode; // @synthesize speechEndpointerStopRecordingMode=_speechEndpointerStopRecordingMode;
@property(readonly, nonatomic) long long speechEndpointerOperationMode; // @synthesize speechEndpointerOperationMode=_speechEndpointerOperationMode;
@property(readonly, nonatomic) _Bool hasPlayedStartAlert; // @synthesize hasPlayedStartAlert=_hasPlayedStartAlert;
@property(readonly, nonatomic) _Bool isOnPhoneCall; // @synthesize isOnPhoneCall=_isOnPhoneCall;
@property(nonatomic) long long speechRecordingMode; // @synthesize speechRecordingMode=_speechRecordingMode;
@property(readonly, nonatomic) unsigned long long voiceTriggerEndHostTime; // @synthesize voiceTriggerEndHostTime=_voiceTriggerEndHostTime;
@property(readonly, nonatomic) unsigned long long buttonDownHostTime; // @synthesize buttonDownHostTime=_buttonDownHostTime;
@property(readonly, nonatomic) unsigned long long activationHostTime; // @synthesize activationHostTime=_activationHostTime;
@property(readonly, nonatomic) double activationSystemUptime; // @synthesize activationSystemUptime=_activationSystemUptime;
@property(readonly, copy, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly, nonatomic) long long audioAlertStyle; // @synthesize audioAlertStyle=_audioAlertStyle;
@property(readonly, nonatomic) _Bool usePrelistening; // @synthesize usePrelistening=_usePrelistening;
@property(readonly, nonatomic) _Bool useBorealisBuffer; // @synthesize useBorealisBuffer=_useBorealisBuffer;
@property(readonly, nonatomic) long long speechEvent; // @synthesize speechEvent=_speechEvent;
- (id)_audioSessionActiveDelayServerConfiguration;	// IMP=0x00000000000774f6
- (id)_audioSessionActiveDelayOverride;	// IMP=0x0000000000077417
- (id)_audioSessionActiveDelayUserPerceptionWithType:(unsigned long long)arg1;	// IMP=0x0000000000077051
- (id)_audioSessionActiveDelayCoreSpeechWithType:(unsigned long long)arg1;	// IMP=0x0000000000076ea1
- (long long)_audioAlertStyleForListenAfterSpeakingWithRecordRoute:(id)arg1 playbackRoute:(id)arg2 echoCancellation:(_Bool)arg3 useDeviceSpeakerForTTS:(long long)arg4;	// IMP=0x0000000000076c6c
- (_Bool)_isVibrationDisabledInAccessibility;	// IMP=0x0000000000076bb4
- (_Bool)_isVoiceOverTouchEnabledInAccessibility;	// IMP=0x0000000000076afc
- (id)dateByAddingTimeIntervalSinceActivation:(double)arg1;	// IMP=0x0000000000076812
- (id)audioSessionActivationTargetDate;	// IMP=0x00000000000766b6
- (long long)overrideStartingAlertBeepSoundID;	// IMP=0x000000000007666b
- (_Bool)isVoiceOverTouchEnabled;	// IMP=0x0000000000076659
- (long long)twoShotPromptTypeForRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x0000000000076499
- (_Bool)shouldSuppressRecordingErrorAlert;	// IMP=0x0000000000076477
- (_Bool)shouldSuppressRecordingStopAlert;	// IMP=0x0000000000076455
- (_Bool)shouldPlayAlertIfNotPrelistening;	// IMP=0x000000000007641c
- (_Bool)shouldExplicitlyPlayAlertOnStart;	// IMP=0x00000000000763d6
- (_Bool)shouldUseVoiceTriggerAnalyzerStyle;	// IMP=0x00000000000763c4
- (_Bool)canEnterTwoShot;	// IMP=0x0000000000076387
- (_Bool)_eventIsTVRemote;	// IMP=0x0000000000076379
- (_Bool)_eventIsRaiseToSpeak;	// IMP=0x000000000007636b
- (_Bool)_eventIsVoiceTrigger;	// IMP=0x000000000007635d
- (_Bool)_canUseZLL;	// IMP=0x00000000000762f9
- (_Bool)canGetPCMStream;	// IMP=0x00000000000762e8
- (_Bool)requiresBorealisConsumerCheck;	// IMP=0x00000000000762c9
- (_Bool)shouldTreatTimeoutAsHardEndpoint;	// IMP=0x00000000000762b7
- (_Bool)canPrepareWithoutInterruption;	// IMP=0x00000000000762af
- (_Bool)canPrewarm;	// IMP=0x0000000000076294
- (void)endUpdateToPostVoiceWithContext:(unsigned long long)arg1 success:(_Bool)arg2;	// IMP=0x000000000007627e
- (unsigned long long)beginUpdateToPostVoice;	// IMP=0x000000000007625c
- (_Bool)needsUpdateToPostVoiceMode;	// IMP=0x000000000007622d
- (void)audioSessionActivated;	// IMP=0x0000000000076223
- (long long)audioAlertStyleForRecordRoute:(id)arg1 recordingInfo:(id)arg2 playbackRoute:(id)arg3;	// IMP=0x0000000000075692
- (_Bool)shouldOverrideRecordingStartingAlertBehaviorForAlertStyle:(long long)arg1;	// IMP=0x0000000000075634
- (id)_alertBehaviorForRecordRoute:(id)arg1 recordingInfo:(id)arg2 playbackRoute:(id)arg3 attemptsToUsePastDataBufferFrames:(_Bool)arg4;	// IMP=0x0000000000075200
- (id)startRecordingSettingsWithRecordRoute:(id)arg1 recordingInfo:(id)arg2 playbackRoute:(id)arg3;	// IMP=0x0000000000074d1d
- (long long)_csAudioRecordTypeForSpeechRequestOptions:(id)arg1 useBorealisBuffer:(_Bool)arg2 currentClientConfiguration:(id)arg3;	// IMP=0x0000000000074bcf
- (_Bool)_isRequestFromSpokenNotification:(long long)arg1;	// IMP=0x0000000000074bb2
- (long long)_csAudioRecordTypeForSpeechEvent:(long long)arg1 currentClientConfiguration:(id)arg2;	// IMP=0x0000000000074b93
- (id)recordContextForSpeechEvent:(long long)arg1;	// IMP=0x0000000000074b17
- (id)recordContext;	// IMP=0x0000000000074a6e
- (long long)_csAudioRecordType;	// IMP=0x0000000000074a38
- (long long)_activationMode;	// IMP=0x00000000000749ff
- (id)recordSettingsWithOptions:(unsigned long long)arg1;	// IMP=0x0000000000074627
- (id)_appendDictationApplicationInfoSettings:(id)arg1;	// IMP=0x000000000007455f
- (long long)event;	// IMP=0x0000000000074555
- (void)setClientConfiguration:(id)arg1;	// IMP=0x0000000000074488
- (void)setSpeechRequestOptions:(id)arg1 currentActivationInfo:(id)arg2;	// IMP=0x0000000000073ea1
- (id)initWithSpeechRecordingMode:(long long)arg1 clientConfiguration:(id)arg2 experimentContext:(id)arg3;	// IMP=0x0000000000073d13
- (id)description;	// IMP=0x0000000000073c64

@end

