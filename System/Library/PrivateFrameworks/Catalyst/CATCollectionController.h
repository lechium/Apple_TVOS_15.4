//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSIndexSet, NSMutableArray, NSMutableIndexSet, NSMutableSet, NSPredicate, NSSet, NSString, NSTimer, NSValueTransformer;
@protocol CATCollectionControllerDelegate;

@interface CATCollectionController : NSObject
{
    NSMutableArray *mPendingArrangedObjects;	// 8 = 0x8
    NSMutableArray *mPendingInsertedObjects;	// 16 = 0x10
    NSMutableArray *mPendingDeletedObjects;	// 24 = 0x18
    NSMutableSet *mContent;	// 32 = 0x20
    id mTarget;	// 40 = 0x28
    NSString *mKeyPath;	// 48 = 0x30
    NSMutableIndexSet *mChangingSelection;	// 56 = 0x38
    _Bool mDelegateKnowsContentIsChanging;	// 64 = 0x40
    NSSet *mKeysAffectingArrangement;	// 72 = 0x48
    NSMutableSet *mObjectsToRearrange;	// 80 = 0x50
    NSTimer *mRearrangeTimer;	// 88 = 0x58
    NSValueTransformer *mTransformer;	// 96 = 0x60
    id mOriginalObjects;	// 104 = 0x68
    _Bool _automaticallyRearrangesObjects;	// 112 = 0x70
    id <CATCollectionControllerDelegate> _delegate;	// 120 = 0x78
    NSArray *_sortDescriptors;	// 128 = 0x80
    NSPredicate *_filterPredicate;	// 136 = 0x88
    NSIndexSet *_selectionIndexes;	// 144 = 0x90
    NSArray *_arrangedObjects;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x00000000000083f7
@property(retain) NSArray *arrangedObjects; // @synthesize arrangedObjects=_arrangedObjects;
- (void)changeObject:(id)arg1 atIndex:(unsigned long long)arg2 forChangeType:(unsigned long long)arg3 newIndex:(unsigned long long)arg4;	// IMP=0x00000000000082ad
- (void)notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:(id)arg1;	// IMP=0x0000000000007ddd
- (void)notifyArrangedObjectsWillChange;	// IMP=0x00000000000078dd
- (void)changeContent:(CDUnknownBlockType)arg1;	// IMP=0x00000000000075ea
- (void)updateKeysAffectingArrangementForceUpdate:(_Bool)arg1 includeAllContent:(_Bool)arg2;	// IMP=0x0000000000007064
- (void)scheduleRearrangeTimerIfNeed;	// IMP=0x0000000000007005
- (void)rearrangeTimerDidFire:(id)arg1;	// IMP=0x0000000000006e40
- (unsigned long long)newIndexForObject:(id)arg1 inArrangedObjects:(id)arg2;	// IMP=0x00000000000069fe
- (void)arrangeObject:(id)arg1;	// IMP=0x0000000000006849
- (void)updateObject:(id)arg1;	// IMP=0x00000000000067c7
- (void)removeObject:(id)arg1;	// IMP=0x0000000000006703
- (void)addObject:(id)arg1;	// IMP=0x0000000000006683
- (void)removeObserversFromObject:(id)arg1 forKeyPaths:(id)arg2;	// IMP=0x0000000000006534
- (void)addObserversToObject:(id)arg1 forKeyPaths:(id)arg2;	// IMP=0x00000000000063d4
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000000006093
- (void)rearrangeObjects;	// IMP=0x0000000000006077
- (void)unbindContent;	// IMP=0x0000000000005ebe
- (void)bindContentToObject:(id)arg1 withKeyPath:(id)arg2 usingTransformer:(id)arg3;	// IMP=0x0000000000005cd2
- (void)bindContentToObject:(id)arg1 withKeyPath:(id)arg2;	// IMP=0x0000000000005cbd
- (unsigned long long)arrangedIndexOfObject:(id)arg1;	// IMP=0x0000000000005ca4
- (void)resolveArrangedObjectsAtIndexes:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000005b51
- (id)arrangedObjectsAtIndexes:(id)arg1;	// IMP=0x0000000000005b38
- (id)arrangedObjectAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000005b1f
- (unsigned long long)numberOfArrangedObjects;	// IMP=0x0000000000005b06
- (void)dealloc;	// IMP=0x0000000000005ab1
- (id)initWithObjects:(id)arg1;	// IMP=0x0000000000005919
- (id)init;	// IMP=0x0000000000005830
@property(readonly, nonatomic) NSSet *content;
@property(readonly) NSArray *selectedObjects;
@property(copy) NSIndexSet *selectionIndexes; // @synthesize selectionIndexes=_selectionIndexes;
@property(retain) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property(copy) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property _Bool automaticallyRearrangesObjects; // @synthesize automaticallyRearrangesObjects=_automaticallyRearrangesObjects;
@property __weak id <CATCollectionControllerDelegate> delegate; // @synthesize delegate=_delegate;

@end

