//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXGMutableDisplayAssetVideoPresentationController_Private-Protocol.h>

@class NSMutableDictionary, NSObject, NSString, PXGVideoSessionPixelBufferSource, PXVideoSession, PXVideoSessionManager, PXVideoSessionManagerDisplayAssetOptions;
@protocol OS_dispatch_queue, PXDisplayAsset, PXGDisplayAssetVideoPresentationControllerDelegate;

@interface PXGDisplayAssetVideoPresentationController <PXGMutableDisplayAssetVideoPresentationController_Private, PXChangeObserver>
{
    void *_videoSessionPresenter;	// 8 = 0x8
    _Bool _shouldDisplayPreviousNonnullPixelBuffer;	// 16 = 0x10
    _Bool _shouldDisableAutomaticPixelBufferUpdates;	// 17 = 0x11
    _Bool _isReadyForImmediatePlayback;	// 18 = 0x12
    _Bool _isVisible;	// 19 = 0x13
    _Bool _resetsDesiredPlayStateOnHide;	// 20 = 0x14
    _Bool _isAtEnd;	// 21 = 0x15
    _Bool _isLoopingEnabled;	// 22 = 0x16
    _Bool _isCrossfadingFromStillToVideoEnabled;	// 23 = 0x17
    _Bool _isCleanApertureCompensationEnabled;	// 24 = 0x18
    _Bool _isDuckingOtherAudioEnabled;	// 25 = 0x19
    _Bool _isMixingAudioWithOthersEnabled;	// 26 = 0x1a
    _Bool _shouldFadeVolumeChange;	// 27 = 0x1b
    float _volume;	// 28 = 0x1c
    float _pendingPrerollRate;	// 32 = 0x20
    id <PXDisplayAsset> _displayAsset;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_accessQueue;	// 48 = 0x30
    PXVideoSessionManager *_videoSessionManager;	// 56 = 0x38
    PXVideoSessionManagerDisplayAssetOptions *_options;	// 64 = 0x40
    NSString *_identifier;	// 72 = 0x48
    id <PXGDisplayAssetVideoPresentationControllerDelegate> _delegate;	// 80 = 0x50
    long long _desiredPlayState;	// 88 = 0x58
    long long _actualPlayState;	// 96 = 0x60
    NSString *_audioSessionCategory;	// 104 = 0x68
    PXVideoSession *_videoSession;	// 112 = 0x70
    PXGVideoSessionPixelBufferSource *_pixelBufferSource;	// 120 = 0x78
    long long _pixelBufferSourceCounter;	// 128 = 0x80
    NSMutableDictionary *_timeObserversByTime;	// 136 = 0x88
    long long _loadingPriority;	// 144 = 0x90
    struct CGSize _targetSize;	// 152 = 0x98
    CDStruct_1b6d18a9 _desiredTime;	// 168 = 0xa8
    CDStruct_1b6d18a9 _actualTime;	// 192 = 0xc0
    CDStruct_1b6d18a9 _videoDuration;	// 216 = 0xd8
    CDStruct_1b6d18a9 _pendingSeekTime;	// 240 = 0xf0
    CDStruct_1b6d18a9 _pendingSeekToleranceBefore;	// 264 = 0x108
    CDStruct_1b6d18a9 _pendingSeekToleranceAfter;	// 288 = 0x120
    CDStruct_e83c9415 _playbackTimeRange;	// 312 = 0x138
}

- (void).cxx_destruct;	// IMP=0x0000000000836425
@property(readonly, nonatomic) long long loadingPriority; // @synthesize loadingPriority=_loadingPriority;
@property(nonatomic) _Bool shouldFadeVolumeChange; // @synthesize shouldFadeVolumeChange=_shouldFadeVolumeChange;
@property(retain, nonatomic) NSMutableDictionary *timeObserversByTime; // @synthesize timeObserversByTime=_timeObserversByTime;
@property(nonatomic) CDStruct_1b6d18a9 pendingSeekToleranceAfter; // @synthesize pendingSeekToleranceAfter=_pendingSeekToleranceAfter;
@property(nonatomic) CDStruct_1b6d18a9 pendingSeekToleranceBefore; // @synthesize pendingSeekToleranceBefore=_pendingSeekToleranceBefore;
@property(nonatomic) CDStruct_1b6d18a9 pendingSeekTime; // @synthesize pendingSeekTime=_pendingSeekTime;
@property(nonatomic) float pendingPrerollRate; // @synthesize pendingPrerollRate=_pendingPrerollRate;
@property(nonatomic) long long pixelBufferSourceCounter; // @synthesize pixelBufferSourceCounter=_pixelBufferSourceCounter;
@property(retain, nonatomic) PXGVideoSessionPixelBufferSource *pixelBufferSource; // @synthesize pixelBufferSource=_pixelBufferSource;
@property(retain, nonatomic) PXVideoSession *videoSession; // @synthesize videoSession=_videoSession;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(readonly, nonatomic) _Bool isMixingAudioWithOthersEnabled; // @synthesize isMixingAudioWithOthersEnabled=_isMixingAudioWithOthersEnabled;
@property(readonly, nonatomic) _Bool isDuckingOtherAudioEnabled; // @synthesize isDuckingOtherAudioEnabled=_isDuckingOtherAudioEnabled;
@property(readonly, nonatomic) NSString *audioSessionCategory; // @synthesize audioSessionCategory=_audioSessionCategory;
@property(readonly, nonatomic) _Bool isCleanApertureCompensationEnabled; // @synthesize isCleanApertureCompensationEnabled=_isCleanApertureCompensationEnabled;
@property(readonly, nonatomic) _Bool isCrossfadingFromStillToVideoEnabled; // @synthesize isCrossfadingFromStillToVideoEnabled=_isCrossfadingFromStillToVideoEnabled;
@property(readonly, nonatomic) _Bool isLoopingEnabled; // @synthesize isLoopingEnabled=_isLoopingEnabled;
@property(readonly, nonatomic) CDStruct_e83c9415 playbackTimeRange; // @synthesize playbackTimeRange=_playbackTimeRange;
@property(readonly, nonatomic) CDStruct_1b6d18a9 videoDuration; // @synthesize videoDuration=_videoDuration;
@property(readonly, nonatomic) _Bool isAtEnd; // @synthesize isAtEnd=_isAtEnd;
@property(readonly, nonatomic) CDStruct_1b6d18a9 actualTime; // @synthesize actualTime=_actualTime;
@property(readonly, nonatomic) CDStruct_1b6d18a9 desiredTime; // @synthesize desiredTime=_desiredTime;
@property(readonly, nonatomic) long long actualPlayState; // @synthesize actualPlayState=_actualPlayState;
@property(readonly, nonatomic) long long desiredPlayState; // @synthesize desiredPlayState=_desiredPlayState;
@property(readonly, nonatomic) _Bool resetsDesiredPlayStateOnHide; // @synthesize resetsDesiredPlayStateOnHide=_resetsDesiredPlayStateOnHide;
@property(nonatomic) struct CGSize targetSize; // @synthesize targetSize=_targetSize;
@property(readonly, nonatomic) _Bool isVisible; // @synthesize isVisible=_isVisible;
@property(readonly, nonatomic) _Bool isReadyForImmediatePlayback; // @synthesize isReadyForImmediatePlayback=_isReadyForImmediatePlayback;
@property(readonly, nonatomic) _Bool shouldDisableAutomaticPixelBufferUpdates; // @synthesize shouldDisableAutomaticPixelBufferUpdates=_shouldDisableAutomaticPixelBufferUpdates;
@property(readonly, nonatomic) _Bool shouldDisplayPreviousNonnullPixelBuffer; // @synthesize shouldDisplayPreviousNonnullPixelBuffer=_shouldDisplayPreviousNonnullPixelBuffer;
@property(nonatomic) __weak id <PXGDisplayAssetVideoPresentationControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) PXVideoSessionManagerDisplayAssetOptions *options; // @synthesize options=_options;
@property(readonly, nonatomic) PXVideoSessionManager *videoSessionManager; // @synthesize videoSessionManager=_videoSessionManager;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(readonly, nonatomic) id <PXDisplayAsset> displayAsset; // @synthesize displayAsset=_displayAsset;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;	// IMP=0x0000000000835f1c
@property(readonly, nonatomic) NSString *diagnosticDescription;
- (void)_notifyReachedTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x0000000000835b7c
- (void)stopObservingBoundaryTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000008359db
- (void)startObservingBoundaryTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000008356a6
- (void)_performPendingSeekIfNeeded;	// IMP=0x00000000008355e3
- (_Bool)isPendingSeekScheduled;	// IMP=0x00000000008355b1
- (void)synchronouslySeekToDesiredTime:(CDStruct_1b6d18a9)arg1 updatePixelBufferSource:(_Bool)arg2;	// IMP=0x000000000083551a
- (void)_performSeekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x000000000083531c
- (void)setDesiredTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000008352d1
- (void)setDesiredTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x000000000083525d
- (void)seekToBeginning;	// IMP=0x00000000008350b5
- (void)setVolume:(float)arg1 withFade:(_Bool)arg2;	// IMP=0x000000000083503b
- (void)setIsMixingAudioWithOthersEnabled:(_Bool)arg1;	// IMP=0x0000000000835018
- (void)setIsDuckingOtherAudioEnabled:(_Bool)arg1;	// IMP=0x0000000000834ff5
- (void)setAudioSessionCategory:(id)arg1;	// IMP=0x0000000000834f94
- (void)setIsCleanApertureCompensationEnabled:(_Bool)arg1;	// IMP=0x0000000000834f6c
- (void)setIsCrossfadingFromStillToVideoEnabled:(_Bool)arg1;	// IMP=0x0000000000834f44
- (void)setIsLoopingEnabled:(_Bool)arg1;	// IMP=0x0000000000834efd
- (void)setPlaybackTimeRange:(CDStruct_e83c9415)arg1;	// IMP=0x0000000000834e32
- (void)setResetsDesiredPlayStateOnHide:(_Bool)arg1;	// IMP=0x0000000000834e1d
- (void)setIsVisible:(_Bool)arg1;	// IMP=0x0000000000834dbe
- (void)setDesiredPlayState:(long long)arg1;	// IMP=0x0000000000834b7d
- (void)setShouldDisableAutomaticPixelBufferUpdates:(_Bool)arg1;	// IMP=0x0000000000834b5a
- (void)setShouldDisplayPreviousNonnullPixelBuffer:(_Bool)arg1;	// IMP=0x0000000000834b32
- (void)_prerollCompletedSuccessfully:(_Bool)arg1;	// IMP=0x0000000000834ab6
- (void)_performPendingPrerollIfNeeded;	// IMP=0x0000000000834a7b
- (void)_performPrerollAtRate:(float)arg1;	// IMP=0x0000000000834913
- (void)prerollForImmediatePlaybackAtRate:(float)arg1 withMediaProvider:(id)arg2;	// IMP=0x00000000008348d3
- (void)setVideoDuration:(CDStruct_1b6d18a9)arg1;	// IMP=0x0000000000834846
- (void)setIsAtEnd:(_Bool)arg1;	// IMP=0x0000000000834613
- (void)setIsReadyForImmediatePlayback:(_Bool)arg1;	// IMP=0x00000000008345eb
- (void)setActualPlayState:(long long)arg1;	// IMP=0x00000000008343ba
- (void)setActualTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x000000000083432d
- (void)_updatePresentationControllerState;	// IMP=0x0000000000834195
- (void)_invalidatePresentationControllerState;	// IMP=0x0000000000834183
- (void)_updateVideoSession;	// IMP=0x0000000000833fc3
- (void)_invalidateVideoSession;	// IMP=0x0000000000833fb1
- (void)performChanges:(CDUnknownBlockType)arg1;	// IMP=0x0000000000833f2c
- (CDStruct_e83c9415)_videoSessionTimeRangeConvertedFromTimeRange:(CDStruct_e83c9415)arg1;	// IMP=0x0000000000833e5a
- (CDStruct_e83c9415)_timeRangeConvertedFromVideoSessionTimeRange:(CDStruct_e83c9415)arg1;	// IMP=0x0000000000833d88
- (CDStruct_1b6d18a9)_videoSessionTimeConvertedFromTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x0000000000833bd2
- (CDStruct_1b6d18a9)_timeConvertedFromVideoSessionTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x0000000000833b07
- (_Bool)_timeConversionNeeded;	// IMP=0x0000000000833ac3
- (void)_setupPixelBufferSourceIfNeededWithMediaProvider:(id)arg1;	// IMP=0x00000000008335ac
- (void)_setupVideoSessionIfNeededWithMediaProvider:(id)arg1;	// IMP=0x00000000008330f0
- (void)recyclePixelBufferSource;	// IMP=0x0000000000832ce5
- (id)pixelBufferSourceWithMediaProvider:(id)arg1;	// IMP=0x0000000000832c99
- (id)videoSessionWithMediaProvider:(id)arg1;	// IMP=0x0000000000832c6b
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x0000000000832b68
- (id)initWithDisplayAsset:(id)arg1 accessQueue:(id)arg2;	// IMP=0x0000000000832aaa
- (id)initWithDisplayAsset:(id)arg1 accessQueue:(id)arg2 videoSessionManager:(id)arg3 options:(id)arg4 loadingPriority:(long long)arg5;	// IMP=0x0000000000832882
- (id)init;	// IMP=0x0000000000832808

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

