//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXPhotoLibraryUIChangeObserver-Protocol.h>
#import <PhotosUICore/PXTouchingUIGestureRecognizerDelegate-Protocol.h>

@class NSError, NSString, NSURL, PHFetchResult, PHMomentShare, PHPhotoLibrary, PXCMMPreviewAsset, PXCMMPreviewUIImageProvider, PXCMMSpecManager, PXCMMStackBubbleView, PXCMMTranscriptBubbleStatusView, PXCMMTranscriptBubbleView, PXMomentShareStatusPresentation;
@protocol PXCMMTranscriptBubbleTouchDelegate, PXUIImageProvider;

@interface PXCMMTranscriptBubbleViewController <PXPhotoLibraryUIChangeObserver, PXChangeObserver, PXTouchingUIGestureRecognizerDelegate>
{
    PHPhotoLibrary *_photoLibrary;	// 8 = 0x8
    PHFetchResult *_backingFetchResult;	// 16 = 0x10
    PHFetchResult *_keyAssetFetch;	// 24 = 0x18
    PXMomentShareStatusPresentation *_momentShareStatusPresentation;	// 32 = 0x20
    long long _saveInProgressTotal;	// 40 = 0x28
    PXCMMTranscriptBubbleView *_bubbleView;	// 48 = 0x30
    PXCMMTranscriptBubbleStatusView *_errorStatusView;	// 56 = 0x38
    PXCMMTranscriptBubbleStatusView *_loadingStatusView;	// 64 = 0x40
    id <PXUIImageProvider> _mediaProvider;	// 72 = 0x48
    PXCMMSpecManager *_specManager;	// 80 = 0x50
    PXCMMPreviewAsset *_previewAsset;	// 88 = 0x58
    PXCMMPreviewUIImageProvider *_previewImageProvider;	// 96 = 0x60
    _Bool _readyForBubbleStateTransitions;	// 104 = 0x68
    _Bool _isExpungingAndRefetching;	// 105 = 0x69
    _Bool _triggeredForcedSync;	// 106 = 0x6a
    _Bool _useStackBubbleView;	// 107 = 0x6b
    PXCMMStackBubbleView *_stackBubbleView;	// 112 = 0x70
    _Bool _isSender;	// 120 = 0x78
    _Bool _isPending;	// 121 = 0x79
    _Bool _highlighted;	// 122 = 0x7a
    NSURL *_url;	// 128 = 0x80
    id <PXCMMTranscriptBubbleTouchDelegate> _touchDelegate;	// 136 = 0x88
    long long _bubbleState;	// 144 = 0x90
    long long _targetState;	// 152 = 0x98
    NSError *_error;	// 160 = 0xa0
}

+ (_Bool)_isPermanentFailureURL:(id)arg1;	// IMP=0x00000000008f96c1
+ (void)_registerPermanentFailureURL:(id)arg1;	// IMP=0x00000000008f964d
- (void).cxx_destruct;	// IMP=0x00000000008f8d4e
@property(retain, nonatomic) PXMomentShareStatusPresentation *momentShareStatusPresentation; // @synthesize momentShareStatusPresentation=_momentShareStatusPresentation;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) long long targetState; // @synthesize targetState=_targetState;
@property(nonatomic) long long bubbleState; // @synthesize bubbleState=_bubbleState;
@property(nonatomic) __weak id <PXCMMTranscriptBubbleTouchDelegate> touchDelegate; // @synthesize touchDelegate=_touchDelegate;
@property(readonly, nonatomic) _Bool isPending; // @synthesize isPending=_isPending;
@property(readonly, nonatomic) _Bool isSender; // @synthesize isSender=_isSender;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;	// IMP=0x00000000008f8bd1
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;	// IMP=0x00000000008f8351
- (void)touchingUIGestureRecognizerWillEndTouching:(id)arg1;	// IMP=0x00000000008f833d
- (void)touchingUIGestureRecognizerWillBeginTouching:(id)arg1;	// IMP=0x00000000008f8326
- (void)_readyForStateTransition;	// IMP=0x00000000008f8309
- (void)_ensureBubbleStateTransition;	// IMP=0x00000000008f8208
- (void)_updateBubbleState;	// IMP=0x00000000008f8071
- (void)_updateMomentShareStatusPresentation;	// IMP=0x00000000008f7f3c
- (void)_updateContent;	// IMP=0x00000000008f7d10
- (void)_updateBubbleView;	// IMP=0x00000000008f7318
- (_Bool)_shouldShowContent;	// IMP=0x00000000008f72c6
- (void)_installGestures;	// IMP=0x00000000008f70ab
- (void)viewDidLoad;	// IMP=0x00000000008f6e68
- (void)_longPressGesture:(id)arg1;	// IMP=0x00000000008f6dc8
- (void)_doubleTapGesture:(id)arg1;	// IMP=0x00000000008f6d28
- (void)_panGesture:(id)arg1;	// IMP=0x00000000008f6c72
- (void)_tapGesture:(id)arg1;	// IMP=0x00000000008f697c
- (_Bool)_shouldOpenCloudSettings;	// IMP=0x00000000008f6932
- (_Bool)_shouldOpenInSafari;	// IMP=0x00000000008f68e8
- (_Bool)_shouldRetryOnTap;	// IMP=0x00000000008f67af
- (_Bool)_shouldNavigateToContent;	// IMP=0x00000000008f679d
- (void)_retryMomentShareFetch;	// IMP=0x00000000008f641b
- (void)_triggerForcedSyncIfNeeded;	// IMP=0x00000000008f633c
- (void)_acceptMomentShareIfNeeded:(id)arg1;	// IMP=0x00000000008f623c
- (void)_autoAcceptMomentShareIfNeeded:(id)arg1;	// IMP=0x00000000008f61bd
- (void)_momentShareURL:(id)arg1 fetchDidFailWithError:(id)arg2;	// IMP=0x00000000008f612a
- (void)_fetchMomentShareFromNetworkURL:(id)arg1;	// IMP=0x00000000008f5fd7
- (id)_fetchKeyAssetsFromBackingCollection;	// IMP=0x00000000008f5f0c
- (_Bool)_canFetchAssetsFromMomentShare:(id)arg1;	// IMP=0x00000000008f5ea0
- (id)_debugStatusDescription;	// IMP=0x00000000008f5c3d
- (id)_secondaryDescription;	// IMP=0x00000000008f5a9f
- (id)_primaryDescription;	// IMP=0x00000000008f5a31
@property(readonly, nonatomic) PHMomentShare *momentShare;
- (struct CGSize)workaroundSizeForSize:(struct CGSize)arg1;	// IMP=0x00000000008f570d
- (struct CGSize)contentSizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000008f56bb
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x00000000008f542e
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000008f53ab
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x00000000008f531b
- (id)init;	// IMP=0x00000000008f52a1
- (id)initWithURL:(id)arg1 isSender:(_Bool)arg2 isPending:(_Bool)arg3;	// IMP=0x00000000008f4b9e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

