//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXGAnchorDelegate-Protocol.h>
#import <PhotosUICore/PXGDataSourceDrivenLayout-Protocol.h>
#import <PhotosUICore/PXGScrollViewContainerDelegate-Protocol.h>
#import <PhotosUICore/PXGViewSource-Protocol.h>

@class NSNumber, NSString, PXGLayout, PXGScrollViewModel;
@protocol PXGScrollLayoutDelegate;

@interface PXGScrollLayout <PXGAnchorDelegate, PXGViewSource, PXGScrollViewContainerDelegate, PXChangeObserver, PXGDataSourceDrivenLayout>
{
    CDStruct_af00bf4e _updateFlags;	// 8 = 0x8
    unsigned int _scrollViewSpriteIndex;	// 32 = 0x20
    unsigned short _scrollViewMediaVersion;	// 36 = 0x24
    _Bool _isUpdatingContentLayout;	// 38 = 0x26
    struct {
        _Bool willBeginScrolling;
        _Bool didScroll;
        _Bool willEndScrollingWithVelocityTargetContentOffset;
        _Bool didEndScrolling;
    } _delegateRespondsTo;	// 39 = 0x27
    _Bool _clipsToBounds;	// 43 = 0x2b
    _Bool _showsVerticalScrollIndicator;	// 44 = 0x2c
    _Bool _showsHorizontalScrollIndicator;	// 45 = 0x2d
    _Bool _draggingPerformsScroll;	// 46 = 0x2e
    _Bool _wantsScrollView;	// 47 = 0x2f
    _Bool _isScrolling;	// 48 = 0x30
    float _scrollViewSpriteZPosition;	// 52 = 0x34
    id <PXGScrollLayoutDelegate> _delegate;	// 56 = 0x38
    NSNumber *_fixedWidth;	// 64 = 0x40
    NSNumber *_fixedHeight;	// 72 = 0x48
    long long _scrollDecelerationRate;	// 80 = 0x50
    PXGScrollViewModel *_scrollViewModel;	// 88 = 0x58
}

- (void).cxx_destruct;	// IMP=0x0000000000707288
@property(readonly, nonatomic) _Bool isScrolling; // @synthesize isScrolling=_isScrolling;
@property(nonatomic) _Bool wantsScrollView; // @synthesize wantsScrollView=_wantsScrollView;
@property(readonly, nonatomic) PXGScrollViewModel *scrollViewModel; // @synthesize scrollViewModel=_scrollViewModel;
@property(nonatomic) _Bool draggingPerformsScroll; // @synthesize draggingPerformsScroll=_draggingPerformsScroll;
@property(nonatomic) _Bool showsHorizontalScrollIndicator; // @synthesize showsHorizontalScrollIndicator=_showsHorizontalScrollIndicator;
@property(nonatomic) _Bool showsVerticalScrollIndicator; // @synthesize showsVerticalScrollIndicator=_showsVerticalScrollIndicator;
@property(nonatomic) _Bool clipsToBounds; // @synthesize clipsToBounds=_clipsToBounds;
@property(nonatomic) long long scrollDecelerationRate; // @synthesize scrollDecelerationRate=_scrollDecelerationRate;
@property(nonatomic) float scrollViewSpriteZPosition; // @synthesize scrollViewSpriteZPosition=_scrollViewSpriteZPosition;
@property(retain, nonatomic) NSNumber *fixedHeight; // @synthesize fixedHeight=_fixedHeight;
@property(retain, nonatomic) NSNumber *fixedWidth; // @synthesize fixedWidth=_fixedWidth;
@property(nonatomic) __weak id <PXGScrollLayoutDelegate> delegate; // @synthesize delegate=_delegate;
- (id)axContainingScrollViewForAXGroup:(id)arg1;	// IMP=0x00000000007070f9
- (id)axSpriteIndexes;	// IMP=0x00000000007070e0
- (_Bool)axShouldBeConsideredAsSubgroup;	// IMP=0x00000000007070d8
- (id)focusItemsForScrollViewContainer:(id)arg1 inRect:(struct CGRect)arg2;	// IMP=0x000000000070701a
- (void)scrollViewContainerDidEndScrolling:(id)arg1;	// IMP=0x0000000000706fa3
- (void)scrollViewContainerWillEndScrolling:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;	// IMP=0x0000000000706f1b
- (void)scrollViewContainerDidScroll:(id)arg1;	// IMP=0x0000000000706e56
- (void)scrollViewContainerWillBeginScrolling:(id)arg1;	// IMP=0x0000000000706ddd
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;	// IMP=0x0000000000706d0f
- (unsigned int)viewHostingSpriteIndex;	// IMP=0x0000000000706cff
- (id)viewUserDataForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;	// IMP=0x0000000000706bf6
- (Class)viewClassForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;	// IMP=0x0000000000706b34
- (void)_updateLocalContent;	// IMP=0x0000000000706a86
- (void)_invalidateLocalContent;	// IMP=0x0000000000706992
- (void)_invalidateScrollView;	// IMP=0x0000000000706975
- (void)_updateContentLayout;	// IMP=0x0000000000706347
- (void)_invalidateContentLayout;	// IMP=0x0000000000706246
- (void)didUpdate;	// IMP=0x0000000000706170
- (void)update;	// IMP=0x0000000000705e2c
- (void)willUpdate;	// IMP=0x0000000000705d51
- (id)layoutForItemChanges;	// IMP=0x0000000000705d3f
- (struct CGPoint)anchor:(id)arg1 visibleRectOriginForProposedVisibleRect:(struct CGRect)arg2 forLayout:(id)arg3;	// IMP=0x0000000000705bc1
- (id)createAnchorForVisibleAreaIgnoringEdges:(unsigned long long)arg1;	// IMP=0x0000000000705b67
- (long long)sublayoutIndexForObjectReference:(id)arg1 options:(unsigned long long)arg2 updatedObjectReference:(out id *)arg3;	// IMP=0x0000000000705ade
- (long long)intrinsicScrollRegime;	// IMP=0x0000000000705a9a
- (void)sublayoutNeedsUpdate:(id)arg1;	// IMP=0x0000000000705a59
- (void)alphaDidChange;	// IMP=0x0000000000705a18
- (void)contentSizeDidChange;	// IMP=0x00000000007059d7
- (void)userInterfaceDirectionDidChange;	// IMP=0x0000000000705996
- (void)safeAreaInsetsDidChange;	// IMP=0x0000000000705955
- (void)lastScrollDirectionDidChange;	// IMP=0x0000000000705914
- (void)screenScaleDidChange;	// IMP=0x00000000007058d3
- (void)referenceSizeDidChange;	// IMP=0x0000000000705892
- (void)viewEnvironmentDidChange;	// IMP=0x0000000000705851
- (void)stopScrolling;	// IMP=0x0000000000705808
- (void)isScrollingDidChange;	// IMP=0x0000000000705802
- (void)setIsScrolling:(_Bool)arg1;	// IMP=0x00000000007057df
- (void)insertSublayout:(id)arg1 atIndex:(long long)arg2;	// IMP=0x00000000007053a3
- (void)contentLayoutDidChange;	// IMP=0x000000000070527c
@property(retain, nonatomic) PXGLayout *contentLayout;
- (id)initWithContentLayout:(id)arg1;	// IMP=0x000000000070513e
- (id)init;	// IMP=0x0000000000705034

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

