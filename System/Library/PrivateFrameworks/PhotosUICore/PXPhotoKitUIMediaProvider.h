//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSMutableArray, NSObject, PHAssetResourceQualityClass, PHCachingImageManager, PHImageManager, PXPhotoKitThumbnailCache;
@protocol OS_dispatch_queue;

@interface PXPhotoKitUIMediaProvider
{
    NSArray *_thumbnailQualityClasses;	// 8 = 0x8
    NSArray *_thumbnailCaches;	// 16 = 0x10
    struct CGSize _masterThumbnailSize;	// 24 = 0x18
    _Atomic long long _lastActivity;	// 40 = 0x28
    struct os_unfair_lock_s _preheatlock;	// 48 = 0x30
    NSMutableArray *_preheatLock_preheatStates;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_preheatQueue;	// 64 = 0x40
    unsigned long long _preheatQueue_state;	// 72 = 0x48
    struct os_unfair_lock_s _lock;	// 80 = 0x50
    struct CGSize _lock_lastTargetSize;	// 88 = 0x58
    long long _lock_lastQualityClassIndex;	// 104 = 0x68
    PHAssetResourceQualityClass *_lock_lastResourceQualityClass;	// 112 = 0x70
    PXPhotoKitThumbnailCache *_lock_lastThumbnailCache;	// 120 = 0x78
    PHImageManager *_imageManager;	// 128 = 0x80
    PHCachingImageManager *_cachingImageManager;	// 136 = 0x88
}

+ (id)mediaProviderWithLibrary:(id)arg1;	// IMP=0x000000000043a883
+ (id)_defaultLoadingStatusManager;	// IMP=0x000000000043a853
+ (id)_defaultImageManager;	// IMP=0x000000000043a823
- (void).cxx_destruct;	// IMP=0x0000000000438bbc
@property(readonly, nonatomic) PHCachingImageManager *cachingImageManager; // @synthesize cachingImageManager=_cachingImageManager;
@property(readonly, nonatomic) PHImageManager *imageManager; // @synthesize imageManager=_imageManager;
- (void)_preheatQueue_scheduleUpdateAfterDelay;	// IMP=0x0000000000438afa
- (void)_preheatQueue_schedulePreheat;	// IMP=0x0000000000438ad0
- (void)_schedulePreheat;	// IMP=0x0000000000438a25
- (void)_setPreheatInfo:(id)arg1 forQualityClassIndex:(long long)arg2;	// IMP=0x0000000000438980
- (id)_preheatInfoForQualityClassIndex:(long long)arg1;	// IMP=0x000000000043891e
- (void)_preheatQueue_update;	// IMP=0x0000000000437ffd
- (void)_noteActivity;	// IMP=0x0000000000437fde
- (void)stopCachingImagesForAllAssets;	// IMP=0x0000000000437fa1
- (void)stopCachingImagesForAssets:(id)arg1 targetSize:(struct CGSize)arg2 contentMode:(long long)arg3 options:(id)arg4;	// IMP=0x0000000000437e0a
- (void)startCachingImagesForAssets:(id)arg1 targetSize:(struct CGSize)arg2 contentMode:(long long)arg3 options:(id)arg4;	// IMP=0x0000000000437c73
- (void)cancelImageRequest:(long long)arg1;	// IMP=0x0000000000437c27
- (struct CGSize)masterThumbnailSize;	// IMP=0x0000000000437c0f
- (void)enumerateAvailableThumbnailDataFormats:(CDUnknownBlockType)arg1;	// IMP=0x0000000000437b4e
- (void)preheatThumbnailDataForAssets:(id)arg1 origin:(long long)arg2 targetSize:(struct CGSize)arg3;	// IMP=0x000000000043793d
- (id)_thumbnailDataForAsset:(id)arg1 qualityClass:(id)arg2 cache:(id)arg3 onlyFromCache:(_Bool)arg4 outDataSpec:(struct PXMediaProviderThumbnailDataSpec *)arg5;	// IMP=0x0000000000437731
- (id)thumbnailDataForAsset:(id)arg1 targetSize:(struct CGSize)arg2 onlyFromCache:(_Bool)arg3 outDataSpec:(struct PXMediaProviderThumbnailDataSpec *)arg4;	// IMP=0x000000000043763a
- (void)_getQualityClass:(id *)arg1 cache:(id *)arg2 qualityClassIndex:(long long *)arg3 forTargetSize:(struct CGSize)arg4;	// IMP=0x0000000000437164
- (long long)requestURLForVideo:(id)arg1 options:(id)arg2 resultHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000436d4e
- (long long)requestAnimatedImageForAsset:(id)arg1 options:(id)arg2 resultHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000436957
- (long long)requestLivePhotoForAsset:(id)arg1 targetSize:(struct CGSize)arg2 contentMode:(long long)arg3 options:(id)arg4 resultHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000436515
- (long long)requestPlayerItemForVideo:(id)arg1 options:(id)arg2 resultHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000004360ff
- (long long)requestImageURLForAsset:(id)arg1 options:(id)arg2 resultHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000435ca1
- (long long)requestImageDataForAsset:(id)arg1 options:(id)arg2 resultHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000435847
- (long long)requestImageForAsset:(id)arg1 targetSize:(struct CGSize)arg2 contentMode:(long long)arg3 options:(id)arg4 resultHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000435208
- (id)init;	// IMP=0x00000000004351ae
- (id)initWithImageManager:(id)arg1;	// IMP=0x000000000043512d
- (id)initWithImageManager:(id)arg1 library:(id)arg2;	// IMP=0x0000000000434c21

@end

