//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreMediaStream/MSPublishStorageProtocolDelegate-Protocol.h>
#import <CoreMediaStream/MSPublishStreamsProtocolDelegate-Protocol.h>
#import <CoreMediaStream/MSPublisher-Protocol.h>

@class MSMediaStreamDaemon, MSObjectQueue, MSPublishStreamsProtocol, NSArray, NSMutableArray, NSMutableDictionary, NSString, NSURL;
@protocol MSPublishStorageProtocol, MSPublisherDelegate;

@interface MSPublisher <MSPublisher, MSPublishStreamsProtocolDelegate, MSPublishStorageProtocolDelegate>
{
    id <MSPublisherDelegate> _delegate;	// 48 = 0x30
    MSMediaStreamDaemon *_daemon;	// 56 = 0x38
    int _state;	// 64 = 0x40
    MSObjectQueue *_uploadQueue;	// 72 = 0x48
    MSObjectQueue *_derivativesQueue;	// 80 = 0x50
    MSObjectQueue *_quarantinedQueue;	// 88 = 0x58
    NSArray *_pendingDerivativesQueue;	// 96 = 0x60
    NSMutableArray *_requestAuthQueue;	// 104 = 0x68
    unsigned long long _sendingQueueCount;	// 112 = 0x70
    NSMutableArray *_sendingQueue;	// 120 = 0x78
    NSMutableDictionary *_fileHashToAssetMap;	// 128 = 0x80
    MSPublishStreamsProtocol *_protocol;	// 136 = 0x88
    id <MSPublishStorageProtocol> _storageProtocol;	// 144 = 0x90
    NSURL *_storageProtocolURL;	// 152 = 0x98
    NSMutableArray *_tempFiles;	// 160 = 0xa0
    NSMutableDictionary *_maxSizeByUTI;	// 168 = 0xa8
    long long _publishTargetByteCount;	// 176 = 0xb0
    int _publishBatchSize;	// 184 = 0xb8
    int _maxErrorCount;	// 188 = 0xbc
}

+ (_Bool)isInRetryState;	// IMP=0x000000000001216b
+ (void)stopAllActivities;	// IMP=0x0000000000012037
+ (id)personIDsWithOutstandingActivities;	// IMP=0x0000000000011ff0
+ (id)nextActivityDateForPersonID:(id)arg1;	// IMP=0x0000000000011f88
+ (id)nextActivityDate;	// IMP=0x0000000000011ddd
+ (void)_setMasterNextActivityDate:(id)arg1 forPersonID:(id)arg2;	// IMP=0x0000000000011c25
+ (void)forgetPersonID:(id)arg1;	// IMP=0x0000000000011ba1
+ (id)_clearInstantiatedPublishersByPersonID;	// IMP=0x0000000000011b85
+ (id)existingPublisherForPersonID:(id)arg1;	// IMP=0x0000000000011b6c
+ (id)publisherForPersonID:(id)arg1;	// IMP=0x0000000000011a4d
- (void).cxx_destruct;	// IMP=0x00000000000114c9
@property(nonatomic) int publishBatchSize; // @synthesize publishBatchSize=_publishBatchSize;
@property(nonatomic) long long publishTargetByteCount; // @synthesize publishTargetByteCount=_publishTargetByteCount;
@property(retain, nonatomic) NSURL *storageProtocolURL; // @synthesize storageProtocolURL=_storageProtocolURL;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) id <MSPublisherDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_isInRetryState;	// IMP=0x00000000000113f9
- (void)stop;	// IMP=0x00000000000113e7
- (void)abort;	// IMP=0x00000000000113d5
- (void)_forget;	// IMP=0x000000000001138e
- (void)_abort;	// IMP=0x00000000000110a8
- (id)_abortedError;	// IMP=0x000000000001104c
- (int)_stop;	// IMP=0x0000000000010f81
- (void)publishStreamsProtocol:(id)arg1 didFinishSendingUploadCompleteError:(id)arg2;	// IMP=0x0000000000010647
- (void)_sendUploadComplete;	// IMP=0x00000000000105d0
- (void)publishStorageProtocolDidFinishPublishingAllAssets:(id)arg1;	// IMP=0x000000000000ebf4
- (void)_categorizeError:(id)arg1 setOutIsIgnorable:(_Bool *)arg2 setOutIsCounted:(_Bool *)arg3 setOutIsFatal:(_Bool *)arg4 setOutNeedsBackoff:(_Bool *)arg5 setOutIsTemporary:(_Bool *)arg6 setOutIsTokenAuth:(_Bool *)arg7 setOutIsAuthError:(_Bool *)arg8;	// IMP=0x000000000000ea81
- (void)publishStorageProtocol:(id)arg1 didFinishUsingFD:(int)arg2 forAsset:(id)arg3;	// IMP=0x000000000000e8e5
- (int)publishStorageProtocol:(id)arg1 didRequestFDForAsset:(id)arg2;	// IMP=0x000000000000e229
- (void)publishStorageProtocol:(id)arg1 didFinishUploadingAsset:(id)arg2 error:(id)arg3;	// IMP=0x000000000000e083
- (void)_sendFilesToMMCS;	// IMP=0x000000000000d8a4
- (void)publishStreamsProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;	// IMP=0x000000000000d743
- (void)publishStreamsProtocol:(id)arg1 didFinishUploadingMetadataResponse:(id)arg2 error:(id)arg3;	// IMP=0x000000000000b817
- (id)_invalidStreamsResponseErrorUnderlyingError:(id)arg1;	// IMP=0x000000000000b76e
- (void)_sendMetadataToStreams;	// IMP=0x000000000000acd0
- (void)submitAssetCollectionsForPublication:(id)arg1 skipAssetCollections:(id)arg2;	// IMP=0x0000000000009806
- (void)_didFinishUsingAssetCollections:(id)arg1;	// IMP=0x00000000000095c2
- (void)_removeAssetsInAssetCollectionWrappersFromAssetMap:(id)arg1;	// IMP=0x0000000000009251
- (void)_removeAssetFromFileHashMap:(id)arg1;	// IMP=0x0000000000009161
- (void)_addAssetToFileHashMap:(id)arg1;	// IMP=0x0000000000008f57
- (void)_requestDerivatives;	// IMP=0x0000000000008514
- (void)publish;	// IMP=0x000000000000823e
- (_Bool)_isAllowedToUpload;	// IMP=0x00000000000080af
- (void)reenqueueQuarantinedAssetCollections;	// IMP=0x0000000000007bc0
- (id)_checkObjectWrappers:(id)arg1;	// IMP=0x00000000000078d7
- (id)_checkAssetCollectionFiles:(id)arg1;	// IMP=0x0000000000007537
- (id)_collectionWithNoDerivatives:(id)arg1;	// IMP=0x0000000000007432
- (_Bool)_verifyAssetFile:(id)arg1;	// IMP=0x000000000000734b
- (void)_quarantineOrDiscardWrappers:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000006ebd
- (void)_registerAllAssetsForWrapper:(id)arg1;	// IMP=0x0000000000006ced
- (void)_registerAsset:(id)arg1;	// IMP=0x0000000000006c82
- (void)_serverSideConfigurationDidChange:(id)arg1;	// IMP=0x0000000000006a60
- (void)_refreshServerSideConfiguredParameters;	// IMP=0x0000000000006426
- (void)computeHashForAsset:(id)arg1;	// IMP=0x0000000000006409
- (_Bool)dequeueAssetCollectionWithGUIDs:(id)arg1 outError:(id *)arg2;	// IMP=0x0000000000005f64
- (_Bool)enqueueAssetCollections:(id)arg1 outError:(id *)arg2;	// IMP=0x0000000000005bb9
- (void)_updateMasterManifest;	// IMP=0x0000000000005a55
- (void)dealloc;	// IMP=0x0000000000005a17
- (void)deactivate;	// IMP=0x0000000000005877
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;	// IMP=0x000000000000543c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

