//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface AppleSpell : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    void *_proofReaderConnection;	// 16 = 0x10
    struct __CFDictionary *_databaseConnections;	// 24 = 0x18
    NSMutableDictionary *_languageModelDicts;	// 32 = 0x20
    NSMutableDictionary *_lexiconDict;	// 40 = 0x28
    NSMutableDictionary *_phraseLexiconDict;	// 48 = 0x30
    struct __CFDictionary *_emojiPredictorDict;	// 56 = 0x38
    double _referenceResetTimer;	// 64 = 0x40
    double _lastWriteLanguageModels;	// 72 = 0x48
    double _lastDecayLanguageModels;	// 80 = 0x50
    double _lastResetLanguageModels;	// 88 = 0x58
    double _lastReleaseLanguageModels;	// 96 = 0x60
    double _lastMaintainLanguageModels;	// 104 = 0x68
    unsigned long long _languageModelWordCount;	// 112 = 0x70
    NSMutableDictionary *_localDictionaryArrays;	// 120 = 0x78
    NSMutableArray *_globalDictionaryArray;	// 128 = 0x80
    NSString *_lastLanguage;	// 136 = 0x88
    NSString *_lastCandidateLanguage;	// 144 = 0x90
    NSArray *_userPreferredLanguages;	// 152 = 0x98
    NSArray *_userPreferredLatinLanguages;	// 160 = 0xa0
    NSArray *_userTopLanguages;	// 168 = 0xa8
    NSArray *_userTransliterationLocalizations;	// 176 = 0xb0
    NSArray *_userAdditionalEnglishLocalizations;	// 184 = 0xb8
    NSMutableDictionary *_learnedResponses;	// 192 = 0xc0
    NSMutableDictionary *_probationaryLearnedResponses;	// 200 = 0xc8
    NSMutableDictionary *_probationaryLearnedResponseTimes;	// 208 = 0xd0
    NSMutableArray *_diagnosticInfo;	// 216 = 0xd8
    NSMutableSet *_foundNames;	// 224 = 0xe0
    id _foundNamesLexicon;	// 232 = 0xe8
    id _foundPhrasesLexicon;	// 240 = 0xf0
    double _lastFindNames;	// 248 = 0xf8
    NSMutableSet *_foundShortcuts;	// 256 = 0x100
    NSMutableDictionary *_foundShortcutsDictionary;	// 264 = 0x108
    struct __CFDictionary *_databaseConnectionsByPathAndCode;	// 272 = 0x110
    unsigned long long _reserved1;	// 280 = 0x118
    double _reserved2;	// 288 = 0x120
    NSMutableArray *_reserved3;	// 296 = 0x128
    NSMutableDictionary *_reserved4;	// 304 = 0x130
    double _reserved5;	// 312 = 0x138
    NSMutableArray *_altBundleURLs;	// 320 = 0x140
    NSObject<OS_dispatch_queue> *_assetDataBundleSerialQueue;	// 328 = 0x148
    NSMutableDictionary *_assetDataBundleURLDictionary;	// 336 = 0x150
    NSMutableSet *_updatedDataBundleLanguages;	// 344 = 0x158
    NSURL *_updateBundleURL;	// 352 = 0x160
    NSMutableDictionary *_languageCounts;	// 360 = 0x168
    double _lastLanguageCounts;	// 368 = 0x170
    NSMutableDictionary *_userAdaptationDictionary;	// 376 = 0x178
    NSData *_lastKeyEventArray;	// 384 = 0x180
    unsigned long long *_keyboardHistogram;	// 392 = 0x188
    double _lastKeyboardHistogramRecording;	// 400 = 0x190
    NSMutableArray *_requestedAssets;	// 408 = 0x198
    NSMutableArray *_requestedByCheckerAssets;	// 416 = 0x1a0
    double _lastAssetRequest;	// 424 = 0x1a8
    NSMutableArray *_recordedCorrections;	// 432 = 0x1b0
    NSMutableArray *_recordedTICorrections;	// 440 = 0x1b8
    NSMutableDictionary *_characterLanguageModelDictionary;	// 448 = 0x1c0
    NSMutableDictionary *_transformerLanguageModelDictionary;	// 456 = 0x1c8
    double _probationaryInterval;	// 464 = 0x1d0
    NSMutableArray *_guessRequestTimestamps;	// 472 = 0x1d8
    _Bool _userPrefersUncheckedLatinLanguage;	// 480 = 0x1e0
    _Bool _userPrefersUncheckedCyrillicLanguage;	// 481 = 0x1e1
    _Bool _hasUpdatedDataBundleLanguages;	// 482 = 0x1e2
    _Bool _shouldClearFoundNames;	// 483 = 0x1e3
    _Bool _automaticTextCompletionCollapsed;	// 484 = 0x1e4
    _Bool _automaticTextCompletionEnabled;	// 485 = 0x1e5
    _Bool _foundNamesProhibited;	// 486 = 0x1e6
}

+ (void)resetSharedInstance;	// IMP=0x0000000000001441
+ (id)sharedInstance;	// IMP=0x000000000000141c
- (_Bool)spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 language:(id)arg4;	// IMP=0x0000000000005859
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005847
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005835
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005823
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005811
- (id)spellServer:(id)arg1 stringForInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005599
- (id)spellServer:(id)arg1 suggestWordWithLengthInRange:(struct _NSRange)arg2 language:(id)arg3;	// IMP=0x0000000000005581
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x0000000000005565
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x0000000000005553
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x0000000000005537
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x0000000000005525
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x0000000000005509
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x00000000000054f7
- (id)spellServer:(id)arg1 suggestGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5 errorModel:(id)arg6;	// IMP=0x00000000000054e5
- (id)spellServer:(id)arg1 suggestContextualGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x00000000000054d3
- (id)spellServer:(id)arg1 suggestGuessesForWord:(id)arg2 inLanguage:(id)arg3;	// IMP=0x000000000000547a
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x000000000000545e
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x000000000000544c
- (id)spellServer:(id)arg1 generateCandidatesForSelectedRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7;	// IMP=0x000000000000543a
- (id)spellServer:(id)arg1 checkString:(id)arg2 offset:(unsigned long long)arg3 types:(unsigned long long)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long *)arg7;	// IMP=0x0000000000003bbf
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 languages:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;	// IMP=0x0000000000003a1a
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;	// IMP=0x00000000000038c9
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5;	// IMP=0x0000000000003780
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 language:(id)arg3 details:(id *)arg4;	// IMP=0x0000000000003708
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 range:(struct _NSRange)arg3 language:(id)arg4 orthography:(id)arg5 mutableResults:(id)arg6 offset:(unsigned long long)arg7 details:(id *)arg8;	// IMP=0x0000000000003260
- (_Bool)_checkGrammarInString:(id)arg1 range:(struct _NSRange)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 bufIO:(struct _PR_BUF_IO *)arg6 errorRange:(struct _NSRange *)arg7 details:(id *)arg8;	// IMP=0x0000000000002ec3
- (void)loadLexiconsAndLanguageModelsForLanguage:(id)arg1;	// IMP=0x0000000000002e6f
- (void)releaseAllLexicons;	// IMP=0x0000000000002e5d
- (void)releaseAllLanguageModels;	// IMP=0x0000000000002e4b
- (void)resetAllLanguageModels;	// IMP=0x0000000000002e39
- (void)setUpdateBundleURL:(id)arg1;	// IMP=0x0000000000002e33
- (void)addAlternateDataBundleURL:(id)arg1;	// IMP=0x0000000000002e2d
- (void)releaseDatabaseConnections;	// IMP=0x0000000000002dce
- (void *)databaseConnectionForLanguageObject:(id)arg1;	// IMP=0x0000000000001fce
- (id)databasePathForLanguageObject:(id)arg1;	// IMP=0x0000000000001dfe
- (void)resetDataBundlesForAllLanguages;	// IMP=0x0000000000001d79
- (void)resetDataBundlesForLanguageObject:(id)arg1;	// IMP=0x0000000000001c87
- (id)dataBundlesForLanguageObject:(id)arg1;	// IMP=0x0000000000001652
- (id)dataBundle;	// IMP=0x0000000000001639
- (id)init;	// IMP=0x0000000000001470
- (void)resetTimer;	// IMP=0x000000000000146a
- (void)timeout:(id)arg1;	// IMP=0x0000000000001464
- (_Bool)getTransformerModelConditionalProbabilityForString:(id)arg1 context:(id)arg2 language:(id)arg3 probability:(double *)arg4;	// IMP=0x000000000000ceba
- (_Bool)getCharacterModelConditionalProbabilityForString:(id)arg1 context:(id)arg2 language:(id)arg3 probability:(double *)arg4;	// IMP=0x000000000000ce33
- (_Bool)getConditionalProbabilityForWord:(id)arg1 context:(id)arg2 language:(id)arg3 probability:(double *)arg4;	// IMP=0x000000000000cca4
- (id)assetDataBundleURLsForLanguageObject:(id)arg1;	// IMP=0x000000000000cba9
- (float)dynamicScoreForWord:(id)arg1 languageObject:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x000000000000cb5b
- (float)dynamicScoreForWord:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3;	// IMP=0x000000000000cb12
- (_Bool)_useAlternateLanguageForRange:(struct _NSRange)arg1 ofString:(id)arg2 languageObject:(id)arg3 tagger:(id)arg4 alternateLanguageObject:(id)arg5 alternateTagger:(id)arg6 appIdentifier:(id)arg7;	// IMP=0x000000000000c83d
- (id)_rankedCandidatesForCandidateList:(id)arg1 languageObject:(id)arg2 tagger:(id)arg3 appIdentifier:(id)arg4 parameterBundles:(id)arg5;	// IMP=0x000000000000adb9
- (void)getParameterValue:(double *)arg1 forName:(id)arg2 languageObject:(id)arg3 parameterBundles:(id)arg4 defaultValue:(double)arg5;	// IMP=0x000000000000ac78
- (id)_rankedCandidatesForRange:(struct _NSRange)arg1 candidates:(id)arg2 languageObject:(id)arg3 tagger:(id)arg4 appIdentifier:(id)arg5 allowTransformer:(_Bool)arg6 scoreDictionary:(id)arg7;	// IMP=0x000000000000a445
- (_Bool)_getUnigramProbabilityForString:(id)arg1 languageModel:(id)arg2 probability:(double *)arg3;	// IMP=0x000000000000a3ad
- (_Bool)_addLanguageModelCompletionsForPartialWordRange:(struct _NSRange)arg1 languageObject:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4 tagger:(id)arg5 appIdentifier:(id)arg6 waitForLanguageModel:(_Bool)arg7 allowTransformer:(_Bool)arg8 candidates:(id)arg9 scoreDictionary:(id)arg10 tryTransliteration:(_Bool *)arg11;	// IMP=0x0000000000009475
- (id)languageModelCompletionsForPartialWord:(id)arg1 languageObject:(id)arg2 sender:(id)arg3 appIdentifier:(id)arg4;	// IMP=0x0000000000009349
- (void)_addLanguageModelCompletionsForPrefix:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 capitalized:(_Bool)arg6 candidates:(id)arg7;	// IMP=0x0000000000008e15
- (void)releaseLanguageModels;	// IMP=0x0000000000008dbf
- (void)resetLanguageModels;	// IMP=0x0000000000008d69
- (void)_releaseLanguageModels;	// IMP=0x0000000000008c8d
- (unsigned long long)_resetLanguageModels;	// IMP=0x00000000000088c1
- (id)transformerLanguageModelForLanguageObject:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x00000000000088a4
- (id)characterLanguageModelForLanguageObject:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x0000000000008887
- (id)_NLPLanguageModelWithGranularity:(long long)arg1 forLanguageObject:(id)arg2 waitForResult:(_Bool)arg3;	// IMP=0x000000000000856c
- (id)_loadNLPLanguageModelWithGranularity:(long long)arg1 forLanguageObject:(id)arg2 onQueue:(id)arg3;	// IMP=0x00000000000082cf
- (_Bool)useUnigramProbabilityForLanguageObject:(id)arg1;	// IMP=0x00000000000081b6
- (void)loadWordLanguageModelForLanguageObject:(id)arg1;	// IMP=0x000000000000819c
- (_Bool)useTransformerLanguageModelForLanguageObject:(id)arg1 tagger:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x0000000000008105
- (_Bool)useCharacterLanguageModelForLanguageObject:(id)arg1 tagger:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x0000000000008084
- (_Bool)useWordLanguageModelForLanguageObject:(id)arg1 tagger:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x0000000000007ffd
- (id)wordLanguageModelForLanguageObject:(id)arg1 appIdentifier:(id)arg2 waitForResult:(_Bool)arg3;	// IMP=0x0000000000007fb5
- (id)wordLanguageModelForLanguage:(id)arg1 appIdentifier:(id)arg2 waitForResult:(_Bool)arg3;	// IMP=0x0000000000007bcc
- (id)modelCreationQueue;	// IMP=0x0000000000007b29
- (id)_loadWordLanguageModelForLanguage:(id)arg1 localization:(id)arg2 appIdentifier:(id)arg3 onQueue:(id)arg4;	// IMP=0x00000000000076c7
- (void)_readLanguageModelParametersFromDictionary:(id)arg1;	// IMP=0x000000000000725f
- (void)_readLanguageModelParametersFromDefaults;	// IMP=0x0000000000006f41
- (id)languageModelLocalizationForLanguage:(id)arg1;	// IMP=0x0000000000006f28
- (unsigned long long)_contextLengthForRange:(struct _NSRange)arg1 languageObject:(id)arg2 tagger:(id)arg3 languageModel:(id)arg4 maxContextLength:(unsigned long long)arg5 context:(unsigned int *)arg6 cleanOffset:(unsigned long long *)arg7 cleanContextRange:(struct _NSRange *)arg8 lastTokenRange:(struct _NSRange *)arg9 lastTokenID:(unsigned int *)arg10;	// IMP=0x00000000000068be
- (id)backgroundMaintenanceQueue;	// IMP=0x0000000000006868
- (_Bool)shouldBlockWord:(id)arg1 languageObject:(id)arg2;	// IMP=0x0000000000006745
- (id)_stringForCompletion:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 prefix:(id)arg6 capitalized:(_Bool)arg7;	// IMP=0x00000000000064c5
- (id)_stringForTokenIDs:(const unsigned int *)arg1 tokenCount:(unsigned long long)arg2 entryString:(id)arg3 languageModel:(id)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 sender:(id)arg7 prefix:(id)arg8 capitalized:(_Bool)arg9;	// IMP=0x0000000000005f60
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 terminatorTokenID:(unsigned int)arg4;	// IMP=0x0000000000005f3e
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 createIfAbsent:(_Bool)arg4 terminatorTokenID:(unsigned int)arg5;	// IMP=0x0000000000005d6f
- (id)_standardizedLanguageModelStringForString:(id)arg1;	// IMP=0x0000000000005b1c
- (id)sentenceTerminatorCharacterSet;	// IMP=0x0000000000005abf
- (void)clearCaches;	// IMP=0x000000000000ffb8
- (id)parameterBundleForLanguageObject:(id)arg1;	// IMP=0x000000000000fe94
- (id)sentenceCorrectionsDictionaryForLanguageObject:(id)arg1;	// IMP=0x000000000000fe7d
- (id)phraseCorrectionsDictionaryForLanguageObject:(id)arg1;	// IMP=0x000000000000fe66
- (id)capitalizationDictionaryArrayForLanguageObject:(id)arg1;	// IMP=0x000000000000fce4
- (id)guessesDictionaryForLanguageObject:(id)arg1;	// IMP=0x000000000000fccd
- (id)autocorrectionDictionaryForLanguageObject:(id)arg1;	// IMP=0x000000000000fcb9
- (id)dictionaryForLanguageObject:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x000000000000fb70
- (_Bool)checkNameWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 globalOnly:(_Bool)arg4;	// IMP=0x000000000000f878
- (_Bool)checkWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 index:(unsigned long long)arg4;	// IMP=0x000000000000f755
- (id)localDictionaryArrayForLanguageObject:(id)arg1;	// IMP=0x000000000000f1c7
- (id)globalDictionaryArray;	// IMP=0x000000000000efb2
- (id)taggerForLanguageObject:(id)arg1 string:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000016816
- (id)spellServer:(id)arg1 candidatesForSelectedRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7;	// IMP=0x0000000000026dd5
- (_Bool)noSuggestForCompletion:(id)arg1 languageObject:(id)arg2 appIdentifier:(id)arg3 alreadyCapitalized:(_Bool)arg4;	// IMP=0x0000000000026d85
- (void)personalizeEmojiArray:(id)arg1;	// IMP=0x0000000000026bc8
- (id)spellServer:(id)arg1 suggestWordWithMinimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3 language:(id)arg4;	// IMP=0x000000000002637f
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x0000000000025eb4
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x0000000000025659
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x000000000002537c
- (id)_correctionResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 tagger:(id)arg5 appIdentifier:(id)arg6 dictionary:(id)arg7 languages:(id)arg8 connection:(struct _PR_DB_IO *)arg9 flags:(unsigned long long)arg10 keyEventArray:(id)arg11 selectedRangeValue:(id)arg12 parameterBundles:(id)arg13 previousLetter:(unsigned short)arg14 nextLetter:(unsigned short)arg15 extraMisspellingCount:(unsigned long long)arg16 extraCorrectionCount:(unsigned long long *)arg17;	// IMP=0x000000000003373b
- (id)_correctionResultForWord:(id)arg1 replacementRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 languageObject:(id)arg5 capitalize:(_Bool)arg6 isCapitalized:(_Bool)arg7 isSecondCapitalized:(_Bool)arg8 hasCurlyApostrophe:(_Bool)arg9 capitalizationLocale:(id)arg10 proposedCorrection:(id)arg11;	// IMP=0x0000000000032f57
- (_Bool)_permitCorrection:(id)arg1 languageObject:(id)arg2 flags:(unsigned long long)arg3 isCapitalized:(_Bool)arg4 typologyCorrection:(id)arg5;	// IMP=0x0000000000032d3f
- (id)_spaceInsertionCorrectionForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 flags:(unsigned long long)arg6 isCapitalized:(_Bool)arg7 typologyCorrection:(id)arg8;	// IMP=0x0000000000032256
- (id)_connectionCorrectionForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 flags:(unsigned long long)arg6 isCapitalized:(_Bool)arg7 accentCorrectionOnly:(_Bool)arg8 isAbbreviation:(_Bool *)arg9 trySpaceInsertion:(_Bool *)arg10 hasAccentCorrections:(_Bool *)arg11 candidateList:(id)arg12 typologyCorrection:(id)arg13;	// IMP=0x0000000000031424
- (id)_umlautCorrectionForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 typologyCorrection:(id)arg6;	// IMP=0x0000000000030f58
- (_Bool)_prohibitCorrectionBasedOnCountsForString:(id)arg1 lowercaseString:(id)arg2 appIdentifier:(id)arg3 languageObject:(id)arg4 typologyCorrection:(id)arg5;	// IMP=0x0000000000030d22
- (id)_initialCorrectionForString:(id)arg1 lowercaseString:(id)arg2 isFirstSecondCapitalized:(_Bool)arg3 dictionary:(id)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6;	// IMP=0x0000000000030aee
- (_Bool)_acceptWithoutAccentForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 languageObject:(id)arg4;	// IMP=0x00000000000308f7
- (id)_accentCorrectionResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 languageObject:(id)arg5 onlyAtInsertionPoint:(_Bool)arg6 capitalize:(_Bool)arg7 keyEventArray:(id)arg8 selectedRangeValue:(id)arg9;	// IMP=0x00000000000300b1
- (_Bool)wordIsAlreadyAccented:(id)arg1;	// IMP=0x000000000002ff78
- (id)_phraseCapitalizationResultForString:(id)arg1 range:(struct _NSRange)arg2 currentWordRange:(struct _NSRange)arg3 inString:(id)arg4 offset:(unsigned long long)arg5 languageObject:(id)arg6 onlyAtInsertionPoint:(_Bool)arg7 keyEventArray:(id)arg8 selectedRangeValue:(id)arg9;	// IMP=0x000000000002fc69
- (id)_capitalizationResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 languageObject:(id)arg5 onlyAtInsertionPoint:(_Bool)arg6 keyEventArray:(id)arg7 selectedRangeValue:(id)arg8;	// IMP=0x000000000002fbd6
- (_Bool)findMatchingRangesForRange:(struct _NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 selectedRangeValue:(id)arg4 matchingStringRange:(struct _NSRange *)arg5 correctableStringRange:(struct _NSRange *)arg6 matchingKeyEventRange:(struct _NSRange *)arg7 firstMisspelledKeyEventIndex:(unsigned long long *)arg8 lastMisspelledKeyEventIndex:(unsigned long long *)arg9 previousBackspaceCount:(unsigned long long *)arg10;	// IMP=0x000000000002f959
- (_Bool)_findMatchingRangesForRange:(struct _NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 endingAtIndex:(unsigned long long)arg4 matchingStringRange:(struct _NSRange *)arg5 correctableStringRange:(struct _NSRange *)arg6 matchingKeyEventRange:(struct _NSRange *)arg7 firstMisspelledKeyEventIndex:(unsigned long long *)arg8 lastMisspelledKeyEventIndex:(unsigned long long *)arg9 previousBackspaceCount:(unsigned long long *)arg10;	// IMP=0x000000000002f349
- (void)_addGuessesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 minAutocorrectionLength:(unsigned long long)arg6 previousLetter:(unsigned short)arg7 nextLetter:(unsigned short)arg8 basicOnly:(_Bool)arg9 toGuesses:(id)arg10;	// IMP=0x000000000002c07e
- (char *)_validatedGuessWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkUser:(_Bool)arg6 additionalBuffer:(char *)arg7;	// IMP=0x000000000002bf0e
- (id)vietnameseModificationForWord:(id)arg1;	// IMP=0x000000000002b9de
- (void)enumerateCorrectionEntriesForWord:(id)arg1 maxCorrections:(unsigned long long)arg2 inLexiconForLanguageObject:(id)arg3 withBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000005f9ec
- (void)enumerateEntriesForWord:(id)arg1 inLexiconForLanguageObject:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000005f855
- (id)phraseMatching:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005f812
- (_Bool)getMetaFlagsForWord:(id)arg1 inLexiconForLanguageObject:(id)arg2 metaFlags:(unsigned int *)arg3 otherMetaFlags:(unsigned int *)arg4;	// IMP=0x000000000005f7bb
- (void)enumerateCorrectionEntriesForWord:(id)arg1 maxCorrections:(unsigned long long)arg2 inLexiconForLanguage:(id)arg3 withBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000005f61f
- (void)enumerateEntriesForWord:(id)arg1 inLexiconForLanguage:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000005f488
- (id)phraseMatching:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005f23a
- (_Bool)getMetaFlagsForWord:(id)arg1 inLexiconForLanguage:(id)arg2 metaFlags:(unsigned int *)arg3 otherMetaFlags:(unsigned int *)arg4;	// IMP=0x000000000005eb0a
- (_Bool)validateWord:(id)arg1 inLexicon:(id)arg2;	// IMP=0x000000000005eaae
- (_Bool)validateUntilLearnedWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005ea87
- (_Bool)validateNoCapAbbreviation:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005ea60
- (_Bool)validateVariantWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005ea3f
- (_Bool)validateAdditionalWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005ea1e
- (_Bool)validateWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005e9fd
- (_Bool)validateWord:(id)arg1 inLexiconsForLanguageObject:(id)arg2 requiredMetaFlags:(unsigned int)arg3 alternativeRequiredMetaFlags:(unsigned int)arg4 prohibitedMetaFlags:(unsigned int)arg5 caseInsensitive:(_Bool)arg6;	// IMP=0x000000000005e96e
- (_Bool)validateUntilLearnedWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005e910
- (_Bool)validateNoCapAbbreviation:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005e8b5
- (_Bool)validateVariantWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005e85a
- (_Bool)validateAdditionalWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005e7ff
- (_Bool)validateWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005e7a4
- (_Bool)validateWord:(id)arg1 inLexicons:(id)arg2 forLanguage:(id)arg3 requiredMetaFlags:(unsigned int)arg4 alternativeRequiredMetaFlags:(unsigned int)arg5 prohibitedMetaFlags:(unsigned int)arg6 caseInsensitive:(_Bool)arg7;	// IMP=0x000000000005e304
- (void)updateAllLexicons;	// IMP=0x000000000005e28b
- (void)updateLexiconsForLanguageObjectIfNecessary:(id)arg1;	// IMP=0x000000000005e24e
- (void)updateLexiconsForLanguageObject:(id)arg1;	// IMP=0x000000000005e21a
- (void)updateLexiconsForLanguageIfNecessary:(id)arg1;	// IMP=0x000000000005e19f
- (void)updateLexiconsForLanguage:(id)arg1;	// IMP=0x000000000005e01e
- (id)_phraseLexiconsForLanguage:(id)arg1;	// IMP=0x000000000005e007
- (id)_phraseLexiconsForLanguage:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x000000000005dd1b
- (id)_loadPhraseLexiconsForLanguage:(id)arg1 localization:(id)arg2 onQueue:(id)arg3;	// IMP=0x000000000005da39
- (unsigned long long)loadedLexiconsCountForLanguageObject:(id)arg1;	// IMP=0x000000000005d9f6
- (id)lexiconForLanguageObject:(id)arg1;	// IMP=0x000000000005d9a1
- (id)_lexiconsForLanguageObject:(id)arg1;	// IMP=0x000000000005d968
- (id)lexiconForLanguage:(id)arg1;	// IMP=0x000000000005d92a
- (id)_lexiconsForLanguage:(id)arg1;	// IMP=0x000000000005d913
- (id)_lexiconsForLanguage:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x000000000005d627
- (id)_loadLexiconsForLanguage:(id)arg1 localization:(id)arg2 onQueue:(id)arg3;	// IMP=0x000000000005d03d
- (id)backgroundLoadingQueue;	// IMP=0x000000000005cfe7
- (id)_phraseLexiconPathForLanguage:(id)arg1;	// IMP=0x000000000005cfa8
- (id)_lexiconPathForLanguageObject:(id)arg1 type:(id)arg2;	// IMP=0x000000000005cf23
- (id)_lexiconPathForLocalization:(id)arg1 type:(id)arg2;	// IMP=0x000000000005cd42
- (void)enumerateAssetDataItemsForLocale:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000005ccc2
- (_Bool)testTurkishSuffixationPattern:(id)arg1;	// IMP=0x000000000006ec1f
- (unsigned long long)numberOfTurkishSuffixPointsInBuffer:(char *)arg1 length:(unsigned long long)arg2 maxSuffixPoints:(unsigned long long)arg3 suffixPoints:(CDStruct_b54abf8e *)arg4;	// IMP=0x000000000006ea75
- (_Bool)_spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 languageObject:(id)arg4;	// IMP=0x0000000000098919
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 range:(struct _NSRange)arg3 languages:(id)arg4 topLanguages:(id)arg5 orthography:(id)arg6 checkOrthography:(_Bool)arg7 mutableResults:(id)arg8 offset:(unsigned long long)arg9 autocorrect:(_Bool)arg10 onlyAtInsertionPoint:(_Bool)arg11 initialCapitalize:(_Bool)arg12 autocapitalize:(_Bool)arg13 keyEventArray:(id)arg14 appIdentifier:(id)arg15 selectedRangeValue:(id)arg16 parameterBundles:(id)arg17 wordCount:(long long *)arg18 countOnly:(_Bool)arg19 correction:(id *)arg20;	// IMP=0x0000000000094d4e
- (id)_orthographyByModifyingOrthography:(id)arg1 withLatinLanguage:(id)arg2;	// IMP=0x0000000000094caa
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkNames:(_Bool)arg8 checkHyphens:(_Bool)arg9 checkIntercaps:(_Bool)arg10 checkOptions:(_Bool)arg11 depth:(unsigned long long)arg12;	// IMP=0x0000000000094c45
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkNames:(_Bool)arg9 checkHyphens:(_Bool)arg10 checkIntercaps:(_Bool)arg11 checkOptions:(_Bool)arg12 depth:(unsigned long long)arg13;	// IMP=0x0000000000094bd3
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 depth:(unsigned long long)arg14;	// IMP=0x0000000000094b53
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 forCorrection:(_Bool)arg14 depth:(unsigned long long)arg15;	// IMP=0x000000000009158a
- (id)stringByReducingArabicAlefVariantsInString:(id)arg1;	// IMP=0x000000000009137d
- (id)stringByRemovingArabicDiacriticsFromString:(id)arg1;	// IMP=0x0000000000091254
- (_Bool)checkSpecialPrefixesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000091020
- (_Bool)validateAbbreviationOrNumberWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5;	// IMP=0x0000000000090ba0
- (_Bool)validateWordPrefixBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x0000000000090a1c
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x00000000000908ed
- (_Bool)checkNoCapAbbreviationWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3;	// IMP=0x0000000000090779
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3;	// IMP=0x0000000000090764
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 alreadyCapitalized:(_Bool)arg4;	// IMP=0x000000000009073e
- (unsigned long long)acceptabilityOfWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 forPrediction:(_Bool)arg4 alreadyCapitalized:(_Bool)arg5;	// IMP=0x0000000000090720
- (unsigned long long)acceptabilityOfWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 forPrediction:(_Bool)arg4 alreadyCapitalized:(_Bool)arg5 depth:(unsigned long long)arg6;	// IMP=0x00000000000901d0
- (_Bool)_checkEnglishGrammarInString:(id)arg1 range:(struct _NSRange)arg2 indexIntoBuffer:(unsigned long long)arg3 bufferLength:(unsigned long long)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 sender:(id)arg7 bufIO:(struct _PR_BUF_IO *)arg8 retval:(int *)arg9 errorRange:(struct _NSRange *)arg10 details:(id *)arg11;	// IMP=0x00000000000a2f19
- (id)_detailWithRange:(struct _NSRange)arg1 description:(id)arg2 corrections:(id)arg3;	// IMP=0x00000000000a2e91
- (id)_modifiedGrammarDescriptionForDescription:(id)arg1;	// IMP=0x00000000000a2c6c
- (id)contextAlternativeAnnotatedStringsForZhuyinInputString:(id)arg1;	// IMP=0x00000000000a92dd
- (void)_addContextAlternativesForZhuyinInputString:(id)arg1 modifications:(id)arg2 afterIndex:(unsigned long long)arg3 delta:(long long)arg4 toArray:(id)arg5;	// IMP=0x00000000000a8e5f
- (id)spellServer:(id)arg1 suggestGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5 errorModel:(id)arg6;	// IMP=0x00000000000aed64
- (id)spellServer:(id)arg1 suggestContextualGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x00000000000aebc7
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x00000000000aeacc
- (id)_spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 languageObject:(id)arg4 options:(id)arg5;	// IMP=0x00000000000aea25
- (id)_spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 languageObject:(id)arg4 options:(id)arg5 tagger:(id)arg6 errorModel:(id)arg7 guessesDictionaries:(id)arg8;	// IMP=0x00000000000acfb4
- (void)addLexiconGuessesForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 minCorrectionLength:(unsigned long long)arg5 minExtendedCorrectionLength:(unsigned long long)arg6 isCapitalized:(_Bool)arg7 stopAfterFreeInsertions:(_Bool)arg8 toGuesses:(id)arg9;	// IMP=0x00000000000acb36
- (void)_addSpaceInsertionGuessesForWord:(id)arg1 sender:(id)arg2 buffer:(char *)arg3 length:(unsigned long long)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 isCapitalized:(_Bool)arg7 checkUser:(_Bool)arg8 oneLetterWords:(const char *)arg9 twoLetterWords:(const char *)arg10 candidateList:(id)arg11;	// IMP=0x00000000000ac37a
- (void)_addAdditionalGuessesForWord:(id)arg1 sender:(id)arg2 buffer:(char *)arg3 length:(unsigned long long)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 accents:(const char *)arg7 isCapitalized:(_Bool)arg8 isAllCaps:(_Bool)arg9 isAllAlpha:(_Bool)arg10 hasLigature:(_Bool)arg11 suggestPossessive:(_Bool)arg12 checkUser:(_Bool)arg13 checkHyphens:(_Bool)arg14 candidateList:(id)arg15;	// IMP=0x00000000000aa4a8
- (void)_addConnectionGuessesForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 candidateList:(id)arg6;	// IMP=0x00000000000a9d65
- (void)_addTwoLetterWordGuessesForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 isCapitalized:(_Bool)arg5 isAllCaps:(_Bool)arg6 twoLetterWords:(const char *)arg7 candidateList:(id)arg8;	// IMP=0x00000000000a992b
- (id)spellServer:(id)arg1 finalModificationsForPinyinInputString:(id)arg2;	// IMP=0x00000000000b96c6
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;	// IMP=0x00000000000b96ac
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2;	// IMP=0x00000000000b968f
- (id)spellServer:(id)arg1 _retainedFinalModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;	// IMP=0x00000000000b94eb
- (id)spellServer:(id)arg1 _retainedModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;	// IMP=0x00000000000b9177
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2;	// IMP=0x00000000000b915d
- (id)spellServer:(id)arg1 _retainedCorrectionsForPinyinInputString:(id)arg2;	// IMP=0x00000000000b8dbe
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b8da4
- (id)spellServer:(id)arg1 _retainedPrefixesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b81fc
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b81dc
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b81bf
- (id)spellServer:(id)arg1 _retainedAlternativesForPinyinInputString:(id)arg2 extended:(_Bool)arg3;	// IMP=0x00000000000b7b3c
- (id)_recursiveRetainedAlternativesForPinyinInputString:(id)arg1 depth:(unsigned long long)arg2;	// IMP=0x00000000000b7654
- (id)_retainedAlternativesByCombiningAlternatives:(id)arg1 withAlternatives:(id)arg2 andAddingAlternatives:(id)arg3;	// IMP=0x00000000000b7199
- (id)_pinyinStringByCombiningPinyinString:(id)arg1 withPinyinString:(id)arg2;	// IMP=0x00000000000b6b0b
- (unsigned long long)_getSplitIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 forPinyinInputString:(id)arg3;	// IMP=0x00000000000b68ec
- (id)_primitiveRetainedAlternativesForPinyinInputString:(id)arg1;	// IMP=0x00000000000b6153
- (void)addModifiedPartialPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 prePrevPrevIndex:(unsigned long long)arg6 startingModificationsAt:(unsigned long long)arg7 inBuffer:(char *)arg8 length:(unsigned long long)arg9 initialSyllableCount:(unsigned long long)arg10 initialScore:(unsigned long long)arg11 prevScore:(unsigned long long)arg12 prevPrevScore:(unsigned long long)arg13 lastSyllableScore:(unsigned long long)arg14;	// IMP=0x00000000000b5934
- (void)addModifiedPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 startingModificationsAt:(unsigned long long)arg6 inBuffer:(char *)arg7 length:(unsigned long long)arg8 initialSyllableCount:(unsigned long long)arg9 initialScore:(unsigned long long)arg10 prevScore:(unsigned long long)arg11 prevPrevScore:(unsigned long long)arg12 lastSyllableScore:(unsigned long long)arg13 couldBeAbbreviatedPinyin:(_Bool)arg14;	// IMP=0x00000000000b25b5
- (void)addSpecialModifiedPinyinToArray:(id)arg1 inBuffer:(char *)arg2 length:(unsigned long long)arg3 atEnd:(_Bool)arg4;	// IMP=0x00000000000b185a
- (id)englishStringFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x00000000000b1809
- (id)englishStringsFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x00000000000b0e65
- (id)contextAlternativeAnnotatedStringsForPinyinInputString:(id)arg1;	// IMP=0x00000000000bfe10
- (void)_addContextAlternativesForPinyinInputString:(id)arg1 modifications:(id)arg2 afterIndex:(unsigned long long)arg3 delta:(long long)arg4 toArray:(id)arg5;	// IMP=0x00000000000bf86f
- (_Bool)inputStringIsFullOrAbbreviatedPinyin:(id)arg1;	// IMP=0x00000000000bf7ad
- (_Bool)inputStringIsPinyin:(id)arg1 allowPartialLastSyllable:(_Bool)arg2;	// IMP=0x00000000000bf664
- (id)spellServer:(id)arg1 suggestGuessesForKoreanWordRange:(struct _NSRange)arg2 inString:(id)arg3 options:(id)arg4;	// IMP=0x00000000000c0976
- (id)_correctionResultForKoreanString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 tagger:(id)arg5 appIdentifier:(id)arg6 dictionary:(id)arg7 keyEventArray:(id)arg8;	// IMP=0x00000000000c096e
- (void)addGuessesForKoreanWord:(id)arg1 includeAdditionalGuesses:(_Bool)arg2 toGuesses:(id)arg3;	// IMP=0x00000000000c057f
- (id)externalStringForKoreanInternalString:(id)arg1;	// IMP=0x00000000000c04e4
- (id)internalStringForKoreanExternalString:(id)arg1;	// IMP=0x00000000000c0448

@end

