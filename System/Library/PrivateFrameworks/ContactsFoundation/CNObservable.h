//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ContactsFoundation/CNObservable-Protocol.h>

@class NSString;

@interface CNObservable : NSObject <CNObservable>
{
    NSString *_pipelineDescription;	// 8 = 0x8
}

+ (id)progressiveForkJoin:(id)arg1 scheduler:(id)arg2;	// IMP=0x000000000002b469
+ (id)merge:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002b24c
+ (id)merge:(id)arg1;	// IMP=0x000000000002b1bf
+ (id)forkJoin:(id)arg1 scheduler:(id)arg2;	// IMP=0x000000000002b046
+ (id)concatenate:(id)arg1;	// IMP=0x000000000002add0
+ (id)combineLatest:(id)arg1 resultScheduler:(id)arg2 schedulerProvider:(id)arg3;	// IMP=0x000000000002a98e
+ (id)combineLatest:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002a977
+ (id)combineLatest:(id)arg1;	// IMP=0x000000000002a8ea
+ (id)amb:(id)arg1;	// IMP=0x000000000002a89d
+ (id)timerWithDelay:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002a69f
+ (id)timerWithDelay:(double)arg1;	// IMP=0x000000000002a62f
+ (id)emptyObservable;	// IMP=0x000000000002a5da
+ (id)neverObservable;	// IMP=0x000000000002a585
+ (id)observableWithTimeInterval:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002a394
+ (id)observableWithError:(id)arg1;	// IMP=0x000000000002a1c7
+ (id)observableWithResults:(id)arg1 interval:(double)arg2 scheduler:(id)arg3;	// IMP=0x0000000000029e79
+ (id)observableWithResults:(id)arg1 scheduler:(id)arg2;	// IMP=0x0000000000029c03
+ (id)observableWithResults:(id)arg1;	// IMP=0x0000000000029b76
+ (id)observableWithRange:(struct _NSRange)arg1 interval:(double)arg2 scheduler:(id)arg3;	// IMP=0x0000000000029846
+ (id)observableWithRange:(struct _NSRange)arg1 scheduler:(id)arg2;	// IMP=0x00000000000295cd
+ (id)observableWithRange:(struct _NSRange)arg1;	// IMP=0x0000000000029553
+ (id)observableWithFutures:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x00000000000293af
+ (id)observableWithFutures:(id)arg1;	// IMP=0x0000000000029322
+ (id)observableWithFuture:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000028f4d
+ (id)observableWithFuture:(id)arg1;	// IMP=0x0000000000028ec0
+ (id)observableWithResult:(id)arg1;	// IMP=0x0000000000028d16
+ (id)observableWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000028c72
+ (id)os_log_protocol;	// IMP=0x0000000000028c16
+ (id)os_log;	// IMP=0x0000000000028bba
+ (id)observableWithInitialState:(id)arg1 condition:(CDUnknownBlockType)arg2 nextState:(CDUnknownBlockType)arg3 resultSelector:(CDUnknownBlockType)arg4 delay:(CDUnknownBlockType)arg5 scheduler:(id)arg6;	// IMP=0x00000000000120f1
+ (id)observableWithInitialState:(id)arg1 condition:(CDUnknownBlockType)arg2 nextState:(CDUnknownBlockType)arg3 resultSelector:(CDUnknownBlockType)arg4 scheduler:(id)arg5;	// IMP=0x00000000000120d5
+ (id)observableWithInitialState:(id)arg1 condition:(CDUnknownBlockType)arg2 nextState:(CDUnknownBlockType)arg3 resultSelector:(CDUnknownBlockType)arg4;	// IMP=0x0000000000011feb
+ (void)sendNextTimestampFromQueue:(id)arg1 toObserver:(id)arg2 untilCanceled:(id)arg3 scheduler:(id)arg4;	// IMP=0x00000000000467b3
+ (id)observableWithRelativeTimestamps:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000046353
+ (id)observableWithAbsoluteTimestamps:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000045fe3
+ (id)observableWithEmailAddressesInString:(id)arg1;	// IMP=0x0000000000048ae8
+ (id)binderTypeForResultType:(unsigned long long)arg1;	// IMP=0x0000000000048a6d
+ (id)observableWithScannerResultsOfType:(unsigned long long)arg1 inString:(id)arg2;	// IMP=0x0000000000048920
+ (id)observableWithScannerResultsInString:(id)arg1;	// IMP=0x00000000000485d7
+ (id)asyncScannerResultsInString:(id)arg1;	// IMP=0x000000000004840d
+ (id)scannerResultsInString:(id)arg1;	// IMP=0x0000000000048354
+ (id)observableOnNotificationCenter:(id)arg1 withName:(id)arg2 object:(id)arg3;	// IMP=0x000000000004a455
+ (id)observableOnDefaultNotificationCenterWithName:(id)arg1 object:(id)arg2;	// IMP=0x000000000004a3b2
+ (id)observableOnDarwinNotificationCenterWithName:(id)arg1;	// IMP=0x00000000000561ef
+ (id)observableForKeyPath:(id)arg1 ofObject:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x00000000000580a2
- (void).cxx_destruct;	// IMP=0x0000000000034c00
- (id)subscribe:(id)arg1;	// IMP=0x0000000000034bb3
- (id)using:(CDUnknownBlockType)arg1;	// IMP=0x00000000000349fb
- (id)toArray;	// IMP=0x0000000000034714
- (id)timestampWithScheduler:(id)arg1;	// IMP=0x00000000000345cb
- (id)timeoutAfterDelay:(double)arg1 alternateObservable:(id)arg2 schedule:(id)arg3;	// IMP=0x0000000000033f1f
- (id)timeIntervalWithScheduler:(id)arg1;	// IMP=0x0000000000033b68
- (id)timeInterval;	// IMP=0x0000000000033b02
- (id)throttleFirstAndLast:(double)arg1 schedulerProvider:(id)arg2;	// IMP=0x00000000000339be
- (id)throttleFirst:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000003354d
- (id)throttle:(double)arg1 options:(unsigned long long)arg2 schedulerProvider:(id)arg3;	// IMP=0x00000000000333c0
- (id)throttle:(double)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000003327c
- (id)takeUntil:(id)arg1;	// IMP=0x0000000000033220
- (id)takeLast:(unsigned long long)arg1;	// IMP=0x0000000000032e30
- (id)take:(unsigned long long)arg1;	// IMP=0x000000000003293b
- (id)switchMap:(CDUnknownBlockType)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000032876
- (id)switchMap:(CDUnknownBlockType)arg1;	// IMP=0x00000000000327e9
- (id)switchWithSchedulerProvider:(id)arg1;	// IMP=0x0000000000030f9f
- (id)switch;	// IMP=0x0000000000030f39
- (id)startWith:(id)arg1 scheduler:(id)arg2;	// IMP=0x0000000000030daf
- (id)startWith:(id)arg1;	// IMP=0x0000000000030d22
- (id)skipUntil:(id)arg1;	// IMP=0x0000000000030cc6
- (id)skipLast:(unsigned long long)arg1;	// IMP=0x000000000003092f
- (id)skip:(unsigned long long)arg1;	// IMP=0x00000000000305d4
- (id)scan:(CDUnknownBlockType)arg1 seed:(id)arg2;	// IMP=0x00000000000300b5
- (id)scan:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030040
- (id)sampleWithObservable:(id)arg1;	// IMP=0x000000000002fed8
- (id)sample:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002fd6a
- (id)sample:(double)arg1;	// IMP=0x000000000002fcfa
- (id)publish;	// IMP=0x000000000002fc7d
- (id)onErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002f851
- (id)onError:(id)arg1;	// IMP=0x000000000002f6c2
- (id)onEmpty:(id)arg1;	// IMP=0x000000000002f579
- (id)materialize;	// IMP=0x000000000002f242
- (id)map:(CDUnknownBlockType)arg1;	// IMP=0x000000000002ef58
- (id)ignoreElements;	// IMP=0x000000000002ed5e
- (id)flatMap:(CDUnknownBlockType)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002ecdb
- (id)flatMap:(CDUnknownBlockType)arg1;	// IMP=0x000000000002ec4e
- (id)filter:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e96c
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e5b4
- (id)doOnTerminate:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e28a
- (id)doOnSubscribe:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e13c
- (id)doOnNext:(CDUnknownBlockType)arg1;	// IMP=0x000000000002de50
- (id)doOnError:(CDUnknownBlockType)arg1;	// IMP=0x000000000002db59
- (id)doOnCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d88d
- (id)doOnCancel:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d56e
- (id)distinctUntilChanged;	// IMP=0x000000000002d4f1
- (id)distinct;	// IMP=0x000000000002d474
- (id)dematerialize;	// IMP=0x000000000002d0ca
- (id)delaySubscription:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002cd7a
- (id)delay:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002c665
- (id)concatMap:(CDUnknownBlockType)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002c5e2
- (id)concatMap:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c555
- (id)bufferWithInterval:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002c3e4
- (id)bufferWithInterval:(double)arg1;	// IMP=0x000000000002c374
- (id)buffer:(unsigned long long)arg1 interval:(double)arg2 scheduler:(id)arg3;	// IMP=0x000000000002c1c0
- (id)buffer:(unsigned long long)arg1 interval:(double)arg2;	// IMP=0x000000000002c143
- (id)buffer:(unsigned long long)arg1;	// IMP=0x000000000002c024
- (id)any:(CDUnknownBlockType)arg1;	// IMP=0x000000000002bf3e
- (id)ambWith:(id)arg1;	// IMP=0x000000000002be7a
- (id)allObjects:(id *)arg1;	// IMP=0x000000000002bd8f
- (id)observeOn:(id)arg1;	// IMP=0x000000000002b683
- (id)subscribeOn:(id)arg1;	// IMP=0x000000000002b5e2
- (id)pipelineDescriptionWithOperation:(CDUnknownBlockType)arg1 onObservable:(id)arg2;	// IMP=0x0000000000034c27
- (id)pipelineDescription:(CDUnknownBlockType)arg1;	// IMP=0x0000000000034c1e
@property(readonly, nonatomic) NSString *debugPipelineDescription;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

