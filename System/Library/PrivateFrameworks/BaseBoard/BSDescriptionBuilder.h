//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <BaseBoard/BSDescriptionFormatting-Protocol.h>

@class NSMutableString, NSString;
@protocol NSObject;

@interface BSDescriptionBuilder : NSObject <BSDescriptionFormatting>
{
    id <NSObject> _object;	// 8 = 0x8
    NSMutableString *_proem;	// 16 = 0x10
    NSMutableString *_description;	// 24 = 0x18
    _Bool _useDebugDescription;	// 32 = 0x20
    int _activeComponent;	// 36 = 0x24
    NSString *_activePrefix;	// 40 = 0x28
}

+ (id)succinctDescriptionForObject:(id)arg1;	// IMP=0x0000000000004e14
+ (id)descriptionForObject:(id)arg1 withObjectsAndNames:(id)arg2;	// IMP=0x0000000000004b81
+ (id)descriptionForObject:(id)arg1;	// IMP=0x0000000000004b6b
+ (id)builderWithObject:(id)arg1;	// IMP=0x0000000000004b3c
+ (id)nameObjectSeparator;	// IMP=0x0000000000004b2f
+ (id)componentSeparator;	// IMP=0x0000000000004b22
- (void).cxx_destruct;	// IMP=0x0000000000007ad4
@property(nonatomic) _Bool useDebugDescription; // @synthesize useDebugDescription=_useDebugDescription;
@property(retain, nonatomic) NSString *activeMultilinePrefix; // @synthesize activeMultilinePrefix=_activePrefix;
@property(nonatomic) int activeComponent; // @synthesize activeComponent=_activeComponent;
- (id)build;	// IMP=0x00000000000079a5
- (id)appendFormat:(id)arg1;	// IMP=0x0000000000007885
- (id)appendString:(id)arg1;	// IMP=0x0000000000007852
- (void)appendDictionarySection:(id)arg1 withName:(id)arg2 multilinePrefix:(id)arg3 skipIfEmpty:(_Bool)arg4;	// IMP=0x00000000000074d4
- (void)appendDictionarySection:(id)arg1 withName:(id)arg2 multilinePrefix:(id)arg3 skipIfEmpty:(_Bool)arg4 objectTransformer:(CDUnknownBlockType)arg5;	// IMP=0x000000000000725b
- (void)appendDictionarySection:(id)arg1 withName:(id)arg2 skipIfEmpty:(_Bool)arg3;	// IMP=0x00000000000071de
- (void)appendArraySection:(id)arg1 withName:(id)arg2 multilinePrefix:(id)arg3 skipIfEmpty:(_Bool)arg4;	// IMP=0x0000000000006f9f
- (void)appendArraySection:(id)arg1 withName:(id)arg2 multilinePrefix:(id)arg3 skipIfEmpty:(_Bool)arg4 objectTransformer:(CDUnknownBlockType)arg5;	// IMP=0x0000000000006d3d
- (void)appendArraySection:(id)arg1 withName:(id)arg2 skipIfEmpty:(_Bool)arg3 objectTransformer:(CDUnknownBlockType)arg4;	// IMP=0x0000000000006cb5
- (void)appendArraySection:(id)arg1 withName:(id)arg2 skipIfEmpty:(_Bool)arg3;	// IMP=0x0000000000006c38
- (void)appendBodySectionWithName:(id)arg1 multilinePrefix:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x0000000000006a63
- (id)modifyBody:(CDUnknownBlockType)arg1;	// IMP=0x0000000000006a37
- (id)modifyProem:(CDUnknownBlockType)arg1;	// IMP=0x0000000000006a0b
- (id)appendKeys:(id)arg1;	// IMP=0x0000000000006853
- (id)appendKey:(id)arg1;	// IMP=0x0000000000006704
- (id)appendObjectsAndNames:(id)arg1;	// IMP=0x0000000000006655
- (id)appendVersionedPID:(long long)arg1 withName:(id)arg2;	// IMP=0x00000000000065ee
- (id)appendClass:(Class)arg1 withName:(id)arg2;	// IMP=0x000000000000657b
- (id)appendRect:(struct CGRect)arg1 withName:(id)arg2;	// IMP=0x00000000000064f7
- (id)appendSize:(struct CGSize)arg1 withName:(id)arg2;	// IMP=0x0000000000006464
- (id)appendPoint:(struct CGPoint)arg1 withName:(id)arg2;	// IMP=0x00000000000063d1
- (id)appendQueue:(id)arg1 withName:(id)arg2;	// IMP=0x00000000000063a2
- (id)appendCString:(const char *)arg1 withName:(id)arg2;	// IMP=0x0000000000006324
- (id)appendSelector:(SEL)arg1 withName:(id)arg2;	// IMP=0x00000000000062b8
- (id)appendPointer:(void *)arg1 withName:(id)arg2;	// IMP=0x0000000000006239
- (id)appendTimeInterval:(double)arg1 withName:(id)arg2 decomposeUnits:(_Bool)arg3;	// IMP=0x0000000000005f93
- (id)appendDouble:(double)arg1 withName:(id)arg2 decimalPrecision:(unsigned long long)arg3;	// IMP=0x0000000000005ea7
- (id)appendFloat:(double)arg1 withName:(id)arg2 decimalPrecision:(unsigned long long)arg3;	// IMP=0x0000000000005e95
- (id)appendFloat:(double)arg1 withName:(id)arg2;	// IMP=0x0000000000005e79
- (id)appendUInt64:(unsigned long long)arg1 withName:(id)arg2 format:(long long)arg3;	// IMP=0x0000000000005de7
- (id)appendUInt64:(unsigned long long)arg1 withName:(id)arg2;	// IMP=0x0000000000005d69
- (id)appendUnsignedInt:(unsigned int)arg1 withName:(id)arg2;	// IMP=0x0000000000005ced
- (id)appendInt64:(long long)arg1 withName:(id)arg2;	// IMP=0x0000000000005c6f
- (id)appendInt:(int)arg1 withName:(id)arg2;	// IMP=0x0000000000005bf3
- (id)appendUnsignedInteger:(unsigned long long)arg1 withName:(id)arg2 format:(long long)arg3;	// IMP=0x0000000000005b61
- (id)appendUnsignedInteger:(unsigned long long)arg1 withName:(id)arg2;	// IMP=0x0000000000005ae3
- (id)appendInteger:(long long)arg1 withName:(id)arg2;	// IMP=0x0000000000005a65
- (id)appendFlag:(long long)arg1 withName:(id)arg2 skipIfNotSet:(_Bool)arg3;	// IMP=0x00000000000059e5
- (id)appendFlag:(long long)arg1 withName:(id)arg2;	// IMP=0x00000000000059d0
- (id)appendBool:(_Bool)arg1 withName:(id)arg2 ifEqualTo:(_Bool)arg3;	// IMP=0x0000000000005998
- (id)appendBool:(_Bool)arg1 withName:(id)arg2;	// IMP=0x000000000000592d
- (void)appendString:(id)arg1 withName:(id)arg2 skipIfEmpty:(_Bool)arg3;	// IMP=0x0000000000005784
- (void)appendString:(id)arg1 withName:(id)arg2;	// IMP=0x000000000000576f
- (void)appendProem:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x0000000000005751
- (void)appendCustomFormatWithName:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000056d1
- (id)appendObject:(id)arg1 withName:(id)arg2 skipIfNil:(_Bool)arg3;	// IMP=0x0000000000005283
- (id)appendObject:(id)arg1 withName:(id)arg2;	// IMP=0x000000000000526e
- (id)appendSuper;	// IMP=0x000000000000502c
- (id)initWithObject:(id)arg1;	// IMP=0x0000000000004ea9

@end

