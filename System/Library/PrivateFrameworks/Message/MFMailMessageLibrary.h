//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Message/MFContentProtectionObserver-Protocol.h>
#import <Message/MFLibrarySearchableIndexDataSource-Protocol.h>
#import <Message/MFSQLiteConnectionPoolDelegate-Protocol.h>

@class MFLibrarySearchableIndex, MFMailMessageLibraryMigrator, MFSQLiteConnectionPool, MFWeakObjectCache, MFWeakSet, NSMutableSet, NSObject, NSString;
@protocol MFMailMessageLibraryDelegate, MFMailboxPathProvider, OS_dispatch_queue, OS_dispatch_source;

@interface MFMailMessageLibrary <MFLibrarySearchableIndexDataSource, MFSQLiteConnectionPoolDelegate, MFContentProtectionObserver>
{
    MFSQLiteConnectionPool *_connectionPool;	// 24 = 0x18
    MFWeakObjectCache *_libraryMessageCache;	// 32 = 0x20
    struct __CFDictionary *_mailboxCache;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_queue;	// 48 = 0x30
    id <MFMailboxPathProvider> _mailboxPathProvider;	// 56 = 0x38
    MFMailMessageLibraryMigrator *_migrator;	// 64 = 0x40
    NSString *_threadLocalHandleKey;	// 72 = 0x48
    NSString *_threadLocalJournalKey;	// 80 = 0x50
    NSString *_activeAccountClause;	// 88 = 0x58
    NSString *_nonLocalAccountClause;	// 96 = 0x60
    int _protectedDataAvailability;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_keyBagQueue;	// 112 = 0x70
    NSMutableSet *_messagesToThreadAtUnlock;	// 120 = 0x78
    MFWeakSet *_middleware;	// 128 = 0x80
    NSObject<OS_dispatch_source> *_suspendTimer;	// 136 = 0x88
    id <MFMailMessageLibraryDelegate> _delegate;	// 144 = 0x90
    MFLibrarySearchableIndex *_searchableIndex;	// 152 = 0x98
}

+ (void)_removeLibrary:(_Bool)arg1 atPath:(id)arg2;	// IMP=0x0000000000067dfc
+ (void)removeLibraryAtPath:(id)arg1;	// IMP=0x0000000000067dab
+ (id)defaultPath;	// IMP=0x00000000000504b3
+ (void)setDefaultInstance:(id)arg1;	// IMP=0x000000000005044f
+ (id)defaultInstance;	// IMP=0x00000000000503a8
@property(retain, nonatomic) MFLibrarySearchableIndex *searchableIndex; // @synthesize searchableIndex=_searchableIndex;
@property(nonatomic) id <MFMailMessageLibraryDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_messageForStatement:(struct sqlite3_stmt *)arg1 options:(unsigned int)arg2 timestamp:(unsigned long long)arg3 isProtectedDataAvailable:(_Bool)arg4;	// IMP=0x000000000006a5c4
- (id)_libraryMessageWithLibraryID:(unsigned int)arg1 wasCached:(_Bool *)arg2;	// IMP=0x000000000006a575
- (id)_libraryMessageCache;	// IMP=0x000000000006a564
- (id)allMailboxURLStrings;	// IMP=0x000000000006a456
- (void)setMailboxPathProvider:(id)arg1;	// IMP=0x000000000006a3fc
- (void)_resetTransactionIndexForAccount:(id)arg1 mailboxID:(unsigned int)arg2;	// IMP=0x000000000006a15b
- (void)removeSearchableItemsWithLibraryIDs:(id)arg1;	// IMP=0x000000000006a0bd
- (void)removeSearchableItemsForAccount:(id)arg1 mailboxID:(unsigned int)arg2;	// IMP=0x0000000000069f90
- (void)removeSearchableItemsForMessages:(id)arg1;	// IMP=0x0000000000069ecd
- (void)removeSearchableItemsForMailbox:(id)arg1;	// IMP=0x0000000000069e7c
- (void)removeSearchableItemsForAccount:(id)arg1;	// IMP=0x0000000000069e65
- (void)addSpotlightTombstones:(id)arg1 type:(long long)arg2;	// IMP=0x0000000000069bb0
- (id)verificationDataSamplesForSearchableIndex:(id)arg1;	// IMP=0x0000000000069ba3
- (id)updatesForSearchableIndex:(id)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000006983b
- (id)_searchableItemIndexesForDb:(struct sqlite3 *)arg1 indexingType:(long long)arg2 nonLocalAccountsClause:(id)arg3 protectedDataAvailable:(_Bool)arg4 whereClause:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x000000000006966e
- (struct sqlite3_stmt *)_prepareBatchStatement:(struct sqlite3 *)arg1 pattern:(id)arg2 libraryIDs:(unsigned long long *)arg3 batchSize:(unsigned long long)arg4;	// IMP=0x000000000006957f
- (void)_assignTransaction:(long long)arg1 forLibraryIDs:(id)arg2 missingLibraryIDIndexSet:(id *)arg3 database:(struct sqlite3 *)arg4;	// IMP=0x00000000000693dc
- (void)_assignTransaction:(long long)arg1 forLibraryIDIndexSet:(id)arg2 missingLibraryIDIndexSet:(id *)arg3 database:(struct sqlite3 *)arg4;	// IMP=0x0000000000068fce
- (struct sqlite3_stmt *)_prepareBatchStatement:(struct sqlite3 *)arg1 pattern:(id)arg2 objects:(id *)arg3 count:(unsigned long long)arg4;	// IMP=0x0000000000068eb7
- (void)_purgeSpotlightTombstonesBeforeTransaction:(long long)arg1 database:(struct sqlite3 *)arg2;	// IMP=0x0000000000068e07
- (void)_assignTransaction:(long long)arg1 forSpotlightTombstones:(id)arg2 type:(long long)arg3 database:(struct sqlite3 *)arg4;	// IMP=0x0000000000068bff
- (id)_stringsForIndexSet:(id)arg1;	// IMP=0x0000000000068b2f
- (id)searchableIndex:(id)arg1 assignTransaction:(long long)arg2 updates:(id)arg3;	// IMP=0x00000000000686b9
- (void)searchableIndex:(id)arg1 invalidateItemsGreaterThanTransaction:(long long)arg2;	// IMP=0x000000000006844e
- (void)pruneConversationTables:(double)arg1;	// IMP=0x000000000006831b
- (void)renameOrRemoveDatabase;	// IMP=0x0000000000067dc5
- (void)_handleBusyError;	// IMP=0x0000000000067d5f
- (void)_handleProtectedDataIOError;	// IMP=0x0000000000067cc1
- (void)_handleIOError;	// IMP=0x0000000000067c75
- (void)_handleDetachedDatabaseIOError;	// IMP=0x0000000000067c06
- (void)_handleInvalidDatabaseIOError;	// IMP=0x0000000000067bba
- (void)_handleFullDatabase;	// IMP=0x0000000000067a22
- (void)_handleFailedMigration;	// IMP=0x000000000006764c
- (void)_handleProtectedDataInconsistencies;	// IMP=0x00000000000675cc
- (void)_handleJournalMergeFailure;	// IMP=0x0000000000067574
- (void)_handleJournalWriteFailure;	// IMP=0x00000000000674f4
- (void)_handleCorruptDatabase;	// IMP=0x000000000006749c
- (void)_handleSQLiteErrorCode:(int)arg1 db:(struct sqlite3 *)arg2;	// IMP=0x0000000000067384
- (int)handleSqliteError:(struct sqlite3 *)arg1 format:(id)arg2;	// IMP=0x000000000006732f
- (_Bool)appendToJournal:(const char *)arg1;	// IMP=0x00000000000672f6
- (id)_activeJournal;	// IMP=0x00000000000672a9
- (void)_setActiveJournal:(id)arg1;	// IMP=0x00000000000671e6
- (struct sqlite3_stmt *)preparedStatement:(struct sqlite3 *)arg1 pattern:(id)arg2;	// IMP=0x00000000000671b5
- (id)_activeConnectionWithDB:(struct sqlite3 *)arg1;	// IMP=0x000000000006716f
- (id)_activeConnection;	// IMP=0x0000000000067144
- (id)_activeConnectionWrapper;	// IMP=0x00000000000670f7
- (id)_setActiveConnection:(id)arg1 forWriting:(_Bool)arg2;	// IMP=0x0000000000066f6f
- (void)unlockDB:(struct sqlite3 *)arg1;	// IMP=0x0000000000066e51
- (struct sqlite3 *)getReaderDB;	// IMP=0x0000000000066e24
- (struct sqlite3 *)getWriterDB;	// IMP=0x0000000000066df4
- (id)_connectionForWriting:(_Bool)arg1;	// IMP=0x0000000000066bf5
- (void)closeDatabaseConnections;	// IMP=0x0000000000066bd8
- (void)_performTransaction:(CDUnknownBlockType)arg1 forWriting:(_Bool)arg2;	// IMP=0x0000000000066b1e
- (void)performReadTransaction:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066b0a
- (void)performWriteTransaction:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066af3
- (int)rollbackTransaction:(struct sqlite3 *)arg1;	// IMP=0x0000000000066a59
- (int)commitTransaction:(struct sqlite3 *)arg1;	// IMP=0x0000000000066960
- (int)beginTransaction:(struct sqlite3 *)arg1 withType:(long long)arg2 forMailbox:(id)arg3;	// IMP=0x00000000000668b9
- (int)beginTransaction:(struct sqlite3 *)arg1 withType:(long long)arg2;	// IMP=0x00000000000668a4
- (void)scheduleIncrementalVacuum;	// IMP=0x00000000000667d3
- (void)performIncrementalVacuumForSchema:(id)arg1;	// IMP=0x000000000006648d
- (_Bool)migrate;	// IMP=0x000000000006644c
- (id)_newConnection;	// IMP=0x000000000006625e
- (id)newConnectionForConnectionPool:(id)arg1;	// IMP=0x000000000006624c
- (void)_addMessageToThreadAtUnlock:(unsigned int)arg1;	// IMP=0x000000000006618f
- (void)_reconcileAfterKeybagUnlock;	// IMP=0x0000000000065d08
- (void)reconcileJournalOnStartup;	// IMP=0x0000000000065c8a
- (_Bool)_canAccessProtectedData;	// IMP=0x0000000000065b20
- (void)contentProtectionStateChanged:(int)arg1 previousState:(int)arg2;	// IMP=0x000000000006596e
- (_Bool)isProtectedDataAvailable:(struct sqlite3 *)arg1;	// IMP=0x0000000000065943
- (void)_reconcileJournal;	// IMP=0x000000000006579a
- (_Bool)checkDatabaseConsistency;	// IMP=0x00000000000654ac
- (_Bool)cleanupProtectedTables;	// IMP=0x0000000000065226
- (id)_indexSetOfMessagesDeleted;	// IMP=0x00000000000650fe
@property(readonly, nonatomic) unsigned long long protectedDataAvailability;
- (void)_setProtectedDataAvailabilityState:(unsigned long long)arg1;	// IMP=0x0000000000064f57
- (id)hiddenPOPUIDsInMailbox:(id)arg1;	// IMP=0x0000000000064f46
- (id)allUIDsInMailbox:(id)arg1;	// IMP=0x0000000000064f35
- (id)deletedUIDsInMailbox:(id)arg1;	// IMP=0x0000000000064f24
- (id)UIDsToDeleteInMailbox:(id)arg1;	// IMP=0x0000000000064dac
- (void)deletePOPUID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000064ca2
- (void)deleteOfflineCacheDataForAccount:(long long)arg1;	// IMP=0x0000000000064ba7
- (void)consumeOfflineCacheReplayDataForAccount:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000064ba1
- (void)appendOfflineCacheReplayData:(id)arg1 forAccountID:(long long)arg2;	// IMP=0x0000000000064a7a
- (id)offlineCacheOperationsForAccount:(long long)arg1 lastTemporaryID:(unsigned int *)arg2;	// IMP=0x0000000000064a72
- (void)markOfflineCacheOperationAsComplete:(id)arg1;	// IMP=0x000000000006498c
- (void)appendOfflineCacheOperation:(id)arg1 forAccount:(long long)arg2 lastTemporaryID:(unsigned int)arg3;	// IMP=0x000000000006481c
- (id)_nonLocalAccountsClause;	// IMP=0x00000000000647c7
- (id)_activeAccountsClause;	// IMP=0x0000000000064772
- (void)rebuildActiveAccountsClauseWithAccounts:(id)arg1;	// IMP=0x0000000000064302
- (id)_mailboxesClauseForAccounts:(id)arg1;	// IMP=0x00000000000640db
- (void)deleteAccount:(id)arg1;	// IMP=0x0000000000064005
- (void)invalidateAccount:(id)arg1;	// IMP=0x0000000000063ff3
- (long long)libraryIDForAccount:(id)arg1;	// IMP=0x0000000000063f01
- (long long)createLibraryIDForAccount:(id)arg1;	// IMP=0x0000000000063e15
- (id)filterContiguousMessages:(id)arg1 forCriterion:(id)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000063c27
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2;	// IMP=0x0000000000063bbf
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 success:(_Bool *)arg3;	// IMP=0x0000000000063b36
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 success:(_Bool *)arg4;	// IMP=0x0000000000063aaf
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000063a34
- (void)iterateMessagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000639c4
- (void)iterateMessagesMatchingCriterion:(id)arg1 withResultHandler:(id)arg2 options:(unsigned int)arg3 withMonitor:(id)arg4;	// IMP=0x000000000006364e
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000063614
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;	// IMP=0x00000000000635e5
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4;	// IMP=0x00000000000635ae
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 range:(struct _NSRange)arg5;	// IMP=0x0000000000063582
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 range:(struct _NSRange)arg5 success:(_Bool *)arg6;	// IMP=0x0000000000063468
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 *)arg2 options:(unsigned int)arg3;	// IMP=0x000000000006342f
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 *)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;	// IMP=0x0000000000063401
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 *)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4;	// IMP=0x00000000000633df
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 *)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 isSubquery:(_Bool)arg5;	// IMP=0x00000000000633a7
- (id)queryForCriterion:(id)arg1 db:(struct sqlite3 *)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 isSubquery:(_Bool)arg5 range:(struct _NSRange)arg6;	// IMP=0x00000000000630d0
- (id)equalToMailboxIDsFromCriterion:(id)arg1;	// IMP=0x0000000000062ea9
- (_Bool)isMessageContentsLocallyAvailable:(id)arg1;	// IMP=0x0000000000062cb2
- (_Bool)hasCompleteDataForMimePart:(id)arg1;	// IMP=0x0000000000062ae8
- (id)dataForMimePart:(id)arg1 isComplete:(_Bool *)arg2;	// IMP=0x0000000000062840
- (void)deleteDataForMessage:(id)arg1;	// IMP=0x00000000000624d1
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x0000000000062455
- (id)headerDataForMessage:(id)arg1;	// IMP=0x0000000000062393
- (id)bodyDataForMessage:(id)arg1;	// IMP=0x000000000006237f
- (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 isComplete:(_Bool *)arg3;	// IMP=0x0000000000061ee7
- (id)headerDataAtPath:(id)arg1;	// IMP=0x0000000000061e47
- (id)bodyDataAtPath:(id)arg1 headerData:(id *)arg2;	// IMP=0x0000000000061cc2
- (id)loadMeetingMetadataForMessage:(id)arg1;	// IMP=0x0000000000061cba
- (id)loadMeetingExternalIDForMessage:(id)arg1;	// IMP=0x0000000000061c6f
- (id)loadMeetingDataForMessage:(id)arg1;	// IMP=0x0000000000061c1a
- (id)loadData:(id)arg1 forMessage:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000061aee
- (id)metadataForMessage:(id)arg1;	// IMP=0x0000000000061ae6
- (id)metadataForMessage:(id)arg1 key:(id)arg2;	// IMP=0x0000000000061ade
- (void)updateMessage:(id)arg1 withMetadata:(CDUnknownBlockType)arg2;	// IMP=0x000000000006164c
- (void)setSummary:(id)arg1 forMessage:(id)arg2;	// IMP=0x0000000000061592
- (void)_setMessageDataString:(id)arg1 forKey:(id)arg2 forMessage:(id)arg3;	// IMP=0x000000000006153a
- (_Bool)_setMessageData:(id)arg1 libraryID:(unsigned int)arg2 part:(id)arg3 partial:(_Bool)arg4 complete:(_Bool)arg5;	// IMP=0x0000000000060f51
- (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(_Bool)arg3;	// IMP=0x0000000000060f01
- (id)dataConsumerForMessage:(id)arg1;	// IMP=0x0000000000060eb1
- (id)dataConsumerForMessage:(id)arg1 isPartial:(_Bool)arg2;	// IMP=0x0000000000060e5d
- (id)dataConsumerForMessage:(id)arg1 part:(id)arg2 incomplete:(_Bool)arg3;	// IMP=0x0000000000060e03
- (id)dataConsumerForMessage:(id)arg1 part:(id)arg2;	// IMP=0x0000000000060daf
- (id)dataPathForMessage:(id)arg1 part:(id)arg2;	// IMP=0x0000000000060cd6
- (id)attachmentsDirectoryForLibraryID:(unsigned int)arg1 mailboxID:(unsigned int)arg2;	// IMP=0x0000000000060c5c
- (id)dataPathForMessage:(id)arg1;	// IMP=0x0000000000060c48
- (id)dataPathForMessage:(id)arg1 type:(int)arg2;	// IMP=0x0000000000060b8c
- (id)messageWithMessageID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000060a49
- (void)removeAllMessagesFromMailbox:(id)arg1 removeMailbox:(_Bool)arg2 andNotify:(_Bool)arg3;	// IMP=0x00000000000605ce
- (void)vacuumDataForObsoleteAccountURLString:(id)arg1;	// IMP=0x00000000000603d6
- (id)_quotedLikeSubclauseForColumn:(id)arg1 value:(id)arg2;	// IMP=0x0000000000060349
- (id)_quotedPrefixLikeSubclauseForColumn:(id)arg1 value:(id)arg2;	// IMP=0x00000000000602bc
- (void)deleteMailboxes:(id)arg1 account:(id)arg2;	// IMP=0x000000000005ff01
- (_Bool)renameMailboxes:(id)arg1 to:(id)arg2;	// IMP=0x000000000005fbaf
- (void)compactMailbox:(id)arg1;	// IMP=0x000000000005f739
- (void)compactMessages:(id)arg1 permanently:(_Bool)arg2;	// IMP=0x000000000005ec5a
- (void)_notifyDidCompact:(_Bool)arg1 messages:(id)arg2 mailboxes:(id)arg3;	// IMP=0x000000000005eba7
- (void)setStoredIntegerPropertyWithName:(id)arg1 value:(id)arg2;	// IMP=0x000000000005ea5e
- (id)storedIntegerPropertyWithName:(id)arg1;	// IMP=0x000000000005ea23
- (id)mblGetQueuedMessagesForAccount:(id)arg1;	// IMP=0x000000000005e7fe
- (void)mblQueueRemoveMessages:(id)arg1;	// IMP=0x000000000005e5d3
- (void)mblQueueAddMessages:(id)arg1;	// IMP=0x000000000005e3a8
- (id)messageIdsForConversationId:(long long)arg1 limit:(unsigned long long)arg2;	// IMP=0x000000000005e2a5
- (long long)conversationIdForMessageIds:(id)arg1;	// IMP=0x000000000005e0f3
- (void)setConversationInfo:(long long)arg1 syncKey:(id)arg2 flags:(unsigned long long)arg3;	// IMP=0x000000000005e00a
- (void)setFlags:(unsigned long long)arg1 forConversationId:(long long)arg2;	// IMP=0x000000000005df57
- (unsigned long long)flagsForConversationId:(long long)arg1;	// IMP=0x000000000005dea0
- (id)syncedConversations;	// IMP=0x000000000005dd77
- (_Bool)_canSelectMessagesWithOptions:(unsigned int)arg1 db:(struct sqlite3 *)arg2;	// IMP=0x000000000005dd4e
- (_Bool)shouldCancel;	// IMP=0x000000000005dd46
- (id)accountForMessage:(id)arg1;	// IMP=0x000000000005dcff
- (id)remoteStoreForMessage:(id)arg1;	// IMP=0x000000000005dcc1
- (id)mailboxUidForMessage:(id)arg1;	// IMP=0x000000000005dc8c
- (id)mailboxURLForMessage:(id)arg1;	// IMP=0x000000000005dc59
- (id)pathForMailboxURL:(id)arg1;	// IMP=0x000000000005dc04
- (unsigned int)mailboxIDForURLString:(id)arg1;	// IMP=0x000000000005da99
- (id)urlForMailboxID:(unsigned int)arg1;	// IMP=0x000000000005d93c
- (id)stringForQuery:(id)arg1;	// IMP=0x000000000005d928
- (id)stringForQuery:(id)arg1 monitor:(id)arg2;	// IMP=0x000000000005d6c0
- (long long)loadMoreMessagesForThreadContainingMessage:(id)arg1 hasNoMoreMessages:(_Bool *)arg2;	// IMP=0x000000000005d584
- (long long)countOfMessagesMissingFromThreadContainingMessage:(id)arg1;	// IMP=0x000000000005d3c9
- (id)_getReferencesForHashesWithOwners:(struct __CFDictionary *)arg1;	// IMP=0x000000000005d37a
- (id)missingReferencesForConversationContainingMessage:(id)arg1;	// IMP=0x000000000005d11f
- (struct __CFDictionary *)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)arg1;	// IMP=0x000000000005cfa1
- (id)conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:(unsigned int)arg1 messageIDHash:(long long)arg2;	// IMP=0x000000000005cceb
- (long long)mailboxLocationOfMessageID:(unsigned int)arg1 usingDatabase:(struct sqlite3 *)arg2;	// IMP=0x000000000005cc4d
- (id)messageWithLibraryID:(unsigned int)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;	// IMP=0x000000000005c8a5
- (id)messagesWithMessageIDHeader:(id)arg1;	// IMP=0x000000000005c822
- (id)messageWithMessageID:(id)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;	// IMP=0x000000000005c79e
- (id)getDetailsForAllMessagesFromMailbox:(id)arg1;	// IMP=0x000000000005c77d
- (id)getDetailsForMessages:(unsigned long long)arg1 absoluteBottom:(unsigned long long)arg2 topOfDesiredRange:(unsigned long long)arg3 range:(struct _NSRange *)arg4 fromMailbox:(id)arg5;	// IMP=0x000000000005c45c
- (id)getDetailsForMessagesWithRemoteIDInRange:(struct _NSRange)arg1 fromMailbox:(id)arg2;	// IMP=0x000000000005c1e4
- (void)setSequenceIdentifier:(id)arg1 forMessagesWithRemoteIDs:(id)arg2 inMailbox:(id)arg3;	// IMP=0x000000000005bee3
- (void)setSequenceIdentifier:(id)arg1 forMessageWithLibraryID:(unsigned int)arg2;	// IMP=0x000000000005bdec
- (id)sequenceIdentifierForMessagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2;	// IMP=0x000000000005baf1
- (void)setSequenceIdentifier:(id)arg1 forMailbox:(id)arg2;	// IMP=0x000000000005b990
- (id)sequenceIdentifierForMailbox:(id)arg1;	// IMP=0x000000000005b887
- (unsigned int)minimumRemoteIDForMailbox:(id)arg1;	// IMP=0x000000000005b74d
- (_Bool)canProvideMinimumRemoteID;	// IMP=0x000000000005b745
- (unsigned int)maximumRemoteIDForMailbox:(id)arg1;	// IMP=0x000000000005b626
- (id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned int)arg2 inRemoteMailbox:(id)arg3;	// IMP=0x000000000005b1f6
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;	// IMP=0x000000000005affb
- (id)oldestMessageInMailbox:(id)arg1;	// IMP=0x000000000005ad54
- (void)setMostRecentStatusCount:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x000000000005ac48
- (unsigned long long)mostRecentStatusCountForMailbox:(id)arg1;	// IMP=0x000000000005ac29
- (void)setLastSyncAndMostRecentStatusCount:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x000000000005ab07
- (long long)statusCountDeltaForMailbox:(id)arg1;	// IMP=0x000000000005aae8
- (void)setServerUnreadOnlyOnServerCount:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x000000000005a9d7
- (unsigned long long)serverUnreadOnlyOnServerCountForMailbox:(id)arg1;	// IMP=0x000000000005a9b8
- (unsigned int)totalCountForMailbox:(id)arg1;	// IMP=0x000000000005a994
- (unsigned int)nonDeletedCountForAggregatedMailboxes:(id)arg1;	// IMP=0x000000000005a977
- (unsigned int)nonDeletedCountForAggregatedMailboxes:(id)arg1 includeServerSearchResults:(_Bool)arg2 includeThreadSearchResults:(_Bool)arg3;	// IMP=0x000000000005a87a
- (unsigned int)nonDeletedCountForMailbox:(id)arg1;	// IMP=0x000000000005a85d
- (unsigned int)nonDeletedCountForMailbox:(id)arg1 includeServerSearchResults:(_Bool)arg2 includeThreadSearchResults:(_Bool)arg3;	// IMP=0x000000000005a790
- (unsigned int)allNonDeleteCountForMailbox:(id)arg1 includeServerSearchResults:(_Bool)arg2 includeThreadSearchResults:(_Bool)arg3;	// IMP=0x000000000005a706
- (unsigned int)attachmentCountForMailboxes:(id)arg1;	// IMP=0x000000000005a6b6
- (unsigned int)deletedCountForMailbox:(id)arg1;	// IMP=0x000000000005a692
- (unsigned int)includesMeCountForMailbox:(id)arg1;	// IMP=0x000000000005a66e
- (unsigned int)attachmentCountForMailbox:(id)arg1;	// IMP=0x000000000005a64a
- (unsigned int)flaggedCountForMailbox:(id)arg1;	// IMP=0x000000000005a626
- (unsigned int)unreadCountForMailbox:(id)arg1;	// IMP=0x000000000005a602
- (id)_queryForMailboxesIDsFromMailboxes:(id)arg1;	// IMP=0x000000000005a578
- (unsigned int)_includesMeCountForAggregatedMailboxes:(id)arg1;	// IMP=0x000000000005a4d0
- (unsigned int)_attachmentCountForAggregatedMailboxes:(id)arg1;	// IMP=0x000000000005a428
- (unsigned int)_flaggedCountForAggregatedMailboxes:(id)arg1;	// IMP=0x000000000005a380
- (unsigned int)_computeUnreadCountForMailboxes:(id)arg1;	// IMP=0x000000000005a32b
- (unsigned int)unreadCountForAggregatedMailboxes:(id)arg1;	// IMP=0x000000000005a2b8
- (unsigned int)unreadCountForAggregatedMailboxes:(id)arg1 matchingCriterion:(id)arg2;	// IMP=0x0000000000059eaa
- (unsigned int)unreadCountForMailbox:(id)arg1 matchingCriterion:(id)arg2;	// IMP=0x0000000000059e63
- (void)recomputeUnreadCountForMailboxWithURL:(id)arg1;	// IMP=0x0000000000059d2e
- (int)_integerForQuery:(id)arg1 withTextArgument:(id)arg2;	// IMP=0x0000000000059c35
- (id)messagesWithoutSummariesForMailbox:(id)arg1 fromRowID:(unsigned int)arg2 limit:(unsigned int)arg3;	// IMP=0x0000000000059a43
- (id)orderedBatchOfMessagesEndingAtRowId:(unsigned int)arg1 limit:(unsigned int)arg2 success:(_Bool *)arg3;	// IMP=0x00000000000598c0
- (id)messagesWithSummariesForMailbox:(id)arg1 fromRowID:(unsigned int)arg2 limit:(unsigned int)arg3;	// IMP=0x00000000000596d4
- (id)messagesWithoutSummariesForMailbox:(id)arg1;	// IMP=0x0000000000059520
- (id)messagesWithSummariesForMailbox:(id)arg1 range:(struct _NSRange)arg2;	// IMP=0x0000000000059331
- (struct __CFDictionary *)copySendersByLibraryIDForConversation:(long long)arg1 mailbox:(id)arg2 limit:(long long)arg3;	// IMP=0x0000000000059129
- (unsigned int)_libraryIDForOldestKnownMessageInMailbox:(id)arg1;	// IMP=0x0000000000058f90
- (id)oldestKnownMessageInMailbox:(id)arg1;	// IMP=0x0000000000058f4c
- (long long)oldestKnownConversationInMailbox:(id)arg1;	// IMP=0x0000000000058db5
- (id)countMessagesMatchingCriterion:(id)arg1 groupBy:(unsigned long long)arg2;	// IMP=0x00000000000589a3
- (unsigned long long)countMessagesMatchingCriterion:(id)arg1;	// IMP=0x0000000000058933
- (unsigned int)countOfRelatedMessagesMatchingCriterion:(id)arg1 forConversationsContainingMessagesMatchingCriterion:(id)arg2 forMailboxCriterion:(id)arg3;	// IMP=0x00000000000585b8
- (id)copyMessageInfosForConversationsContainingMessagesMatchingCriterion:(id)arg1 forMailbox:(id)arg2;	// IMP=0x000000000005826a
- (id)copyMessageInfosMatchingCriterion:(id)arg1;	// IMP=0x0000000000057fba
- (id)copyMessageInfosForMailbox:(id)arg1;	// IMP=0x0000000000057da9
- (id)dateOfNewestNonSearchResultMessageInMailbox:(id)arg1;	// IMP=0x0000000000057d8d
- (id)dateOfOldestNonIndexedNonSearchResultMessageInMailbox:(id)arg1;	// IMP=0x0000000000057d71
- (id)dateOfOldestNonSearchResultMessageInMailbox:(id)arg1;	// IMP=0x0000000000057d55
- (id)_firstDateForQuery:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000057c10
- (id)messagesNeedingSyncConfirmationForMailbox:(id)arg1;	// IMP=0x0000000000057afb
- (id)serverSearchResultMessagesForMailbox:(id)arg1;	// IMP=0x00000000000579e6
- (id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(int)arg2;	// IMP=0x0000000000057881
- (void)sendMessagesMatchingQuery:(const char *)arg1 db:(struct sqlite3 *)arg2 to:(id)arg3 options:(unsigned int)arg4;	// IMP=0x0000000000057792
- (void)sendMessagesForStatement:(struct sqlite3_stmt *)arg1 db:(struct sqlite3 *)arg2 to:(id)arg3 options:(unsigned int)arg4 timestamp:(unsigned long long)arg5;	// IMP=0x00000000000572fa
- (void)iterateStatement:(struct sqlite3_stmt *)arg1 db:(struct sqlite3 *)arg2 withProgressMonitor:(id)arg3 andRowHandler:(CDUnknownFunctionPointerType)arg4 context:(void *)arg5;	// IMP=0x00000000000571db
- (void)updateThreadingInfoForMessage:(id)arg1 fromHeaders:(id)arg2;	// IMP=0x0000000000056df4
- (void)updateAdditionalThreadingInfoForSentMessageWithHeaders:(id)arg1 externalConversationID:(long long)arg2;	// IMP=0x0000000000056d30
- (id)addMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(_Bool)arg3 newMessagesByOldMessage:(id)arg4 remoteIDs:(id)arg5 setFlags:(unsigned long long)arg6 clearFlags:(unsigned long long)arg7 messageFlagsForMessages:(id)arg8 copyFiles:(_Bool)arg9 addPOPUIDs:(_Bool)arg10 dataSectionsByMessage:(id)arg11;	// IMP=0x00000000000536f6
- (void)_tellMiddleWareDidIndexMessages:(id)arg1;	// IMP=0x000000000005358a
- (void)_tellMiddlewareDidAddMessages:(id)arg1;	// IMP=0x000000000005341e
- (id)_tellMiddlewareWillAddMessage:(id)arg1;	// IMP=0x00000000000532a4
- (void)removeMiddleware:(id)arg1;	// IMP=0x0000000000053252
- (void)addMiddleware:(id)arg1;	// IMP=0x00000000000531ca
- (long long)addReferenceForContext:(id)arg1 usingDatabase:(struct sqlite3 *)arg2 mergeHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005296e
- (_Bool)_insertThreadReferences:(id)arg1 toMessageWithLibraryID:(unsigned int)arg2 usingDatabase:(struct sqlite3 *)arg3;	// IMP=0x0000000000052800
- (id)_addThreadingInfoWithContext:(id)arg1 usingDatabase:(struct sqlite3 *)arg2;	// IMP=0x00000000000523e5
- (id)referencesFromHeaders:(id)arg1;	// IMP=0x0000000000052235
- (void)notifyConversation:(long long)arg1 hasMergedIntoConversation:(long long)arg2;	// IMP=0x000000000005210c
- (void)notifyNewDataAvailableForMessages:(id)arg1;	// IMP=0x000000000005203b
- (_Bool)_writeEmlxFile:(id)arg1 withBodyData:(id)arg2 protectionClass:(int)arg3;	// IMP=0x0000000000051db5
- (void)setMessage:(id)arg1 isPartial:(_Bool)arg2;	// IMP=0x0000000000051cf5
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(_Bool)arg2 isEncrypted:(_Bool)arg3 forMessage:(id)arg4;	// IMP=0x0000000000051bde
- (void)setFlagsFromDictionary:(id)arg1 forMessagesInMailboxURLString:(id)arg2;	// IMP=0x000000000005177d
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x00000000000516bb
- (id)updateFlagsForMessages:(id)arg1 changes:(id)arg2 transformer:(CDUnknownBlockType)arg3;	// IMP=0x000000000005131e
- (void)updateFlagsForMessagesInPlace:(id)arg1 success:(_Bool *)arg2;	// IMP=0x0000000000051101
- (void)setFlagsForMessages:(id)arg1 mask:(unsigned long long)arg2;	// IMP=0x0000000000050c20
- (void)setFlags:(unsigned long long)arg1 forMessage:(id)arg2;	// IMP=0x0000000000050774
@property(readonly, nonatomic) unsigned long long pendingIndexItemsCount;
- (void)applicationWillResume;	// IMP=0x000000000005068d
- (void)applicationWillSuspend;	// IMP=0x0000000000050652
- (void)startSuspendTimer;	// IMP=0x00000000000504fc
- (void)cancelSuspendTimer;	// IMP=0x00000000000504c7
- (void)invalidateAndWait;	// IMP=0x00000000000504bd
- (void)dealloc;	// IMP=0x000000000005022a
- (id)initWithPath:(id)arg1;	// IMP=0x000000000004ff02

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

