//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDateFormatter, NSMutableDictionary, NSMutableSet, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface _bmFMDatabase : NSObject
{
    void *_db;	// 8 = 0x8
    _Bool _isExecutingStatement;	// 16 = 0x10
    double _startBusyRetryTime;	// 24 = 0x18
    NSMutableSet *_openResultSets;	// 32 = 0x20
    NSMutableSet *_openFunctions;	// 40 = 0x28
    NSDateFormatter *_dateFormat;	// 48 = 0x30
    _Bool _shouldCacheStatements;	// 56 = 0x38
    _Bool _traceExecution;	// 57 = 0x39
    _Bool _checkedOut;	// 58 = 0x3a
    _Bool _crashOnErrors;	// 59 = 0x3b
    _Bool _logsErrors;	// 60 = 0x3c
    _Bool _isOpen;	// 61 = 0x3d
    _Bool _isInTransaction;	// 62 = 0x3e
    double _maxBusyRetryTimeInterval;	// 64 = 0x40
    NSMutableDictionary *_cachedStatements;	// 72 = 0x48
    NSString *_databasePath;	// 80 = 0x50
}

+ (id)storeableDateFormat:(id)arg1;	// IMP=0x000000000000ac4c
+ (_Bool)isSQLiteThreadSafe;	// IMP=0x0000000000009fd7
+ (id)sqliteLibVersion;	// IMP=0x0000000000009f93
+ (int)FMDBVersion;	// IMP=0x0000000000009d76
+ (id)FMDBUserVersion;	// IMP=0x0000000000009d69
+ (id)databaseWithURL:(id)arg1;	// IMP=0x0000000000009b7d
+ (id)databaseWithPath:(id)arg1;	// IMP=0x0000000000009b34
- (void).cxx_destruct;	// IMP=0x000000000000dd9b
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(readonly, nonatomic) _Bool isInTransaction; // @synthesize isInTransaction=_isInTransaction;
@property(nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
@property(retain) NSMutableDictionary *cachedStatements; // @synthesize cachedStatements=_cachedStatements;
@property _Bool logsErrors; // @synthesize logsErrors=_logsErrors;
@property _Bool crashOnErrors; // @synthesize crashOnErrors=_crashOnErrors;
@property _Bool checkedOut; // @synthesize checkedOut=_checkedOut;
@property _Bool traceExecution; // @synthesize traceExecution=_traceExecution;
- (void)resultErrorTooBigInContext:(void *)arg1;	// IMP=0x000000000000dcf6
- (void)resultErrorNoMemoryInContext:(void *)arg1;	// IMP=0x000000000000dce9
- (void)resultErrorCode:(int)arg1 context:(void *)arg2;	// IMP=0x000000000000dcda
- (void)resultError:(id)arg1 context:(void *)arg2;	// IMP=0x000000000000dca3
- (void)resultString:(id)arg1 context:(void *)arg2;	// IMP=0x000000000000dc65
- (void)resultData:(id)arg1 context:(void *)arg2;	// IMP=0x000000000000dbfb
- (void)resultDouble:(double)arg1 context:(void *)arg2;	// IMP=0x000000000000dbee
- (void)resultLong:(long long)arg1 context:(void *)arg2;	// IMP=0x000000000000dbde
- (void)resultInt:(int)arg1 context:(void *)arg2;	// IMP=0x000000000000dbcf
- (void)resultNullInContext:(void *)arg1;	// IMP=0x000000000000dbc2
- (id)valueString:(void *)arg1;	// IMP=0x000000000000db84
- (id)valueData:(void *)arg1;	// IMP=0x000000000000db2f
- (double)valueDouble:(void *)arg1;	// IMP=0x000000000000db22
- (long long)valueLong:(void *)arg1;	// IMP=0x000000000000db15
- (int)valueInt:(void *)arg1;	// IMP=0x000000000000db08
- (int)valueType:(void *)arg1;	// IMP=0x000000000000dafb
- (void)makeFunctionNamed:(id)arg1 arguments:(int)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x000000000000da05
- (void)makeFunctionNamed:(id)arg1 maximumArguments:(int)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000d9f3
@property(nonatomic) _Bool shouldCacheStatements; // @synthesize shouldCacheStatements=_shouldCacheStatements;
- (_Bool)checkpoint:(int)arg1 name:(id)arg2 logFrameCount:(int *)arg3 checkpointCount:(int *)arg4 error:(id *)arg5;	// IMP=0x000000000000d7ed
- (_Bool)checkpoint:(int)arg1 name:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000d7c8
- (_Bool)checkpoint:(int)arg1 error:(id *)arg2;	// IMP=0x000000000000d7a1
- (id)inSavePoint:(CDUnknownBlockType)arg1;	// IMP=0x000000000000d63b
- (_Bool)rollbackToSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d4f8
- (_Bool)releaseSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d3b5
- (_Bool)startSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d272
- (_Bool)interrupt;	// IMP=0x000000000000d241
- (_Bool)inTransaction;	// IMP=0x000000000000d238
- (_Bool)beginExclusiveTransaction;	// IMP=0x000000000000d20a
- (_Bool)beginImmediateTransaction;	// IMP=0x000000000000d1dc
- (_Bool)beginDeferredTransaction;	// IMP=0x000000000000d1ae
- (_Bool)beginTransaction;	// IMP=0x000000000000d180
- (_Bool)commit;	// IMP=0x000000000000d152
- (_Bool)rollback;	// IMP=0x000000000000d124
- (id)prepare:(id)arg1;	// IMP=0x000000000000d0fa
- (_Bool)update:(id)arg1 withErrorAndBindings:(id *)arg2;	// IMP=0x000000000000d056
- (_Bool)executeUpdate:(id)arg1 withErrorAndBindings:(id *)arg2;	// IMP=0x000000000000cfb2
- (_Bool)executeStatements:(id)arg1 withResultBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000000ceba
- (_Bool)executeStatements:(id)arg1;	// IMP=0x000000000000cea6
- (_Bool)executeUpdateWithFormat:(id)arg1;	// IMP=0x000000000000cbab
- (_Bool)executeUpdate:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;	// IMP=0x000000000000cb84
- (_Bool)executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;	// IMP=0x000000000000cb59
- (_Bool)executeUpdate:(id)arg1 values:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000cb2a
- (_Bool)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x000000000000caff
- (_Bool)executeUpdate:(id)arg1;	// IMP=0x000000000000ca55
- (_Bool)executeUpdate:(id)arg1 error:(id *)arg2 withArgumentsInArray:(id)arg3 orDictionary:(id)arg4 orVAList:(struct __va_list_tag [1])arg5;	// IMP=0x000000000000c9b6
- (id)executeQuery:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;	// IMP=0x000000000000c98c
- (id)executeQuery:(id)arg1 values:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000c918
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x000000000000c8f0
- (id)executeQueryWithFormat:(id)arg1;	// IMP=0x000000000000c777
- (id)executeQuery:(id)arg1;	// IMP=0x000000000000c6be
- (_Bool)bindStatement:(struct sqlite3_stmt *)arg1 WithArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4;	// IMP=0x000000000000c12a
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4 shouldBind:(_Bool)arg5;	// IMP=0x000000000000bdae
- (id)executeQuery:(id)arg1 withParameterDictionary:(id)arg2;	// IMP=0x000000000000bd84
- (void)extractSQL:(id)arg1 argumentsList:(struct __va_list_tag [1])arg2 intoString:(id)arg3 arguments:(id)arg4;	// IMP=0x000000000000b56a
- (int)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x000000000000b004
@property(readonly, nonatomic) int changes;
@property(readonly, nonatomic) long long lastInsertRowId;
- (id)lastError;	// IMP=0x000000000000af2f
- (id)errorWithMessage:(id)arg1;	// IMP=0x000000000000aea8
- (int)lastExtendedErrorCode;	// IMP=0x000000000000ae9a
- (int)lastErrorCode;	// IMP=0x000000000000ae8c
- (_Bool)hadError;	// IMP=0x000000000000ae71
- (id)lastErrorMessage;	// IMP=0x000000000000ae42
- (_Bool)databaseExists;	// IMP=0x000000000000adf8
- (void)warnInUse;	// IMP=0x000000000000adc1
@property(readonly, nonatomic) _Bool goodConnection;
- (id)stringFromDate:(id)arg1;	// IMP=0x000000000000ad4b
- (id)dateFromString:(id)arg1;	// IMP=0x000000000000ad35
- (void)setDateFormat:(id)arg1;	// IMP=0x000000000000ad24
- (_Bool)hasDateFormatter;	// IMP=0x000000000000ad16
- (_Bool)setKeyWithData:(id)arg1;	// IMP=0x000000000000ac44
- (_Bool)setKey:(id)arg1;	// IMP=0x000000000000ab7f
- (_Bool)rekeyWithData:(id)arg1;	// IMP=0x000000000000ab77
- (_Bool)rekey:(id)arg1;	// IMP=0x000000000000aab2
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;	// IMP=0x000000000000a944
- (id)cachedStatementForQuery:(id)arg1;	// IMP=0x000000000000a89b
- (void)clearCachedStatements;	// IMP=0x000000000000a63c
- (void)resultSetDidClose:(id)arg1;	// IMP=0x000000000000a5e8
- (void)closeOpenResultSets;	// IMP=0x000000000000a40a
@property(readonly, nonatomic) _Bool hasOpenResultSets;
- (void)setBusyRetryTimeout:(int)arg1;	// IMP=0x000000000000a3bf
- (int)busyRetryTimeout;	// IMP=0x000000000000a38c
@property(nonatomic) double maxBusyRetryTimeInterval; // @synthesize maxBusyRetryTimeInterval=_maxBusyRetryTimeInterval;
- (_Bool)close;	// IMP=0x000000000000a1df
- (_Bool)openWithFlags:(int)arg1 vfs:(id)arg2;	// IMP=0x000000000000a0ff
- (_Bool)openWithFlags:(int)arg1;	// IMP=0x000000000000a0eb
- (_Bool)open;	// IMP=0x000000000000a055
- (int)limitFor:(int)arg1 value:(int)arg2;	// IMP=0x000000000000a043
- (const char *)sqlitePath;	// IMP=0x0000000000009ff1
@property(readonly, nonatomic) void *sqliteHandle;
@property(readonly, nonatomic) NSURL *databaseURL;
- (void)dealloc;	// IMP=0x0000000000009cf4
- (id)initWithPath:(id)arg1;	// IMP=0x0000000000009c30
- (id)initWithURL:(id)arg1;	// IMP=0x0000000000009bda
- (id)init;	// IMP=0x0000000000009bc6
- (_Bool)validateSQL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000ee3f
- (_Bool)columnExists:(id)arg1 columnName:(id)arg2;	// IMP=0x000000000000ee24
@property(nonatomic) unsigned int userVersion;
@property(nonatomic) unsigned int applicationID;
- (_Bool)columnExists:(id)arg1 inTableWithName:(id)arg2;	// IMP=0x000000000000eac0
- (id)getTableSchema:(id)arg1;	// IMP=0x000000000000ea2b
- (id)getSchema;	// IMP=0x000000000000ea10
- (_Bool)tableExists:(id)arg1;	// IMP=0x000000000000e983
- (id)dateForQuery:(id)arg1;	// IMP=0x000000000000e860
- (id)dataForQuery:(id)arg1;	// IMP=0x000000000000e73d
- (double)doubleForQuery:(id)arg1;	// IMP=0x000000000000e621
- (_Bool)boolForQuery:(id)arg1;	// IMP=0x000000000000e50a
- (long long)longForQuery:(id)arg1;	// IMP=0x000000000000e3f3
- (int)intForQuery:(id)arg1;	// IMP=0x000000000000e2dc
- (id)stringForQuery:(id)arg1;	// IMP=0x000000000000e1b9

@end

