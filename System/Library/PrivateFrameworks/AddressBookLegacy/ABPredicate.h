//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSPredicate.h>

@interface ABPredicate : NSPredicate
{
}

+ (void)searchPeopleWithPredicate:(id)arg1 sortOrder:(unsigned int)arg2 ranked:(_Bool)arg3 inAddressBook:(void *)arg4 withDelegate:(id)arg5;	// IMP=0x00000000000391c9
+ (void)searchPeopleWithPredicate:(id)arg1 sortOrder:(unsigned int)arg2 inAddressBook:(void *)arg3 withDelegate:(id)arg4;	// IMP=0x00000000000391a1
+ (id)newQueryFromCompoundPredicate:(id)arg1 withSortOrder:(unsigned int)arg2 ranked:(_Bool)arg3 addressBook:(void *)arg4 propertyIndices:(const struct __CFDictionary **)arg5;	// IMP=0x000000000003863b
+ (id)newQueryFromABPredicate:(id)arg1 withSortOrder:(unsigned int)arg2 ranked:(_Bool)arg3 addressBook:(void *)arg4 propertyIndices:(const struct __CFDictionary **)arg5;	// IMP=0x0000000000038579
+ (id)newQueryWithProperties:(id)arg1 joins:(id)arg2 whereString:(id)arg3 sortOrder:(unsigned int)arg4 rankString:(id)arg5 groupByProperties:(id)arg6 addressBook:(void *)arg7 propertyIndices:(const struct __CFDictionary **)arg8;	// IMP=0x00000000000381fe
+ (id)personPredicateWithGroup:(void *)arg1 source:(void *)arg2 account:(id)arg3;	// IMP=0x000000000003816f
+ (id)personPredicateWithPhoneLike:(id)arg1 countryHint:(id)arg2 addressBook:(void *)arg3;	// IMP=0x00000000000380fc
+ (id)personPredicateWithAnyValueForProperty:(int)arg1;	// IMP=0x000000000003809b
+ (id)personPredicateWithValue:(id)arg1 comparison:(long long)arg2 forProperty:(int)arg3;	// IMP=0x000000000003800c
+ (id)personPredicateWithNameOnly:(id)arg1 account:(id)arg2 addressBook:(void *)arg3;	// IMP=0x0000000000037f71
+ (id)personPredicateWithName:(id)arg1 addressBook:(void *)arg2;	// IMP=0x0000000000037f3c
+ (id)personPredicateWithNameLike:(id)arg1 groups:(id)arg2 sources:(id)arg3 includeSourceInResults:(_Bool)arg4 includePhotosInResults:(_Bool)arg5 addressBook:(void *)arg6;	// IMP=0x0000000000037db6
+ (id)personPredicateWithNameLike:(id)arg1 groups:(id)arg2 sources:(id)arg3 includeSourceInResults:(_Bool)arg4 addressBook:(void *)arg5;	// IMP=0x0000000000037d9a
+ (id)personPredicateWithNameLike:(id)arg1 groups:(id)arg2 sources:(id)arg3 addressBook:(void *)arg4;	// IMP=0x0000000000037d78
+ (id)personPredicateWithNameLike:(id)arg1 group:(void *)arg2 source:(void *)arg3 account:(id)arg4 includeSourceInResults:(_Bool)arg5 addressBook:(void *)arg6;	// IMP=0x0000000000037cbc
+ (id)personPredicateWithNameLike:(id)arg1 group:(void *)arg2 source:(void *)arg3 account:(id)arg4 addressBook:(void *)arg5;	// IMP=0x0000000000037ca0
+ (id)personPredicateWithNameLike:(id)arg1 addressBook:(void *)arg2;	// IMP=0x0000000000037c2d
- (id)querySerializationIdentifier;	// IMP=0x000000000003948e
- (void)bindDouble:(double)arg1 toStatement:(struct CPSqliteStatement *)arg2 withBindingOffset:(int *)arg3;	// IMP=0x0000000000039471
- (void)bindString:(id)arg1 toStatement:(struct CPSqliteStatement *)arg2 withBindingOffset:(int *)arg3;	// IMP=0x000000000003940a
- (void)ab_bindJoinClauseComponentOfStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;	// IMP=0x0000000000039404
- (void)ab_bindWhereClauseComponentOfStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;	// IMP=0x00000000000393fe
- (void)evaluateCallbackWithSqliteContext:(struct sqlite3_context *)arg1 predicateContext:(id)arg2 values:(struct sqlite3_value **)arg3 count:(int)arg4;	// IMP=0x00000000000393f8
- (id)callbackContext;	// IMP=0x00000000000393f0
- (_Bool)hasCallback;	// IMP=0x00000000000393e8
- (id)queryRankStringForPredicateIdentifier:(int)arg1;	// IMP=0x00000000000393e0
- (id)queryWhereStringForPredicateIdentifier:(int)arg1;	// IMP=0x00000000000393d8
- (id)queryGroupByProperties;	// IMP=0x00000000000393d0
- (id)queryJoinsInCompound:(_Bool)arg1 predicateIdentifier:(int)arg2;	// IMP=0x00000000000393c8
- (id)_querySelectStringForPredicateIdentifier:(int)arg1;	// IMP=0x0000000000039347
- (id)querySelectPropertiesForPredicateIdentifier:(int)arg1;	// IMP=0x000000000003933f
- (_Bool)isValid;	// IMP=0x0000000000039337
- (id)predicateFormat;	// IMP=0x00000000000392fe
- (void)dealloc;	// IMP=0x00000000000392cf
- (id)init;	// IMP=0x00000000000392a0
- (id)ab_newQueryWithSortOrder:(unsigned int)arg1 ranked:(_Bool)arg2 addressBook:(void *)arg3 propertyIndices:(const struct __CFDictionary **)arg4;	// IMP=0x0000000000039f93
- (void)ab_addCallbackContextToArray:(id)arg1;	// IMP=0x0000000000039f12
- (_Bool)ab_hasCallback;	// IMP=0x0000000000039f00

@end

