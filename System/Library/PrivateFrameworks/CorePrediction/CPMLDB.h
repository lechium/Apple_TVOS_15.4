//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPMLSchema, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableString, NSString;
@protocol CPMLAlgorithmProtocol, OS_dispatch_queue;

@interface CPMLDB : NSObject
{
    unsigned long long *repFields;	// 8 = 0x8
    unsigned long long maxFieldCount;	// 16 = 0x10
    unsigned int commitCountMax;	// 24 = 0x18
    unsigned int currentCommitCount;	// 28 = 0x1c
    unsigned int rowCount;	// 32 = 0x20
    double *cardinality;	// 40 = 0x28
    double *min;	// 48 = 0x30
    double *max;	// 56 = 0x38
    double *mean;	// 64 = 0x40
    double *sumOfX;	// 72 = 0x48
    double *sumOfXX;	// 80 = 0x50
    double *sigma;	// 88 = 0x58
    CPMLSchema *cpSchema;	// 96 = 0x60
    NSMutableArray *indexer;	// 104 = 0x68
    NSMutableDictionary *vectorListCardinality;	// 112 = 0x70
    NSMutableString *dbTableName;	// 120 = 0x78
    double currentTimeInterval;	// 128 = 0x80
    double minTimeToLogIndex;	// 136 = 0x88
    int _openCPMLDBOptions;	// 144 = 0x90
    NSDictionary *_cInfo;	// 152 = 0x98
    NSString *_trainingModelFileAndPath;	// 160 = 0xa0
    NSString *_trainingFile;	// 168 = 0xa8
    id <CPMLAlgorithmProtocol> _thedelegate;	// 176 = 0xb0
    NSObject<OS_dispatch_queue> *_dispatch_queue;	// 184 = 0xb8
    struct sqlite3 *db;	// 192 = 0xc0
    NSString *_dbFileName;	// 200 = 0xc8
}

+ (id)getConfigurationFromPlist:(id)arg1;	// IMP=0x00000000000246d3
- (void).cxx_destruct;	// IMP=0x000000000002aada
@property(readonly) NSString *dbFileName; // @synthesize dbFileName=_dbFileName;
@property(readonly, nonatomic) struct sqlite3 *db; // @synthesize db;
@property(readonly) CPMLSchema *cpSchema; // @synthesize cpSchema;
- (id)getDispatchQueue;	// IMP=0x000000000002aa94
- (void)setDispatchQueue:(id)arg1;	// IMP=0x000000000002aa80
- (id)getDelegate;	// IMP=0x000000000002aa6f
- (void)setCPMLAlgorithm:(id)arg1;	// IMP=0x000000000002aa5b
- (_Bool)reset;	// IMP=0x000000000002a873
- (void)removeTrainingRowData:(double)arg1;	// IMP=0x000000000002a668
- (void)removeTrainingRow:(id)arg1;	// IMP=0x000000000002a4f6
- (id)extractRow:(id)arg1;	// IMP=0x0000000000029db2
- (id)fileProtectionClassRequest:(id)arg1;	// IMP=0x0000000000029daa
- (id)addValues:(int)arg1;	// IMP=0x0000000000029c36
- (void)printFormat:(id)arg1;	// IMP=0x0000000000029a7c
- (id)getRemapTable;	// IMP=0x0000000000029a66
- (int)getYColumnPosition;	// IMP=0x0000000000029a50
- (int)getVectorContent:(unsigned long long)arg1;	// IMP=0x0000000000029a3a
- (int)getSchemaType:(unsigned long long)arg1;	// IMP=0x0000000000029a24
- (id)getColumnName:(unsigned long long)arg1;	// IMP=0x0000000000029a0e
- (void)indexTable:(id)arg1 withColumn:(id)arg2;	// IMP=0x000000000002984d
- (void)updateStatistics;	// IMP=0x00000000000295f9
- (_Bool)loadStatisticTable;	// IMP=0x0000000000029364
- (void)initStatisticsTable;	// IMP=0x0000000000029317
- (double)updateStatisticsString:(id)arg1 colPosition:(unsigned long long)arg2;	// IMP=0x00000000000291f1
- (void)updateStatisticsReal:(double)arg1 colPosition:(unsigned long long)arg2;	// IMP=0x0000000000029154
- (_Bool)isColumnContinousData:(unsigned int)arg1;	// IMP=0x000000000002913e
- (double)columnQueryFor:(unsigned int)arg1 withQuery:(id)arg2;	// IMP=0x0000000000028f11
- (double)getMaxFor:(unsigned int)arg1;	// IMP=0x0000000000028e23
- (double)getMinFor:(unsigned int)arg1;	// IMP=0x0000000000028d35
- (double)getStdDevFor:(unsigned int)arg1;	// IMP=0x0000000000028c3d
- (double)getMeanFor:(unsigned int)arg1;	// IMP=0x0000000000028b4f
- (unsigned long long)getRowCount;	// IMP=0x0000000000028a34
- (unsigned long long)getColumnCount;	// IMP=0x0000000000028a1e
- (unsigned long long)getCardinality:(unsigned int)arg1;	// IMP=0x00000000000286d3
- (unsigned long long)getCombinedRemapTableCardinality:(unsigned int)arg1;	// IMP=0x00000000000282c2
- (void)dropCommands:(id)arg1;	// IMP=0x000000000002822a
- (void)deleteAllRows:(id)arg1;	// IMP=0x0000000000028192
- (void)deleteRow:(id)arg1 whereMatch:(id)arg2;	// IMP=0x00000000000280da
- (void)updateTable:(id)arg1 withAttribute:(id)arg2 whereMatch:(id)arg3;	// IMP=0x0000000000027ffd
- (void)queryDatabase:(id)arg1 whereMatch:(id)arg2;	// IMP=0x0000000000027f45
- (void)insertIntoTable:(id)arg1 withTuple:(id)arg2;	// IMP=0x0000000000027e8d
- (void)addColumnToTable:(id)arg1 withNewColumn:(id)arg2;	// IMP=0x0000000000027dd5
- (void)createTable:(id)arg1 withSchema:(id)arg2 withExistingTable:(_Bool)arg3;	// IMP=0x0000000000027ce2
- (void)execSQLCommand:(id)arg1;	// IMP=0x0000000000027b91
- (_Bool)logNSDataDouble:(id)arg1;	// IMP=0x000000000002799a
- (_Bool)logNSDataFloat:(id)arg1;	// IMP=0x00000000000277a3
- (_Bool)logBatchNSDictionary:(id)arg1;	// IMP=0x0000000000027607
- (_Bool)logNSDictionary:(id)arg1;	// IMP=0x00000000000269be
- (_Bool)logBatchNSArray:(id)arg1;	// IMP=0x0000000000026822
- (_Bool)logNSArray:(id)arg1;	// IMP=0x000000000002663e
- (_Bool)logNSObjectV:(id)arg1;	// IMP=0x00000000000263cd
- (_Bool)logCTypesV:(void *)arg1;	// IMP=0x00000000000260c9
- (id)prepInsertStatementForMainTable;	// IMP=0x0000000000025fe9
- (void)flushDB;	// IMP=0x0000000000025f02
- (void)restart;	// IMP=0x0000000000025e1b
- (void)dealloc;	// IMP=0x0000000000025d92
- (void)loadTables;	// IMP=0x0000000000025c87
- (void)doInitializeWithDataFile:(id)arg1 dataFromFile:(id)arg2 withConfiguration:(id)arg3 withWriteOptions:(int)arg4;	// IMP=0x0000000000025222
- (id)initWithDBName:(id)arg1 dataFromFile:(id)arg2 withConfiguration:(id)arg3 withWriteOptions:(int)arg4;	// IMP=0x0000000000025104
- (id)initWithDBName:(id)arg1 dataFromFile:(id)arg2 withPlistPath:(id)arg3 withWriteOptions:(int)arg4;	// IMP=0x0000000000024f61
- (void)doInitialize:(id)arg1 withConfiguration:(id)arg2 withWriteOptions:(int)arg3;	// IMP=0x0000000000024f3b
- (void)doInitCommon:(id)arg1 withDict:(id)arg2 withFileExists:(_Bool *)arg3 withWriteOptions:(int)arg4;	// IMP=0x0000000000024a1a
- (id)initWithDBName:(id)arg1 withConfiguration:(id)arg2 withWriteOptions:(int)arg3;	// IMP=0x0000000000024928
- (id)initWithDBName:(id)arg1 withPlistPath:(id)arg2 withWriteOptions:(int)arg3;	// IMP=0x00000000000247b7
- (void)initMaxSizeStatistics:(unsigned long long)arg1;	// IMP=0x000000000002462e

@end

