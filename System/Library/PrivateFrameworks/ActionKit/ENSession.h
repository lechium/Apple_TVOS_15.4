//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ActionKit/ENAuthenticatorDelegate-Protocol.h>
#import <ActionKit/ENBusinessNoteStoreClientDelegate-Protocol.h>
#import <ActionKit/ENLinkedNoteStoreClientDelegate-Protocol.h>

@class EDAMUser, ENAuthCache, ENBusinessNoteStoreClient, ENNoteStoreClient, ENPreferencesStore, ENUserStoreClient, NSArray, NSDate, NSString;
@protocol ENAuthenticator, ENSDKLogging, OS_dispatch_queue;

@interface ENSession : NSObject <ENLinkedNoteStoreClientDelegate, ENBusinessNoteStoreClientDelegate, ENAuthenticatorDelegate>
{
    _Bool _isAuthenticated;	// 8 = 0x8
    _Bool _supportsLinkedAppNotebook;	// 9 = 0x9
    id <ENSDKLogging> _logger;	// 16 = 0x10
    NSString *_sourceApplication;	// 24 = 0x18
    long long _personalUploadUsage;	// 32 = 0x20
    long long _personalUploadLimit;	// 40 = 0x28
    long long _businessUploadUsage;	// 48 = 0x30
    long long _businessUploadLimit;	// 56 = 0x38
    id <ENAuthenticator> _authenticator;	// 64 = 0x40
    CDUnknownBlockType _authorizationBlock;	// 72 = 0x48
    CDUnknownBlockType _authenticationCompletion;	// 80 = 0x50
    NSString *_sessionHost;	// 88 = 0x58
    EDAMUser *_user;	// 96 = 0x60
    NSString *_primaryAuthenticationToken;	// 104 = 0x68
    EDAMUser *_businessUser;	// 112 = 0x70
    ENPreferencesStore *_preferences;	// 120 = 0x78
    ENUserStoreClient *_userStore;	// 128 = 0x80
    ENNoteStoreClient *_primaryNoteStore;	// 136 = 0x88
    ENBusinessNoteStoreClient *_businessNoteStore;	// 144 = 0x90
    ENAuthCache *_authCache;	// 152 = 0x98
    NSArray *_notebooksCache;	// 160 = 0xa0
    NSDate *_notebooksCacheDate;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_thumbnailQueue;	// 176 = 0xb0
    ENUserStoreClient *_userStorePendingRevocation;	// 184 = 0xb8
}

+ (id)bundleSeedID;	// IMP=0x00000000002d37c9
+ (_Bool)checkSharedSessionSettings;	// IMP=0x00000000002d370e
+ (id)developerToken;	// IMP=0x00000000002d36fd
+ (id)consumerSecret;	// IMP=0x00000000002d36ec
+ (id)consumerKey;	// IMP=0x00000000002d36db
+ (id)sessionHostOverride;	// IMP=0x00000000002d36ca
+ (id)keychainAccessGroup;	// IMP=0x00000000002d36b9
+ (void)setKeychainGroup:(id)arg1;	// IMP=0x00000000002d35f8
+ (void)setSecurityApplicationGroupIdentifier:(id)arg1;	// IMP=0x00000000002d35e4
+ (void)setDisableRefreshingNotebooksCacheOnLaunch:(_Bool)arg1;	// IMP=0x00000000002d35d8
+ (id)sharedSession;	// IMP=0x00000000002d35a8
+ (void)setSharedSessionDeveloperToken:(id)arg1 noteStoreUrl:(id)arg2;	// IMP=0x00000000002d34fb
+ (void)setSharedSessionConsumerKey:(id)arg1 consumerSecret:(id)arg2 optionalHost:(id)arg3;	// IMP=0x00000000002d3419
- (void).cxx_destruct;	// IMP=0x00000000002cf91f
@property(retain, nonatomic) ENUserStoreClient *userStorePendingRevocation; // @synthesize userStorePendingRevocation=_userStorePendingRevocation;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *thumbnailQueue; // @synthesize thumbnailQueue=_thumbnailQueue;
@property(retain, nonatomic) NSDate *notebooksCacheDate; // @synthesize notebooksCacheDate=_notebooksCacheDate;
@property(retain, nonatomic) NSArray *notebooksCache; // @synthesize notebooksCache=_notebooksCache;
@property(retain, nonatomic) ENAuthCache *authCache; // @synthesize authCache=_authCache;
@property(retain, nonatomic) ENBusinessNoteStoreClient *businessNoteStore; // @synthesize businessNoteStore=_businessNoteStore;
@property(retain, nonatomic) ENNoteStoreClient *primaryNoteStore; // @synthesize primaryNoteStore=_primaryNoteStore;
@property(retain, nonatomic) ENUserStoreClient *userStore; // @synthesize userStore=_userStore;
@property(retain, nonatomic) ENPreferencesStore *preferences; // @synthesize preferences=_preferences;
@property(retain, nonatomic) EDAMUser *businessUser; // @synthesize businessUser=_businessUser;
@property(nonatomic) _Bool supportsLinkedAppNotebook; // @synthesize supportsLinkedAppNotebook=_supportsLinkedAppNotebook;
@property(copy, nonatomic) NSString *primaryAuthenticationToken; // @synthesize primaryAuthenticationToken=_primaryAuthenticationToken;
@property(retain, nonatomic) EDAMUser *user; // @synthesize user=_user;
@property(copy, nonatomic) NSString *sessionHost; // @synthesize sessionHost=_sessionHost;
@property(copy, nonatomic) CDUnknownBlockType authenticationCompletion; // @synthesize authenticationCompletion=_authenticationCompletion;
@property(copy, nonatomic) CDUnknownBlockType authorizationBlock; // @synthesize authorizationBlock=_authorizationBlock;
@property(retain, nonatomic) id <ENAuthenticator> authenticator; // @synthesize authenticator=_authenticator;
@property(nonatomic) long long businessUploadLimit; // @synthesize businessUploadLimit=_businessUploadLimit;
@property(nonatomic) long long businessUploadUsage; // @synthesize businessUploadUsage=_businessUploadUsage;
@property(nonatomic) long long personalUploadLimit; // @synthesize personalUploadLimit=_personalUploadLimit;
@property(nonatomic) long long personalUploadUsage; // @synthesize personalUploadUsage=_personalUploadUsage;
@property(nonatomic) _Bool isAuthenticated; // @synthesize isAuthenticated=_isAuthenticated;
@property(copy, nonatomic) NSString *sourceApplication; // @synthesize sourceApplication=_sourceApplication;
@property(retain, nonatomic) id <ENSDKLogging> logger; // @synthesize logger=_logger;
- (void)storeClientFailedAuthentication:(id)arg1;	// IMP=0x00000000002cf5c2
- (void)authenticatorDidFailWithError:(id)arg1;	// IMP=0x00000000002cf5b0
- (void)authenticatorDidAuthenticateWithCredentials:(id)arg1 authInfo:(id)arg2;	// IMP=0x00000000002cf422
- (void)authenticatorShouldShowAuthorizationUIWithURL:(id)arg1 callbackPrefix:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000002cf363
- (id)userStoreClientForBootstrapping;	// IMP=0x00000000002cf2fe
- (id)authenticationTokenForLinkedNotebookRef:(id)arg1;	// IMP=0x00000000002cf06e
- (id)noteStoreUrlForBusinessStoreClient:(id)arg1;	// IMP=0x00000000002cf01e
- (id)authenticationTokenForBusinessStoreClient:(id)arg1;	// IMP=0x00000000002cefce
- (id)userStoreUrl;	// IMP=0x00000000002cee89
- (void)setCurrentProfileNameFromHost:(id)arg1;	// IMP=0x00000000002cedc9
- (id)currentProfileName;	// IMP=0x00000000002ced72
- (id)authenticationTokenForNoteRef:(id)arg1;	// IMP=0x00000000002ceb01
- (id)shardIdForNoteRef:(id)arg1;	// IMP=0x00000000002cea0e
- (id)noteStoreForNotebook:(id)arg1;	// IMP=0x00000000002ce94c
- (id)noteStoreForNoteRef:(id)arg1;	// IMP=0x00000000002ce84a
- (id)noteStoreForLinkedNotebook:(id)arg1;	// IMP=0x00000000002ce7d1
- (void)notifyAuthenticationChanged;	// IMP=0x00000000002ce4cd
- (id)validBusinessAuthenticationResult;	// IMP=0x00000000002ce2a8
- (id)primaryCredentials;	// IMP=0x00000000002ce249
- (void)saveCredentialStore:(id)arg1;	// IMP=0x00000000002ce1d0
- (void)addCredentials:(id)arg1;	// IMP=0x00000000002ce14e
- (id)credentialsForHost:(id)arg1;	// IMP=0x00000000002ce0cb
- (id)credentialStore;	// IMP=0x00000000002cdfef
- (_Bool)isErrorDueToRestrictedAuth:(id)arg1;	// IMP=0x00000000002cdeef
- (void)downloadThumbnailForNote:(id)arg1 maxDimension:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002cdc73
- (void)downloadNote:(id)arg1 progress:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002cd995
- (void)findNotes_completeWithContext:(id)arg1 error:(id)arg2;	// IMP=0x00000000002cd8d5
- (void)findNotes_processResultsWithContext:(id)arg1;	// IMP=0x00000000002ccdd7
- (void)findNotes_nextFindInLinkedScopeWithContext:(id)arg1;	// IMP=0x00000000002ccadc
- (void)findNotes_findInLinkedScopeWithContext:(id)arg1;	// IMP=0x00000000002cc74b
- (void)findNotes_findInBusinessScopeWithContext:(id)arg1;	// IMP=0x00000000002cc4c2
- (void)findNotes_findInPersonalScopeWithContext:(id)arg1;	// IMP=0x00000000002cc2ae
- (void)findNotes_listNotebooksWithContext:(id)arg1;	// IMP=0x00000000002cc21c
- (void)findNotesWithSearch:(id)arg1 inNotebook:(id)arg2 orScope:(unsigned long long)arg3 sortOrder:(unsigned long long)arg4 maxResults:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000002cbbd8
- (void)deleteNote:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000002cba7a
- (void)shareNote:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000002cb906
- (void)uploadNote_completeWithContext:(id)arg1 error:(id)arg2;	// IMP=0x00000000002cb7f2
- (void)uploadNote_createWithContext:(id)arg1;	// IMP=0x00000000002cb591
- (void)uploadNote_findSharedAppNotebookWithContext:(id)arg1;	// IMP=0x00000000002cb483
- (void)uploadNote_findLinkedAppNotebookWithContext:(id)arg1;	// IMP=0x00000000002cb3c4
- (void)uploadNote_updateWithContext:(id)arg1;	// IMP=0x00000000002cb162
- (void)uploadNote_determineDestinationWithContext:(id)arg1;	// IMP=0x00000000002caade
- (void)uploadNote:(id)arg1 policy:(long long)arg2 toNotebook:(id)arg3 orReplaceNote:(id)arg4 progress:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000002ca49b
- (void)uploadNote:(id)arg1 notebook:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002ca476
- (void)listNotebooks_cleanCache;	// IMP=0x00000000002ca444
- (void)listNotebooks_completeWithContext:(id)arg1 error:(id)arg2;	// IMP=0x00000000002ca330
- (void)listNotebooks_prepareResultsWithContext:(id)arg1;	// IMP=0x00000000002ca20d
- (void)listNotebooks_processSharedNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c9efa
- (void)listNotebooks_completePendingSharedNotebookWithContext:(id)arg1;	// IMP=0x00000000002c9e8f
- (void)listNotebooks_fetchSharedNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c9a54
- (void)listNotebooks_processBusinessNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c9659
- (void)listNotebooks_fetchBusinessNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c959a
- (void)listNotebooks_fetchSharedBusinessNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c94db
- (void)listNotebooks_listLinkedNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c941c
- (void)listNotebooks_listSharedNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c935d
- (void)listNotebooks_listNotebooksWithContext:(id)arg1;	// IMP=0x00000000002c929e
- (void)listWritableNotebooksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000002c9210
- (void)listNotebooksWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000002c902e
- (_Bool)handleOpenURL:(id)arg1;	// IMP=0x00000000002c8f8e
- (void)unauthenticateAndRevokeAccessToken:(_Bool)arg1;	// IMP=0x00000000002c8cee
- (void)unauthenticateWithoutRevokingAccessToken;	// IMP=0x00000000002c8cda
- (void)unauthenticate;	// IMP=0x00000000002c8cc3
- (_Bool)appNotebookIsLinked;	// IMP=0x00000000002c8c4e
- (int)userID;	// IMP=0x00000000002c8be0
@property(readonly, nonatomic) NSString *businessDisplayName;
@property(readonly, nonatomic) NSString *userDisplayName;
@property(readonly, nonatomic) _Bool isBusinessUser;
@property(readonly, nonatomic) _Bool isPremiumUser;
@property(readonly, nonatomic) _Bool isAuthenticationInProgress;
- (void)completeAuthenticationWithError:(id)arg1;	// IMP=0x00000000002c883d
- (void)refreshUploadUsage;	// IMP=0x00000000002c874f
- (void)performPostAuthentication;	// IMP=0x00000000002c8693
- (void)selectInitialSessionHost;	// IMP=0x00000000002c8427
- (void)startup;	// IMP=0x00000000002c8102
- (void)dealloc;	// IMP=0x00000000002c808d
- (id)init;	// IMP=0x00000000002c7ff1
- (void)authenticateWithAuthorizationBlock:(CDUnknownBlockType)arg1 preferRegistration:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000001e596a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

