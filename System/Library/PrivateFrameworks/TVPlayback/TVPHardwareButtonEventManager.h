//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TVPlayback/MPVolumeControllerDelegate-Protocol.h>
#import <TVPlayback/PBSBulletinServiceDelegate-Protocol.h>

@class MPAVRoute, MPVolumeController, NSString, PBSBulletin, PBSPlayPauseButtonEventAssertion, PBSVolumeButtonEventAssertion;
@protocol OS_dispatch_queue;

@interface TVPHardwareButtonEventManager : NSObject <MPVolumeControllerDelegate, PBSBulletinServiceDelegate>
{
    _Bool _canAcceptHardwareButtonEvents;	// 8 = 0x8
    _Bool _wantsVolumeButtonEvents;	// 9 = 0x9
    _Bool _wantsExclusivePlayPauseButtonEvents;	// 10 = 0xa
    _Bool _volumeNotificationHandlersEnabled;	// 11 = 0xb
    float _lastVolumeLevel;	// 12 = 0xc
    NSString *_name;	// 16 = 0x10
    MPAVRoute *_route;	// 24 = 0x18
    MPVolumeController *_volumeController;	// 32 = 0x20
    PBSPlayPauseButtonEventAssertion *_playPauseButtonAssertion;	// 40 = 0x28
    PBSVolumeButtonEventAssertion *_volumeButtonAssertion;	// 48 = 0x30
    PBSBulletin *_volumeBulletin;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_volumeUpdateQueue;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00000000000e3b11
@property(nonatomic) float lastVolumeLevel; // @synthesize lastVolumeLevel=_lastVolumeLevel;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *volumeUpdateQueue; // @synthesize volumeUpdateQueue=_volumeUpdateQueue;
@property(retain, nonatomic) PBSBulletin *volumeBulletin; // @synthesize volumeBulletin=_volumeBulletin;
@property(nonatomic) _Bool volumeNotificationHandlersEnabled; // @synthesize volumeNotificationHandlersEnabled=_volumeNotificationHandlersEnabled;
@property(readonly, nonatomic) PBSVolumeButtonEventAssertion *volumeButtonAssertion; // @synthesize volumeButtonAssertion=_volumeButtonAssertion;
@property(readonly, nonatomic) PBSPlayPauseButtonEventAssertion *playPauseButtonAssertion; // @synthesize playPauseButtonAssertion=_playPauseButtonAssertion;
@property(readonly, nonatomic) MPVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property(nonatomic) _Bool wantsExclusivePlayPauseButtonEvents; // @synthesize wantsExclusivePlayPauseButtonEvents=_wantsExclusivePlayPauseButtonEvents;
@property(nonatomic) _Bool wantsVolumeButtonEvents; // @synthesize wantsVolumeButtonEvents=_wantsVolumeButtonEvents;
@property(nonatomic) _Bool canAcceptHardwareButtonEvents; // @synthesize canAcceptHardwareButtonEvents=_canAcceptHardwareButtonEvents;
@property(retain, nonatomic) MPAVRoute *route; // @synthesize route=_route;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void)_presentBulletinWithVolume:(float)arg1;	// IMP=0x00000000000e3913
- (void)_updateButtonOverrides;	// IMP=0x00000000000e369f
- (_Bool)_canControlVolume;	// IMP=0x00000000000e3661
- (void)bulletinService:(id)arg1 didDismissBulletin:(id)arg2 withReason:(unsigned long long)arg3;	// IMP=0x00000000000e352b
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;	// IMP=0x00000000000e33a7
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(_Bool)arg2;	// IMP=0x00000000000e325f
- (void)volumeDownRequested:(id)arg1;	// IMP=0x00000000000e316a
- (void)volumeUpRequested:(id)arg1;	// IMP=0x00000000000e3078
@property(readonly, copy) NSString *description;
- (id)initWithName:(id)arg1;	// IMP=0x00000000000e2c0f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

