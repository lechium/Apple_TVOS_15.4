//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class HSCloudClient, ML3MusicLibrary, NSArray, NSDictionary, NSLock, NSMapTable, NSMutableDictionary, NSNumber, NSObject, NSTimer, TVSBackgroundTask, TVSDocumentLoader;
@protocol OS_dispatch_queue;

@interface TVCKCloudDataClient
{
    struct mach_timebase_info _timebaseInfo;	// 8 = 0x8
    _Bool _servicesInitialized;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_artworkProcessingQueue;	// 24 = 0x18
    unsigned short _concurrentArtworkRequestCount;	// 32 = 0x20
    _Bool _shouldInitializeMusicAfterDeauthentication;	// 34 = 0x22
    _Bool _waitingForURLBag;	// 35 = 0x23
    NSArray *_rentalDataItemsFromPendingSongs;	// 40 = 0x28
    NSArray *_rentalDataItemsAcquiredDuringPendingSongsRequest;	// 48 = 0x30
    _Bool _supportsSaga;	// 56 = 0x38
    _Bool _isSagaPurchased;	// 57 = 0x39
    _Bool _monitorsCheckedOutRentals;	// 58 = 0x3a
    _Bool _isFusePurchased;	// 59 = 0x3b
    _Bool _forceUpdateRentals;	// 60 = 0x3c
    _Bool _monitorNotificationObserversAdded;	// 61 = 0x3d
    _Bool _needsToCheckForOutstandingRentals;	// 62 = 0x3e
    float _musicSyncProgress;	// 64 = 0x40
    long long _musicSyncStatus;	// 72 = 0x48
    long long _purchaseSyncStatus;	// 80 = 0x50
    HSCloudClient *_hsCloudClient;	// 88 = 0x58
    ML3MusicLibrary *_mlLibrary;	// 96 = 0x60
    NSNumber *_accountDSID;	// 104 = 0x68
    TVSBackgroundTask *_jaliscoPushUpdateTask;	// 112 = 0x70
    TVSBackgroundTask *_sagaPushUpdateTask;	// 120 = 0x78
    TVSBackgroundTask *_itemPropertiesUploadTask;	// 128 = 0x80
    NSMutableDictionary *_artworkRequestMap;	// 136 = 0x88
    NSLock *_jaliscoRevisionLock;	// 144 = 0x90
    NSLock *_sagaRevisionLock;	// 152 = 0x98
    TVSDocumentLoader *_storeRentalCheckCountRequest;	// 160 = 0xa0
    TVSDocumentLoader *_storeRentalItemsRequest;	// 168 = 0xa8
    NSTimer *_rentalExpirationTimer;	// 176 = 0xb0
    NSNumber *_rentalsLocalRank;	// 184 = 0xb8
    NSNumber *_rentalsLocalLastModTime;	// 192 = 0xc0
    long long _lastRefreshInitiated;	// 200 = 0xc8
    long long _acquisitionRefreshesRentals;	// 208 = 0xd0
    NSTimer *_rentalMonitorTimer;	// 216 = 0xd8
    long long _numCheckedOutRentals;	// 224 = 0xe0
    NSMapTable *_acquiredItemsDict;	// 232 = 0xe8
    NSDictionary *_cachedDataItemDictionary;	// 240 = 0xf0
}

+ (id)sectionIndexTitles;	// IMP=0x00000000000048b9
+ (id)cloudDataClient;	// IMP=0x00000000000022cc
@property(retain, nonatomic) NSDictionary *cachedDataItemDictionary; // @synthesize cachedDataItemDictionary=_cachedDataItemDictionary;
@property(retain, nonatomic) NSMapTable *acquiredItemsDict; // @synthesize acquiredItemsDict=_acquiredItemsDict;
@property(nonatomic) long long numCheckedOutRentals; // @synthesize numCheckedOutRentals=_numCheckedOutRentals;
@property(nonatomic) _Bool needsToCheckForOutstandingRentals; // @synthesize needsToCheckForOutstandingRentals=_needsToCheckForOutstandingRentals;
@property(nonatomic) _Bool monitorNotificationObserversAdded; // @synthesize monitorNotificationObserversAdded=_monitorNotificationObserversAdded;
@property(retain, nonatomic) NSTimer *rentalMonitorTimer; // @synthesize rentalMonitorTimer=_rentalMonitorTimer;
@property(nonatomic) _Bool forceUpdateRentals; // @synthesize forceUpdateRentals=_forceUpdateRentals;
@property(nonatomic) long long acquisitionRefreshesRentals; // @synthesize acquisitionRefreshesRentals=_acquisitionRefreshesRentals;
@property(nonatomic) long long lastRefreshInitiated; // @synthesize lastRefreshInitiated=_lastRefreshInitiated;
@property(retain, nonatomic) NSNumber *rentalsLocalLastModTime; // @synthesize rentalsLocalLastModTime=_rentalsLocalLastModTime;
@property(retain, nonatomic) NSNumber *rentalsLocalRank; // @synthesize rentalsLocalRank=_rentalsLocalRank;
@property(retain, nonatomic) NSTimer *rentalExpirationTimer; // @synthesize rentalExpirationTimer=_rentalExpirationTimer;
@property(retain, nonatomic) TVSDocumentLoader *storeRentalItemsRequest; // @synthesize storeRentalItemsRequest=_storeRentalItemsRequest;
@property(retain, nonatomic) TVSDocumentLoader *storeRentalCheckCountRequest; // @synthesize storeRentalCheckCountRequest=_storeRentalCheckCountRequest;
@property(retain, nonatomic) NSLock *sagaRevisionLock; // @synthesize sagaRevisionLock=_sagaRevisionLock;
@property(retain, nonatomic) NSLock *jaliscoRevisionLock; // @synthesize jaliscoRevisionLock=_jaliscoRevisionLock;
@property(retain, nonatomic) NSMutableDictionary *artworkRequestMap; // @synthesize artworkRequestMap=_artworkRequestMap;
@property(retain, nonatomic) TVSBackgroundTask *itemPropertiesUploadTask; // @synthesize itemPropertiesUploadTask=_itemPropertiesUploadTask;
@property(retain, nonatomic) TVSBackgroundTask *sagaPushUpdateTask; // @synthesize sagaPushUpdateTask=_sagaPushUpdateTask;
@property(retain, nonatomic) TVSBackgroundTask *jaliscoPushUpdateTask; // @synthesize jaliscoPushUpdateTask=_jaliscoPushUpdateTask;
@property(retain, nonatomic) NSNumber *accountDSID; // @synthesize accountDSID=_accountDSID;
@property(retain, nonatomic) ML3MusicLibrary *mlLibrary; // @synthesize mlLibrary=_mlLibrary;
@property(retain, nonatomic) HSCloudClient *hsCloudClient; // @synthesize hsCloudClient=_hsCloudClient;
@property(nonatomic) _Bool isFusePurchased; // @synthesize isFusePurchased=_isFusePurchased;
@property(nonatomic) _Bool monitorsCheckedOutRentals; // @synthesize monitorsCheckedOutRentals=_monitorsCheckedOutRentals;
@property(nonatomic) long long purchaseSyncStatus; // @synthesize purchaseSyncStatus=_purchaseSyncStatus;
@property(nonatomic) float musicSyncProgress; // @synthesize musicSyncProgress=_musicSyncProgress;
@property(nonatomic) long long musicSyncStatus; // @synthesize musicSyncStatus=_musicSyncStatus;
@property(nonatomic) _Bool isSagaPurchased; // @synthesize isSagaPurchased=_isSagaPurchased;
@property(nonatomic) _Bool supportsSaga; // @synthesize supportsSaga=_supportsSaga;
- (void)_postDataClientDidUpdateNotificationWithUserInfo:(id)arg1;	// IMP=0x00000000000063ae
- (void)_registerDataClientDidUpdateObserver:(CDUnknownBlockType)arg1;	// IMP=0x0000000000006312
- (void)_itemPropertyUpdateNotification:(id)arg1;	// IMP=0x00000000000061d0
- (void)_networkChanged:(id)arg1;	// IMP=0x0000000000006179
- (void)_urlBagLoaded:(id)arg1;	// IMP=0x0000000000006103
- (void)_iTunesAccountSubscriptionStatusChanged;	// IMP=0x0000000000005fc2
- (void)_iTunesAccountChanged;	// IMP=0x0000000000005eaa
- (void)_iTunesAccountActivity:(id)arg1;	// IMP=0x0000000000005d88
- (void)_getAccountInfoWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000572d
- (void)_initializeServices;	// IMP=0x00000000000056ab
- (id)_cloudItemIDListForDataItems:(id)arg1;	// IMP=0x00000000000053fd
- (void)loadGeniusItemsForSagaID:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000053bd
- (void)createPlaylistWithName:(id)arg1 items:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000000522a
- (void)checkStoreSubscriptionIDInLibrary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000050e6
- (void)addItemToPlaylist:(id)arg1 item:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000004e60
- (id)mediaItemForDataItem:(id)arg1;	// IMP=0x0000000000004cc5
- (void)executeQuery:(id)arg1 withCompletionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000004bec
- (_Bool)canProcessQueryConcurrently:(id)arg1;	// IMP=0x0000000000004bac
- (_Bool)processQueryAsync:(id)arg1;	// IMP=0x0000000000004b18
- (void)concreteDataClientDisconnect;	// IMP=0x0000000000004ad0
- (void)concreteDataClientConnect;	// IMP=0x00000000000048d2
- (void)stopMonitoring:(id)arg1;	// IMP=0x00000000000048a7
- (id)startMonitoringItemsOfType:(id)arg1 withItemIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000000488c
- (void)clearRecentlyAcquiredDataItem;	// IMP=0x000000000000487a
- (id)recentlyAcquiredDataItem;	// IMP=0x0000000000004868
- (void)cancelAcquisition:(id)arg1;	// IMP=0x0000000000004856
- (id)acquireWithProperties:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000004844
- (void)checkoutRental:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000004832
- (void)checkinRental:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000004820
@property(readonly, nonatomic, getter=isUpdatingRentals) _Bool updatingRentals;
- (void)setNeedsUpdateRentals;	// IMP=0x00000000000047cf
- (void)updateRentals;	// IMP=0x00000000000047b8
- (void)updateJalisco;	// IMP=0x00000000000047a1
- (void)updateSaga;	// IMP=0x000000000000478f
- (id)representativeItemForAlbumPersistentID:(long long)arg1;	// IMP=0x00000000000044ff
- (long long)artistStoreIDForPersistentID:(long long)arg1;	// IMP=0x000000000000448f
- (long long)albumStoreIDForPersistentID:(long long)arg1;	// IMP=0x000000000000441f
- (void)loadArtworkURLsForPlaylistIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000003b79
- (_Bool)isAlbumArtworkAvailableForTrackID:(id)arg1;	// IMP=0x0000000000003aaf
- (void)loadArtworkURLsForPurchaseHistoryIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000347a
- (void)loadArtworkURLsForTrackIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000002881
@property(readonly, nonatomic) _Bool isJaliscoAvailableInStoreFront;
@property(readonly, nonatomic) _Bool isSagaGeniusEnabled;
@property(nonatomic, getter=isSagaEnabled) _Bool sagaEnabled;
@property(readonly, nonatomic) _Bool isSagaAvailableInStoreFront;
- (void)dealloc;	// IMP=0x00000000000024d5
- (id)init;	// IMP=0x00000000000023a9
- (id)_jaliscoGetAccountID;	// IMP=0x0000000000029d11
- (id)_sagaGetCloudAccountID;	// IMP=0x0000000000029c6f
- (void)_stopPeriodicJaliscoUpdate;	// IMP=0x0000000000029bf9
- (void)_startPeriodicJaliscoUpdate;	// IMP=0x0000000000029b83
- (id)_periodicJaliscoUpdateTask;	// IMP=0x0000000000029a9f
- (void)_rootCollectionUpdated:(id)arg1;	// IMP=0x00000000000299eb
- (void)_cloudClientLibraryUpdated:(id)arg1;	// IMP=0x00000000000297c6
- (void)_musicItem:(id)arg1 didChangeValuesForProperties:(id)arg2;	// IMP=0x0000000000029588
- (void)_setLockerAccount;	// IMP=0x00000000000294ac
- (void)_updateSaga;	// IMP=0x0000000000029429
- (void)_updateJaliscoWithReason:(long long)arg1;	// IMP=0x00000000000292f5
- (void)_updateSyncProgress;	// IMP=0x0000000000029160
- (void)_setSagaEnabled:(_Bool)arg1;	// IMP=0x000000000002906d
- (_Bool)_shouldSyncSaga;	// IMP=0x000000000002904f
- (void)_disableCloudDatabase;	// IMP=0x0000000000028fc0
- (void)_registerForMLDatabaseUpdates;	// IMP=0x0000000000028e8a
- (void)_syncSaga;	// IMP=0x00000000000288bc
- (_Bool)_shouldSyncCloudLibrary;	// IMP=0x000000000002886f
- (void)_syncJalisco;	// IMP=0x0000000000028195
- (void)_getSagaDatabaseRevision:(CDUnknownBlockType)arg1;	// IMP=0x0000000000027fff
- (void)_getJaliscoDatabaseRevision:(CDUnknownBlockType)arg1;	// IMP=0x0000000000027e69
- (void)_disableMusic;	// IMP=0x0000000000027e3b
- (void)_deinitializeMusic;	// IMP=0x0000000000027b90
- (void)_initializeMusic;	// IMP=0x0000000000027534
- (void)handleGeniusQuery:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004e386
- (void)queryCompleted:(id)arg1 withError:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000004e2d8
- (void)handleDeleteQuery:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004d74f
- (void)handleAddQuery:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004d1df
- (void)handleQuery:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004cfa0
- (_Bool)_getArtworkForTrack:(id)arg1 sagaID:(id *)arg2 purchaseID:(id *)arg3 urlString:(id *)arg4;	// IMP=0x000000000005ecc3
- (id)_getArtworkItemsForPlaylistPID:(id)arg1 uniqueArtists:(_Bool)arg2;	// IMP=0x000000000005e7c5
- (void)_loadPlaylistArtworkForTrackIDs:(id)arg1 query:(id)arg2 imageSize:(struct CGSize)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000005cef2
- (void)_loadArtworkFromInfoDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000005cd57
- (void)processNewArtworkQuery:(id)arg1 withCompletionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005b987
- (void)cancelLoad:(id)arg1;	// IMP=0x000000000005b827
- (id)loadImageForObject:(id)arg1 scaleToSize:(struct CGSize)arg2 cropToFit:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000059ccd
- (id)imageKeyForObject:(id)arg1;	// IMP=0x0000000000059b49
- (void)_handleResponse:(id)arg1 responseDict:(id)arg2 forRequest:(id)arg3 error:(id)arg4 cancelled:(_Bool)arg5;	// IMP=0x000000000006caff
- (void)_handleCustomRequest:(id)arg1;	// IMP=0x000000000006c1d5
- (void)_handleRequest:(id)arg1;	// IMP=0x000000000006b863
- (void)_processRequest:(id)arg1;	// IMP=0x000000000006b776
- (void)_processFirstRequest;	// IMP=0x000000000006b6a6
- (void)_clearRecentlyAcquiredDataItem;	// IMP=0x000000000006b692
- (id)_recentlyAcquiredDataItem;	// IMP=0x000000000006b560
- (void)_cancelAcquisition:(id)arg1;	// IMP=0x000000000006b546
- (id)_acquireWithProperties:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000006ad9f
- (void)_notifyMonitoringClients;	// IMP=0x0000000000075a15
- (void)_updateMonitoringInfosWithItemIDs:(id)arg1 type:(id)arg2;	// IMP=0x000000000007527e
- (void)_updateMonitoringInfosForMovieRentalsWithItemIDs:(id)arg1;	// IMP=0x00000000000750b0
- (void)_acquisitionSucceededForItems:(id)arg1 responseDict:(id)arg2;	// IMP=0x0000000000074a54
- (void)_rentalsChanged;	// IMP=0x0000000000074961
- (void)_musicLibraryContentsChanged;	// IMP=0x000000000007471b
- (id)_newMonitorTokenWithItemIDs:(id)arg1 type:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000745fc
- (void)_stopMonitoring:(id)arg1;	// IMP=0x0000000000074317
- (id)_startMonitoringItemsOfType:(id)arg1 withItemIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000073ed0
- (void)_ensureMonitoringSupportSetup;	// IMP=0x0000000000073cc9
- (id)_rentalsAndPurchases;	// IMP=0x00000000000af7cd
- (id)_cloudItems;	// IMP=0x00000000000af555
- (void)_addPurchase:(id)arg1;	// IMP=0x00000000000af483
- (void)_applicationWillResignActive:(id)arg1;	// IMP=0x00000000000af399
- (void)_applicationDidBecomeActive:(id)arg1;	// IMP=0x00000000000af2c0
- (void)_rentalMonitorTimerFired:(id)arg1;	// IMP=0x00000000000af133
- (void)_networkStateChanged:(id)arg1;	// IMP=0x00000000000af0e3
- (void)_updateBookmarkForMediaItem:(id)arg1 withPropertiesUpdated:(id)arg2;	// IMP=0x00000000000aeeb7
- (void)_videoItem:(id)arg1 didChangeValuesForProperties:(id)arg2;	// IMP=0x00000000000ae987
- (void)_scheduleRentalMonitorTimer;	// IMP=0x00000000000ae861
- (id)_rentalItemsByMergingNewItems:(id)arg1 intoExistingItems:(id)arg2;	// IMP=0x00000000000ae65d
- (void)_addAcquiredItems:(id)arg1;	// IMP=0x00000000000ae071
- (void)_markItemsAsRented:(id)arg1;	// IMP=0x00000000000adea2
- (id)_dataItemsFromStoreResponseDict:(id)arg1;	// IMP=0x00000000000adc16
- (void)_checkInOutstandingRentals:(id)arg1;	// IMP=0x00000000000ad631
- (void)_rentalExpirationTimerFired:(id)arg1;	// IMP=0x00000000000ad5b7
- (void)_updateRentalExpirationTask;	// IMP=0x00000000000ad3f5
- (void)_refreshAvailableRentals;	// IMP=0x00000000000ad29f
- (void)_queueRentalRefreshCompleteNotification:(id)arg1;	// IMP=0x00000000000ad1a9
- (id)_mediaItemWithEarliestExpirationDate;	// IMP=0x00000000000acf45
- (id)_rentals;	// IMP=0x00000000000acf17
- (void)_rentalDataItemsUpdatedWithNewRentals:(id)arg1 oldRentals:(id)arg2;	// IMP=0x00000000000aca38
- (id)_rentalsRequestWithStartID:(id)arg1 endID:(id)arg2;	// IMP=0x00000000000ac753
- (void)_updateRentalsFromStore;	// IMP=0x00000000000ab5f9
- (void)_fetchRentalsFromStore;	// IMP=0x00000000000aad38
- (void)_handleRentalQuery:(id)arg1;	// IMP=0x00000000000a9d36
- (_Bool)_isRentalQuery:(id)arg1;	// IMP=0x00000000000a9b56
- (id)_sinfArrayFromSinfs:(id)arg1;	// IMP=0x00000000000a98bf
- (void)_checkoutRental:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a913a
- (void)_checkinRental:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a8cbd
- (_Bool)_isItemWithItemIDRented:(id)arg1;	// IMP=0x00000000000a8af3
- (void)_updateRentals:(_Bool)arg1;	// IMP=0x00000000000a8a01
- (void)_deinitializeRentals;	// IMP=0x00000000000a88df
- (void)_initializeRentals;	// IMP=0x00000000000a879a

@end

