//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString;

@interface CRCtcPath : NSObject
{
    struct vector<unsigned int, std::allocator<unsigned int>> _tokenString;	// 8 = 0x8
    struct vector<unsigned int, std::allocator<unsigned int>> _histWordTokenIDs;	// 32 = 0x20
    unsigned long long _beginningCurrentWord;	// 56 = 0x38
    struct vector<_NSRange, std::allocator<_NSRange>> _whitespaceRanges;	// 64 = 0x40
    unsigned long long _numCustomWords;	// 88 = 0x58
    NSString *_string;	// 96 = 0x60
    double _probBlank;	// 104 = 0x68
    double _probNonBlank;	// 112 = 0x70
    double _probLexHist;	// 120 = 0x78
    double _probLexCurrWord;	// 128 = 0x80
    double _probCharNGram;	// 136 = 0x88
    double _probWM;	// 144 = 0x90
    struct _LXCursor *_lxStaticCursor;	// 152 = 0x98
    struct _LXCursor *_lxDynamicCursor;	// 160 = 0xa0
}

+ (_Bool)_isWordCustom:(id)arg1 dynamicLexicon:(struct _LXLexicon *)arg2;	// IMP=0x0000000000083bcd
+ (unsigned int)normalizeLMTokenIDForWord:(id)arg1 withTokenID:(unsigned int)arg2 outScore:(double *)arg3 wordModel:(void *)arg4;	// IMP=0x0000000000083a48
+ (double)lmProbForString:(id)arg1 forPath:(id)arg2 originalWordRanges:(id)arg3 originalWordIDs:(id)arg4 wordRanges:(id)arg5 wordIDs:(id)arg6 wordModel:(void *)arg7;	// IMP=0x00000000000834ce
+ (void)useLMTokenizerOnString:(id)arg1 outTokenIDs:(id *)arg2 outTokenRanges:(id *)arg3 wordModel:(void *)arg4 locale:(id)arg5;	// IMP=0x0000000000082f55
+ (id)_getQueue;	// IMP=0x0000000000082efe
+ (void)updateWMProbForPath:(id)arg1 stemmingFromPath:(id)arg2 wordModel:(void *)arg3 locale:(id)arg4 forChar:(unsigned short)arg5;	// IMP=0x0000000000082729
+ (void)updateLexiconProbForPath:(id)arg1 stemmingFromPath:(id)arg2 staticLexicon:(struct _LXLexicon *)arg3 dynamicLexicon:(struct _LXLexicon *)arg4 forChar:(unsigned short)arg5;	// IMP=0x0000000000082322
+ (void)updateNGramProbForPath:(id)arg1 stemmingFromPath:(id)arg2 withModel:(void *)arg3 forChar:(unsigned short)arg4;	// IMP=0x0000000000082231
- (id).cxx_construct;	// IMP=0x0000000000083e88
- (void).cxx_destruct;	// IMP=0x0000000000083e31
@property(nonatomic) struct _LXCursor *lxDynamicCursor; // @synthesize lxDynamicCursor=_lxDynamicCursor;
@property(nonatomic) struct _LXCursor *lxStaticCursor; // @synthesize lxStaticCursor=_lxStaticCursor;
@property double probWM; // @synthesize probWM=_probWM;
@property double probCharNGram; // @synthesize probCharNGram=_probCharNGram;
@property double probLexCurrWord; // @synthesize probLexCurrWord=_probLexCurrWord;
@property double probLexHist; // @synthesize probLexHist=_probLexHist;
@property double probNonBlank; // @synthesize probNonBlank=_probNonBlank;
@property double probBlank; // @synthesize probBlank=_probBlank;
@property(retain) NSString *string; // @synthesize string=_string;
- (_Bool)containsCustomWords:(struct _LXLexicon *)arg1;	// IMP=0x0000000000083b12
- (id)pathByExtendingWithCharacter:(unsigned short)arg1 characterNGramModel:(void *)arg2 staticLexicon:(struct _LXLexicon *)arg3 dynamicLexicon:(struct _LXLexicon *)arg4 wordModel:(void *)arg5 locale:(id)arg6 forTimeSample:(unsigned long long)arg7;	// IMP=0x0000000000081db9
- (void)updateWhitespacesForTimeSample:(unsigned long long)arg1;	// IMP=0x0000000000081cc8
- (id)childPathWithBlankProb:(double)arg1;	// IMP=0x0000000000081abd
- (void)merge:(id)arg1 replaceWhiteSpaces:(_Bool)arg2;	// IMP=0x00000000000819d3
- (long long)compare:(id)arg1;	// IMP=0x0000000000081978
- (id)whiteSpaceRangesExcludingTrailing;	// IMP=0x0000000000081771
@property(readonly) double probTotalNorm;
@property(readonly) double probLM;
@property(readonly) double probTotal;
- (void)dealloc;	// IMP=0x0000000000081505
- (id)init;	// IMP=0x00000000000813b0

@end

