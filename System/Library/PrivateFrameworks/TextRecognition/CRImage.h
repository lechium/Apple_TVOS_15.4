//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CIImage;

@interface CRImage : NSObject
{
    struct __CVBuffer *_pixelBuffer;	// 8 = 0x8
    _Bool _isFullRange;	// 16 = 0x10
    _Bool _vImageDataIsCopy;	// 17 = 0x11
    int _colorSpace;	// 20 = 0x14
    CIImage *_ciImage;	// 24 = 0x18
    struct CGImage *_cgImage;	// 32 = 0x20
    struct vImage_Buffer _vImage;	// 40 = 0x28
}

+ (void)drawVerticalLineAtXOffset:(double)arg1 image:(id)arg2;	// IMP=0x000000000011b7cf
+ (_Bool)convertVImage:(const struct vImage_Buffer *)arg1 inColorSpace:(int)arg2 toVImage:(struct vImage_Buffer *)arg3 toColorSpace:(int)arg4;	// IMP=0x000000000011ac74
+ (struct vImage_Buffer)applyEXIFTransformsOnImage:(const struct vImage_Buffer *)arg1 inColorSpace:(int)arg2 properties:(id)arg3;	// IMP=0x000000000011a4b7
+ (void)cgOrientation:(unsigned int)arg1 toVImageRotationMode:(char *)arg2 andReflection:(int *)arg3;	// IMP=0x000000000011a478
+ (id)nameForColorSpace:(int)arg1;	// IMP=0x0000000000118c77
+ (unsigned long long)channelsForColorSpace:(int)arg1;	// IMP=0x0000000000118c0d
+ (unsigned long long)bytesPerPixelForColorSpace:(int)arg1;	// IMP=0x0000000000118bf1
+ (struct vImage_Buffer)allocateVImageBufferWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 colorSpace:(int)arg3;	// IMP=0x0000000000114f46
+ (struct vImage_Buffer)allocateVImageBufferWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 bytesPerPixel:(int)arg3;	// IMP=0x0000000000114f14
- (void).cxx_destruct;	// IMP=0x000000000011b9ba
@property(nonatomic) _Bool vImageDataIsCopy; // @synthesize vImageDataIsCopy=_vImageDataIsCopy;
@property(nonatomic) struct CGImage *cgImage; // @synthesize cgImage=_cgImage;
@property(nonatomic) struct __CVBuffer *pixelBuffer; // @synthesize pixelBuffer=_pixelBuffer;
@property(retain, nonatomic) CIImage *ciImage; // @synthesize ciImage=_ciImage;
@property(readonly) _Bool isFullRange; // @synthesize isFullRange=_isFullRange;
@property(readonly) int colorSpace; // @synthesize colorSpace=_colorSpace;
@property(readonly) struct vImage_Buffer vImage; // @synthesize vImage=_vImage;
- (id)initWithVImageBuffer:(struct vImage_Buffer)arg1;	// IMP=0x000000000011b918
- (id)initWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x000000000011b902
- (id)initWithContentsOfURL:(id)arg1;	// IMP=0x000000000011b8ed
- (id)initWithCGImage:(struct CGImage *)arg1 properties:(id)arg2;	// IMP=0x000000000011b8d7
- (id)initWithCGImage:(struct CGImage *)arg1;	// IMP=0x000000000011b8c2
- (id)initWithCIImage:(id)arg1;	// IMP=0x000000000011b8ad
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x000000000011b898
- (id)imageByOverlayingRects:(struct CGRect *)arg1 count:(long long)arg2;	// IMP=0x000000000011b5f5
- (id)imageByOverlayingImage:(id)arg1 opacity:(float)arg2;	// IMP=0x000000000011b3c1
- (id)imageByConvertingToColorSpace:(int)arg1;	// IMP=0x000000000011b2d8
- (id)initWithContentsOfURL:(id)arg1 toColorSpace:(int)arg2;	// IMP=0x000000000011aba0
- (id)initWithCGImage:(struct CGImage *)arg1 properties:(id)arg2 toColorSpace:(int)arg3;	// IMP=0x000000000011a7ea
- (id)initWithCGImage:(struct CGImage *)arg1 toColorSpace:(int)arg2;	// IMP=0x000000000011a460
- (id)imageByInvertingIntensity;	// IMP=0x000000000011a33b
- (void)dealloc;	// IMP=0x000000000011a26c
- (void)writeToFile:(id)arg1;	// IMP=0x000000000011a218
- (id)imageByCroppingRectangle:(struct CGRect)arg1 toHeight:(unsigned long long)arg2 andWidth:(unsigned long long)arg3 withRotationAngle:(float)arg4;	// IMP=0x0000000000119f73
- (id)imageByCroppingRectangle:(struct CGRect)arg1 textFeaturePoints:(id)arg2 radians:(float)arg3 rotatedRoi:(struct CGRect *)arg4;	// IMP=0x00000000001196d8
- (id)imageByCroppingRectangle:(struct CGRect)arg1;	// IMP=0x000000000011954b
- (id)initWithMat:(const struct Mat *)arg1;	// IMP=0x0000000000118f0f
- (id)initWithVImageBuffer:(struct vImage_Buffer)arg1 inColorSpace:(int)arg2;	// IMP=0x0000000000118ee1
- (id)initWithVImageBuffer:(struct vImage_Buffer)arg1 inColorSpace:(int)arg2 toColorSpace:(int)arg3;	// IMP=0x0000000000118d83
- (id)initWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 colorSpace:(int)arg3;	// IMP=0x0000000000118ccc
- (unsigned long long)numChannels;	// IMP=0x0000000000118c50
- (unsigned long long)bytesPerPixel;	// IMP=0x0000000000118c29
- (id)imageByApplyingBinaryMask:(id)arg1;	// IMP=0x00000000001188fc
- (id)imageByDilating;	// IMP=0x0000000000118719
- (id)imageByPaddingX:(unsigned long long)arg1 paddingY:(unsigned long long)arg2;	// IMP=0x0000000000118607
- (id)imageByPaddingToRatioAndScalingToWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 alignCenter:(_Bool)arg3;	// IMP=0x000000000011825c
- (id)imageByPaddingToRatioAndScalingToWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x0000000000118244
- (id)imageByScalingToWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x000000000011801b
- (id)imageByCorrectingFromOrientation:(unsigned int)arg1;	// IMP=0x0000000000117e42
- (id)imageByRotating180;	// IMP=0x0000000000117bc8
- (id)imageByRotating90CW;	// IMP=0x0000000000117950
- (id)imageByCroppingTextFeature:(id)arg1 correctedBoundingBox:(id)arg2 padding:(struct CGPoint)arg3 networkInputSize:(struct CGSize)arg4;	// IMP=0x000000000011781a
- (id)imageByAdjustingBrightnessAlpha:(double)arg1 beta:(double)arg2;	// IMP=0x00000000001176e1
- (id)imageByApplyingHistogramCorrection;	// IMP=0x0000000000117517
- (struct vImage_Buffer)createFloatBuffer;	// IMP=0x00000000001172be
- (struct __CVBuffer *)pixelBufferWithScale:(double)arg1 paddedToSize:(struct CGSize)arg2 adjustedToSize:(struct CGSize *)arg3 mask:(struct CGImage *)arg4;	// IMP=0x0000000000116b33
- (struct __CVBuffer *)pixelBufferWithScale:(double)arg1 paddedToSize:(struct CGSize)arg2 adjustedToSize:(struct CGSize *)arg3;	// IMP=0x0000000000116b1c
- (struct __CVBuffer *)pixelBufferWithScale:(double)arg1 paddedToSize:(struct CGSize)arg2;	// IMP=0x000000000011676a
- (void)runBlockWithARGB8888Image:(CDUnknownBlockType)arg1 blockOwnsMemory:(_Bool)arg2;	// IMP=0x0000000000116429
- (id)initWithCIImage:(id)arg1 toColorSpace:(int)arg2;	// IMP=0x0000000000115e10
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)arg1 toColorSpace:(int)arg2;	// IMP=0x0000000000115d94
- (id)initAYUV8888WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x00000000001159de
- (id)initYUV888WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x0000000000115696
- (id)initARGB8888WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x0000000000115237
- (id)initY8WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x0000000000114fcd
@property(readonly) unsigned long long height;
@property(readonly) unsigned long long width;

@end

